{"version":3,"sources":["Component/DataTable.tsx","Component/FaceIcon.tsx","Component/RawDataViewer.tsx","Component/BuffIcon.tsx","Descriptor/TraitDescription.tsx","Descriptor/SkillDescriptor.tsx","Descriptor/SkillReferenceDescriptor.tsx","Descriptor/CardDescription.tsx","Descriptor/Description.tsx","Component/ClassIcon.tsx","Descriptor/BuffDescription.tsx","../node_modules/react-bootstrap/esm/Row.js","Descriptor/NoblePhantasmDescriptor.tsx","Descriptor/CraftEssenceDescriptor.tsx","Descriptor/ServantDescriptor.tsx","Page/Func/FuncMainData.tsx","Descriptor/MysticCodeDescriptor.tsx","Page/FuncPage.tsx"],"names":["DataTable","this","props","header","className","bordered","hover","Object","keys","data","map","key","index","dumpValue","value","element","undefined","type","JSON","stringify","React","Component","FaceIcon","alt","src","location","style","height","RawDataViewer","state","showing","setState","axios","get","error","variant","block","onClick","show","text","icon","faSearchPlus","size","onHide","hide","Header","closeButton","Title","Body","collapsed","enableClipboard","clipboard","copy","BuffIcon","verticalAlign","TraitDescription","id","trait","Api","traitList","i","length","descriptor","TraitDescriptor","describe","overrideTraits","region","disableLink","getDescription","to","getLocation","Description","renderAsString","SkillDescriptor","skill","iconHeight","name","SkillReferenceDescriptor","route","CardDescription","CardDescriptor","card","partial","referenceType","ReferenceType","CARD","SKILL","TRAIT","toString","partials","fragments","PartialType","PARTICLE","push","renderParticle","REFERENCE","renderReference","TEXT","renderText","VALUE","renderValue","Fragment","valueType","ValueType","PERCENT","renderReferenceAsString","join","classTypes","Map","classIds","ClassName","SABER","ARCHER","LANCER","RIDER","CASTER","ASSASSIN","BERSERKER","SHIELDER","RULER","ALTER_EGO","AVENGER","MOON_CANCER","FOREIGNER","GRAND_CASTER","BEAST_I","BEAST_II","BEAST_IIIL","BEAST_IIIR","BEAST_UNKNOWN","ALL","EXTRA","ClassIcon","classId","has","rarity","BuffDescription","buff","BuffDescriptor","DEVICE_SIZES","Row","forwardRef","_ref","ref","bsPrefix","noGutters","_ref$as","as","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","createElement","_extends","classNames","apply","concat","displayName","defaultProps","NoblePhantasmDescriptor","noblePhantasm","CraftEssenceDescriptor","assetMap","craftEssence","extraAssets","faces","equip","asset","collectionNo","Entity","EntityType","SERVANT_EQUIP","faShare","ServantDescriptor","assetBundle","servant","ascension","values","shift","costume","faceIconLocation","FuncMainData","func","funcId","funcType","funcTargetType","funcTargetTeam","funcPopupText","functvals","traitVals","buffs","MysticCodeDescriptor","mysticCode","item","male","female","FuncPage","loading","Manager","setRegion","loadFunc","document","title","funcPopupIcon","xs","lg","fontSize","reverse","nice","entity","NORMAL","HEROINE","MC","NP"],"mappings":"oKAaMA,G,8KAcQ,IAAD,OACL,OACI,6BACKC,KAAKC,MAAMC,OACR,yBAAKC,UAAW,eACXH,KAAKC,MAAMC,QAEhB,KAEJ,kBAAC,IAAD,CAAOE,UAAQ,EAACC,OAAK,EAACF,UAAW,cAC7B,+BACCG,OAAOC,KAAKP,KAAKC,MAAMO,MAAMC,KAAI,SAACC,EAAKC,GACpC,OACI,wBAAID,IAAKC,GACL,4BAAKD,GACL,4BAAKX,EAAUa,UAAU,EAAKX,MAAMO,KAAKE,e,iCA5B5CG,GACrB,GAAqB,kBAAVA,EAAoB,CAC3B,IAAMC,EAAUD,EAChB,YAAoBE,IAAhBD,EAAQJ,UAAuCK,IAAlBD,EAAQb,YAAwCc,IAAjBD,EAAQE,KAC7DF,EAEAG,KAAKC,UAAUL,GAI9B,OAAOA,M,GAXSM,IAAMC,YAwCfrB,O,qFC3CTsB,E,uKAEQ,IAAD,EACL,OACI,yBAAKC,IAAK,GAAIC,IAAKvB,KAAKC,MAAMuB,SACzBC,MAAO,CAACC,OAAM,UAAE1B,KAAKC,MAAMyB,cAAb,QAAuB,a,GAL/BP,IAAMC,WAWdC,O,qMCHTM,E,kDACF,WAAY1B,GAAgB,IAAD,8BACvB,cAAMA,IAED2B,MAAQ,CACTC,SAAS,GAJU,E,mDASvB7B,KAAK8B,SAAS,CAACD,SAAS,M,2IAIpB7B,KAAK4B,MAAMpB,K,gBACXR,KAAK8B,SAAS,CAACD,SAAS,I,0BACU,kBAApB7B,KAAKC,MAAMO,K,gBACzBR,KAAK8B,SAAS,CAACD,SAAS,EAAMrB,KAAMR,KAAKC,MAAMO,O,4CAG3CR,K,UAEiB+B,IAAMC,IAAIhC,KAAKC,MAAMO,M,oBAAOA,K,MADzCqB,SAAS,EACTrB,K,WAFCsB,S,kEAKL9B,KAAK8B,SAAS,CACVD,SAAS,EACTrB,KAAM,CAACyB,MAAM,EAAD,M,+IAMlB,IAAD,OACL,OACI,oCACI,kBAAC,IAAD,CACMC,QAAQ,eAAeC,OAAK,EAC5BC,QAAS,WACL,EAAKC,SAEVrC,KAAKC,MAAMqC,MAAQ,OALxB,OAOI,kBAAC,IAAD,CAAiBC,KAAMC,OAG3B,kBAAC,IAAD,CAAOC,KAAM,KAAMJ,KAAMrC,KAAK4B,MAAMC,QAASa,OAAQ,kBAAM,EAAKC,SAC5D,kBAAC,IAAMC,OAAP,CAAcC,aAAW,GACrB,kBAAC,IAAMC,MAAP,yBAEJ,kBAAC,IAAMC,KAAP,KACK/C,KAAK4B,MAAMpB,KACR,kBAAC,IAAD,CAAWe,IAAKvB,KAAK4B,MAAMpB,KAAMwC,UAAW,EACjCC,gBAAiB,SAAAC,GACgB,kBAAlBA,EAAU3B,KACjB4B,IAAKD,EAAU3B,QAGlC,Y,GA1DAJ,IAAMC,WAkEnBO,O,qFC7ETyB,E,uKAEQ,IAAD,EACL,OACI,yBAAK9B,IAAK,GAAIC,IAAKvB,KAAKC,MAAMuB,SAAUC,MAAO,CAC3CC,OAAM,UAAE1B,KAAKC,MAAMyB,cAAb,QAAuB,GAC7B2B,cAAe,gB,GANRlC,IAAMC,WAadgC,O,gJCDTE,E,kDACF,WAAYrD,GAAgB,IAAD,8BACvB,cAAMA,IAED2B,MAAQ,CACT2B,GAA2B,kBAAhBtD,EAAMuD,MAAqBvD,EAAMuD,MAAQvD,EAAMuD,MAAMD,GAChEC,MAA8B,kBAAhBvD,EAAMuD,WAAqBzC,EAAYd,EAAMuD,OALxC,E,wLAgBnBxD,KAAK4B,MAAM4B,M,iEAGSC,IAAIC,Y,OAAtBA,E,OAEGC,EAAI,E,YAAGA,EAAID,EAAUE,Q,qBACpBJ,EAAQE,EAAUC,IAEdJ,KAAOvD,KAAK4B,MAAM2B,G,wBACxBvD,KAAK8B,SAAS,CAAC0B,U,2BAJeG,I,2JAWnBH,GACnB,IAAMK,EAAaC,IAAgBC,SAASP,EAAOxD,KAAKC,MAAM+D,gBAE9D,OAAO,kBAAC,IAAD,CAAaC,OAAQjE,KAAKC,MAAMgE,OAAQJ,WAAYA,M,oCAI3D,MAAM,IAAN,OAAW7D,KAAKC,MAAMgE,OAAtB,2BAA+CjE,KAAK4B,MAAM2B,M,+BAGpD,IAAD,EACCC,EAAK,UAAGxD,KAAK4B,MAAM4B,aAAd,QAAuBxD,KAAK4B,MAAM2B,GAE7C,OACIvD,KAAKC,MAAMiE,YACL,kCAAQlE,KAAKmE,eAAeX,GAA5B,KACA,kBAAC,IAAD,CAAMY,GAAIpE,KAAKqE,eAAf,IAAgCrE,KAAKmE,eAAeX,GAApD,Q,sCAvCQA,GAClB,IAAMK,EAAaC,IAAgBC,SAASP,GAE5C,OAAOc,IAAYC,eAAeV,O,GAbX1C,IAAMC,WAsDtBkC,O,sGC9DTkB,E,uKAQE,OACI,kBAAC,IAAD,CAAMJ,GAAE,WAAMpE,KAAKC,MAAMgE,OAAjB,kBAAiCjE,KAAKC,MAAMwE,MAAMlB,KACrDvD,KAAKC,MAAMwE,MAAMlC,KACd,kBAAC,IAAD,CAAUf,SAAUxB,KAAKC,MAAMwE,MAAMlC,KAAMb,OAAQ1B,KAAKC,MAAMyE,kBAC9D3D,EACHf,KAAKC,MAAMwE,MAAMlC,KAAO,SAAMxB,EAJnC,IAKMf,KAAKC,MAAMwE,MAAME,KAAO3E,KAAKC,MAAMwE,MAAME,KAAzC,iBAA0D3E,KAAKC,MAAMwE,MAAMlB,IALjF,Q,sCARckB,GAClB,IAAME,EAAOF,EAAME,KAAOF,EAAME,KAAnB,iBAAoCF,EAAMlB,IAEvD,MAAM,IAAN,OAAWoB,EAAX,S,GAJsBxD,IAAMC,WAoBrBoD,O,6JChBTI,E,kDACF,WAAY3E,GAAgB,IAAD,8BACvB,cAAMA,IAED2B,MAAQ,GAHU,E,+LAQnB5B,K,SACiByD,IAAIgB,MAAMzE,KAAKC,MAAMsD,I,yBAAlCkB,M,WADC3C,S,8MAaT,IAAM+C,EAAK,WAAO7E,KAAKC,MAAMgE,OAAlB,kBAAkCjE,KAAKC,MAAMsD,IAExD,YAAyBxC,IAArBf,KAAK4B,MAAM6C,MACJ,kBAAC,IAAD,CAAML,GAAIS,GAAV,WAA0B7E,KAAKC,MAAMsD,GAArC,KAIP,kBAAC,IAAD,CAAiBU,OAAQjE,KAAKC,MAAMgE,OAAQQ,MAAOzE,KAAK4B,MAAM6C,W,sCAZhDlB,GAClB,MAAM,WAAN,OAAkBA,EAAlB,S,GAlB+BpC,IAAMC,WAkC9BwD,O,8FCrBAE,E,uKAVP,IAAMjB,EAAakB,IAAehB,SAAS/D,KAAKC,MAAM+E,MAEtD,OAAO,kCAEH,kBAAC,EAAD,CAAaf,OAAQjE,KAAKC,MAAMgE,OAAQJ,WAAYA,IAFjD,Q,sCATWmB,GAClB,IAAMnB,EAAakB,IAAehB,SAASiB,GAE3C,MAAO,IAAMV,EAAYC,eAAeV,GAAc,Q,GAJhC1C,IAAMC,W,2BCY9BkD,E,8KAwDsBW,EAA2BvE,GAC/C,OAAIuE,EAAQC,gBAAkBC,IAAcC,KACjC,kBAAC,EAAD,CAAiB1E,IAAKA,EAAKuD,OAAQjE,KAAKC,MAAMgE,OAAQe,KAAMC,EAAQpE,QACpEoE,EAAQC,gBAAkBC,IAAcE,MAClB,kBAAlBJ,EAAQpE,MACR,kBAAC+D,EAAA,EAAD,CAA0BlE,IAAKA,EAAKuD,OAAQjE,KAAKC,MAAMgE,OAAQV,GAAI0B,EAAQpE,QAE3E,kBAAC2D,EAAA,EAAD,CAAiB9D,IAAKA,EAAKuD,OAAQjE,KAAKC,MAAMgE,OAAQQ,MAAOQ,EAAQpE,QAEzEoE,EAAQC,gBAAkBC,IAAcG,MACxC,kBAAChC,EAAA,EAAD,CAAkB5C,IAAKA,EAAKuD,OAAQjE,KAAKC,MAAMgE,OAAQT,MAAOyB,EAAQpE,QAG1EoE,EAAQpE,MAAM0E,a,+BAOrB,IAHA,IAAMC,EAAWxF,KAAKC,MAAM4D,WAAW2B,WACnCC,EAAY,GAEP9B,EAAI,EAAGA,EAAI6B,EAAS5B,OAAQD,IAAK,CACtC,IAAMsB,EAAUO,EAAS7B,GAErBsB,EAAQjE,OAAS0E,IAAYC,SAC7BF,EAAUG,KAAKtB,EAAYuB,eAAeZ,IACnCA,EAAQjE,OAAS0E,IAAYI,UACpCL,EAAUG,KAAK5F,KAAK+F,gBAAgBd,EAA6BtB,IAC1DsB,EAAQjE,OAAS0E,IAAYM,KACpCP,EAAUG,KAAKtB,EAAY2B,WAAWhB,IAC/BA,EAAQjE,OAAS0E,IAAYQ,MACpCT,EAAUG,KAAKtB,EAAY6B,YAAYlB,IAEvCQ,EAAUG,KAAKX,EAAQpE,MAAM0E,YAIrC,OAAO,kBAAC,IAAMa,SAAP,KAAiBX,M,sCA3FER,GAC1B,OAAOA,EAAQpE,Q,8CAGoBoE,GACnC,OAAIA,EAAQC,gBAAkBC,IAAcC,KACjCN,EAAgBP,eAAeU,EAAQpE,OACvCoE,EAAQC,gBAAkBC,IAAcE,MAClB,kBAAlBJ,EAAQpE,MACR+D,IAAyBL,eAAeU,EAAQpE,OAEhD2D,IAAgBD,eAAeU,EAAQpE,OAE3CoE,EAAQC,gBAAkBC,IAAcG,MACxChC,IAAiBiB,eAAeU,EAAQpE,OAG5CoE,EAAQpE,MAAM0E,a,iCAGCN,GACtB,OAAOA,EAAQpE,Q,kCAGQoE,GACvB,OAAIA,EAAQoB,YAAcC,IAAUC,QACzBtB,EAAQpE,MAAM0E,WAAa,IAG/BN,EAAQpE,MAAM0E,a,qCAGH1B,GAIlB,IAHA,IAAM2B,EAAW3B,EAAW2B,WACxBC,EAAsB,GAEjB9B,EAAI,EAAGA,EAAI6B,EAAS5B,OAAQD,IAAK,CACtC,IAAMsB,EAAUO,EAAS7B,GAErBsB,EAAQjE,OAAS0E,IAAYC,SAC7BF,EAAUG,KAAKtB,EAAYuB,eAAeZ,IACnCA,EAAQjE,OAAS0E,IAAYI,UACpCL,EAAUG,KAAKtB,EAAYkC,wBAAwBvB,IAC5CA,EAAQjE,OAAS0E,IAAYM,KACpCP,EAAUG,KAAKtB,EAAY2B,WAAWhB,IAC/BA,EAAQjE,OAAS0E,IAAYQ,MACpCT,EAAUG,KAAKtB,EAAY6B,YAAYlB,IAEvCQ,EAAUG,KAAKX,EAAQpE,MAAM0E,YAIrC,OAAOE,EAAUgB,KAAK,Q,GArDJtF,IAAMC,WAiGjBkD,S,6FCpHToC,EAAa,IAAIC,IAAoB,CACvC,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,KAGFC,EAAW,IAAID,IAAuB,CACxC,CAACE,IAAUC,MAAO,GAClB,CAACD,IAAUE,OAAQ,GACnB,CAACF,IAAUG,OAAQ,GACnB,CAACH,IAAUI,MAAO,GAClB,CAACJ,IAAUK,OAAQ,GACnB,CAACL,IAAUM,SAAU,GACrB,CAACN,IAAUO,UAAW,GACtB,CAACP,IAAUQ,SAAU,GACrB,CAACR,IAAUS,MAAO,GAClB,CAACT,IAAUU,UAAW,IACtB,CAACV,IAAUW,QAAS,IACpB,CAACX,IAAUY,YAAa,IACxB,CAACZ,IAAUa,UAAW,IACtB,CAACb,IAAUc,aAAc,GACzB,CAACd,IAAUe,QAAS,IACpB,CAACf,IAAUgB,SAAU,IACrB,CAAChB,IAAUiB,WAAY,IACvB,CAACjB,IAAUkB,WAAY,IACvB,CAAClB,IAAUmB,cAAe,IAE1B,CAACnB,IAAUoB,IAAK,MAChB,CAACpB,IAAUqB,MAAO,QAUhBC,E,uKACQ,IAAD,EACL,OACI,yBAAK7G,IAAK,GAAIC,IAAKvB,KAAKwB,WACnBC,MAAO,CAACC,OAAM,UAAE1B,KAAKC,MAAMyB,cAAb,QAAuB,Q,iCAItB,IAAD,EACnB0G,EAAUxB,EAASyB,IAAIrI,KAAKC,MAAME,WAAayG,EAAS5E,IAAIhC,KAAKC,MAAME,WAjB5D,GAkBXmI,EAAM,UAAGtI,KAAKC,MAAMqI,cAAd,QAAwB,EAC9BtH,EAAO0F,EAAW2B,IAAIC,GAAU5B,EAAW1E,IAAIsG,GA5ClC,EA8CjB,MAAM,8DAAN,OAAqEtH,EAArE,YAA6EoH,EAA7E,Y,GAbgBjH,IAAMC,WAiBf+G,O,wHCjDTI,E,uKAQE,IAAMC,EAAOxI,KAAKC,MAAMuI,KACpB3E,EAAa4E,IAAe1E,SAAS/D,KAAKC,MAAMuI,MAEpD,OACI,kBAAC,IAAD,CAAMpE,GAAE,WAAMpE,KAAKC,MAAMgE,OAAjB,iBAAgCuE,EAAKjF,KAA7C,IAEKiF,EAAKjG,KAAO,kBAAC,IAAD,CAAUf,SAAUgH,EAAKjG,YAAUxB,EAC/CyH,EAAKjG,KAAO,SAAMxB,EAClBuD,IAAYC,eAAeV,GAJhC,Q,sCAXc2E,GAClB,IAAM3E,EAAa4E,IAAe1E,SAASyE,GAE3C,MAAO,IAAMlE,IAAYC,eAAeV,GAAc,Q,GAJhC1C,IAAMC,WAuBrBmH,O,iCCnCf,yDAKIG,EAAe,CAAC,KAAM,KAAM,KAAM,KAAM,MAIxCC,EAAMxH,IAAMyH,YAAW,SAAUC,EAAMC,GACzC,IAAIC,EAAWF,EAAKE,SAChB5I,EAAY0I,EAAK1I,UACjB6I,EAAYH,EAAKG,UACjBC,EAAUJ,EAAKK,GACf9H,OAAwB,IAAZ6H,EAAqB,MAAQA,EACzChJ,EAAQkJ,YAA8BN,EAAM,CAAC,WAAY,YAAa,YAAa,OAEnFO,EAAoBC,YAAmBN,EAAU,OACjDO,EAAaF,EAAoB,QACjCG,EAAU,GAed,OAdAb,EAAac,SAAQ,SAAUC,GAC7B,IAEIC,EAFAC,EAAY1J,EAAMwJ,UACfxJ,EAAMwJ,GASb,IAAIG,EAAqB,OAAbH,EAAoB,IAAMA,EAAW,GACrC,OANVC,EADe,MAAbC,GAA0C,kBAAdA,EACvBA,EAAUD,KAEVC,IAISJ,EAAQ3D,KAAK,GAAK0D,EAAaM,EAAQ,IAAMF,MAE7CvI,IAAM0I,cAAczI,EAAW0I,YAAS,CAC1DhB,IAAKA,GACJ7I,EAAO,CACRE,UAAW4J,IAAWC,WAAM,EAAQ,CAAC7J,EAAWiJ,EAAmBJ,GAAa,cAAciB,OAAOV,UAGzGZ,EAAIuB,YAAc,MAClBvB,EAAIwB,aAnCe,CACjBnB,WAAW,GAmCEL,O,6FCjCTyB,E,uKAEE,OACI,kBAAC,IAAD,CAAMhG,GAAE,WAAMpE,KAAKC,MAAMgE,OAAjB,2BAA0CjE,KAAKC,MAAMoK,cAAc9G,KAA3E,IACMvD,KAAKC,MAAMoK,cAAc1F,KAD/B,S,GAH0BxD,IAAMC,WAU7BgJ,O,8HCPTE,E,uKAEE,IAAMC,EAAWvK,KAAKC,MAAMuK,aAAaC,YAAYC,MAAMC,MACvDC,EAAQL,EAAWA,EAASvK,KAAKC,MAAMuK,aAAajH,SAAMxC,EAE9D,OACI,kBAAC,IAAD,CAAMqD,GAAE,WAAMpE,KAAKC,MAAMgE,OAAjB,0BAAyCjE,KAAKC,MAAMuK,aAAaK,eACpED,EACG,kBAAC,IAAD,CAAU5J,KAAM8J,IAAOC,WAAWC,cACxB1C,OAAQtI,KAAKC,MAAMuK,aAAalC,OAChC9G,SAAUoJ,EACVlJ,OAAQ,aAClBX,EACH6J,EAAQ,SAAM7J,EACdf,KAAKC,MAAMuK,aAAa7F,KACxB,IACD,kBAAC,IAAD,CAAiBpC,KAAM0I,W,GAhBF9J,IAAMC,WAsB5BkJ,O,+GCtBTY,E,iLAEE,IAAMC,EAAcnL,KAAKC,MAAMmL,QAAQX,YAAYC,MAEnD,GAAIS,EAAYE,UAAW,CACvB,IAAMT,EAAQtK,OAAOgL,OAAOH,EAAYE,WAAWE,QAEnD,GAAIX,EACA,OAAOA,EAGf,GAAIO,EAAYK,QAAS,CACrB,IAAMZ,EAAQtK,OAAOgL,OAAOH,EAAYK,SAASD,QAEjD,GAAIX,EACA,OAAOA,K,+BAOf,IAAMa,EAAmBzL,KAAKyL,mBAE9B,OACI,kBAAC,IAAD,CAAMrH,GAAE,WAAMpE,KAAKC,MAAMgE,OAAjB,oBAAmCjE,KAAKC,MAAMmL,QAAQP,eAC1D,kBAAC,IAAD,CAAW1K,UAAWH,KAAKC,MAAMmL,QAAQjL,UAC9BmI,OAAQtI,KAAKC,MAAMmL,QAAQ9C,OAC3B5G,OAAQ1B,KAAKC,MAAMyE,aAC7B,IACA+G,EACG,kBAAC,IAAD,CAAUjK,SAAUiK,EACVnD,OAAQtI,KAAKC,MAAMmL,QAAQ9C,OAC3BtH,KAAMhB,KAAKC,MAAMmL,QAAQpK,KACzBU,OAAQ1B,KAAKC,MAAMyE,kBAC7B3D,EACH0K,EAAmB,SAAM1K,EACzBf,KAAKC,MAAMmL,QAAQzG,U,GArCJxD,IAAMC,WA2CvB8J,O,yHC3CTQ,E,uKACQ,IAAD,SACCC,EAAO3L,KAAKC,MAAM0L,KAExB,OACI,oCACI,kBAAC,IAAD,CAAWnL,KAAM,CACb,GAAMmL,EAAKC,OACX,KAAQD,EAAKE,SACb,OAAUF,EAAKG,eACf,0BAA2BH,EAAKI,eAChC,aAAcJ,EAAKK,cACnB,gBACI,6BACKL,EAAKM,UAAUxL,KAAI,SAAC+C,EAAO7C,GACxB,OAAO,kBAAC,IAAD,CAAkBD,IAAKC,EAAOsD,OAAQ,EAAKhE,MAAMgE,OAAQT,MAAOA,QAInF,iBACI,uCACKmI,EAAKO,iBADV,aACK,EAAgBzL,KAAI,SAAC+C,EAAO7C,GACzB,OAAO,kBAAC,IAAD,CAAkBD,IAAKC,EAAOsD,OAAQ,EAAKhE,MAAMgE,OAAQT,MAAOA,QAInF,MACI,6BACKmI,EAAKQ,MAAM1L,KAAI,SAAC+H,EAAM7H,GACnB,OAAO,kBAAC,IAAD,CAAiBD,IAAKC,EAAOsD,OAAQ,EAAKhE,MAAMgE,OAAQuE,KAAMA,WAKrF,8BACI,kBAAC,IAAD,CAAelG,KAAK,OAAO9B,KAAMmL,IACjC,kBAAC,IAAD,CACIrJ,KAAK,MACL9B,KAAI,0CAAqCR,KAAKC,MAAMgE,OAAhD,qBAAmE0H,EAAKC,OAAxE,kBAJZ,U,GAlCWzK,IAAMC,WA6ClBsK,O,sGC/CTU,E,uKAEE,OACI,kBAAC,IAAD,CAAMhI,GAAE,WAAMpE,KAAKC,MAAMgE,OAAjB,wBAAuCjE,KAAKC,MAAMoM,WAAW9I,KACjE,kBAAC,IAAD,CAAU/B,SAAUxB,KAAKC,MAAMoM,WAAW5B,YAAY6B,KAAKC,OAC3D,kBAAC,IAAD,CAAU/K,SAAUxB,KAAKC,MAAMoM,WAAW5B,YAAY6B,KAAKE,SAC1D,IAHL,IAIMxM,KAAKC,MAAMoM,WAAW1H,KAJ5B,S,GAHuBxD,IAAMC,WAa1BgL,O,oPCITK,E,kDACF,WAAYxM,GAAgB,IAAD,8BACvB,cAAMA,IAED2B,MAAQ,CACT8K,SAAS,GAJU,E,gEASvBC,IAAQC,UAAU5M,KAAKC,MAAMgE,QAC7BjE,KAAK6M,a,0KAKkBpJ,IAAIkI,KAAK3L,KAAKC,MAAMsD,I,OAAjCoI,E,OAEN3L,KAAK8B,SAAS,CACV4K,SAAS,EACTf,KAAMA,IAEVmB,SAASC,MAAT,WAAqB/M,KAAKC,MAAMgE,OAAhC,wBAAsD0H,EAAKC,OAA3D,uB,gDAEA5L,KAAK8B,SAAS,CACVG,MAAM,EAAD,K,8IAKP,IAAD,mBACL,GAAIjC,KAAK4B,MAAMK,MACX,OAAO,kBAAC,IAAD,CAAaA,MAAOjC,KAAK4B,MAAMK,QAE1C,GAAIjC,KAAK4B,MAAM8K,UAAY1M,KAAK4B,MAAM+J,KAClC,OAAO,kBAAC,IAAD,MAEX,IAAMA,EAAO3L,KAAK4B,MAAM+J,KAExB,OACI,6BACI,4BACKA,EAAKqB,cACF,8BACI,kBAAC,IAAD,CAAUxL,SAAUmK,EAAKqB,cAAetL,OAAQ,KADpD,QAIA,KANR,aAOe1B,KAAKC,MAAMsD,IAE1B,6BAEA,kBAAC,IAAD,CAAcU,OAAQjE,KAAKC,MAAMgE,OAAQ0H,KAAMA,IAE/C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKsB,GAAI,GAAIC,GAAI,GACb,8CACA,kBAAC,IAAD,CAAOzL,MAAO,CAAC0L,SAAU,UACrB,gCACC,oBAACxB,EAAKyB,eAAN,iBAAC,EAAcC,YAAf,aAAC,EAAoB5I,aAArB,QAA8B,IAAIhE,KAAI,SAACgE,EAAO9D,GAAW,IAAD,YACrD,OACI,wBAAID,IAAKC,GACL,6BACK,oBAAC8D,EAAM2I,eAAP,iBAAC,EAAeC,YAAhB,aAAC,EAAqBjC,eAAtB,QAAiC,IAAI3K,KAAI,SAAC6M,EAAQ3M,GAC/C,OAAI2M,EAAOtM,OAAS8J,IAAOC,WAAWC,cAC3B,uBAAGtK,IAAKC,GACX,kBAAC,IAAD,CAAwBsD,OAAQ,EAAKhE,MAAMgE,OACnBuG,aAAc8C,KAI1CA,EAAOtM,OAAS8J,IAAOC,WAAWwC,QAAUD,EAAOtM,OAAS8J,IAAOC,WAAWyC,QACvE,uBAAG9M,IAAKC,GACX,kBAAC,IAAD,CAAmBsD,OAAQ,EAAKhE,MAAMgE,OACnBmH,QAASkC,KAI7B,OAGV,oBAAC7I,EAAM2I,eAAP,iBAAC,EAAeC,YAAhB,aAAC,EAAqBI,UAAtB,QAA4B,IAAIhN,KAAI,SAAC4L,EAAY1L,GAC9C,OAAO,uBAAGD,IAAKC,GACX,kBAAC,IAAD,CAAsBsD,OAAQ,EAAKhE,MAAMgE,OACnBoI,WAAYA,SAI9C,4BACI,kBAAC,IAAD,CAAiBpI,OAAQ,EAAKhE,MAAMgE,OAAQQ,MAAOA,YAQ3E,kBAAC,IAAD,CAAKwI,GAAI,GAAIC,GAAI,GACb,uDACA,kBAAC,IAAD,CAAOzL,MAAO,CAAC0L,SAAU,UACrB,gCACC,oBAACxB,EAAKyB,eAAN,iBAAC,EAAcC,YAAf,aAAC,EAAoBK,UAArB,QAA2B,IAAIjN,KAAI,SAAC4J,EAAe1J,GAAW,IAAD,MAC1D,OACI,wBAAID,IAAKC,GACL,6BACK,oBAAC0J,EAAc+C,eAAf,iBAAC,EAAuBC,YAAxB,aAAC,EAA6BjC,eAA9B,QAAyC,IAAI3K,KAAI,SAAC6M,EAAQ3M,GACvD,OAAI2M,EAAOtM,OAAS8J,IAAOC,WAAWC,cAC3B,uBAAGtK,IAAKC,GACX,kBAAC,IAAD,CAAwBsD,OAAQ,EAAKhE,MAAMgE,OACnBuG,aAAc8C,KAI1CA,EAAOtM,OAAS8J,IAAOC,WAAWwC,QAAUD,EAAOtM,OAAS8J,IAAOC,WAAWyC,QACvE,uBAAG9M,IAAKC,GACX,kBAAC,IAAD,CAAmBsD,OAAQ,EAAKhE,MAAMgE,OACnBmH,QAASkC,KAI7B,OAGf,4BACI,kBAAC,IAAD,CAAyBrJ,OAAQ,EAAKhE,MAAMgE,OACnBoG,cAAeA,kB,GA7H7DlJ,IAAMC,WA2IdqL","file":"static/js/12.aa751e2c.chunk.js","sourcesContent":["import React from \"react\";\nimport {Table} from \"react-bootstrap\";\n\nimport \"./DataTable.css\";\nimport {Renderable} from \"../Helper/OutputHelper\";\n\ninterface IProp {\n    header?: JSX.Element | string,\n    data: {\n        [key: string]: Renderable | object;\n    }\n}\n\nclass DataTable extends React.Component<IProp> {\n    private static dumpValue(value: Renderable | object): Renderable {\n        if (typeof value === \"object\") {\n            const element = value as JSX.Element;\n            if (element.key !== undefined && element.props !== undefined && element.type !== undefined) {\n                return element;\n            } else {\n                return JSON.stringify(value);\n            }\n        }\n\n        return value;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.header ? (\n                    <div className={'data-header'}>\n                        {this.props.header}\n                    </div>\n                ) : null}\n\n                <Table bordered hover className={'data-table'}>\n                    <tbody>\n                    {Object.keys(this.props.data).map((key, index) => {\n                        return (\n                            <tr key={index}>\n                                <th>{key}</th>\n                                <td>{DataTable.dumpValue(this.props.data[key])}</td>\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default DataTable;\n","import {Entity} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\n\ninterface IProps {\n    type?: Entity.EntityType;\n    rarity?: number;\n    location: string;\n    height?: number | string;\n}\n\nclass FaceIcon extends React.Component<IProps> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location}\n                 style={{height: this.props.height ?? '2em'}}/>\n        );\n    }\n\n}\n\nexport default FaceIcon;\n","import {faSearchPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport axios from \"axios\";\nimport copy from 'copy-to-clipboard';\nimport React from \"react\";\nimport {Modal, Button} from \"react-bootstrap\";\nimport ReactJson from \"react-json-view\";\n\ninterface IProps {\n    data: object | string;\n    text?: string\n}\n\ninterface IState {\n    data?: object;\n    showing: boolean;\n}\n\nclass RawDataViewer extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            showing: false\n        };\n    }\n\n    hide() {\n        this.setState({showing: false});\n    }\n\n    async show() {\n        if (this.state.data) {\n            this.setState({showing: true});\n        } else if (typeof this.props.data === \"object\") {\n            this.setState({showing: true, data: this.props.data});\n        } else {\n            try {\n                this.setState({\n                    showing: true,\n                    data: (await axios.get(this.props.data)).data,\n                });\n            } catch (e) {\n                this.setState({\n                    showing: true,\n                    data: {error: e}\n                });\n            }\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Button\n                      variant=\"outline-info\" block\n                      onClick={() => {\n                          this.show();\n                      }}>\n                    {this.props.text || 'View'}\n                    &nbsp;\n                    <FontAwesomeIcon icon={faSearchPlus}/>\n                </Button>\n\n                <Modal size={\"lg\"} show={this.state.showing} onHide={() => this.hide()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Raw Data Viewer</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {this.state.data ? (\n                            <ReactJson src={this.state.data} collapsed={1}\n                                       enableClipboard={clipboard => {\n                                           if (typeof clipboard.src === \"string\") {\n                                               copy(clipboard.src);\n                                           }\n                                       }}/>\n                        ) : null}\n                    </Modal.Body>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default RawDataViewer;\n","import React from \"react\";\n\ninterface IProp {\n    location: string;\n    height?: number;\n}\n\nclass BuffIcon extends React.Component<IProp> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location} style={{\n                height: this.props.height ?? 25,\n                verticalAlign: \"bottom\",\n            }}/>\n        );\n    }\n\n}\n\nexport default BuffIcon;\n","import {Region, Trait} from \"@atlasacademy/api-connector\";\nimport {TraitDescriptor} from \"@atlasacademy/api-descriptor\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Api from \"../Api\";\nimport Description from \"./Description\";\n\ninterface IProps {\n    region: Region;\n    trait: Trait.Trait | number;\n    disableLink?: boolean;\n    overrideTraits?: Trait.Trait[];\n}\n\ninterface IState {\n    id: number;\n    trait?: Trait.Trait;\n}\n\nclass TraitDescription extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            id: typeof props.trait === \"number\" ? props.trait : props.trait.id,\n            trait: typeof props.trait === \"number\" ? undefined : props.trait,\n        };\n    }\n\n    static renderAsString(trait: Trait.Trait | number): string {\n        const descriptor = TraitDescriptor.describe(trait);\n\n        return Description.renderAsString(descriptor);\n    }\n\n    async componentDidMount() {\n        if (this.state.trait)\n            return;\n\n        const traitList = await Api.traitList();\n\n        for (let i = 0; i < traitList.length; i++) {\n            const trait = traitList[i];\n\n            if (trait.id === this.state.id) {\n                this.setState({trait});\n\n                return;\n            }\n        }\n    }\n\n    private getDescription(trait: Trait.Trait | number) {\n        const descriptor = TraitDescriptor.describe(trait, this.props.overrideTraits);\n\n        return <Description region={this.props.region} descriptor={descriptor}/>;\n    }\n\n    private getLocation(): string {\n        return `/${this.props.region}/entities/trait/${this.state.id}`;\n    }\n\n    render() {\n        const trait = this.state.trait ?? this.state.id;\n\n        return (\n            this.props.disableLink\n                ? <span>[{this.getDescription(trait)}]</span>\n                : <Link to={this.getLocation()}>[{this.getDescription(trait)}]</Link>\n        );\n    }\n}\n\nexport default TraitDescription;\n","import {Region, Skill} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport BuffIcon from \"../Component/BuffIcon\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill.Skill;\n    iconHeight?: number;\n}\n\nclass SkillDescriptor extends React.Component<IProps> {\n    static renderAsString(skill: Skill.Skill): string {\n        const name = skill.name ? skill.name : `Skill: ${skill.id}`;\n\n        return `[${name}]`;\n    }\n\n    render() {\n        return (\n            <Link to={`/${this.props.region}/skill/${this.props.skill.id}`}>\n                {this.props.skill.icon ? (\n                    <BuffIcon location={this.props.skill.icon} height={this.props.iconHeight}/>\n                ) : undefined}\n                {this.props.skill.icon ? ' ' : undefined}\n                [{this.props.skill.name ? this.props.skill.name : `Skill: ${this.props.skill.id}`}]\n            </Link>\n        );\n    }\n}\n\nexport default SkillDescriptor;\n","import {Region, Skill} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Api from \"../Api\";\nimport SkillDescriptor from \"./SkillDescriptor\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    skill?: Skill.Skill;\n}\n\nclass SkillReferenceDescriptor extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    async componentDidMount() {\n        try {\n            this.setState({\n                skill: await Api.skill(this.props.id)\n            });\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    static renderAsString(id: number): string {\n        return `[Skill: ${id}]`;\n    }\n\n    render() {\n        const route = `/${this.props.region}/skill/${this.props.id}`;\n\n        if (this.state.skill === undefined) {\n            return <Link to={route}>[Skill: {this.props.id}]</Link>;\n        }\n\n        return (\n            <SkillDescriptor region={this.props.region} skill={this.state.skill}/>\n        );\n    }\n}\n\nexport default SkillReferenceDescriptor;\n","import {Card, Region} from \"@atlasacademy/api-connector\";\nimport {CardDescriptor} from \"@atlasacademy/api-descriptor\";\nimport React from \"react\";\nimport Description from \"./Description\";\n\ninterface IProps {\n    region: Region;\n    card: Card | number;\n}\n\nclass CardDescription extends React.Component<IProps> {\n    static renderAsString(card: Card | number): string {\n        const descriptor = CardDescriptor.describe(card);\n\n        return \"[\" + Description.renderAsString(descriptor) + \"]\";\n    }\n\n    render() {\n        const descriptor = CardDescriptor.describe(this.props.card);\n\n        return <span>\n            [\n            <Description region={this.props.region} descriptor={descriptor}/>\n            ]\n        </span>;\n    }\n}\n\nexport default CardDescription;\n","import Region from \"@atlasacademy/api-connector/dist/Enum/Region\";\nimport {\n    Descriptor,\n    PartialType,\n    ParticlePartial,\n    ReferencePartial,\n    ReferenceType,\n    TextPartial,\n    ValuePartial,\n    ValueType\n} from \"@atlasacademy/api-descriptor\";\nimport React from \"react\";\nimport CardDescription from \"./CardDescription\";\nimport SkillDescriptor from \"./SkillDescriptor\";\nimport SkillReferenceDescriptor from \"./SkillReferenceDescriptor\";\nimport TraitDescription from \"./TraitDescription\";\n\ninterface IProps {\n    region: Region,\n    descriptor: Descriptor,\n}\n\nclass Description extends React.Component<IProps> {\n    private static renderParticle(partial: ParticlePartial): string {\n        return partial.value;\n    }\n\n    private static renderReferenceAsString(partial: ReferencePartial): string {\n        if (partial.referenceType === ReferenceType.CARD) {\n            return CardDescription.renderAsString(partial.value);\n        } else if (partial.referenceType === ReferenceType.SKILL) {\n            if (typeof partial.value === \"number\") {\n                return SkillReferenceDescriptor.renderAsString(partial.value);\n            } else {\n                return SkillDescriptor.renderAsString(partial.value);\n            }\n        } else if (partial.referenceType === ReferenceType.TRAIT) {\n            return TraitDescription.renderAsString(partial.value);\n        }\n\n        return partial.value.toString();\n    }\n\n    private static renderText(partial: TextPartial): string {\n        return partial.value;\n    }\n\n    private static renderValue(partial: ValuePartial): string {\n        if (partial.valueType === ValueType.PERCENT) {\n            return partial.value.toString() + '%';\n        }\n\n        return partial.value.toString();\n    }\n\n    static renderAsString(descriptor: Descriptor): string {\n        const partials = descriptor.partials(),\n            fragments: string[] = [];\n\n        for (let i = 0; i < partials.length; i++) {\n            const partial = partials[i];\n\n            if (partial.type === PartialType.PARTICLE) {\n                fragments.push(Description.renderParticle(partial));\n            } else if (partial.type === PartialType.REFERENCE) {\n                fragments.push(Description.renderReferenceAsString(partial as ReferencePartial));\n            } else if (partial.type === PartialType.TEXT) {\n                fragments.push(Description.renderText(partial));\n            } else if (partial.type === PartialType.VALUE) {\n                fragments.push(Description.renderValue(partial as ValuePartial));\n            } else {\n                fragments.push(partial.value.toString());\n            }\n        }\n\n        return fragments.join('');\n    }\n\n    private renderReference(partial: ReferencePartial, key: number) {\n        if (partial.referenceType === ReferenceType.CARD) {\n            return <CardDescription key={key} region={this.props.region} card={partial.value}/>;\n        } else if (partial.referenceType === ReferenceType.SKILL) {\n            if (typeof partial.value === \"number\") {\n                return <SkillReferenceDescriptor key={key} region={this.props.region} id={partial.value}/>;\n            } else {\n                return <SkillDescriptor key={key} region={this.props.region} skill={partial.value}/>;\n            }\n        } else if (partial.referenceType === ReferenceType.TRAIT) {\n            return <TraitDescription key={key} region={this.props.region} trait={partial.value}/>\n        }\n\n        return partial.value.toString();\n    }\n\n    render() {\n        const partials = this.props.descriptor.partials(),\n            fragments = [];\n\n        for (let i = 0; i < partials.length; i++) {\n            const partial = partials[i];\n\n            if (partial.type === PartialType.PARTICLE) {\n                fragments.push(Description.renderParticle(partial));\n            } else if (partial.type === PartialType.REFERENCE) {\n                fragments.push(this.renderReference(partial as ReferencePartial, i));\n            } else if (partial.type === PartialType.TEXT) {\n                fragments.push(Description.renderText(partial));\n            } else if (partial.type === PartialType.VALUE) {\n                fragments.push(Description.renderValue(partial as ValuePartial));\n            } else {\n                fragments.push(partial.value.toString());\n            }\n        }\n\n        return <React.Fragment>{fragments}</React.Fragment>;\n    }\n\n}\n\nexport default Description;\n","import {ClassName} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\n\nconst classTypes = new Map<number, number>([\n    [0, 0],\n    [1, 1],\n    [2, 1],\n    [3, 2],\n    [4, 3],\n    [5, 3],\n]);\nconst unknownClassType = 3;\nconst classIds = new Map<ClassName, number>([\n    [ClassName.SABER, 1],\n    [ClassName.ARCHER, 2],\n    [ClassName.LANCER, 3],\n    [ClassName.RIDER, 4],\n    [ClassName.CASTER, 5],\n    [ClassName.ASSASSIN, 6],\n    [ClassName.BERSERKER, 7],\n    [ClassName.SHIELDER, 8],\n    [ClassName.RULER, 9],\n    [ClassName.ALTER_EGO, 10],\n    [ClassName.AVENGER, 11],\n    [ClassName.MOON_CANCER, 23],\n    [ClassName.FOREIGNER, 25],\n    [ClassName.GRAND_CASTER, 5],\n    [ClassName.BEAST_I, 20],\n    [ClassName.BEAST_II, 20],\n    [ClassName.BEAST_IIIL, 20],\n    [ClassName.BEAST_IIIR, 20],\n    [ClassName.BEAST_UNKNOWN, 20],\n\n    [ClassName.ALL, 1001],\n    [ClassName.EXTRA, 1002],\n]);\nconst unknownClassId = 12;\n\ninterface IProps {\n    className: ClassName;\n    rarity?: number;\n    height?: number;\n}\n\nclass ClassIcon extends React.Component<IProps> {\n    render() {\n        return (\n            <img alt={''} src={this.location()}\n                 style={{height: this.props.height ?? 24}}/>\n        );\n    }\n\n    private location(): string {\n        let classId = classIds.has(this.props.className) ? classIds.get(this.props.className) : unknownClassId,\n            rarity = this.props.rarity ?? 5,\n            type = classTypes.has(rarity) ? classTypes.get(rarity) : unknownClassType;\n\n        return `https://assets.atlasacademy.io/GameData/NA/ClassIcons/class${type}_${classId}.png`;\n    }\n}\n\nexport default ClassIcon;\n","import {Buff, Region} from \"@atlasacademy/api-connector\";\nimport {BuffDescriptor} from \"@atlasacademy/api-descriptor\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport Description from \"./Description\";\n\ninterface IProps {\n    region: Region;\n    buff: Buff.Buff;\n}\n\nclass BuffDescription extends React.Component<IProps> {\n    static renderAsString(buff: Buff.Buff): string {\n        const descriptor = BuffDescriptor.describe(buff);\n\n        return \"[\" + Description.renderAsString(descriptor) + \"]\";\n    }\n\n    render() {\n        const buff = this.props.buff,\n            descriptor = BuffDescriptor.describe(this.props.buff);\n\n        return (\n            <Link to={`/${this.props.region}/buff/${buff.id}`}>\n                [\n                {buff.icon ? <BuffIcon location={buff.icon}/> : undefined}\n                {buff.icon ? ' ' : undefined}\n                {Description.renderAsString(descriptor)}\n                ]\n            </Link>\n        );\n    }\n}\n\nexport default BuffDescription;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import {NoblePhantasm, Region} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\n\ninterface IProps {\n    region: Region;\n    noblePhantasm: NoblePhantasm.NoblePhantasm;\n}\n\nclass NoblePhantasmDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/noble-phantasm/${this.props.noblePhantasm.id}`}>\n                [{this.props.noblePhantasm.name}]\n            </Link>\n        );\n    }\n}\n\nexport default NoblePhantasmDescriptor;\n","import {CraftEssence, Entity, Region} from \"@atlasacademy/api-connector\";\nimport {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport FaceIcon from \"../Component/FaceIcon\";\n\ninterface IProps {\n    region: Region;\n    craftEssence: CraftEssence.CraftEssence;\n}\n\nclass CraftEssenceDescriptor extends React.Component<IProps> {\n    render() {\n        const assetMap = this.props.craftEssence.extraAssets.faces.equip,\n            asset = assetMap ? assetMap[this.props.craftEssence.id] : undefined;\n\n        return (\n            <Link to={`/${this.props.region}/craft-essence/${this.props.craftEssence.collectionNo}`}>\n                {asset ? (\n                    <FaceIcon type={Entity.EntityType.SERVANT_EQUIP}\n                              rarity={this.props.craftEssence.rarity}\n                              location={asset}\n                              height={'2em'}/>\n                ) : undefined}\n                {asset ? ' ' : undefined}\n                {this.props.craftEssence.name}\n                {' '}\n                <FontAwesomeIcon icon={faShare}/>\n            </Link>\n        );\n    }\n}\n\nexport default CraftEssenceDescriptor;\n","import {Region, Servant} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport ClassIcon from \"../Component/ClassIcon\";\nimport FaceIcon from \"../Component/FaceIcon\";\n\ninterface IProps {\n    region: Region;\n    servant: Servant.Servant;\n    iconHeight?: number;\n}\n\nclass ServantDescriptor extends React.Component<IProps> {\n    private faceIconLocation(): string | undefined {\n        const assetBundle = this.props.servant.extraAssets.faces;\n\n        if (assetBundle.ascension) {\n            const asset = Object.values(assetBundle.ascension).shift();\n\n            if (asset)\n                return asset;\n        }\n\n        if (assetBundle.costume) {\n            const asset = Object.values(assetBundle.costume).shift();\n\n            if (asset)\n                return asset;\n        }\n\n        return undefined;\n    }\n\n    render() {\n        const faceIconLocation = this.faceIconLocation();\n\n        return (\n            <Link to={`/${this.props.region}/servant/${this.props.servant.collectionNo}`}>\n                <ClassIcon className={this.props.servant.className}\n                           rarity={this.props.servant.rarity}\n                           height={this.props.iconHeight}/>\n                {' '}\n                {faceIconLocation ? (\n                    <FaceIcon location={faceIconLocation}\n                              rarity={this.props.servant.rarity}\n                              type={this.props.servant.type}\n                              height={this.props.iconHeight}/>\n                ) : undefined}\n                {faceIconLocation ? ' ' : undefined}\n                {this.props.servant.name}\n            </Link>\n        );\n    }\n}\n\nexport default ServantDescriptor;\n","import {Func, Region} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\nimport BuffDescription from \"../../Descriptor/BuffDescription\";\nimport TraitDescription from \"../../Descriptor/TraitDescription\";\n\ninterface IProps {\n    region: Region;\n    func: Func.Func;\n}\n\nclass FuncMainData extends React.Component<IProps> {\n    render() {\n        const func = this.props.func;\n\n        return (\n            <>\n                <DataTable data={{\n                    \"ID\": func.funcId,\n                    \"Type\": func.funcType,\n                    \"Target\": func.funcTargetType,\n                    \"Affects Players/Enemies\": func.funcTargetTeam,\n                    \"Popup Text\": func.funcPopupText,\n                    \"Target Traits\": (\n                        <div>\n                            {func.functvals.map((trait, index) => {\n                                return <TraitDescription key={index} region={this.props.region} trait={trait}/>;\n                            })}\n                        </div>\n                    ),\n                    \"Affects Traits\": (\n                        <div>\n                            {func.traitVals?.map((trait, index) => {\n                                return <TraitDescription key={index} region={this.props.region} trait={trait}/>;\n                            })}\n                        </div>\n                    ),\n                    \"Buffs\": (\n                        <div>\n                            {func.buffs.map((buff, index) => {\n                                return <BuffDescription key={index} region={this.props.region} buff={buff}/>;\n                            })}\n                        </div>\n                    )\n                }}/>\n                <span>\n                    <RawDataViewer text=\"Nice\" data={func}/>\n                    <RawDataViewer\n                        text=\"Raw\"\n                        data={`https://api.atlasacademy.io/raw/${this.props.region}/function/${func.funcId}?expand=true`}/>,\n                </span>\n            </>\n        );\n    }\n}\n\nexport default FuncMainData;\n","import {MysticCode, Region} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport FaceIcon from \"../Component/FaceIcon\";\n\ninterface IProps {\n    region: Region;\n    mysticCode: MysticCode.MysticCode;\n}\n\nclass MysticCodeDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/mystic-code/${this.props.mysticCode.id}`}>\n                <FaceIcon location={this.props.mysticCode.extraAssets.item.male}/>\n                <FaceIcon location={this.props.mysticCode.extraAssets.item.female}/>\n                {' '}\n                [{this.props.mysticCode.name}]\n            </Link>\n        );\n    }\n}\n\nexport default MysticCodeDescriptor;\n","import {CraftEssence, Entity, Func, Region, Servant} from \"@atlasacademy/api-connector\";\nimport {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Col, Row, Table} from \"react-bootstrap\";\nimport Api from \"../Api\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport CraftEssenceDescriptor from \"../Descriptor/CraftEssenceDescriptor\";\nimport MysticCodeDescriptor from \"../Descriptor/MysticCodeDescriptor\";\nimport NoblePhantasmDescriptor from \"../Descriptor/NoblePhantasmDescriptor\";\nimport ServantDescriptor from \"../Descriptor/ServantDescriptor\";\nimport SkillDescriptor from \"../Descriptor/SkillDescriptor\";\nimport Manager from \"../Setting/Manager\";\nimport FuncMainData from \"./Func/FuncMainData\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    func?: Func.Func;\n}\n\nclass FuncPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        Manager.setRegion(this.props.region);\n        this.loadFunc();\n    }\n\n    async loadFunc() {\n        try {\n            const func = await Api.func(this.props.id);\n\n            this.setState({\n                loading: false,\n                func: func,\n            });\n            document.title = `[${this.props.region}] Function - ${func.funcId} - Atlas Academy DB`\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading || !this.state.func)\n            return <Loading/>;\n\n        const func = this.state.func;\n\n        return (\n            <div>\n                <h1>\n                    {func.funcPopupIcon ? (\n                        <span>\n                            <BuffIcon location={func.funcPopupIcon} height={48}/>\n                            &nbsp;\n                        </span>\n                    ) : null}\n                    Function: {this.props.id}\n                </h1>\n                <br/>\n\n                <FuncMainData region={this.props.region} func={func}/>\n\n                <Row>\n                    <Col xs={12} lg={6}>\n                        <h3>Related Skills</h3>\n                        <Table style={{fontSize: \"0.8em\"}}>\n                            <tbody>\n                            {(func.reverse?.nice?.skill ?? []).map((skill, index) => {\n                                return (\n                                    <tr key={index}>\n                                        <td>\n                                            {(skill.reverse?.nice?.servant ?? []).map((entity, index) => {\n                                                if (entity.type === Entity.EntityType.SERVANT_EQUIP) {\n                                                    return <p key={index}>\n                                                        <CraftEssenceDescriptor region={this.props.region}\n                                                                                craftEssence={entity as CraftEssence.CraftEssence}/>\n                                                    </p>;\n                                                }\n\n                                                if (entity.type === Entity.EntityType.NORMAL || entity.type === Entity.EntityType.HEROINE) {\n                                                    return <p key={index}>\n                                                        <ServantDescriptor region={this.props.region}\n                                                                           servant={entity as Servant.Servant}/>\n                                                    </p>;\n                                                }\n\n                                                return '';\n                                            })}\n                                            {/*TODO: Command Code Reverse Mapping*/}\n                                            {(skill.reverse?.nice?.MC ?? []).map((mysticCode, index) => {\n                                                return <p key={index}>\n                                                    <MysticCodeDescriptor region={this.props.region}\n                                                                          mysticCode={mysticCode}/>\n                                                </p>\n                                            })}\n                                        </td>\n                                        <td>\n                                            <SkillDescriptor region={this.props.region} skill={skill}/>\n                                        </td>\n                                    </tr>\n                                )\n                            })}\n                            </tbody>\n                        </Table>\n                    </Col>\n                    <Col xs={12} lg={6}>\n                        <h3>Related Noble Phantasms</h3>\n                        <Table style={{fontSize: \"0.8em\"}}>\n                            <tbody>\n                            {(func.reverse?.nice?.NP ?? []).map((noblePhantasm, index) => {\n                                return (\n                                    <tr key={index}>\n                                        <td>\n                                            {(noblePhantasm.reverse?.nice?.servant ?? []).map((entity, index) => {\n                                                if (entity.type === Entity.EntityType.SERVANT_EQUIP) {\n                                                    return <p key={index}>\n                                                        <CraftEssenceDescriptor region={this.props.region}\n                                                                                craftEssence={entity as CraftEssence.CraftEssence}/>\n                                                    </p>;\n                                                }\n\n                                                if (entity.type === Entity.EntityType.NORMAL || entity.type === Entity.EntityType.HEROINE) {\n                                                    return <p key={index}>\n                                                        <ServantDescriptor region={this.props.region}\n                                                                           servant={entity as Servant.Servant}/>\n                                                    </p>;\n                                                }\n\n                                                return '';\n                                            })}\n                                        </td>\n                                        <td>\n                                            <NoblePhantasmDescriptor region={this.props.region}\n                                                                     noblePhantasm={noblePhantasm}/>\n                                        </td>\n                                    </tr>\n                                )\n                            })}\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default FuncPage;\n"],"sourceRoot":""}