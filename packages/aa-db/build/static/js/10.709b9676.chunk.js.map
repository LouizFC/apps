{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Api/Data/ClassName.tsx","Descriptor/RarityDescriptor.tsx","Component/ClassIcon.tsx","Component/FaceIcon.tsx","Page/ServantsPage.tsx","Api/ResultCache.tsx","Api/Connection.tsx"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError","ClassName","assetMap","Map","RarityDescriptor","has","this","props","rarity","alt","src","get","style","height","React","Component","classTypes","classIds","SABER","ARCHER","LANCER","RIDER","CASTER","ASSASSIN","BERSERKER","SHIELDER","RULER","ALTER_EGO","AVENGER","MOON_CANCER","FOREIGNER","GRAND_CASTER","BEAST_I","BEAST_II","BEAST_IIIL","BEAST_IIIR","BEAST_UNKNOWN","ALL","EXTRA","ClassIcon","location","classId","className","type","FaceIcon","undefined","classFilters","ServantsPage","state","loading","servants","activeClassFilters","activeRarityFilters","Connection","servantList","region","then","setState","e","error","indexOf","exists","activeFilters","filter","activeClassName","push","activeClass","activeRarity","list","reverse","entity","x","isExtra","search","words","split","word","map","toLowerCase","every","includes","id","inline","justifyContent","active","isClassFilterActive","key","opacity","onClick","ev","toggleClassFilter","Control","marginLeft","placeholder","value","onChange","target","striped","bordered","hover","textAlign","width","servant","index","route","collectionNo","align","to","face","ResultCache","cache","pending","pendingCatches","fetcher","duration","Promise","resolve","callbacks","reject","set","forEach","callback","delete","window","setTimeout","catch","host","fetch","endpoint","a","axios","response","data","buff","craftEssence","craftEssenceList","func","mysticCode","mysticCodeList","noblePhantasm","quest","skill","traitMap","language","Manager","query","LanguageOption","ENGLISH","Region","NA","getCacheableCraftEssenceList","JP","DEFAULT","jp","na","names","getCacheableMysticCodeList","phase","getCacheableServantList"],"mappings":"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","file":"static/js/10.709b9676.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","enum ClassName {\n    SABER = \"saber\",\n    ARCHER = \"archer\",\n    LANCER = \"lancer\",\n    RIDER = \"rider\",\n    CASTER = \"caster\",\n    ASSASSIN = \"assassin\",\n    BERSERKER = \"berserker\",\n    SHIELDER = \"shielder\",\n    RULER = \"ruler\",\n    ALTER_EGO = \"alterEgo\",\n    AVENGER = \"avenger\",\n    GRAND_CASTER = \"grandCaster\",\n    BEAST_II = \"beastII\",\n    BEAST_I = \"beastI\",\n    MOON_CANCER = \"moonCancer\",\n    BEAST_IIIR = \"beastIIIR\",\n    FOREIGNER = \"foreigner\",\n    BEAST_IIIL = \"beastIIIL\",\n    BEAST_UNKNOWN = \"beastUnknown\",\n    ALL = \"ALL\",\n    EXTRA = \"EXTRA\",\n}\n\nexport default ClassName;\n","import React from \"react\";\n\nconst assetMap = new Map<number, string>([\n    [1, './assets/star1.png'],\n    [2, './assets/star2.png'],\n    [3, './assets/star3.png'],\n    [4, './assets/star4.png'],\n    [5, './assets/star5.png'],\n]);\n\ninterface IProps {\n    rarity: number;\n    height?: number;\n}\n\nclass RarityDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <span>\n                {assetMap.has(this.props.rarity) ? (\n                    <img alt={`${this.props.rarity} star(s)`}\n                         src={assetMap.get(this.props.rarity)}\n                         style={{height: this.props.height ?? 18}}/>\n                ) : null}\n            </span>\n        );\n    }\n}\n\nexport default RarityDescriptor;\n","import React from \"react\";\nimport ClassName from \"../Api/Data/ClassName\";\n\nconst classTypes = new Map<number, number>([\n    [0, 0],\n    [1, 1],\n    [2, 1],\n    [3, 2],\n    [4, 3],\n    [5, 3],\n]);\nconst unknownClassType = 3;\nconst classIds = new Map<ClassName, number>([\n    [ClassName.SABER, 1],\n    [ClassName.ARCHER, 2],\n    [ClassName.LANCER, 3],\n    [ClassName.RIDER, 4],\n    [ClassName.CASTER, 5],\n    [ClassName.ASSASSIN, 6],\n    [ClassName.BERSERKER, 7],\n    [ClassName.SHIELDER, 8],\n    [ClassName.RULER, 9],\n    [ClassName.ALTER_EGO, 10],\n    [ClassName.AVENGER, 11],\n    [ClassName.MOON_CANCER, 23],\n    [ClassName.FOREIGNER, 25],\n    [ClassName.GRAND_CASTER, 5],\n    [ClassName.BEAST_I, 20],\n    [ClassName.BEAST_II, 20],\n    [ClassName.BEAST_IIIL, 20],\n    [ClassName.BEAST_IIIR, 20],\n    [ClassName.BEAST_UNKNOWN, 20],\n\n    [ClassName.ALL, 1001],\n    [ClassName.EXTRA, 1002],\n]);\nconst unknownClassId = 12;\n\ninterface IProps {\n    className: ClassName;\n    rarity?: number;\n    height?: number;\n}\n\nclass ClassIcon extends React.Component<IProps> {\n    render() {\n        return (\n            <img alt={''} src={this.location()}\n                 style={{height: this.props.height ?? 24}}/>\n        );\n    }\n\n    private location(): string {\n        let classId = classIds.has(this.props.className) ? classIds.get(this.props.className) : unknownClassId,\n            rarity = this.props.rarity ?? 5,\n            type = classTypes.has(rarity) ? classTypes.get(rarity) : unknownClassType;\n\n        return `https://assets.atlasacademy.io/GameData/NA/ClassIcons/class${type}_${classId}.png`;\n    }\n}\n\nexport default ClassIcon;\n","import React from \"react\";\nimport EntityType from \"../Api/Data/EntityType\";\n\ninterface IProps {\n    type?: EntityType;\n    rarity?: number;\n    location: string;\n    height?: number;\n}\n\nclass FaceIcon extends React.Component<IProps> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location}\n                 style={this.props.height ? {height: this.props.height} : undefined}/>\n        );\n    }\n\n}\n\nexport default FaceIcon;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Form, Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport BasicListEntity from \"../Api/Data/BasicListEntity\";\nimport ClassName from \"../Api/Data/ClassName\";\nimport Region from \"../Api/Data/Region\";\nimport ClassIcon from \"../Component/ClassIcon\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport FaceIcon from \"../Component/FaceIcon\";\nimport Loading from \"../Component/Loading\";\nimport RarityDescriptor from \"../Descriptor/RarityDescriptor\";\n\nimport './ServantsPage.css';\n\nconst classFilters: ClassName[] = [\n    ClassName.SABER,\n    ClassName.ARCHER,\n    ClassName.LANCER,\n    ClassName.RIDER,\n    ClassName.CASTER,\n    ClassName.ASSASSIN,\n    ClassName.BERSERKER,\n    ClassName.EXTRA,\n];\n\ninterface ChangeEvent extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface MouseEvent extends React.MouseEvent<HTMLInputElement> {\n\n}\n\ninterface IProps {\n    region: Region,\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    servants: BasicListEntity[];\n    activeClassFilters: ClassName[];\n    activeRarityFilters: number[];\n    search?: string;\n}\n\nclass ServantsPage extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            servants: [],\n            activeClassFilters: [],\n            activeRarityFilters: [],\n        };\n    }\n\n    componentDidMount() {\n        try {\n            Connection.servantList(this.props.region).then(servantList => {\n                this.setState({\n                    loading: false,\n                    servants: servantList\n                });\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    private isClassFilterActive(className: ClassName): boolean {\n        return this.state.activeClassFilters.indexOf(className) !== -1;\n    }\n\n    private isExtra(className: ClassName): boolean {\n        return !(className === ClassName.SABER\n            || className === ClassName.ARCHER\n            || className === ClassName.LANCER\n            || className === ClassName.RIDER\n            || className === ClassName.CASTER\n            || className === ClassName.ASSASSIN\n            || className === ClassName.BERSERKER);\n    }\n\n    private toggleClassFilter(className: ClassName): void {\n        let exists = false,\n            activeFilters = this.state.activeClassFilters.filter(activeClassName => {\n                if (activeClassName === ClassName.ALL)\n                    return false;\n\n                if (activeClassName === className) {\n                    exists = true;\n                    return false;\n                }\n\n                return true;\n            });\n\n        if (!exists)\n            activeFilters.push(className);\n\n        this.setState({activeClassFilters: activeFilters});\n    }\n\n    private toggleRarityFilter(rarity: number): void {\n        const exists = this.state.activeRarityFilters.indexOf(rarity) !== -1;\n\n        if (exists) {\n            this.setState({\n                activeClassFilters: this.state.activeClassFilters.filter(activeClass => activeClass !== ClassName.ALL),\n                activeRarityFilters: this.state.activeRarityFilters.filter(activeRarity => activeRarity !== rarity)\n            });\n        } else {\n            this.setState({\n                activeClassFilters: this.state.activeClassFilters.filter(activeClass => activeClass !== ClassName.ALL),\n                activeRarityFilters: [\n                    ...this.state.activeRarityFilters,\n                    rarity\n                ]\n            });\n        }\n    }\n\n    private servants(): BasicListEntity[] {\n        let list = this.state.servants.slice().reverse();\n\n        if (this.state.activeRarityFilters.length > 0) {\n            list = list.filter(entity => {\n                return this.state.activeRarityFilters.indexOf(entity.rarity) !== -1;\n            });\n        }\n\n        if (this.state.activeClassFilters.length > 0) {\n            list = list.filter(entity => {\n                for (let x in this.state.activeClassFilters) {\n                    const className = this.state.activeClassFilters[x];\n\n                    if (className === ClassName.EXTRA && this.isExtra(entity.className)) {\n                        return true;\n                    } else if (entity.className === className) {\n                        return true;\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        if (this.state.search) {\n            const words = this.state.search\n                .split(' ')\n                .filter(word => word)\n                .map(word => word.toLowerCase());\n\n            list = list.filter(entity => words.every(word => entity.name.toLowerCase().includes(word)));\n        }\n\n        return list;\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading)\n            return <Loading/>;\n\n        return (\n            <div id=\"servants\">\n                <Form inline style={{justifyContent: 'center'}}>\n                    {classFilters.map(className => {\n                        const active = this.isClassFilterActive(className);\n                        return (\n                            <span key={className}\n                                  className={'filter'}\n                                  style={{opacity: active ? 1 : 0.5}}\n                                  onClick={(ev: MouseEvent) => {\n                                      this.toggleClassFilter(className);\n                                  }}>\n                                <ClassIcon height={50} rarity={active ? 5 : 3} className={className}/>\n                            </span>\n                        );\n                    })}\n                    <Form.Control style={{marginLeft: 'auto'}} placeholder={'Search'} value={this.state.search ?? ''}\n                                  onChange={(ev: ChangeEvent) => {\n                                      this.setState({search: ev.target.value});\n                                  }}/>\n                </Form>\n\n                <hr/>\n\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th style={{textAlign: \"center\", width: '1px'}}>#</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Class</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Thumbnail</th>\n                        <th>Name</th>\n                        <th>Rarity</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this\n                        .servants()\n                        .map((servant, index) => {\n                            const route = `/${this.props.region}/servant/${servant.collectionNo}`;\n\n                            return <tr key={index}>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        {servant.collectionNo}\n                                    </Link>\n                                </td>\n                                <td align={\"center\"}>\n                                    <ClassIcon className={servant.className} rarity={servant.rarity} height={50}/>\n                                </td>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        <FaceIcon type={servant.type}\n                                                  rarity={servant.rarity}\n                                                  location={servant.face}\n                                                  height={50}/>\n                                    </Link>\n                                </td>\n                                <td>\n                                    <Link to={route}>\n                                        {servant.name}\n                                    </Link>\n                                </td>\n                                <td>\n                                    <RarityDescriptor rarity={servant.rarity}/>\n                                </td>\n                            </tr>\n                        })\n                    }\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n\n}\n\nexport default ServantsPage;\n","class ResultCache<K, V> {\n    private cache = new Map<K, V>();\n    private pending = new Map<K, Function[]>();\n    private pendingCatches = new Map<K, Function[]>();\n\n    get(key: K, fetcher: Function, duration: number | null): Promise<V> {\n        const value = this.cache.get(key);\n        if (value !== undefined) {\n            return new Promise<V>(resolve => {\n                resolve(value);\n            });\n        }\n\n        const callbacks = this.pending.get(key);\n        if (callbacks !== undefined) {\n            return new Promise<V>((resolve, reject) => {\n                callbacks.push(resolve);\n\n                const catches = this.pendingCatches.get(key) ?? [];\n                catches.push(reject);\n            });\n        }\n\n        this.pending.set(key, []);\n        this.pendingCatches.set(key, []);\n        return new Promise<V>((resolve, reject) => {\n            fetcher\n                .call(null)\n                .then((value: V) => {\n                    const callbacks = this.pending.get(key) ?? [];\n\n                    callbacks.forEach(callback => {\n                        callback.call(null, value);\n                    });\n\n                    this.cache.set(key, value);\n                    this.pending.delete(key);\n                    this.pendingCatches.delete(key);\n\n                    if (duration !== null) {\n                        window.setTimeout(() => {\n                            this.cache.delete(key);\n                        }, duration);\n                    }\n\n                    resolve(value);\n                })\n                .catch((error: any) => {\n                    const callbacks = this.pendingCatches.get(key) ?? [];\n\n                    callbacks.forEach(callback => {\n                        callback.call(null, error);\n                    });\n\n                    this.pending.delete(key);\n                    this.pendingCatches.delete(key);\n\n                    reject(error);\n                });\n        });\n    }\n}\n\nexport default ResultCache;\n","import axios from \"axios\";\nimport Manager from \"../Setting/Manager\";\nimport {LanguageOption} from \"../Setting/Option\";\nimport BasicListEntity from \"./Data/BasicListEntity\";\nimport Buff from \"./Data/Buff\";\nimport CraftEssence from \"./Data/CraftEssence\";\nimport Func from \"./Data/Func\";\nimport MysticCode from \"./Data/MysticCode\";\nimport NoblePhantasm from \"./Data/NoblePhantasm\";\nimport Quest from \"./Data/Quest\";\nimport Region from \"./Data/Region\";\nimport Servant from \"./Data/Servant\";\nimport Skill from \"./Data/Skill\";\nimport TraitMap from \"./Data/TraitMap\";\nimport ResultCache from \"./ResultCache\";\n\nconst host = 'https://api.atlasacademy.io',\n    cacheDuration = 20 * 1000,\n    fetch = async function <T>(endpoint: string): Promise<T> {\n        const response = await axios.get<T>(endpoint);\n\n        return response.data;\n    },\n    cache = {\n        buff: new ResultCache<string, Buff>(),\n        craftEssence: new ResultCache<string, CraftEssence>(),\n        craftEssenceList: new ResultCache<Region, BasicListEntity[]>(),\n        func: new ResultCache<string, Func>(),\n        mysticCode: new ResultCache<string, MysticCode>(),\n        mysticCodeList: new ResultCache<Region, MysticCode[]>(),\n        noblePhantasm: new ResultCache<string, NoblePhantasm>(),\n        quest: new ResultCache<string, Quest>(),\n        servant: new ResultCache<string, Servant>(),\n        servantList: new ResultCache<Region, BasicListEntity[]>(),\n        skill: new ResultCache<string, Skill>(),\n        traitMap: new ResultCache<Region, TraitMap>(),\n    };\n\nclass Connection {\n    static buff(region: Region, id: number): Promise<Buff> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.buff.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Buff>(`${host}/nice/${region}/buff/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static craftEssence(region: Region, id: number): Promise<CraftEssence> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.craftEssence.get(\n            key,\n            () => {\n                let query = '?lore=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Servant>(`${host}/nice/${region}/equip/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async craftEssenceList(region: Region): Promise<BasicListEntity[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableCraftEssenceList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableCraftEssenceList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableCraftEssenceList(Region.JP),\n            na = await Connection.getCacheableCraftEssenceList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<BasicListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static func(region: Region, id: number): Promise<Func> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.func.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Func>(`${host}/nice/${region}/function/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static mysticCode(region: Region, id: number): Promise<MysticCode> {\n        const key = `${region}-${id}`;\n\n        return cache.mysticCode.get(\n            key,\n            () => {\n                return fetch<MysticCode>(`${host}/nice/${region}/MC/${id}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async mysticCodeList(region: Region): Promise<MysticCode[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableMysticCodeList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableMysticCodeList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableMysticCodeList(Region.JP),\n            na = await Connection.getCacheableMysticCodeList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<MysticCode>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static noblePhantasm(region: Region, id: number): Promise<NoblePhantasm> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.noblePhantasm.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<NoblePhantasm>(`${host}/nice/${region}/NP/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static quest(region: Region, id: number, phase: number): Promise<Quest> {\n        const key = `${region}-${id}-${phase}`;\n\n        return cache.quest.get(\n            key,\n            () => {\n                return fetch<Quest>(`${host}/nice/${region}/quest/${id}/${phase}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static servant(region: Region, id: number): Promise<Servant> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.servant.get(\n            key,\n            () => {\n                let query = '?lore=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Servant>(`${host}/nice/${region}/servant/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async servantList(region: Region): Promise<BasicListEntity[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableServantList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableServantList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableServantList(Region.JP),\n            na = await Connection.getCacheableServantList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<BasicListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static skill(region: Region, id: number): Promise<Skill> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.skill.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Skill>(`${host}/nice/${region}/skill/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static traitMap(region: Region): Promise<TraitMap> {\n        return cache.traitMap.get(\n            region,\n            () => {\n                return fetch<TraitMap>(`${host}/export/${region}/nice_trait.json`);\n            },\n            null\n        );\n    }\n\n    private static async getCacheableCraftEssenceList(region: Region): Promise<BasicListEntity[]> {\n        return cache.craftEssenceList.get(\n            region,\n            () => {\n                return fetch<BasicListEntity[]>(`${host}/export/${region}/basic_equip.json`);\n            },\n            null\n        );\n    }\n\n    private static async getCacheableMysticCodeList(region: Region): Promise<MysticCode[]> {\n        return cache.mysticCodeList.get(\n            region,\n            () => {\n                return fetch<BasicListEntity[]>(`${host}/export/${region}/nice_mystic_code.json`);\n            },\n            null\n        );\n    }\n\n    private static async getCacheableServantList(region: Region): Promise<BasicListEntity[]> {\n        return cache.servantList.get(\n            region,\n            () => {\n                return fetch<BasicListEntity[]>(`${host}/export/${region}/basic_servant.json`);\n            },\n            null\n        );\n    }\n}\n\nexport default Connection;\n"],"sourceRoot":""}