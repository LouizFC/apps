{"version":3,"sources":["Setting/Option.tsx","Setting/Manager.tsx","Setting/SettingForm.tsx","Component/Navigation.tsx","Api/Connection.tsx","Component/BuffIcon.tsx","Component/DataTable.tsx","Component/Loading.tsx","Component/RawDataViewer.tsx","Helper/ArrayHelper.tsx","Api/Data/ClassName.tsx","Page/BuffPage.tsx","Page/FuncPage.tsx","Page/NoblePhantasmPage.tsx","Page/QuestPage.tsx","Component/ClassIcon.tsx","Page/Servant/ServantMainData.tsx","Helper/OutputHelper.tsx","Page/Servant/ServantMiscData.tsx","Api/Data/Func.tsx","Api/Data/Buff.tsx","Helper/TraitHelper.tsx","Helper/BuffHelper.tsx","Helper/FuncHelper.tsx","Helper/QuestHelper.tsx","Page/Servant/ServantNoblePhantasm.tsx","Page/Servant/ServantPicker.tsx","Page/Servant/ServantPortrait.tsx","Page/Servant/ServantSkill.tsx","Page/Servant/ServantTraits.tsx","Page/ServantPage.tsx","Component/RarityStars.tsx","Component/ServantThumbnail.tsx","Page/ServantsPage.tsx","Page/SkillPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LanguageOption","RegionOption","callbacks","Manager","value","window","localStorage","getItem","language","Object","values","find","v","DEFAULT","region","JP","undefined","setItem","triggerCallbacks","callback","push","forEach","call","SettingForm","props","state","onUpdate","syncSettings","this","setState","setLanguage","setRegion","Form","Group","Label","Control","as","onChange","ev","updateRegion","target","map","updateLanguage","React","Component","Navigation","showSettings","Navbar","bg","variant","expand","Container","to","className","Toggle","Collapse","Nav","NavItem","Link","href","icon","faDiscord","faGithub","Button","onClick","faCog","Modal","show","onHide","hideSettings","Header","closeButton","Title","Body","host","fetch","endpoint","a","axios","get","response","data","option","NA","servantListCache","Map","Connection","id","query","ENGLISH","phase","getCacheableServantList","jp","na","names","entity","name","list","set","BuffIcon","alt","src","location","style","height","verticalAlign","DataTable","header","Table","bordered","hover","keys","key","index","Loading","RawDataViewer","showing","cursor","faSearchPlus","size","hide","collapsed","joinElements","elements","separator","parts","pushElement","element","length","previous","toString","ClassName","BuffPage","loading","loadBuff","buff","detail","type","vals","trait","FuncPage","loadFunc","func","funcPopupIcon","funcId","funcType","funcTargetType","funcTargetTeam","funcPopupText","NoblePhantasmPage","loadNp","noblePhantasm","rank","card","QuestPage","loadQuest","quest","classTypes","classIds","SABER","ARCHER","LANCER","RIDER","CASTER","ASSASSIN","BERSERKER","SHIELDER","RULER","ALTER_EGO","AVENGER","ClassIcon","classId","has","rarity","ServantMainData","servant","collectionNo","cost","gender","attribute","lvMax","hpBase","atkBase","hpMax","atkMax","asPercent","pow","decimal","Math","FuncType","FuncTargetType","FuncTargetTeam","DataValField","BuffType","buffIconPath","deathChanceIcon","hitCountIcon","npGainIcon","starGenIcon","showHits","hits","hit","ServantMiscData","Col","xs","md","lg","hitsDistribution","buster","arts","quick","extra","starAbsorb","starGen","instantDeathChance","npGain","defence","Row","hitsColumn","npGainColumn","miscColumn","describeTrait","describeBuffValue","UP_COMMANDALL","DOWN_COMMANDALL","UP_CRITICALDAMAGE","DOWN_CRITICALDAMAGE","UP_DEFENCE","DOWN_DEFENCE","UP_DROPNP","DOWN_DROPNP","UP_HATE","hasChangingDataVals","i","JSON","stringify","hasUniqueValues","Set","describeFunc","isLevel","funcUpdatesByLevel","isOvercharge","funcUpdatesByOvercharge","staticValues","fields","filter","field","val","getStaticFieldNames","staticVals","x","getStaticFieldValues","getLevelDataValList","getOverchargeDataValList","svals","sectionFlags","chance","action","amount","affects","duration","scaling","Rate","ADD_STATE","ADD_STATE_SHORT","buffs","traits","description","DONOT_ACT","describeBuff","DAMAGE_NP","DAMAGE_NP_PIERCE","GAIN_HP","GAIN_NP","GAIN_STAR","LOSS_HP_SAFE","Value","describeFuncValue","functvals","ENEMY","ENEMY_ALL","PT_ALL","PT_ONE","PT_OTHER","SELF","Count","Turn","countDesc","turnDesc","LOSS_NP","describeMutators","getMutatingFieldNames","mutatingVals","getMutatingFieldValues","mutatingVal","join","svals2","svals3","svals4","svals5","describeQuestType","questId","questPhase","floor","ServantNoblePhantasm","np","faShare","condQuestId","condQuestPhase","Alert","responsive","functions","funcDescription","mutatingDescriptions","ServantPicker","history","FormControl","custom","changeServant","parseInt","servants","withRouter","ServantPortrait","extraAssets","charaGraph","ascension","ServantSkill","skill","ServantTraits","ServantPage","loadServant","Promise","all","servantList","span","order","Tabs","defaultActiveKey","transition","Tab","eventKey","title","skills","num","noblePhantasms","fillChars","count","character","Array","fill","RarityStars","ServantThumbnail","ServantsPage","then","striped","textAlign","width","align","face","SkillPage","loadSkill","App","updateSettings","path","render","match","params","component","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.58defb88.chunk.js","sourcesContent":["export enum LanguageOption {\n    DEFAULT = 'Default',\n    ENGLISH = 'English',\n}\n\nexport enum RegionOption {\n    JP = 'JP',\n    NA = 'NA'\n}\n","import {LanguageOption, RegionOption} from \"./Option\";\n\nconst languageKey = 'language',\n    regionKey = 'region';\n\nconst callbacks: Function[] = [];\n\nclass Manager {\n    static language(): LanguageOption {\n        const value = window.localStorage.getItem(languageKey),\n            language = Object.values(LanguageOption).find(v => v === value);\n\n        return language ?? LanguageOption.DEFAULT;\n    }\n\n    static region(): RegionOption {\n        const value = window.localStorage.getItem(regionKey),\n            region = Object.values(RegionOption).find(v => v === value);\n\n        return region ?? RegionOption.JP;\n    }\n\n    static setLanguage(value: string) {\n        const language = Object.values(LanguageOption).find(v => v === value);\n        if (language === undefined)\n            return;\n\n        window.localStorage.setItem(languageKey, language);\n        Manager.triggerCallbacks();\n    }\n\n    static setRegion(value: string) {\n        const region = Object.values(RegionOption).find(v => v === value);\n        if (region === undefined)\n            return;\n\n        window.localStorage.setItem(regionKey, region);\n        Manager.triggerCallbacks();\n    }\n\n    static onUpdate(callback: Function) {\n        callbacks.push(callback);\n    }\n\n    private static triggerCallbacks()\n    {\n        callbacks.forEach(callback => {\n            callback.call(null);\n        });\n    }\n}\n\nexport default Manager;\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport Manager from \"./Manager\";\nimport {LanguageOption, RegionOption} from \"./Option\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IState {\n    region: RegionOption,\n    language: LanguageOption\n}\n\nclass SettingForm extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            region: Manager.region(),\n            language: Manager.language(),\n        }\n\n        Manager.onUpdate(() => this.syncSettings());\n    }\n\n    private syncSettings() {\n        this.setState({\n            region: Manager.region(),\n            language: Manager.language(),\n        });\n    }\n\n    updateLanguage(value: string) {\n        Manager.setLanguage(value);\n    }\n\n    updateRegion(value: string) {\n        Manager.setRegion(value);\n    }\n\n    render() {\n        return (\n            <div>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Region</Form.Label>\n                        <Form.Control as={'select'} value={this.state.region}\n                                      onChange={(ev: Event) => this.updateRegion(ev.target.value)}>\n                            {Object.values(RegionOption).map(v => (\n                                <option value={v}>{v}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Language</Form.Label>\n                        <Form.Control as={'select'} value={this.state.language}\n                                      onChange={(ev: Event) => this.updateLanguage(ev.target.value)}>\n                            {Object.values(LanguageOption).map(v => (\n                                <option value={v}>{v}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default SettingForm;\n","import {faDiscord, faGithub} from \"@fortawesome/free-brands-svg-icons\";\nimport {faCog} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Button, Container, Modal, Nav, Navbar, NavItem} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport SettingForm from \"../Setting/SettingForm\";\n\ninterface IState {\n    showSettings: boolean;\n}\n\nclass Navigation extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            showSettings: false,\n        };\n    }\n\n    hideSettings() {\n        this.setState({showSettings: false});\n    }\n\n    showSettings() {\n        this.setState({showSettings: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar bg={\"dark\"} variant={'dark'} expand={\"lg\"}>\n                    <Container>\n                        <Link to=\"/\" className={'navbar-brand'}>AA-DB</Link>\n                        <Navbar.Toggle/>\n\n                        <Navbar.Collapse>\n                            <Nav>\n                                <Link to=\"/servants\" className={'nav-link'}>\n                                    <NavItem>Servants</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav className={'ml-auto'}>\n                                <Nav.Link href={'https://discord.gg/TKJmuCR'} target={'_blank'}>\n                                    <FontAwesomeIcon icon={faDiscord}/>\n                                </Nav.Link>\n                                <Nav.Link href={'https://github.com/atlasacademy/aa-db'} target={'_blank'}>\n                                    <FontAwesomeIcon icon={faGithub}/>\n                                </Nav.Link>\n                                <Button variant={\"primary\"} onClick={() => this.showSettings()}>\n                                    <FontAwesomeIcon icon={faCog}/>\n                                </Button>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Container>\n                </Navbar>\n\n                <Modal show={this.state.showSettings} onHide={() => this.hideSettings()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Settings</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <SettingForm/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n\n}\n\nexport default Navigation;\n","import axios from \"axios\";\nimport Manager from \"../Setting/Manager\";\nimport {LanguageOption, RegionOption} from \"../Setting/Option\";\nimport Buff from \"./Data/Buff\";\nimport Func from \"./Data/Func\";\nimport NoblePhantasm from \"./Data/NoblePhantasm\";\nimport Quest from \"./Data/Quest\";\nimport ServantEntity from \"./Data/ServantEntity\";\nimport ServantListEntity from \"./Data/ServantListEntity\";\nimport Skill from \"./Data/Skill\";\n\nconst host = 'https://api.atlasacademy.io';\nconst fetch = async function <T>(endpoint: string): Promise<T> {\n    const response = await axios.get<T>(endpoint);\n\n    return response.data;\n}\nconst region = function (option?: RegionOption): string {\n    option = option ?? Manager.region();\n\n    if (option === RegionOption.NA)\n        return 'NA';\n\n    return 'JP';\n}\nconst servantListCache = new Map<RegionOption, ServantListEntity[]>();\n\nclass Connection {\n\n    static buff(id: number): Promise<Buff> {\n        let query = '?reverse=true' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<Buff>(`${host}/nice/${region()}/buff/${id}${query}`);\n    }\n\n    static func(id: number): Promise<Func> {\n        let query = '?reverse=true' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<Func>(`${host}/nice/${region()}/function/${id}${query}`);\n    }\n\n    static noblePhantasm(id: number): Promise<NoblePhantasm> {\n        let query = '?reverse=true' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<NoblePhantasm>(`${host}/nice/${region()}/NP/${id}${query}`);\n    }\n\n    static quest(id: number, phase: number): Promise<Quest> {\n        return fetch<Quest>(`${host}/nice/${region()}/quest/${id}/${phase}`);\n    }\n\n    public static servant(id: number): Promise<ServantEntity> {\n        let query = '?lore=true' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<ServantEntity>(`${host}/nice/${region()}/servant/${id}${query}`);\n    }\n\n    public static async servantList(): Promise<ServantListEntity[]> {\n        if (Manager.region() === RegionOption.NA) {\n            return Connection.getCacheableServantList(RegionOption.NA);\n        } else if (Manager.region() === RegionOption.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableServantList(RegionOption.JP);\n        }\n\n        const jp = await Connection.getCacheableServantList(RegionOption.JP),\n            na = await Connection.getCacheableServantList(RegionOption.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<ServantListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static async skill(id: number): Promise<Skill> {\n        let query = '?reverse=true' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<Skill>(`${host}/nice/${region()}/skill/${id}${query}`);\n    }\n\n    private static async getCacheableServantList(option: RegionOption): Promise<ServantListEntity[]> {\n        let list = servantListCache.get(option);\n        if (list !== undefined)\n            return list;\n\n        list = await fetch<ServantListEntity[]>(`${host}/export/${region(option)}/basic_servant.json`);\n        servantListCache.set(option, list);\n\n        return list;\n    }\n}\n\nexport default Connection;\n","import React from \"react\";\n\ninterface IProp {\n    location: string;\n    height?: number;\n}\n\nclass BuffIcon extends React.Component<IProp> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location} style={{\n                height: this.props.height ?? 25,\n                verticalAlign: \"bottom\",\n            }}/>\n        );\n    }\n\n}\n\nexport default BuffIcon;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\n\nimport \"./DataTable.css\";\nimport {Renderable} from \"../Helper/Renderable\";\n\ninterface IProp {\n    header?: JSX.Element | string,\n    data: {\n        [key: string]: Renderable;\n    }\n}\n\nclass DataTable extends React.Component<IProp> {\n    render() {\n        return (\n            <div>\n                {this.props.header ? (\n                    <div className={'data-header'}>\n                        {this.props.header}\n                    </div>\n                ) : null}\n\n                <Table bordered hover className={'data-table'}>\n                    <tbody>\n                    {Object.keys(this.props.data).map((key, index) => {\n                        return (\n                            <tr key={index}>\n                                <th>{key}</th>\n                                <td>{this.props.data[key]}</td>\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default DataTable;\n","import React from \"react\";\n\nfunction Loading() {\n    return (\n        <div>\n            Loading ...\n        </div>\n    );\n}\n\nexport default Loading;\n","import {faSearchPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Modal} from \"react-bootstrap\";\nimport ReactJson from \"react-json-view\";\n\ninterface IProps {\n    data: object;\n}\n\ninterface IState {\n    showing: boolean;\n}\n\nclass RawDataViewer extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            showing: false\n        };\n    }\n\n    hide() {\n        this.setState({showing: false});\n    }\n\n    show() {\n        this.setState({showing: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <span className={'text-primary'}\n                      style={{cursor: \"pointer\"}}\n                      onClick={() => {\n                          this.show();\n                      }}>\n                    View Raw\n                    &nbsp;\n                    <FontAwesomeIcon icon={faSearchPlus}/>\n                </span>\n\n                <Modal size={\"lg\"} show={this.state.showing} onHide={() => this.hide()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Raw Data Viewer</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ReactJson src={this.props.data} collapsed={1}/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default RawDataViewer;\n","import {Renderable} from \"./Renderable\";\n\nexport function joinElements(elements: Renderable[], separator: Renderable): Renderable[] {\n    const parts: Renderable[] = [],\n        pushElement = function (element: Renderable) {\n            if (typeof element === 'object') {\n                parts.push(element);\n                return;\n            }\n\n            if (parts.length === 0) {\n                parts.push(element.toString());\n                return;\n            }\n\n            const previous = parts[parts.length - 1];\n            if (typeof previous !== 'string') {\n                parts.push(element.toString());\n                return;\n            }\n\n            parts[parts.length - 1] = previous + element.toString();\n        };\n\n    elements.forEach((element, index) => {\n        if (index > 0)\n            pushElement(separator);\n\n        pushElement(element);\n    });\n\n    return parts;\n}\n","enum ClassName {\n    SABER = \"saber\",\n    ARCHER = \"archer\",\n    LANCER = \"lancer\",\n    RIDER = \"rider\",\n    CASTER = \"caster\",\n    ASSASSIN = \"assassin\",\n    BERSERKER = \"berserker\",\n    SHIELDER = \"shielder\",\n    RULER = \"ruler\",\n    ALTER_EGO = \"alterEgo\",\n    AVENGER = \"avenger\",\n    GRAND_CASTER = \"grandCaster\",\n    BEAST_II = \"beastII\",\n    BEAST_I = \"beastI\",\n    MOON_CANCER = \"moonCancer\",\n    BEAST_IIIR = \"beastIIIR\",\n    FOREIGNER = \"foreigner\",\n    BEAST_IIIL = \"beastIIIL\",\n    BEAST_UNKNOWN = \"beastUnknown\",\n    ALL = \"ALL\",\n}\n\nexport default ClassName;\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Buff from \"../Api/Data/Buff\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport DataTable from \"../Component/DataTable\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\nimport {joinElements} from \"../Helper/ArrayHelper\";\n\ninterface IProps {\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    buff?: Buff;\n}\n\nclass BuffPage extends React.Component<IProps, IState>{\n    constructor(props:IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.loadBuff();\n    }\n\n    async loadBuff() {\n        const buff = await Connection.buff(this.props.id);\n\n        this.setState({\n            loading: false,\n            buff: buff,\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.buff)\n            return <Loading/>;\n\n        const buff = this.state.buff;\n\n        return (\n            <div>\n                <h1>\n                    <BuffIcon location={buff.icon} height={48}/>\n                    &nbsp;\n                    {buff.name}\n                </h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={buff}/>,\n                    \"ID\": buff.id,\n                    \"Name\": buff.name,\n                    \"Detail\": buff.detail,\n                    \"Type\": buff.type,\n                    \"Gained Traits\": (\n                        <div>\n                            {joinElements(buff.vals.map(trait => trait.name), ', ')}\n                        </div>\n                    ),\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default BuffPage;\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Func from \"../Api/Data/Func\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport DataTable from \"../Component/DataTable\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\n\ninterface IProps {\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    func?: Func;\n}\n\nclass FuncPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.loadFunc();\n    }\n\n    async loadFunc() {\n        const func = await Connection.func(this.props.id);\n\n        this.setState({\n            loading: false,\n            func: func,\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.func)\n            return <Loading/>;\n\n        const func = this.state.func;\n\n        return (\n            <div>\n                <h1>\n                    {func.funcPopupIcon ? (\n                        <span>\n                            <BuffIcon location={func.funcPopupIcon} height={48}/>\n                            &nbsp;\n                        </span>\n                    ) : null}\n                    Function: {this.props.id}\n                </h1>\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={func}/>,\n                    \"ID\": func.funcId,\n                    \"Type\": func.funcType,\n                    \"Target\": func.funcTargetType,\n                    \"Affects Players/Enemies\": func.funcTargetTeam,\n                    \"Popup Text\": func.funcPopupText,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default FuncPage;\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport NoblePhantasm from \"../Api/Data/NoblePhantasm\";\nimport DataTable from \"../Component/DataTable\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\n\ninterface IProps {\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    noblePhantasm?: NoblePhantasm;\n}\n\nclass NoblePhantasmPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.loadNp();\n    }\n\n    async loadNp() {\n        const noblePhantasm = await Connection.noblePhantasm(this.props.id);\n\n        this.setState({\n            loading: false,\n            noblePhantasm: noblePhantasm,\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.noblePhantasm)\n            return <Loading/>;\n\n        const noblePhantasm = this.state.noblePhantasm;\n\n        return (\n            <div>\n                <h1>{noblePhantasm.name}</h1>\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={noblePhantasm}/>,\n                    \"ID\": noblePhantasm.id,\n                    \"Name\": noblePhantasm.name,\n                    \"Type\": noblePhantasm.type,\n                    \"Rank\": noblePhantasm.rank,\n                    \"Detail\": noblePhantasm.detail,\n                    \"Card Type\": noblePhantasm.card,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default NoblePhantasmPage;\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Quest from \"../Api/Data/Quest\";\nimport DataTable from \"../Component/DataTable\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\n\ninterface IProps {\n    id: number;\n    phase: number;\n}\n\ninterface IState {\n    loading: boolean;\n    quest?: Quest;\n}\n\nclass QuestPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.loadQuest();\n    }\n\n    async loadQuest() {\n        const quest = await Connection.quest(this.props.id, this.props.phase);\n\n        this.setState({\n            loading: false,\n            quest: quest,\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.quest)\n            return <Loading/>;\n\n        const quest = this.state.quest;\n\n        return (\n            <div>\n                <h1>{quest.name}</h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={quest}/>,\n                    \"ID\": quest.id,\n                    \"Phase\": quest.phase,\n                    \"Name\": quest.name,\n                    \"Type\": quest.type,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default QuestPage;\n","import React from \"react\";\nimport ClassName from \"../Api/Data/ClassName\";\n\nconst classTypes = new Map<number, number>([\n    [1, 1],\n    [2, 1],\n    [3, 2],\n    [4, 3],\n    [5, 3],\n]);\nconst unknownClassType = 3;\nconst classIds = new Map<ClassName, number>([\n    [ClassName.SABER, 1],\n    [ClassName.ARCHER, 2],\n    [ClassName.LANCER, 3],\n    [ClassName.RIDER, 4],\n    [ClassName.CASTER, 5],\n    [ClassName.ASSASSIN, 6],\n    [ClassName.BERSERKER, 7],\n    [ClassName.SHIELDER, 8],\n    [ClassName.RULER, 9],\n    [ClassName.ALTER_EGO, 10],\n    [ClassName.AVENGER, 11],\n]);\nconst unknownClassId = 12;\n\ninterface IProps {\n    className: ClassName;\n    rarity?: number;\n    height?: number;\n}\n\nclass ClassIcon extends React.Component<IProps> {\n    render() {\n        return (\n            <img alt={''} src={this.location()}\n                 style={this.props.height ? {height: this.props.height} : undefined}/>\n        );\n    }\n\n    private location(): string {\n        let classId = classIds.has(this.props.className) ? classIds.get(this.props.className) : unknownClassId,\n            rarity = this.props.rarity ?? 5,\n            type = classTypes.has(rarity) ? classTypes.get(rarity) : unknownClassType;\n\n        return `https://assets.atlasacademy.io/GameData/NA/ClassIcons/class${type}_${classId}.png`;\n    }\n}\n\nexport default ClassIcon;\n","import React from \"react\";\nimport ServantEntity from \"../../Api/Data/ServantEntity\";\nimport ClassIcon from \"../../Component/ClassIcon\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\n\ninterface IProps {\n    servant: ServantEntity;\n}\n\nclass ServantMainData extends React.Component<IProps> {\n    render() {\n        const servant = this.props.servant;\n\n        return (\n            <div>\n                <h1>\n                    <ClassIcon className={servant.className} rarity={servant.rarity}/>\n                    &nbsp;\n                    {servant.name}\n                </h1>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={servant}/>,\n                    \"ID\": servant.id,\n                    \"Collection\": servant.collectionNo,\n                    \"Name\": servant.name,\n                    \"Class\": servant.className,\n                    \"Rarity\": servant.rarity,\n                    \"Cost\": servant.cost,\n                    \"Gender\": servant.gender,\n                    \"Attribute\": servant.attribute,\n                    \"Max Lv.\": servant.lvMax,\n                    \"Base Hp\": servant.hpBase,\n                    \"Base Atk\": servant.atkBase,\n                    \"Max Hp\": servant.hpMax,\n                    \"Max Atk\": servant.atkMax,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantMainData;\n","export function asPercent(value: number | undefined, pow: number): string {\n    const decimal = (value ?? 0) / Math.pow(10, pow);\n\n    return `${decimal}%`;\n}\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport ServantEntity from \"../../Api/Data/ServantEntity\";\nimport BuffIcon from \"../../Component/BuffIcon\";\nimport DataTable from \"../../Component/DataTable\";\nimport {asPercent} from \"../../Helper/OutputHelper\";\n\nconst buffIconPath = 'https://assets.atlasacademy.io/GameData/JP/BuffIcons',\n    deathChanceIcon = `${buffIconPath}/bufficon_337.png`,\n    hitCountIcon = `${buffIconPath}/bufficon_349.png`,\n    npGainIcon = `${buffIconPath}/bufficon_303.png`,\n    starGenIcon = `${buffIconPath}/bufficon_310.png`,\n    showHits = function (hits: number[] | undefined): JSX.Element | string {\n        if (hits === undefined)\n            return '';\n\n        return <span>\n            {hits.map((hit, index) => {\n                return (index > 0 ? ', ' : '') + asPercent(hit, 0);\n            })}\n            &nbsp;-&nbsp;\n            {hits.length} Hits\n        </span>\n    };\n\ninterface IProps {\n    servant: ServantEntity;\n}\n\nclass ServantMiscData extends React.Component<IProps> {\n    private hitsColumn() {\n        return (\n            <Col xs={12} md={12} lg={4}>\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={hitCountIcon}/>\n                            &nbsp;\n                            Hit Count\n                        </div>\n                    )}\n                    data={{\n                        \"Buster\": showHits(this.props.servant.hitsDistribution.buster),\n                        \"Arts\": showHits(this.props.servant.hitsDistribution.arts),\n                        \"Quick\": showHits(this.props.servant.hitsDistribution.quick),\n                        \"Extra\": showHits(this.props.servant.hitsDistribution.extra),\n                    }}/>\n            </Col>\n        );\n    }\n\n    private miscColumn() {\n        return (\n            <Col xs={12} md={12} lg={4}>\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={starGenIcon}/>&nbsp;Crit Stars\n                        </div>\n                    )}\n                    data={{\n                        \"Star Absorb\": this.props.servant.starAbsorb,\n                        \"Star Gen\": asPercent(this.props.servant.starGen, 1),\n                    }}/>\n\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={deathChanceIcon}/>&nbsp;Instant Death\n                        </div>\n                    )}\n                    data={{\n                        \"Death Chance\": asPercent(this.props.servant.instantDeathChance, 1),\n                    }}/>\n            </Col>\n        );\n    }\n\n    private npGainColumn() {\n        return (\n            <Col xs={12} md={12} lg={4}>\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={npGainIcon}/>&nbsp;NP Gain\n                        </div>\n                    )}\n                    data={{\n                        \"Buster\": asPercent(this.props.servant.npGain.buster, 2),\n                        \"Arts\": asPercent(this.props.servant.npGain.arts, 2),\n                        \"Quick\": asPercent(this.props.servant.npGain.quick, 2),\n                        \"Extra\": asPercent(this.props.servant.npGain.extra, 2),\n                        \"Defense\": asPercent(this.props.servant.npGain.defence, 2),\n                    }}/>\n            </Col>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    {this.hitsColumn()}\n                    {this.npGainColumn()}\n                    {this.miscColumn()}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default ServantMiscData;\n","import Buff from \"./Buff\";\nimport Trait from \"./Trait\";\n\nexport enum FuncType {\n    NONE = \"none\",\n    ADD_STATE = \"addState\",\n    SUB_STATE = \"subState\",\n    DAMAGE = \"damage\",\n    DAMAGE_NP = \"damageNp\",\n    GAIN_STAR = \"gainStar\",\n    GAIN_HP = \"gainHp\",\n    GAIN_NP = \"gainNp\",\n    LOSS_NP = \"lossNp\",\n    SHORTEN_SKILL = \"shortenSkill\",\n    EXTEND_SKILL = \"extendSkill\",\n    RELEASE_STATE = \"releaseState\",\n    LOSS_HP = \"lossHp\",\n    INSTANT_DEATH = \"instantDeath\",\n    DAMAGE_NP_PIERCE = \"damageNpPierce\",\n    DAMAGE_NP_INDIVIDUAL = \"damageNpIndividual\",\n    ADD_STATE_SHORT = \"addStateShort\",\n    GAIN_HP_PER = \"gainHpPer\",\n    DAMAGE_NP_STATE_INDIVIDUAL = \"damageNpStateIndividual\",\n    HASTEN_NPTURN = \"hastenNpturn\",\n    DELAY_NPTURN = \"delayNpturn\",\n    DAMAGE_NP_HPRATIO_HIGH = \"damageNpHpratioHigh\",\n    DAMAGE_NP_HPRATIO_LOW = \"damageNpHpratioLow\",\n    CARD_RESET = \"cardReset\",\n    REPLACE_MEMBER = \"replaceMember\",\n    LOSS_HP_SAFE = \"lossHpSafe\",\n    DAMAGE_NP_COUNTER = \"damageNpCounter\",\n    DAMAGE_NP_STATE_INDIVIDUAL_FIX = \"damageNpStateIndividualFix\",\n    DAMAGE_NP_SAFE = \"damageNpSafe\",\n    CALL_SERVANT = \"callServant\",\n    PT_SHUFFLE = \"ptShuffle\",\n    LOSS_STAR = \"lossStar\",\n    CHANGE_SERVANT = \"changeServant\",\n    CHANGE_BG = \"changeBg\",\n    DAMAGE_VALUE = \"damageValue\",\n    WITHDRAW = \"withdraw\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    SHORTEN_BUFFTURN = \"shortenBuffturn\",\n    EXTEND_BUFFTURN = \"extendBuffturn\",\n    SHORTEN_BUFFCOUNT = \"shortenBuffcount\",\n    EXTEND_BUFFCOUNT = \"extendBuffcount\",\n    CHANGE_BGM = \"changeBgm\",\n    DISPLAY_BUFFSTRING = \"displayBuffstring\",\n    EXP_UP = \"expUp\",\n    QP_UP = \"qpUp\",\n    DROP_UP = \"dropUp\",\n    FRIEND_POINT_UP = \"friendPointUp\",\n    EVENT_DROP_UP = \"eventDropUp\",\n    EVENT_DROP_RATE_UP = \"eventDropRateUp\",\n    EVENT_POINT_UP = \"eventPointUp\",\n    EVENT_POINT_RATE_UP = \"eventPointRateUp\",\n    TRANSFORM_SERVANT = \"transformServant\",\n    QP_DROP_UP = \"qpDropUp\",\n    SERVANT_FRIENDSHIP_UP = \"servantFriendshipUp\",\n    USER_EQUIP_EXP_UP = \"userEquipExpUp\",\n    CLASS_DROP_UP = \"classDropUp\",\n    ENEMY_ENCOUNT_COPY_RATE_UP = \"enemyEncountCopyRateUp\",\n    ENEMY_ENCOUNT_RATE_UP = \"enemyEncountRateUp\",\n    ENEMY_PROB_DOWN = \"enemyProbDown\",\n}\n\nexport enum FuncTargetType {\n    SELF = \"self\",\n    PT_ONE = \"ptOne\",\n    PT_ANOTHER = \"ptAnother\",\n    PT_ALL = \"ptAll\",\n    ENEMY = \"enemy\",\n    ENEMY_ANOTHER = \"enemyAnother\",\n    ENEMY_ALL = \"enemyAll\",\n    PT_FULL = \"ptFull\",\n    ENEMY_FULL = \"enemyFull\",\n    PT_OTHER = \"ptOther\",\n    PT_ONE_OTHER = \"ptOneOther\",\n    PT_RANDOM = \"ptRandom\",\n    ENEMY_OTHER = \"enemyOther\",\n    ENEMY_RANDOM = \"enemyRandom\",\n    PT_OTHER_FULL = \"ptOtherFull\",\n    ENEMY_OTHER_FULL = \"enemyOtherFull\",\n    PTSELECT_ONE_SUB = \"ptselectOneSub\",\n    PTSELECT_SUB = \"ptselectSub\",\n    PT_ONE_ANOTHER_RANDOM = \"ptOneAnotherRandom\",\n}\n\nexport enum FuncTargetTeam {\n    PLAYER = \"player\",\n    ENEMY = \"enemy\",\n    PLAYER_AND_ENEMY = \"playerAndEnemy\",\n}\n\nexport enum DataValField {\n    RATE = \"Rate\",\n    TURN = \"Turn\",\n    COUNT = \"Count\",\n    VALUE = \"Value\",\n    VALUE2 = \"Value2\",\n    USE_RATE = \"UseRate\",\n    TARGET = \"Target\",\n    CORRECTION = \"Correction\",\n    PARAM_ADD = \"ParamAdd\",\n    PARAM_MAX = \"ParamMax\",\n    HIDE_MISS = \"HideMiss\",\n    ON_FIELD = \"OnField\",\n    HIDE_NO_EFFECT = \"HideNoEffect\",\n    UNAFFECTED = \"Unaffected\",\n    SHOW_STATE = \"ShowState\",\n    AURA_EFFECT_ID = \"AuraEffectId\",\n    ACT_SET = \"ActSet\",\n    ACT_SET_WEIGHT = \"ActSetWeight\",\n    SHOW_QUEST_NO_EFFECT = \"ShowQuestNoEffect\",\n    CHECK_DEAD = \"CheckDead\",\n    RATIO_HP_HIGH = \"RatioHPHigh\",\n    RATIO_HP_LOW = \"RatioHPLow\",\n    SET_PASSIVE_FRAME = \"SetPassiveFrame\",\n    PROC_PASSIVE = \"ProcPassive\",\n    PROC_ACTIVE = \"ProcActive\",\n    HIDE_PARAM = \"HideParam\",\n    SKILL_ID = \"SkillID\",\n    SKILL_LV = \"SkillLV\",\n    SHOW_CARD_ONLY = \"ShowCardOnly\",\n    EFFECT_SUMMON = \"EffectSummon\",\n    RATIO_HP_RANGE_HIGH = \"RatioHPRangeHigh\",\n    RATIO_HP_RANGE_LOW = \"RatioHPRangeLow\",\n    TARGET_LIST = \"TargetList\",\n    OPPONENT_ONLY = \"OpponentOnly\",\n    TARGET_RARITY_LIST = \"TargetRarityList\",\n}\n\nexport type DataVal = {\n    [key in DataValField]?: number;\n}\n\nexport default interface Func {\n    funcId: number;\n    funcType: FuncType;\n    funcTargetType: FuncTargetType;\n    funcTargetTeam: FuncTargetTeam;\n    funcPopupText: string;\n    funcPopupIcon?: string;\n    functvals: Trait[];\n    funcquestTvals: number[];\n    buffs: Buff[];\n    svals: DataVal[];\n    svals2?: DataVal[];\n    svals3?: DataVal[];\n    svals4?: DataVal[];\n    svals5?: DataVal[];\n}\n","import Trait from \"./Trait\";\n\nexport enum BuffType {\n    NONE = \"none\",\n    UP_COMMANDATK = \"upCommandatk\",\n    UP_STARWEIGHT = \"upStarweight\",\n    UP_CRITICALPOINT = \"upCriticalpoint\",\n    DOWN_CRITICALPOINT = \"downCriticalpoint\",\n    REGAIN_NP = \"regainNp\",\n    REGAIN_STAR = \"regainStar\",\n    REGAIN_HP = \"regainHp\",\n    REDUCE_HP = \"reduceHp\",\n    UP_ATK = \"upAtk\",\n    DOWN_ATK = \"downAtk\",\n    UP_DAMAGE = \"upDamage\",\n    DOWN_DAMAGE = \"downDamage\",\n    ADD_DAMAGE = \"addDamage\",\n    SUB_DAMAGE = \"subDamage\",\n    UP_NPDAMAGE = \"upNpdamage\",\n    DOWN_NPDAMAGE = \"downNpdamage\",\n    UP_DROPNP = \"upDropnp\",\n    UP_CRITICALDAMAGE = \"upCriticaldamage\",\n    DOWN_CRITICALDAMAGE = \"downCriticaldamage\",\n    UP_SELFDAMAGE = \"upSelfdamage\",\n    DOWN_SELFDAMAGE = \"downSelfdamage\",\n    ADD_SELFDAMAGE = \"addSelfdamage\",\n    SUB_SELFDAMAGE = \"subSelfdamage\",\n    AVOIDANCE = \"avoidance\",\n    BREAK_AVOIDANCE = \"breakAvoidance\",\n    INVINCIBLE = \"invincible\",\n    UP_GRANTSTATE = \"upGrantstate\",\n    DOWN_GRANTSTATE = \"downGrantstate\",\n    UP_TOLERANCE = \"upTolerance\",\n    DOWN_TOLERANCE = \"downTolerance\",\n    AVOID_STATE = \"avoidState\",\n    DONOT_ACT = \"donotAct\",\n    DONOT_SKILL = \"donotSkill\",\n    DONOT_NOBLE = \"donotNoble\",\n    DONOT_RECOVERY = \"donotRecovery\",\n    DISABLE_GENDER = \"disableGender\",\n    GUTS = \"guts\",\n    UP_HATE = \"upHate\",\n    ADD_INDIVIDUALITY = \"addIndividuality\",\n    SUB_INDIVIDUALITY = \"subIndividuality\",\n    UP_DEFENCE = \"upDefence\",\n    DOWN_DEFENCE = \"downDefence\",\n    UP_COMMANDSTAR = \"upCommandstar\",\n    UP_COMMANDNP = \"upCommandnp\",\n    UP_COMMANDALL = \"upCommandall\",\n    DOWN_COMMANDALL = \"downCommandall\",\n    DOWN_STARWEIGHT = \"downStarweight\",\n    REDUCE_NP = \"reduceNp\",\n    DOWN_DROPNP = \"downDropnp\",\n    UP_GAIN_HP = \"upGainHp\",\n    DOWN_GAIN_HP = \"downGainHp\",\n    DOWN_COMMANDATK = \"downCommandatk\",\n    DOWN_COMMANSTAR = \"downCommanstar\",\n    DOWN_COMMANDNP = \"downCommandnp\",\n    UP_CRITICALRATE = \"upCriticalrate\",\n    DOWN_CRITICALRATE = \"downCriticalrate\",\n    PIERCE_INVINCIBLE = \"pierceInvincible\",\n    AVOID_INSTANTDEATH = \"avoidInstantdeath\",\n    UP_RESIST_INSTANTDEATH = \"upResistInstantdeath\",\n    UP_NONRESIST_INSTANTDEATH = \"upNonresistInstantdeath\",\n    DELAY_FUNCTION = \"delayFunction\",\n    REGAIN_NP_USED_NOBLE = \"regainNpUsedNoble\",\n    DEAD_FUNCTION = \"deadFunction\",\n    UP_MAXHP = \"upMaxhp\",\n    DOWN_MAXHP = \"downMaxhp\",\n    ADD_MAXHP = \"addMaxhp\",\n    SUB_MAXHP = \"subMaxhp\",\n    BATTLESTART_FUNCTION = \"battlestartFunction\",\n    WAVESTART_FUNCTION = \"wavestartFunction\",\n    SELFTURNEND_FUNCTION = \"selfturnendFunction\",\n    UP_GIVEGAIN_HP = \"upGivegainHp\",\n    DOWN_GIVEGAIN_HP = \"downGivegainHp\",\n    COMMANDATTACK_FUNCTION = \"commandattackFunction\",\n    DEADATTACK_FUNCTION = \"deadattackFunction\",\n    UP_SPECIALDEFENCE = \"upSpecialdefence\",\n    DOWN_SPECIALDEFENCE = \"downSpecialdefence\",\n    UP_DAMAGEDROPNP = \"upDamagedropnp\",\n    DOWN_DAMAGEDROPNP = \"downDamagedropnp\",\n    ENTRY_FUNCTION = \"entryFunction\",\n    UP_CHAGETD = \"upChagetd\",\n    REFLECTION_FUNCTION = \"reflectionFunction\",\n    UP_GRANT_SUBSTATE = \"upGrantSubstate\",\n    DOWN_GRANT_SUBSTATE = \"downGrantSubstate\",\n    UP_TOLERANCE_SUBSTATE = \"upToleranceSubstate\",\n    DOWN_TOLERANCE_SUBSTATE = \"downToleranceSubstate\",\n    UP_GRANT_INSTANTDEATH = \"upGrantInstantdeath\",\n    DOWN_GRANT_INSTANTDEATH = \"downGrantInstantdeath\",\n    GUTS_RATIO = \"gutsRatio\",\n    DAMAGE_FUNCTION = \"damageFunction\",\n    UP_DEFENCECOMMANDALL = \"upDefencecommandall\",\n    DOWN_DEFENCECOMMANDALL = \"downDefencecommandall\",\n    OVERWRITE_BATTLECLASS = \"overwriteBattleclass\",\n    OVERWRITE_CLASSRELATIO_ATK = \"overwriteClassrelatioAtk\",\n    OVERWRITE_CLASSRELATIO_DEF = \"overwriteClassrelatioDef\",\n    UP_DAMAGE_INDIVIDUALITY = \"upDamageIndividuality\",\n    DOWN_DAMAGE_INDIVIDUALITY = \"downDamageIndividuality\",\n    UP_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"upDamageIndividualityActiveonly\",\n    DOWN_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"downDamageIndividualityActiveonly\",\n    UP_NPTURNVAL = \"upNpturnval\",\n    DOWN_NPTURNVAL = \"downNpturnval\",\n    MULTIATTACK = \"multiattack\",\n    UP_GIVE_NP = \"upGiveNp\",\n    DOWN_GIVE_NP = \"downGiveNp\",\n    UP_RESISTANCE_DELAY_NPTURN = \"upResistanceDelayNpturn\",\n    DOWN_RESISTANCE_DELAY_NPTURN = \"downResistanceDelayNpturn\",\n    PIERCE_DEFENCE = \"pierceDefence\",\n    UP_GUTS_HP = \"upGutsHp\",\n    DOWN_GUTS_HP = \"downGutsHp\",\n    UP_FUNCGAIN_NP = \"upFuncgainNp\",\n    DOWN_FUNCGAIN_NP = \"downFuncgainNp\",\n    UP_FUNC_HP_REDUCE = \"upFuncHpReduce\",\n    DOWN_FUNC_HP_REDUCE = \"downFuncHpReduce\",\n    UP_DEFENCECOMMAN_DAMAGE = \"upDefencecommanDamage\",\n    DOWN_DEFENCECOMMAN_DAMAGE = \"downDefencecommanDamage\",\n    NPATTACK_PREV_BUFF = \"npattackPrevBuff\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    DONOT_GAINNP = \"donotGainnp\",\n    FIELD_INDIVIDUALITY = \"fieldIndividuality\",\n    DONOT_ACT_COMMANDTYPE = \"donotActCommandtype\",\n    UP_DAMAGE_EVENT_POINT = \"upDamageEventPoint\",\n}\n\nexport default interface Buff {\n    id: number;\n    name: string;\n    detail: string;\n    icon: string;\n    type: BuffType;\n    vals: Trait[];\n    tvals: Trait[];\n    ckSelfIndv: Trait[];\n    ckOpIndv: Trait[];\n    maxRate: number;\n}\n","import React from \"react\";\nimport Trait from \"../Api/Data/Trait\";\nimport {Renderable} from \"./Renderable\";\n\nexport function describeTrait(trait: Trait): Renderable {\n    return (\n        // <Link to={`/trait/${trait.id}`}>\n        <span>\n            {trait.name}{trait.name === 'unknown' ? `(${trait.id})` : null}\n        </span>\n        // </Link>\n    );\n}\n\nexport function hasTraitId(traits: Trait[], id: number): boolean {\n    return traits.filter(trait => trait.id === id).length > 0;\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Buff, {BuffType} from \"../Api/Data/Buff\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport {asPercent} from \"./OutputHelper\";\nimport {Renderable} from \"./Renderable\";\nimport {hasTraitId} from \"./TraitHelper\";\n\nexport function describeBuff(buff: Buff): Renderable {\n    let description = buff.name;\n\n    if (buff.type === BuffType.DONOT_ACT) {\n        if (hasTraitId(buff.vals, 3012)) {\n            description = 'Charm';\n        }\n    }\n\n    return (\n        <Link to={`/buff/${buff.id}`}>\n            {description} <BuffIcon location={buff.icon}/>\n        </Link>\n    );\n}\n\nexport function describeBuffValue(buff: Buff, value: number): string {\n    switch (buff.type) {\n        case BuffType.UP_COMMANDALL:\n        case BuffType.DOWN_COMMANDALL:\n        case BuffType.UP_CRITICALDAMAGE:\n        case BuffType.DOWN_CRITICALDAMAGE:\n        case BuffType.UP_DEFENCE:\n        case BuffType.DOWN_DEFENCE:\n        case BuffType.UP_DROPNP:\n        case BuffType.DOWN_DROPNP:\n        case BuffType.UP_HATE:\n            return asPercent(value, 1);\n    }\n\n    return value.toString();\n}\n","import React from \"react\";\nimport Func, {DataVal, DataValField, FuncTargetType, FuncType} from \"../Api/Data/Func\";\nimport {joinElements} from \"./ArrayHelper\";\nimport {describeBuff, describeBuffValue} from \"./BuffHelper\";\nimport {asPercent} from \"./OutputHelper\";\nimport {Renderable} from \"./Renderable\";\nimport {describeTrait} from \"./TraitHelper\";\n\nconst hasChangingDataVals = function (vals: DataVal[]): boolean {\n    if (!vals.length)\n        return false;\n\n    let previous = vals[0];\n    for (let i = 1; i < vals.length; i++) {\n        if (JSON.stringify(previous) !== JSON.stringify(vals[i]))\n            return true;\n\n        previous = vals[i];\n    }\n\n    return false;\n};\n\nconst hasUniqueValues = function (values: (number | undefined)[]): boolean {\n    return new Set(values).size > 1;\n};\n\nexport function describeFunc(func: Func): Renderable {\n    const isLevel = funcUpdatesByLevel(func),\n        isOvercharge = isLevel ? false : funcUpdatesByOvercharge(func),\n        dataVals = isLevel ? getLevelDataValList(func) : (isOvercharge ? getOverchargeDataValList(func) : func.svals),\n        staticValues = getStaticFieldValues(dataVals);\n\n    const parts: (string | JSX.Element)[] = [],\n        sectionFlags = {\n            chance: true,\n            action: true,\n            amount: true,\n            affects: true,\n            target: true,\n            duration: true,\n            scaling: true,\n        };\n\n    if (sectionFlags.chance && staticValues.Rate && staticValues.Rate !== 1000) {\n        parts.push((staticValues.Rate / 10) + '% Chance to');\n    }\n\n    if (sectionFlags.action) {\n        if (func.funcType === FuncType.ADD_STATE || func.funcType === FuncType.ADD_STATE_SHORT) {\n            parts.push('Apply');\n            func.buffs.forEach((buff, index) => {\n                if (index > 0)\n                    parts.push('&');\n\n                parts.push(<span>\"{describeBuff(buff)}\"</span>);\n            });\n        } else if (func.funcType === FuncType.DAMAGE_NP) {\n            parts.push('Deal damage');\n        } else if (func.funcType === FuncType.DAMAGE_NP_PIERCE) {\n            parts.push('Deal damage that pierces defence');\n        } else if (func.funcType === FuncType.GAIN_HP) {\n            parts.push('Gain HP');\n        } else if (func.funcType === FuncType.GAIN_NP) {\n            parts.push('Charge NP');\n        } else if (func.funcType === FuncType.GAIN_STAR) {\n            parts.push('Gain Critical Stars');\n            sectionFlags.target = false;\n        } else if (func.funcType === FuncType.LOSS_HP_SAFE) {\n            parts.push('Lose HP')\n            sectionFlags.target = false;\n        }\n    }\n\n    if (sectionFlags.amount && staticValues.Value) {\n        if (func.buffs[0]) {\n            parts.push('of ' + describeBuffValue(func.buffs[0], staticValues.Value));\n        } else {\n            parts.push('of ' + describeFuncValue(func, staticValues.Value));\n        }\n    }\n\n    if (sectionFlags.affects && func.functvals.length) {\n        parts.push('for all');\n        func.functvals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<span>\"{describeTrait(trait)}\"</span>);\n        });\n    }\n\n    if (sectionFlags.target) {\n        if (func.funcTargetType === FuncTargetType.ENEMY) {\n            parts.push('to enemy');\n        } else if (func.funcTargetType === FuncTargetType.ENEMY_ALL) {\n            parts.push('to all enemies');\n        } else if (func.funcTargetType === FuncTargetType.PT_ALL) {\n            parts.push('to party');\n        } else if (func.funcTargetType === FuncTargetType.PT_ONE) {\n            parts.push('to party member');\n        } else if (func.funcTargetType === FuncTargetType.PT_OTHER) {\n            parts.push('to party except self');\n        } else if (func.funcTargetType === FuncTargetType.SELF) {\n            parts.push('to self');\n        }\n    }\n\n    if (sectionFlags.duration) {\n        if (staticValues.Count && staticValues.Count > 0 && staticValues.Turn && staticValues.Turn > 0) {\n            const countDesc = staticValues.Count === 1 ? '1 Time' : `${staticValues.Count} Times`,\n                turnDesc = staticValues.Turn === 1 ? '1 Turn' : `${staticValues.Turn} Turns`;\n\n            parts.push(`(${turnDesc}, ${countDesc})`);\n        } else if (staticValues.Turn && staticValues.Turn > 0) {\n            parts.push(staticValues.Turn === 1 ? '(1 Turn)' : `(${staticValues.Turn} Turns)`);\n        } else if (staticValues.Count && staticValues.Count > 0) {\n            parts.push(staticValues.Count === 1 ? '(1 Time)' : `(${staticValues.Count} Times)`);\n        }\n    }\n\n    if (sectionFlags.scaling) {\n        if (isLevel) {\n            parts.push('<LEVEL>');\n        }\n\n        if (isOvercharge) {\n            parts.push('<OVERCHARGE>');\n        }\n    }\n\n    return (\n        <span>\n            {joinElements(parts, ' ').map(\n                (element, index) => <span key={index}>{element}</span>\n            )}\n        </span>\n    );\n}\n\nexport function describeFuncValue(func: Func, value: number): string {\n    switch (func.funcType) {\n        case FuncType.ADD_STATE:\n        case FuncType.ADD_STATE_SHORT:\n            return describeBuffValue(func.buffs[0], value);\n        case FuncType.DAMAGE_NP:\n        case FuncType.DAMAGE_NP_PIERCE:\n            return asPercent(value, 1);\n        case FuncType.GAIN_NP:\n        case FuncType.LOSS_NP:\n            return asPercent(value, 2);\n        default:\n            return value.toString();\n    }\n}\n\nexport function describeMutators(func: Func): Renderable[] {\n    const isLevel = funcUpdatesByLevel(func),\n        isOvercharge = isLevel ? false : funcUpdatesByOvercharge(func),\n        dataVals = isLevel ? getLevelDataValList(func) : (isOvercharge ? getOverchargeDataValList(func) : func.svals),\n        mutatingVals = getMutatingFieldValues(dataVals);\n\n    return mutatingVals.map(mutatingVal => {\n        let parts: string[] = [];\n\n        if (mutatingVal.Value) {\n            parts.push(describeFuncValue(func, mutatingVal.Value));\n        }\n\n        return parts.join(' ');\n    }).filter(description => description.length);\n}\n\nexport function funcUpdatesByLevel(func: Func): boolean {\n    return hasChangingDataVals(getLevelDataValList(func));\n}\n\nexport function funcUpdatesByOvercharge(func: Func): boolean {\n    return hasChangingDataVals(getOverchargeDataValList(func));\n}\n\nexport function getLevelDataValList(func: Func): DataVal[] {\n    return func.svals;\n}\n\nexport function getMutatingFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return hasUniqueValues(values);\n    });\n}\n\nexport function getMutatingFieldValues(vals: DataVal[]): DataVal[] {\n    if (!vals.length)\n        return [];\n\n    const fields = getMutatingFieldNames(vals);\n\n    return vals.map(val => {\n        const mutatingVals: DataVal = {};\n\n        for (let x in fields) {\n            mutatingVals[fields[x]] = val[fields[x]];\n        }\n\n        return mutatingVals;\n    });\n}\n\nexport function getOverchargeDataValList(func: Func): DataVal[] {\n    let vals = [func.svals[0]];\n\n    if (func.svals2)\n        vals.push(func.svals2[0]);\n    if (func.svals3)\n        vals.push(func.svals3[0]);\n    if (func.svals4)\n        vals.push(func.svals4[0]);\n    if (func.svals5)\n        vals.push(func.svals5[0]);\n\n    return vals.filter(val => val !== undefined);\n}\n\nexport function getStaticFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return !hasUniqueValues(values);\n    });\n}\n\nexport function getStaticFieldValues(vals: DataVal[]): DataVal {\n    if (!vals.length)\n        return {};\n\n    const fields = getStaticFieldNames(vals),\n        staticVals: DataVal = {};\n\n    for (let x in fields) {\n        staticVals[fields[x]] = vals[0][fields[x]];\n    }\n\n    return staticVals;\n}\n","export function describeQuestType(questId?: number, questPhase?: number): string {\n    const prefix = Math.floor((questId ?? 0) / 1000000);\n\n    switch (prefix) {\n        case 91:\n            return 'Interlude';\n        case 94:\n            return 'Strengthening';\n        default:\n            return 'Main Quest';\n    }\n}\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Alert, Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport {default as ServantNoblePhantasmData} from \"../../Api/Data/NoblePhantasm\";\nimport {describeFunc, describeMutators} from \"../../Helper/FuncHelper\";\nimport {describeQuestType} from \"../../Helper/QuestHelper\";\n\ninterface IProps {\n    noblePhantasm: ServantNoblePhantasmData;\n}\n\nclass ServantNoblePhantasm extends React.Component<IProps> {\n    render() {\n        const np = this.props.noblePhantasm;\n\n        return (\n            <div>\n                <h3>\n                    {np.name}\n                    &nbsp;\n                    <Link to={`/noble-phantasm/${np.id}`}>\n                        <FontAwesomeIcon icon={faShare}/>\n                    </Link>\n                </h3>\n\n                {np.condQuestId && np.condQuestPhase ? (\n                    <Alert variant={'primary'}>\n                        <Link to={`/quest/${np.condQuestId}/${np.condQuestPhase}`}>\n                            Available after {describeQuestType(np.condQuestId, np.condQuestPhase)}\n                            &nbsp;\n                            <FontAwesomeIcon icon={faShare}/>\n                        </Link>\n                    </Alert>\n                ): null}\n\n                <p>{np.detail}</p>\n\n                <Table responsive>\n                    <thead>\n                    <tr>\n                        <th>Effect</th>\n                        <th>1</th>\n                        <th>2</th>\n                        <th>3</th>\n                        <th>4</th>\n                        <th>5</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {np.functions.map((func, index) => {\n                        let funcDescription = describeFunc(func),\n                            mutatingDescriptions = describeMutators(func);\n\n                        for (let i = 0; i < 5; i++) {\n                            if (!mutatingDescriptions[i])\n                                mutatingDescriptions.push('-');\n                        }\n\n                        return (\n                            <tr key={index}>\n                                <td>\n                                    {funcDescription}\n                                    &nbsp;\n                                    <Link to={`/func/${func.funcId}`}>\n                                        <FontAwesomeIcon icon={faShare}/>\n                                    </Link>\n                                </td>\n                                {mutatingDescriptions.map((description, index) => {\n                                    return (\n                                        <td key={index}>{description}</td>\n                                    );\n                                })}\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default ServantNoblePhantasm;\n","import React from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport ServantListEntity from \"../../Api/Data/ServantListEntity\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps extends RouteComponentProps {\n    id: number;\n    servants: ServantListEntity[];\n}\n\nclass ServantPicker extends React.Component<IProps> {\n    private changeServant(id: number) {\n        this.props.history.push(`/servant/${id}`);\n    }\n\n    render() {\n        return (\n            <div>\n                Jump to:\n                <FormControl as={\"select\"} custom\n                             onChange={(ev: Event) => {\n                                 this.changeServant(parseInt(ev.target.value));\n                             }}\n                             value={this.props.id}>\n                    {this.props.servants.map((servant, index) => {\n                        return (\n                            <option key={index} value={servant.collectionNo}>\n                                {servant.name}\n                            </option>\n                        );\n                    })}\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ServantPicker);\n","import React from \"react\";\nimport ServantEntity from \"../../Api/Data/ServantEntity\";\n\ninterface IProps {\n    servant: ServantEntity;\n}\n\nclass ServantPortrait extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                <img alt={this.props.servant.name}\n                     className={'profile'}\n                     src={this.props.servant.extraAssets.charaGraph.ascension[\"1\"]}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantPortrait;\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Alert, Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport Skill from \"../../Api/Data/Skill\";\nimport {describeFunc, describeMutators} from \"../../Helper/FuncHelper\";\nimport {describeQuestType} from \"../../Helper/QuestHelper\";\n\ninterface IProps {\n    skill: Skill;\n}\n\nclass ServantSkill extends React.Component<IProps, any> {\n    render() {\n        const skill = this.props.skill;\n        return (\n            <div>\n                <h3>\n                    {skill.name}\n                    &nbsp;\n                    <Link to={`/skill/${skill.id}`}>\n                        <FontAwesomeIcon icon={faShare}/>\n                    </Link>\n                </h3>\n\n                {skill.condQuestId && skill.condQuestPhase ? (\n                    <Alert variant={'primary'}>\n                        <Link to={`/quest/${skill.condQuestId}/${skill.condQuestPhase}`}>\n                            Available after {describeQuestType(skill.condQuestId, skill.condQuestPhase)}\n                            &nbsp;\n                            <FontAwesomeIcon icon={faShare}/>\n                        </Link>\n                    </Alert>\n                ): null}\n\n                <p>{skill.detail}</p>\n\n                <Table responsive>\n                    <thead>\n                    <tr>\n                        <th>Effect</th>\n                        <th>1</th>\n                        <th>2</th>\n                        <th>3</th>\n                        <th>4</th>\n                        <th>5</th>\n                        <th>6</th>\n                        <th>7</th>\n                        <th>8</th>\n                        <th>9</th>\n                        <th>10</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {skill.functions.map((func, index) => {\n                        let funcDescription = describeFunc(func),\n                            mutatingDescriptions = describeMutators(func);\n\n                        for (let i = 0; i < 10; i++) {\n                            if (!mutatingDescriptions[i])\n                                mutatingDescriptions.push('-');\n                        }\n\n                        return (\n                            <tr key={index}>\n                                <td>\n                                    {funcDescription}\n                                    &nbsp;\n                                    <Link to={`/func/${func.funcId}`}>\n                                        <FontAwesomeIcon icon={faShare}/>\n                                    </Link>\n                                </td>\n                                {mutatingDescriptions.map((description, index) => {\n                                    return (\n                                        <td key={index}>{description}</td>\n                                    );\n                                })}\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default ServantSkill;\n","import React from \"react\";\nimport Trait from \"../../Api/Data/Trait\";\nimport {joinElements} from \"../../Helper/ArrayHelper\";\nimport {describeTrait} from \"../../Helper/TraitHelper\";\n\ninterface IProps {\n    traits: Trait[];\n}\n\nclass ServantTraits extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {joinElements(\n                    this.props.traits.map(trait => describeTrait(trait)),\n                    ', '\n                ).map(\n                    (element, index) => <span key={index}>{element}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ServantTraits;\n","import React from \"react\";\nimport {Col, Row, Tab, Tabs} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport ServantEntity from \"../Api/Data/ServantEntity\";\nimport ServantListEntity from \"../Api/Data/ServantListEntity\";\nimport Loading from \"../Component/Loading\";\nimport ServantMainData from \"./Servant/ServantMainData\";\nimport ServantMiscData from \"./Servant/ServantMiscData\";\nimport ServantNoblePhantasm from \"./Servant/ServantNoblePhantasm\";\nimport ServantPicker from \"./Servant/ServantPicker\";\nimport ServantPortrait from \"./Servant/ServantPortrait\";\nimport ServantSkill from \"./Servant/ServantSkill\";\nimport ServantTraits from \"./Servant/ServantTraits\";\n\nimport './ServantPage.css';\n\ninterface IProp {\n    id: string;\n}\n\ninterface IState {\n    loading: boolean;\n    id: number;\n    servants: ServantListEntity[];\n    servant?: ServantEntity;\n}\n\nclass ServantPage extends React.Component<IProp, IState> {\n    constructor(props: IProp) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            id: parseInt(this.props.id),\n            servants: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadServant();\n    }\n\n    async loadServant() {\n        let [servants, servant] = await Promise.all([\n            Connection.servantList(),\n            Connection.servant(this.state.id)\n        ]);\n\n        this.setState({\n            loading: false,\n            servants,\n            servant\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.servant)\n            return <Loading/>;\n\n        return (\n            <div id={'servant'}>\n                <ServantPicker servants={this.state.servants} id={this.state.servant.collectionNo}/>\n                <hr/>\n\n                <Row>\n                    <Col xs={{span: 12, order: 2}} lg={{span: 6, order: 1}}>\n                        <ServantMainData servant={this.state.servant}/>\n                    </Col>\n                    <Col xs={{span: 12, order: 1}} lg={{span: 6, order: 2}}>\n                        <ServantPortrait servant={this.state.servant}/>\n                    </Col>\n                </Row>\n\n                <Tabs id={'servant-tabs'} defaultActiveKey={'skill-1'} transition={false}>\n                    <Tab eventKey={'skill-1'} title={'Skill 1'}>\n                        <br/>\n                        {this.state.servant.skills\n                            .filter(skill => skill.num === 1)\n                            .map((skill, index) => {\n                                return <ServantSkill key={index} skill={skill}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'skill-2'} title={'Skill 2'}>\n                        <br/>\n                        {this.state.servant.skills\n                            .filter(skill => skill.num === 2)\n                            .map((skill, index) => {\n                                return <ServantSkill key={index} skill={skill}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'skill-3'} title={'Skill 3'}>\n                        <br/>\n                        {this.state.servant.skills\n                            .filter(skill => skill.num === 3)\n                            .map((skill, index) => {\n                                return <ServantSkill key={index} skill={skill}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'nps'} title={'Noble Phantasms'}>\n                        <br/>\n                        {this.state.servant.noblePhantasms\n                            .filter(noblePhantasm => noblePhantasm.functions.length > 0)\n                            .map((noblePhantasm, index) => {\n                                return <ServantNoblePhantasm key={index} noblePhantasm={noblePhantasm}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'traits'} title={'Traits'}>\n                        <br/>\n                        <ServantTraits traits={this.state.servant.traits}/>\n                    </Tab>\n                    <Tab eventKey={'misc'} title={'Misc'}>\n                        <br/>\n                        <ServantMiscData servant={this.state.servant}/>\n                    </Tab>\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default ServantPage;\n","import React from \"react\";\n\ninterface IProps {\n    rarity: number;\n}\n\nconst fillChars = function (count: number, character: string): string {\n    return (new Array(count)).fill(null).map(v => character).join('');\n}\n\nclass RarityStars extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {\n                    fillChars(this.props.rarity, '★')\n                    + fillChars(5 - this.props.rarity, '☆')\n                }\n            </div>\n        );\n    }\n}\n\nexport default RarityStars;\n","import React from \"react\";\n\ninterface IProps {\n    rarity: number;\n    location: string;\n    height?: number;\n}\n\nclass ServantThumbnail extends React.Component<IProps> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location}\n                 style={this.props.height ? {height: this.props.height} : undefined}/>\n        );\n    }\n\n}\n\nexport default ServantThumbnail;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport ServantListEntity from \"../Api/Data/ServantListEntity\";\nimport ClassIcon from \"../Component/ClassIcon\";\nimport Loading from \"../Component/Loading\";\nimport RarityStars from \"../Component/RarityStars\";\nimport ServantThumbnail from \"../Component/ServantThumbnail\";\n\nimport './ServantsPage.css';\n\ninterface IProps {\n}\n\ninterface IState {\n    loading: boolean;\n    servants: ServantListEntity[];\n}\n\nclass ServantsPage extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            servants: [],\n        };\n    }\n\n    componentDidMount() {\n        Connection.servantList().then(servantList => {\n            this.setState({\n                loading: false,\n                servants: servantList\n            });\n        });\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading/>\n\n        return (\n            <div id=\"servants\">\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th style={{textAlign: \"center\", width: '1px'}}>#</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Class</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Thumbnail</th>\n                        <th>Name</th>\n                        <th>Rarity</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.servants.map((servant, index) => {\n                        return <tr key={index}>\n                            <td align={\"center\"}>\n                                <Link to={`/servant/${servant.collectionNo}`}>\n                                    {servant.collectionNo}\n                                </Link>\n                            </td>\n                            <td align={\"center\"}>\n                                <ClassIcon className={servant.className} rarity={servant.rarity} height={50} />\n                            </td>\n                            <td align={\"center\"}>\n                                <Link to={`/servant/${servant.collectionNo}`}>\n                                    <ServantThumbnail rarity={servant.rarity} location={servant.face} height={50}/>\n                                </Link>\n                            </td>\n                            <td>\n                                <Link to={`/servant/${servant.collectionNo}`}>\n                                    {servant.name}\n                                </Link>\n                            </td>\n                            <td>\n                                <RarityStars rarity={servant.rarity}/>\n                            </td>\n                        </tr>\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n\n}\n\nexport default ServantsPage;\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Skill from \"../Api/Data/Skill\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport DataTable from \"../Component/DataTable\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\n\ninterface IProps {\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    skill?: Skill;\n}\n\nclass SkillPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.loadSkill();\n    }\n\n    async loadSkill() {\n        const skill = await Connection.skill(this.props.id);\n\n        this.setState({\n            loading: false,\n            skill: skill,\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.skill)\n            return <Loading/>;\n\n        const skill = this.state.skill;\n\n        return (\n            <div>\n                <h1>\n                    <BuffIcon location={skill.icon} height={48}/>\n                    &nbsp;\n                    {skill.name}\n                </h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={skill}/>,\n                    \"ID\": skill.id,\n                    \"Name\": skill.name,\n                    \"Detail\": skill.detail,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default SkillPage;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport {Container} from \"react-bootstrap\";\nimport {HashRouter as Router, Route, Switch,} from \"react-router-dom\";\nimport Navigation from \"./Component/Navigation\";\nimport BuffPage from \"./Page/BuffPage\";\nimport FuncPage from './Page/FuncPage';\nimport NoblePhantasmPage from \"./Page/NoblePhantasmPage\";\nimport QuestPage from \"./Page/QuestPage\";\nimport ServantPage from \"./Page/ServantPage\";\nimport ServantsPage from \"./Page/ServantsPage\";\nimport SkillPage from \"./Page/SkillPage\";\nimport Manager from \"./Setting/Manager\";\nimport {LanguageOption, RegionOption} from \"./Setting/Option\";\n\ninterface IState {\n    region: RegionOption,\n    language: LanguageOption,\n}\n\nclass App extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            region: Manager.region(),\n            language: Manager.language(),\n        };\n\n        Manager.onUpdate(() => this.updateSettings());\n    }\n\n    private updateSettings() {\n        this.setState({\n            region: Manager.region(),\n            language: Manager.language(),\n        });\n    }\n\n    render() {\n        return (\n            <Router>\n                <Navigation/>\n                <br/>\n\n                <Container key={`${this.state.region}-${this.state.language}`}>\n                    <Switch>\n                        <Route path=\"/buff/:id\" render={(\n                            props => <BuffPage key={props.match.params.id} id={props.match.params.id}/>\n                        )}/>\n                        <Route path=\"/func/:id\" render={(\n                            props => <FuncPage key={props.match.params.id} id={props.match.params.id}/>\n                        )}/>\n                        <Route path=\"/noble-phantasm/:id\" render={(\n                            props => <NoblePhantasmPage key={props.match.params.id} id={props.match.params.id}/>\n                        )}/>\n                        <Route path=\"/quest/:id/:phase\" render={(\n                            props => (\n                                <QuestPage\n                                    key={`${props.match.params.id}-${props.match.params.phase}`}\n                                    id={props.match.params.id}\n                                    phase={props.match.params.phase}/>\n                            )\n                        )}/>\n                        <Route path=\"/servant/:id\" render={(\n                            props => <ServantPage key={props.match.params.id} id={props.match.params.id}/>\n                        )}/>\n                        <Route path=\"/skill/:id\" render={(\n                            props => <SkillPage key={props.match.params.id} id={props.match.params.id}/>\n                        )}/>\n                        <Route path=\"/servants\" component={ServantsPage}/>\n                        <Route path=\"/\" component={ServantsPage}/>\n                    </Switch>\n                </Container>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}