{"version":3,"sources":["Setting/Option.tsx","Setting/Manager.tsx","Setting/SettingForm.tsx","Component/Navigation.tsx","Api/Connection.tsx","Component/BuffIcon.tsx","Component/DataTable.tsx","Component/Loading.tsx","Helper/ArrayHelper.tsx","Page/BuffPage.tsx","Page/FuncPage.tsx","Page/NoblePhantasmPage.tsx","Helper.tsx","Page/Servant/ServantMiscData.tsx","Api/Data/ClassName.tsx","Api/Data/Func.tsx","Api/Data/Buff.tsx","Component/ClassIcon.tsx","Component/RawDataViewer.tsx","Page/Servant/ServantMainData.tsx","Helper/FuncHelper.tsx","Helper/BuffHelper.tsx","Helper/TraitHelper.tsx","Page/Servant/ServantNoblePhantasm.tsx","Page/Servant/ServantPicker.tsx","Page/Servant/ServantPortrait.tsx","Page/Servant/ServantSkill.tsx","Page/Servant/ServantTraits.tsx","Page/ServantPage.tsx","Component/RarityStars.tsx","Component/ServantThumbnail.tsx","Page/ServantsPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LanguageOption","RegionOption","callbacks","Manager","value","window","localStorage","getItem","language","Object","values","find","v","DEFAULT","region","JP","undefined","setItem","triggerCallbacks","callback","push","forEach","call","SettingForm","props","state","onUpdate","syncSettings","this","setState","setLanguage","setRegion","Form","Group","Label","Control","as","onChange","ev","updateRegion","target","map","updateLanguage","React","Component","Navigation","showSettings","Navbar","bg","variant","expand","Container","to","className","Toggle","Collapse","Nav","NavItem","Link","href","icon","faDiscord","faGithub","Button","onClick","faCog","Modal","show","onHide","hideSettings","Header","closeButton","Title","Body","host","fetch","endpoint","a","axios","get","response","data","option","NA","servantListCache","Map","Connection","id","query","ENGLISH","getCacheableServantList","jp","na","names","entity","name","list","set","BuffIcon","alt","src","location","style","height","verticalAlign","DataTable","header","Table","bordered","hover","keys","key","index","Loading","joinElements","elements","separator","parts","pushElement","element","length","previous","toString","BuffPage","loading","loadBuff","buff","detail","type","vals","trait","FuncPage","loadFunc","func","NoblePhantasmPage","asPercent","ClassName","buffIconPath","deathChanceIcon","hitCountIcon","npGainIcon","starGenIcon","showHits","hits","hit","ServantMiscData","Col","xs","md","lg","servant","hitsDistribution","buster","arts","quick","extra","starAbsorb","starGen","instantDeathChance","npGain","defence","Row","hitsColumn","npGainColumn","miscColumn","FuncType","FuncTargetType","FuncTargetTeam","DataValField","BuffType","classTypes","classIds","SABER","ARCHER","LANCER","RIDER","CASTER","ASSASSIN","BERSERKER","SHIELDER","RULER","ALTER_EGO","AVENGER","ClassIcon","classId","has","rarity","RawDataViewer","showing","cursor","faSearchPlus","size","hide","ServantMainData","collectionNo","cost","gender","attribute","lvMax","hpBase","atkBase","hpMax","atkMax","hasChangingDataVals","i","JSON","stringify","hasUniqueValues","Set","describeFunc","isLevel","funcUpdatesByLevel","isOvercharge","funcUpdatesByOvercharge","staticValues","fields","filter","field","val","getStaticFieldNames","staticVals","x","getStaticFieldValues","getLevelDataValList","getOverchargeDataValList","svals","Rate","funcType","DAMAGE_NP","DAMAGE_NP_PIERCE","ADD_STATE","ADD_STATE_SHORT","buffs","traits","description","DONOT_ACT","describeBuff","GAIN_NP","GAIN_HP","funcTargetType","ENEMY_ALL","PT_ALL","PT_OTHER","SELF","Turn","describeMutators","getMutatingFieldNames","mutatingVals","getMutatingFieldValues","mutatingVal","Value","SUB_SELFDAMAGE","buffIsFlatValue","LOSS_NP","LOSS_HP","svals2","svals3","svals4","svals5","ServantNoblePhantasm","showFunc","np","noblePhantasm","faShare","responsive","functions","funcDescription","mutatingDescriptions","funcId","ServantPicker","history","FormControl","custom","changeServant","parseInt","servants","withRouter","ServantPortrait","extraAssets","charaGraph","ascension","ServantSkill","skill","ServantTraits","describeTrait","ServantPage","loadServant","Promise","all","servantList","span","order","Tabs","defaultActiveKey","transition","Tab","eventKey","title","skills","noblePhantasms","fillChars","count","character","Array","fill","join","RarityStars","ServantThumbnail","ServantsPage","then","striped","textAlign","width","align","face","App","updateSettings","path","render","match","params","component","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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A,E,mCAAAA,Q,cAMAC,K,YAAAA,E,YAAAA,E,cAAAA,E,cAAAA,E,gBAAAA,E,mBAAAA,E,gBAAAA,E,wBAAAA,E,qBAAAA,E,qBAAAA,E,qBAAAA,E,mBAAAA,E,8BAAAA,E,wBAAAA,E,uBAAAA,E,8BAAAA,E,iBAAAA,E,8BAAAA,E,yCAAAA,E,uBAAAA,E,4BAAAA,E,0BAAAA,E,oCAAAA,E,2BAAAA,E,yBAAAA,E,uBAAAA,E,mBAAAA,E,mBAAAA,E,8BAAAA,E,6BAAAA,E,uCAAAA,E,qCAAAA,E,yBAAAA,E,6BAAAA,E,uCAAAA,Q,cC3FAC,K,YAAAA,E,6BAAAA,E,6BAAAA,E,mCAAAA,E,uCAAAA,E,qBAAAA,E,yBAAAA,E,qBAAAA,E,qBAAAA,E,eAAAA,E,mBAAAA,E,qBAAAA,E,yBAAAA,E,uBAAAA,E,uBAAAA,E,yBAAAA,E,6BAAAA,E,qBAAAA,E,qCAAAA,E,yCAAAA,E,6BAAAA,E,iCAAAA,E,+BAAAA,E,+BAAAA,E,sBAAAA,E,iCAAAA,E,wBAAAA,E,6BAAAA,E,iCAAAA,E,2BAAAA,E,+BAAAA,E,yBAAAA,E,qBAAAA,E,yBAAAA,E,yBAAAA,E,+BAAAA,E,+BAAAA,E,YAAAA,E,iBAAAA,E,qCAAAA,E,qCAAAA,E,uBAAAA,E,2BAAAA,E,+BAAAA,E,2BAAAA,E,6BAAAA,E,iCAAAA,E,iCAAAA,E,qBAAAA,E,yBAAAA,E,sBAAAA,E,0BAAAA,E,iCAAAA,E,iCAAAA,E,+BAAAA,E,iCAAAA,E,qCAAAA,E,qCAAAA,E,uCAAAA,E,8CAAAA,E,oDAAAA,E,+BAAAA,E,yCAAAA,E,6BAAAA,E,mBAAAA,E,uBAAAA,E,qBAAAA,E,qBAAAA,E,2CAAAA,E,uCAAAA,E,2CAAAA,E,8BAAAA,E,kCAAAA,E,+CAAAA,E,yCAAAA,E,qCAAAA,E,yCAAAA,E,iCAAAA,E,qCAAAA,E,+BAAAA,E,uBAAAA,E,yCAAAA,E,oCAAAA,E,wCAAAA,E,4CAAAA,E,gDAAAA,E,4CAAAA,E,gDAAAA,E,uBAAAA,E,iCAAAA,E,2CAAAA,E,+CAAAA,E,6CAAAA,E,sDAAAA,E,sDAAAA,E,gDAAAA,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","file":"static/js/main.e3185873.chunk.js","sourcesContent":["export enum LanguageOption {\n    DEFAULT = 'Default',\n    ENGLISH = 'English',\n}\n\nexport enum RegionOption {\n    JP = 'JP',\n    NA = 'NA'\n}\n","import {LanguageOption, RegionOption} from \"./Option\";\n\nconst languageKey = 'language',\n    regionKey = 'region';\n\nconst callbacks: Function[] = [];\n\nclass Manager {\n    static language(): LanguageOption {\n        const value = window.localStorage.getItem(languageKey),\n            language = Object.values(LanguageOption).find(v => v === value);\n\n        return language ?? LanguageOption.DEFAULT;\n    }\n\n    static region(): RegionOption {\n        const value = window.localStorage.getItem(regionKey),\n            region = Object.values(RegionOption).find(v => v === value);\n\n        return region ?? RegionOption.JP;\n    }\n\n    static setLanguage(value: string) {\n        const language = Object.values(LanguageOption).find(v => v === value);\n        if (language === undefined)\n            return;\n\n        window.localStorage.setItem(languageKey, language);\n        Manager.triggerCallbacks();\n    }\n\n    static setRegion(value: string) {\n        const region = Object.values(RegionOption).find(v => v === value);\n        if (region === undefined)\n            return;\n\n        window.localStorage.setItem(regionKey, region);\n        Manager.triggerCallbacks();\n    }\n\n    static onUpdate(callback: Function) {\n        callbacks.push(callback);\n    }\n\n    private static triggerCallbacks()\n    {\n        callbacks.forEach(callback => {\n            callback.call(null);\n        });\n    }\n}\n\nexport default Manager;\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport Manager from \"./Manager\";\nimport {LanguageOption, RegionOption} from \"./Option\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IState {\n    region: RegionOption,\n    language: LanguageOption\n}\n\nclass SettingForm extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            region: Manager.region(),\n            language: Manager.language(),\n        }\n\n        Manager.onUpdate(() => this.syncSettings());\n    }\n\n    private syncSettings() {\n        this.setState({\n            region: Manager.region(),\n            language: Manager.language(),\n        });\n    }\n\n    updateLanguage(value: string) {\n        Manager.setLanguage(value);\n    }\n\n    updateRegion(value: string) {\n        Manager.setRegion(value);\n    }\n\n    render() {\n        return (\n            <div>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Region</Form.Label>\n                        <Form.Control as={'select'} value={this.state.region}\n                                      onChange={(ev: Event) => this.updateRegion(ev.target.value)}>\n                            {Object.values(RegionOption).map(v => (\n                                <option value={v}>{v}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Language</Form.Label>\n                        <Form.Control as={'select'} value={this.state.language}\n                                      onChange={(ev: Event) => this.updateLanguage(ev.target.value)}>\n                            {Object.values(LanguageOption).map(v => (\n                                <option value={v}>{v}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default SettingForm;\n","import {faDiscord, faGithub} from \"@fortawesome/free-brands-svg-icons\";\nimport {faCog} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Button, Container, Modal, Nav, Navbar, NavItem} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport SettingForm from \"../Setting/SettingForm\";\n\ninterface IState {\n    showSettings: boolean;\n}\n\nclass Navigation extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            showSettings: false,\n        };\n    }\n\n    hideSettings() {\n        this.setState({showSettings: false});\n    }\n\n    showSettings() {\n        this.setState({showSettings: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar bg={\"dark\"} variant={'dark'} expand={\"lg\"}>\n                    <Container>\n                        <Link to=\"/\" className={'navbar-brand'}>AA-DB</Link>\n                        <Navbar.Toggle/>\n\n                        <Navbar.Collapse>\n                            <Nav>\n                                <Link to=\"/servants\" className={'nav-link'}>\n                                    <NavItem>Servants</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav className={'ml-auto'}>\n                                <Nav.Link href={'https://discord.gg/TKJmuCR'} target={'_blank'}>\n                                    <FontAwesomeIcon icon={faDiscord}/>\n                                </Nav.Link>\n                                <Nav.Link href={'https://github.com/atlasacademy/aa-db'} target={'_blank'}>\n                                    <FontAwesomeIcon icon={faGithub}/>\n                                </Nav.Link>\n                                <Button variant={\"primary\"} onClick={() => this.showSettings()}>\n                                    <FontAwesomeIcon icon={faCog}/>\n                                </Button>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Container>\n                </Navbar>\n\n                <Modal show={this.state.showSettings} onHide={() => this.hideSettings()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Settings</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <SettingForm/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n\n}\n\nexport default Navigation;\n","import axios from \"axios\";\nimport Manager from \"../Setting/Manager\";\nimport {LanguageOption, RegionOption} from \"../Setting/Option\";\nimport Buff from \"./Data/Buff\";\nimport Func from \"./Data/Func\";\nimport ServantEntity from \"./Data/ServantEntity\";\nimport ServantListEntity from \"./Data/ServantListEntity\";\n\nconst host = 'https://api.atlasacademy.io';\nconst fetch = async function <T>(endpoint: string): Promise<T> {\n    const response = await axios.get<T>(endpoint);\n\n    return response.data;\n}\nconst region = function (option?: RegionOption): string {\n    option = option ?? Manager.region();\n\n    if (option === RegionOption.NA)\n        return 'NA';\n\n    return 'JP';\n}\nconst servantListCache = new Map<RegionOption, ServantListEntity[]>();\n\nclass Connection {\n\n    static buff(id: number): Promise<Buff> {\n        let query = '?reverse=true' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<Buff>(`${host}/nice/${region()}/buff/${id}${query}`);\n    }\n\n    static func(id: number): Promise<Func> {\n        let query = '?reverse=true' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<Func>(`${host}/nice/${region()}/function/${id}${query}`);\n    }\n\n    public static servant(id: number): Promise<ServantEntity> {\n        let query = '?lore=true' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<ServantEntity>(`${host}/nice/${region()}/servant/${id}${query}`);\n    }\n\n    public static async servantList(): Promise<ServantListEntity[]> {\n        if (Manager.region() === RegionOption.NA) {\n            return Connection.getCacheableServantList(RegionOption.NA);\n        } else if (Manager.region() === RegionOption.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableServantList(RegionOption.JP);\n        }\n\n        const jp = await Connection.getCacheableServantList(RegionOption.JP),\n            na = await Connection.getCacheableServantList(RegionOption.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<ServantListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    private static async getCacheableServantList(option: RegionOption): Promise<ServantListEntity[]> {\n        let list = servantListCache.get(option);\n        if (list !== undefined)\n            return list;\n\n        list = await fetch<ServantListEntity[]>(`${host}/export/${region(option)}/basic_servant.json`);\n        servantListCache.set(option, list);\n\n        return list;\n    }\n}\n\nexport default Connection;\n","import React from \"react\";\n\ninterface IProp {\n    location: string;\n    height?: number;\n}\n\nclass BuffIcon extends React.Component<IProp> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location} style={{\n                height: this.props.height ?? 25,\n                verticalAlign: \"bottom\",\n            }}/>\n        );\n    }\n\n}\n\nexport default BuffIcon;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\n\nimport \"./DataTable.css\";\nimport {Renderable} from \"../Helper/Renderable\";\n\ninterface IProp {\n    header?: JSX.Element | string,\n    data: {\n        [key: string]: Renderable;\n    }\n}\n\nclass DataTable extends React.Component<IProp> {\n    render() {\n        return (\n            <div>\n                {this.props.header ? (\n                    <div className={'data-header'}>\n                        {this.props.header}\n                    </div>\n                ) : null}\n\n                <Table bordered hover className={'data-table'}>\n                    <tbody>\n                    {Object.keys(this.props.data).map((key, index) => {\n                        return (\n                            <tr key={index}>\n                                <th>{key}</th>\n                                <td>{this.props.data[key]}</td>\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default DataTable;\n","import React from \"react\";\n\nfunction Loading() {\n    return (\n        <div>\n            Loading ...\n        </div>\n    );\n}\n\nexport default Loading;\n","import {Renderable} from \"./Renderable\";\n\nexport function joinElements(elements: Renderable[], separator: Renderable): Renderable[] {\n    const parts: Renderable[] = [],\n        pushElement = function (element: Renderable) {\n            if (typeof element === 'object') {\n                parts.push(element);\n                return;\n            }\n\n            if (parts.length === 0) {\n                parts.push(element.toString());\n                return;\n            }\n\n            const previous = parts[parts.length - 1];\n            if (typeof previous !== 'string') {\n                parts.push(element.toString());\n                return;\n            }\n\n            parts[parts.length - 1] = previous + element.toString();\n        };\n\n    elements.forEach((element, index) => {\n        if (index > 0)\n            pushElement(separator);\n\n        pushElement(element);\n    });\n\n    return parts;\n}\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Buff from \"../Api/Data/Buff\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport DataTable from \"../Component/DataTable\";\nimport Loading from \"../Component/Loading\";\nimport {joinElements} from \"../Helper/ArrayHelper\";\n\ninterface IProps {\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    buff?: Buff;\n}\n\nclass BuffPage extends React.Component<IProps, IState>{\n    constructor(props:IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.loadBuff();\n    }\n\n    async loadBuff() {\n        const buff = await Connection.buff(this.props.id);\n\n        this.setState({\n            loading: false,\n            buff: buff,\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.buff)\n            return <Loading/>;\n\n        const buff = this.state.buff;\n\n        return (\n            <div>\n                <h1>\n                    <BuffIcon location={buff.icon} height={48}/>\n                    &nbsp;\n                    {buff.name}\n                </h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"ID\": buff.id,\n                    \"Name\": buff.name,\n                    \"Detail\": buff.detail,\n                    \"Type\": buff.type,\n                    \"Gained Traits\": (\n                        <div>\n                            {joinElements(buff.vals.map(trait => trait.name), ', ')}\n                        </div>\n                    ),\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default BuffPage;\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Func from \"../Api/Data/Func\";\nimport Loading from \"../Component/Loading\";\n\ninterface IProps {\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    func?: Func;\n}\n\nclass FuncPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.loadFunc();\n    }\n\n    async loadFunc() {\n        const func = await Connection.func(this.props.id);\n\n        this.setState({\n            loading: false,\n            func: func,\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.func)\n            return <Loading/>;\n\n        return (\n            <div>\n                <h1>Function: {this.props.id}</h1>\n                <br/>\n\n\n            </div>\n        );\n    }\n}\n\nexport default FuncPage;\n","import React from \"react\";\n\ninterface IProps {\n    id: number;\n}\n\nclass NoblePhantasmPage extends React.Component<IProps, any> {\n    render() {\n        return (\n            <div>\n                Noble Phantasm: {this.props.id}\n            </div>\n        );\n    }\n}\n\nexport default NoblePhantasmPage;\n","export function asPercent(value: number | undefined): string {\n    const decimal = (value ?? 0) / 10;\n\n    return `${decimal}%`;\n}\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport ServantEntity from \"../../Api/Data/ServantEntity\";\nimport BuffIcon from \"../../Component/BuffIcon\";\nimport DataTable from \"../../Component/DataTable\";\nimport {asPercent} from \"../../Helper\";\n\nconst buffIconPath = 'https://assets.atlasacademy.io/GameData/JP/BuffIcons',\n    deathChanceIcon = `${buffIconPath}/bufficon_337.png`,\n    hitCountIcon = `${buffIconPath}/bufficon_349.png`,\n    npGainIcon = `${buffIconPath}/bufficon_303.png`,\n    starGenIcon = `${buffIconPath}/bufficon_310.png`,\n    showHits = function (hits: number[] | undefined): JSX.Element | string {\n        if (hits === undefined)\n            return '';\n\n        return <span>\n            {hits.map((hit, index) => {\n                return (index > 0 ? ', ' : '') + hit + '%';\n            })}\n            &nbsp;-&nbsp;\n            {hits.length} Hits\n        </span>\n    };\n\ninterface IProps {\n    servant: ServantEntity;\n}\n\nclass ServantMiscData extends React.Component<IProps> {\n    private hitsColumn() {\n        return (\n            <Col xs={12} md={12} lg={4}>\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={hitCountIcon}/>\n                            &nbsp;\n                            Hit Count\n                        </div>\n                    )}\n                    data={{\n                        \"Buster\": showHits(this.props.servant.hitsDistribution.buster),\n                        \"Arts\": showHits(this.props.servant.hitsDistribution.arts),\n                        \"Quick\": showHits(this.props.servant.hitsDistribution.quick),\n                        \"Extra\": showHits(this.props.servant.hitsDistribution.extra),\n                    }}/>\n            </Col>\n        );\n    }\n\n    private miscColumn() {\n        return (\n            <Col xs={12} md={12} lg={4}>\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={starGenIcon}/>&nbsp;Crit Stars\n                        </div>\n                    )}\n                    data={{\n                        \"Star Absorb\": this.props.servant.starAbsorb,\n                        \"Star Gen\": asPercent(this.props.servant.starGen),\n                    }}/>\n\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={deathChanceIcon}/>&nbsp;Instant Death\n                        </div>\n                    )}\n                    data={{\n                        \"Death Chance\": asPercent(this.props.servant.instantDeathChance),\n                    }}/>\n            </Col>\n        );\n    }\n\n    private npGainColumn() {\n        return (\n            <Col xs={12} md={12} lg={4}>\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={npGainIcon}/>&nbsp;NP Gain\n                        </div>\n                    )}\n                    data={{\n                        \"Buster\": asPercent(this.props.servant.npGain.buster),\n                        \"Arts\": asPercent(this.props.servant.npGain.arts),\n                        \"Quick\": asPercent(this.props.servant.npGain.quick),\n                        \"Extra\": asPercent(this.props.servant.npGain.extra),\n                        \"Defense\": asPercent(this.props.servant.npGain.defence),\n                    }}/>\n            </Col>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    {this.hitsColumn()}\n                    {this.npGainColumn()}\n                    {this.miscColumn()}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default ServantMiscData;\n","enum ClassName {\n    SABER = \"saber\",\n    ARCHER = \"archer\",\n    LANCER = \"lancer\",\n    RIDER = \"rider\",\n    CASTER = \"caster\",\n    ASSASSIN = \"assassin\",\n    BERSERKER = \"berserker\",\n    SHIELDER = \"shielder\",\n    RULER = \"ruler\",\n    ALTER_EGO = \"alterEgo\",\n    AVENGER = \"avenger\",\n    GRAND_CASTER = \"grandCaster\",\n    BEAST_II = \"beastII\",\n    BEAST_I = \"beastI\",\n    MOON_CANCER = \"moonCancer\",\n    BEAST_IIIR = \"beastIIIR\",\n    FOREIGNER = \"foreigner\",\n    BEAST_IIIL = \"beastIIIL\",\n    BEAST_UNKNOWN = \"beastUnknown\",\n    ALL = \"ALL\",\n}\n\nexport default ClassName;\n","import Buff from \"./Buff\";\nimport Trait from \"./Trait\";\n\nexport enum FuncType {\n    NONE = \"none\",\n    ADD_STATE = \"addState\",\n    SUB_STATE = \"subState\",\n    DAMAGE = \"damage\",\n    DAMAGE_NP = \"damageNp\",\n    GAIN_STAR = \"gainStar\",\n    GAIN_HP = \"gainHp\",\n    GAIN_NP = \"gainNp\",\n    LOSS_NP = \"lossNp\",\n    SHORTEN_SKILL = \"shortenSkill\",\n    EXTEND_SKILL = \"extendSkill\",\n    RELEASE_STATE = \"releaseState\",\n    LOSS_HP = \"lossHp\",\n    INSTANT_DEATH = \"instantDeath\",\n    DAMAGE_NP_PIERCE = \"damageNpPierce\",\n    DAMAGE_NP_INDIVIDUAL = \"damageNpIndividual\",\n    ADD_STATE_SHORT = \"addStateShort\",\n    GAIN_HP_PER = \"gainHpPer\",\n    DAMAGE_NP_STATE_INDIVIDUAL = \"damageNpStateIndividual\",\n    HASTEN_NPTURN = \"hastenNpturn\",\n    DELAY_NPTURN = \"delayNpturn\",\n    DAMAGE_NP_HPRATIO_HIGH = \"damageNpHpratioHigh\",\n    DAMAGE_NP_HPRATIO_LOW = \"damageNpHpratioLow\",\n    CARD_RESET = \"cardReset\",\n    REPLACE_MEMBER = \"replaceMember\",\n    LOSS_HP_SAFE = \"lossHpSafe\",\n    DAMAGE_NP_COUNTER = \"damageNpCounter\",\n    DAMAGE_NP_STATE_INDIVIDUAL_FIX = \"damageNpStateIndividualFix\",\n    DAMAGE_NP_SAFE = \"damageNpSafe\",\n    CALL_SERVANT = \"callServant\",\n    PT_SHUFFLE = \"ptShuffle\",\n    LOSS_STAR = \"lossStar\",\n    CHANGE_SERVANT = \"changeServant\",\n    CHANGE_BG = \"changeBg\",\n    DAMAGE_VALUE = \"damageValue\",\n    WITHDRAW = \"withdraw\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    SHORTEN_BUFFTURN = \"shortenBuffturn\",\n    EXTEND_BUFFTURN = \"extendBuffturn\",\n    SHORTEN_BUFFCOUNT = \"shortenBuffcount\",\n    EXTEND_BUFFCOUNT = \"extendBuffcount\",\n    CHANGE_BGM = \"changeBgm\",\n    DISPLAY_BUFFSTRING = \"displayBuffstring\",\n    EXP_UP = \"expUp\",\n    QP_UP = \"qpUp\",\n    DROP_UP = \"dropUp\",\n    FRIEND_POINT_UP = \"friendPointUp\",\n    EVENT_DROP_UP = \"eventDropUp\",\n    EVENT_DROP_RATE_UP = \"eventDropRateUp\",\n    EVENT_POINT_UP = \"eventPointUp\",\n    EVENT_POINT_RATE_UP = \"eventPointRateUp\",\n    TRANSFORM_SERVANT = \"transformServant\",\n    QP_DROP_UP = \"qpDropUp\",\n    SERVANT_FRIENDSHIP_UP = \"servantFriendshipUp\",\n    USER_EQUIP_EXP_UP = \"userEquipExpUp\",\n    CLASS_DROP_UP = \"classDropUp\",\n    ENEMY_ENCOUNT_COPY_RATE_UP = \"enemyEncountCopyRateUp\",\n    ENEMY_ENCOUNT_RATE_UP = \"enemyEncountRateUp\",\n    ENEMY_PROB_DOWN = \"enemyProbDown\",\n}\n\nexport enum FuncTargetType {\n    SELF = \"self\",\n    PT_ONE = \"ptOne\",\n    PT_ANOTHER = \"ptAnother\",\n    PT_ALL = \"ptAll\",\n    ENEMY = \"enemy\",\n    ENEMY_ANOTHER = \"enemyAnother\",\n    ENEMY_ALL = \"enemyAll\",\n    PT_FULL = \"ptFull\",\n    ENEMY_FULL = \"enemyFull\",\n    PT_OTHER = \"ptOther\",\n    PT_ONE_OTHER = \"ptOneOther\",\n    PT_RANDOM = \"ptRandom\",\n    ENEMY_OTHER = \"enemyOther\",\n    ENEMY_RANDOM = \"enemyRandom\",\n    PT_OTHER_FULL = \"ptOtherFull\",\n    ENEMY_OTHER_FULL = \"enemyOtherFull\",\n    PTSELECT_ONE_SUB = \"ptselectOneSub\",\n    PTSELECT_SUB = \"ptselectSub\",\n    PT_ONE_ANOTHER_RANDOM = \"ptOneAnotherRandom\",\n}\n\nexport enum FuncTargetTeam {\n    PLAYER = \"player\",\n    ENEMY = \"enemy\",\n    PLAYER_AND_ENEMY = \"playerAndEnemy\",\n}\n\nexport enum DataValField {\n    RATE = \"Rate\",\n    TURN = \"Turn\",\n    COUNT = \"Count\",\n    VALUE = \"Value\",\n    VALUE2 = \"Value2\",\n    USE_RATE = \"UseRate\",\n    TARGET = \"Target\",\n    CORRECTION = \"Correction\",\n    PARAM_ADD = \"ParamAdd\",\n    PARAM_MAX = \"ParamMax\",\n    HIDE_MISS = \"HideMiss\",\n    ON_FIELD = \"OnField\",\n    HIDE_NO_EFFECT = \"HideNoEffect\",\n    UNAFFECTED = \"Unaffected\",\n    SHOW_STATE = \"ShowState\",\n    AURA_EFFECT_ID = \"AuraEffectId\",\n    ACT_SET = \"ActSet\",\n    ACT_SET_WEIGHT = \"ActSetWeight\",\n    SHOW_QUEST_NO_EFFECT = \"ShowQuestNoEffect\",\n    CHECK_DEAD = \"CheckDead\",\n    RATIO_HP_HIGH = \"RatioHPHigh\",\n    RATIO_HP_LOW = \"RatioHPLow\",\n    SET_PASSIVE_FRAME = \"SetPassiveFrame\",\n    PROC_PASSIVE = \"ProcPassive\",\n    PROC_ACTIVE = \"ProcActive\",\n    HIDE_PARAM = \"HideParam\",\n    SKILL_ID = \"SkillID\",\n    SKILL_LV = \"SkillLV\",\n    SHOW_CARD_ONLY = \"ShowCardOnly\",\n    EFFECT_SUMMON = \"EffectSummon\",\n    RATIO_HP_RANGE_HIGH = \"RatioHPRangeHigh\",\n    RATIO_HP_RANGE_LOW = \"RatioHPRangeLow\",\n    TARGET_LIST = \"TargetList\",\n    OPPONENT_ONLY = \"OpponentOnly\",\n    TARGET_RARITY_LIST = \"TargetRarityList\",\n}\n\nexport type DataVal = {\n    [key in DataValField]?: number;\n}\n\nexport default interface Func {\n    funcId: number;\n    funcType: FuncType;\n    funcTargetType: FuncTargetType;\n    funcTargetTeam: FuncTargetTeam;\n    funcPopupText: string;\n    funcPopupIcon: string;\n    functvals: Trait[];\n    funcquestTvals: number[];\n    buffs: Buff[];\n    svals: DataVal[];\n    svals2?: DataVal[];\n    svals3?: DataVal[];\n    svals4?: DataVal[];\n    svals5?: DataVal[];\n}\n","import Trait from \"./Trait\";\n\nexport enum BuffType {\n    NONE = \"none\",\n    UP_COMMANDATK = \"upCommandatk\",\n    UP_STARWEIGHT = \"upStarweight\",\n    UP_CRITICALPOINT = \"upCriticalpoint\",\n    DOWN_CRITICALPOINT = \"downCriticalpoint\",\n    REGAIN_NP = \"regainNp\",\n    REGAIN_STAR = \"regainStar\",\n    REGAIN_HP = \"regainHp\",\n    REDUCE_HP = \"reduceHp\",\n    UP_ATK = \"upAtk\",\n    DOWN_ATK = \"downAtk\",\n    UP_DAMAGE = \"upDamage\",\n    DOWN_DAMAGE = \"downDamage\",\n    ADD_DAMAGE = \"addDamage\",\n    SUB_DAMAGE = \"subDamage\",\n    UP_NPDAMAGE = \"upNpdamage\",\n    DOWN_NPDAMAGE = \"downNpdamage\",\n    UP_DROPNP = \"upDropnp\",\n    UP_CRITICALDAMAGE = \"upCriticaldamage\",\n    DOWN_CRITICALDAMAGE = \"downCriticaldamage\",\n    UP_SELFDAMAGE = \"upSelfdamage\",\n    DOWN_SELFDAMAGE = \"downSelfdamage\",\n    ADD_SELFDAMAGE = \"addSelfdamage\",\n    SUB_SELFDAMAGE = \"subSelfdamage\",\n    AVOIDANCE = \"avoidance\",\n    BREAK_AVOIDANCE = \"breakAvoidance\",\n    INVINCIBLE = \"invincible\",\n    UP_GRANTSTATE = \"upGrantstate\",\n    DOWN_GRANTSTATE = \"downGrantstate\",\n    UP_TOLERANCE = \"upTolerance\",\n    DOWN_TOLERANCE = \"downTolerance\",\n    AVOID_STATE = \"avoidState\",\n    DONOT_ACT = \"donotAct\",\n    DONOT_SKILL = \"donotSkill\",\n    DONOT_NOBLE = \"donotNoble\",\n    DONOT_RECOVERY = \"donotRecovery\",\n    DISABLE_GENDER = \"disableGender\",\n    GUTS = \"guts\",\n    UP_HATE = \"upHate\",\n    ADD_INDIVIDUALITY = \"addIndividuality\",\n    SUB_INDIVIDUALITY = \"subIndividuality\",\n    UP_DEFENCE = \"upDefence\",\n    DOWN_DEFENCE = \"downDefence\",\n    UP_COMMANDSTAR = \"upCommandstar\",\n    UP_COMMANDNP = \"upCommandnp\",\n    UP_COMMANDALL = \"upCommandall\",\n    DOWN_COMMANDALL = \"downCommandall\",\n    DOWN_STARWEIGHT = \"downStarweight\",\n    REDUCE_NP = \"reduceNp\",\n    DOWN_DROPNP = \"downDropnp\",\n    UP_GAIN_HP = \"upGainHp\",\n    DOWN_GAIN_HP = \"downGainHp\",\n    DOWN_COMMANDATK = \"downCommandatk\",\n    DOWN_COMMANSTAR = \"downCommanstar\",\n    DOWN_COMMANDNP = \"downCommandnp\",\n    UP_CRITICALRATE = \"upCriticalrate\",\n    DOWN_CRITICALRATE = \"downCriticalrate\",\n    PIERCE_INVINCIBLE = \"pierceInvincible\",\n    AVOID_INSTANTDEATH = \"avoidInstantdeath\",\n    UP_RESIST_INSTANTDEATH = \"upResistInstantdeath\",\n    UP_NONRESIST_INSTANTDEATH = \"upNonresistInstantdeath\",\n    DELAY_FUNCTION = \"delayFunction\",\n    REGAIN_NP_USED_NOBLE = \"regainNpUsedNoble\",\n    DEAD_FUNCTION = \"deadFunction\",\n    UP_MAXHP = \"upMaxhp\",\n    DOWN_MAXHP = \"downMaxhp\",\n    ADD_MAXHP = \"addMaxhp\",\n    SUB_MAXHP = \"subMaxhp\",\n    BATTLESTART_FUNCTION = \"battlestartFunction\",\n    WAVESTART_FUNCTION = \"wavestartFunction\",\n    SELFTURNEND_FUNCTION = \"selfturnendFunction\",\n    UP_GIVEGAIN_HP = \"upGivegainHp\",\n    DOWN_GIVEGAIN_HP = \"downGivegainHp\",\n    COMMANDATTACK_FUNCTION = \"commandattackFunction\",\n    DEADATTACK_FUNCTION = \"deadattackFunction\",\n    UP_SPECIALDEFENCE = \"upSpecialdefence\",\n    DOWN_SPECIALDEFENCE = \"downSpecialdefence\",\n    UP_DAMAGEDROPNP = \"upDamagedropnp\",\n    DOWN_DAMAGEDROPNP = \"downDamagedropnp\",\n    ENTRY_FUNCTION = \"entryFunction\",\n    UP_CHAGETD = \"upChagetd\",\n    REFLECTION_FUNCTION = \"reflectionFunction\",\n    UP_GRANT_SUBSTATE = \"upGrantSubstate\",\n    DOWN_GRANT_SUBSTATE = \"downGrantSubstate\",\n    UP_TOLERANCE_SUBSTATE = \"upToleranceSubstate\",\n    DOWN_TOLERANCE_SUBSTATE = \"downToleranceSubstate\",\n    UP_GRANT_INSTANTDEATH = \"upGrantInstantdeath\",\n    DOWN_GRANT_INSTANTDEATH = \"downGrantInstantdeath\",\n    GUTS_RATIO = \"gutsRatio\",\n    DAMAGE_FUNCTION = \"damageFunction\",\n    UP_DEFENCECOMMANDALL = \"upDefencecommandall\",\n    DOWN_DEFENCECOMMANDALL = \"downDefencecommandall\",\n    OVERWRITE_BATTLECLASS = \"overwriteBattleclass\",\n    OVERWRITE_CLASSRELATIO_ATK = \"overwriteClassrelatioAtk\",\n    OVERWRITE_CLASSRELATIO_DEF = \"overwriteClassrelatioDef\",\n    UP_DAMAGE_INDIVIDUALITY = \"upDamageIndividuality\",\n    DOWN_DAMAGE_INDIVIDUALITY = \"downDamageIndividuality\",\n    UP_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"upDamageIndividualityActiveonly\",\n    DOWN_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"downDamageIndividualityActiveonly\",\n    UP_NPTURNVAL = \"upNpturnval\",\n    DOWN_NPTURNVAL = \"downNpturnval\",\n    MULTIATTACK = \"multiattack\",\n    UP_GIVE_NP = \"upGiveNp\",\n    DOWN_GIVE_NP = \"downGiveNp\",\n    UP_RESISTANCE_DELAY_NPTURN = \"upResistanceDelayNpturn\",\n    DOWN_RESISTANCE_DELAY_NPTURN = \"downResistanceDelayNpturn\",\n    PIERCE_DEFENCE = \"pierceDefence\",\n    UP_GUTS_HP = \"upGutsHp\",\n    DOWN_GUTS_HP = \"downGutsHp\",\n    UP_FUNCGAIN_NP = \"upFuncgainNp\",\n    DOWN_FUNCGAIN_NP = \"downFuncgainNp\",\n    UP_FUNC_HP_REDUCE = \"upFuncHpReduce\",\n    DOWN_FUNC_HP_REDUCE = \"downFuncHpReduce\",\n    UP_DEFENCECOMMAN_DAMAGE = \"upDefencecommanDamage\",\n    DOWN_DEFENCECOMMAN_DAMAGE = \"downDefencecommanDamage\",\n    NPATTACK_PREV_BUFF = \"npattackPrevBuff\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    DONOT_GAINNP = \"donotGainnp\",\n    FIELD_INDIVIDUALITY = \"fieldIndividuality\",\n    DONOT_ACT_COMMANDTYPE = \"donotActCommandtype\",\n    UP_DAMAGE_EVENT_POINT = \"upDamageEventPoint\",\n}\n\nexport default interface Buff {\n    id: number;\n    name: string;\n    detail: string;\n    icon: string;\n    type: BuffType;\n    vals: Trait[];\n    tvals: Trait[];\n    ckSelfIndv: Trait[];\n    ckOpIndv: Trait[];\n    maxRate: number;\n}\n","import React from \"react\";\nimport ClassName from \"../Api/Data/ClassName\";\n\nconst classTypes = new Map<number, number>([\n    [1, 1],\n    [2, 1],\n    [3, 2],\n    [4, 3],\n    [5, 3],\n]);\nconst unknownClassType = 3;\nconst classIds = new Map<ClassName, number>([\n    [ClassName.SABER, 1],\n    [ClassName.ARCHER, 2],\n    [ClassName.LANCER, 3],\n    [ClassName.RIDER, 4],\n    [ClassName.CASTER, 5],\n    [ClassName.ASSASSIN, 6],\n    [ClassName.BERSERKER, 7],\n    [ClassName.SHIELDER, 8],\n    [ClassName.RULER, 9],\n    [ClassName.ALTER_EGO, 10],\n    [ClassName.AVENGER, 11],\n]);\nconst unknownClassId = 12;\n\ninterface IProps {\n    className: ClassName;\n    rarity?: number;\n    height?: number;\n}\n\nclass ClassIcon extends React.Component<IProps> {\n    render() {\n        return (\n            <img alt={''} src={this.location()}\n                 style={this.props.height ? {height: this.props.height} : undefined}/>\n        );\n    }\n\n    private location(): string {\n        let classId = classIds.has(this.props.className) ? classIds.get(this.props.className) : unknownClassId,\n            rarity = this.props.rarity ?? 5,\n            type = classTypes.has(rarity) ? classTypes.get(rarity) : unknownClassType;\n\n        return `https://assets.atlasacademy.io/GameData/NA/ClassIcons/class${type}_${classId}.png`;\n    }\n}\n\nexport default ClassIcon;\n","import {faSearchPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Modal} from \"react-bootstrap\";\nimport ReactJson from \"react-json-view\";\n\ninterface IProps {\n    data: object;\n}\n\ninterface IState {\n    showing: boolean;\n}\n\nclass RawDataViewer extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            showing: false\n        };\n    }\n\n    hide() {\n        this.setState({showing: false});\n    }\n\n    show() {\n        this.setState({showing: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <span className={'text-primary'}\n                      style={{cursor: \"pointer\"}}\n                      onClick={() => {\n                          this.show();\n                      }}>\n                    View Raw\n                    &nbsp;\n                    <FontAwesomeIcon icon={faSearchPlus}/>\n                </span>\n\n                <Modal size={\"lg\"} show={this.state.showing} onHide={() => this.hide()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Raw Data Viewer</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ReactJson src={this.props.data}/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default RawDataViewer;\n","import React from \"react\";\nimport ServantEntity from \"../../Api/Data/ServantEntity\";\nimport ClassIcon from \"../../Component/ClassIcon\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\n\ninterface IProps {\n    servant: ServantEntity;\n}\n\nclass ServantMainData extends React.Component<IProps> {\n    render() {\n        const servant = this.props.servant;\n\n        return (\n            <div>\n                <h1>\n                    <ClassIcon className={servant.className} rarity={servant.rarity}/>\n                    &nbsp;\n                    {servant.name}\n                </h1>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={servant}/>,\n                    \"ID\": servant.id,\n                    \"Collection\": servant.collectionNo,\n                    \"Name\": servant.name,\n                    \"Class\": servant.className,\n                    \"Rarity\": servant.rarity,\n                    \"Cost\": servant.cost,\n                    \"Gender\": servant.gender,\n                    \"Attribute\": servant.attribute,\n                    \"Max Lv.\": servant.lvMax,\n                    \"Base Hp\": servant.hpBase,\n                    \"Base Atk\": servant.atkBase,\n                    \"Max Hp\": servant.hpMax,\n                    \"Max Atk\": servant.atkMax,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantMainData;\n","import React from \"react\";\nimport Func, {DataVal, DataValField, FuncTargetType, FuncType} from \"../Api/Data/Func\";\nimport {joinElements} from \"./ArrayHelper\";\nimport {buffIsFlatValue, describeBuff} from \"./BuffHelper\";\nimport {Renderable} from \"./Renderable\";\n\nconst hasChangingDataVals = function (vals: DataVal[]): boolean {\n    if (!vals.length)\n        return false;\n\n    let previous = vals[0];\n    for (let i = 1; i < vals.length; i++) {\n        if (JSON.stringify(previous) !== JSON.stringify(vals[i]))\n            return true;\n\n        previous = vals[i];\n    }\n\n    return false;\n};\n\nconst hasUniqueValues = function (values: (number | undefined)[]): boolean {\n    return new Set(values).size > 1;\n};\n\nexport function describeFunc(func: Func): Renderable {\n    const isLevel = funcUpdatesByLevel(func),\n        isOvercharge = isLevel ? false : funcUpdatesByOvercharge(func),\n        dataVals = isLevel ? getLevelDataValList(func) : (isOvercharge ? getOverchargeDataValList(func) : func.svals),\n        staticValues = getStaticFieldValues(dataVals);\n\n    const parts: (string|JSX.Element)[] = [];\n\n    if (staticValues.Rate && staticValues.Rate !== 1000) {\n        parts.push((staticValues.Rate / 10) + '% Chance to');\n    }\n\n    if (func.funcType === FuncType.DAMAGE_NP) {\n        parts.push('Deal damage');\n    } else if (func.funcType === FuncType.DAMAGE_NP_PIERCE) {\n        parts.push('Deal damage that pierces defence');\n    } else if (func.funcType === FuncType.ADD_STATE || func.funcType === FuncType.ADD_STATE_SHORT) {\n        parts.push('Apply');\n        func.buffs.forEach((buff, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<span>\"{describeBuff(buff)}\"</span>);\n        });\n    } else if (func.funcType === FuncType.GAIN_NP) {\n        parts.push('Charge NP');\n    } else if (func.funcType === FuncType.GAIN_HP) {\n        parts.push('Gain HP');\n    }\n\n    if (func.funcTargetType === FuncTargetType.ENEMY_ALL) {\n        parts.push('to all enemies');\n    } else if (func.funcTargetType === FuncTargetType.PT_ALL) {\n        parts.push('to party');\n    } else if (func.funcTargetType === FuncTargetType.PT_OTHER) {\n        parts.push('to other party members');\n    } else if (func.funcTargetType === FuncTargetType.SELF) {\n        parts.push('to self');\n    }\n\n    if (staticValues.Turn) {\n        parts.push(staticValues.Turn === 1 ? '(1 Turn)' : `(${staticValues.Turn} Turns)`);\n    }\n\n    if (isLevel) {\n        parts.push('<LEVEL>');\n    }\n\n    if (isOvercharge) {\n        parts.push('<OVERCHARGE>');\n    }\n\n    return (\n        <span>\n            {joinElements(parts, ' ').map(\n                (element, index) => <span key={index}>{element}</span>\n            )}\n        </span>\n    );\n}\n\nexport function describeMutators(func: Func): Renderable[] {\n    const isLevel = funcUpdatesByLevel(func),\n        isOvercharge = isLevel ? false : funcUpdatesByOvercharge(func),\n        dataVals = isLevel ? getLevelDataValList(func) : (isOvercharge ? getOverchargeDataValList(func) : func.svals),\n        mutatingVals = getMutatingFieldValues(dataVals);\n\n    return mutatingVals.map(mutatingVal => {\n        let description = '';\n\n        if (mutatingVal.Value) {\n            if (func.buffs[0] && buffIsFlatValue(func.buffs[0])) {\n                description += mutatingVal.Value + ' ';\n            } else if (func.funcType === FuncType.GAIN_NP || func.funcType === FuncType.LOSS_NP) {\n                description += (mutatingVal.Value / 100) + '% ';\n            } else if (func.funcType === FuncType.GAIN_HP || func.funcType === FuncType.LOSS_HP) {\n                description += mutatingVal.Value + ' ';\n            } else {\n                description += (mutatingVal.Value / 10) + '% ';\n            }\n        }\n\n        return description;\n    }).filter(description => description.length);\n}\n\nexport function funcUpdatesByLevel(func: Func): boolean {\n    return hasChangingDataVals(getLevelDataValList(func));\n}\n\nexport function funcUpdatesByOvercharge(func: Func): boolean {\n    return hasChangingDataVals(getOverchargeDataValList(func));\n}\n\nexport function getLevelDataValList(func: Func): DataVal[] {\n    return func.svals;\n}\n\nexport function getMutatingFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return hasUniqueValues(values);\n    });\n}\n\nexport function getMutatingFieldValues(vals: DataVal[]): DataVal[] {\n    if (!vals.length)\n        return [];\n\n    const fields = getMutatingFieldNames(vals);\n\n    return vals.map(val => {\n        const mutatingVals: DataVal = {};\n\n        for (let x in fields) {\n            mutatingVals[fields[x]] = val[fields[x]];\n        }\n\n        return mutatingVals;\n    });\n}\n\nexport function getOverchargeDataValList(func: Func): DataVal[] {\n    let vals = [func.svals[0]];\n\n    if (func.svals2)\n        vals.push(func.svals2[0]);\n    if (func.svals3)\n        vals.push(func.svals3[0]);\n    if (func.svals4)\n        vals.push(func.svals4[0]);\n    if (func.svals5)\n        vals.push(func.svals5[0]);\n\n    return vals.filter(val => val !== undefined);\n}\n\nexport function getStaticFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return !hasUniqueValues(values);\n    });\n}\n\nexport function getStaticFieldValues(vals: DataVal[]): DataVal {\n    if (!vals.length)\n        return {};\n\n    const fields = getStaticFieldNames(vals),\n        staticVals: DataVal = {};\n\n    for (let x in fields) {\n        staticVals[fields[x]] = vals[0][fields[x]];\n    }\n\n    return staticVals;\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Buff, {BuffType} from \"../Api/Data/Buff\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport {Renderable} from \"./Renderable\";\nimport {hasTraitId} from \"./TraitHelper\";\n\nexport function buffIsFlatValue(buff: Buff) {\n    switch (buff.type) {\n        case BuffType.SUB_SELFDAMAGE:\n            return true;\n        default:\n            return false;\n    }\n}\n\nexport function describeBuff(buff: Buff): Renderable {\n    let description = buff.name;\n\n    if (buff.type === BuffType.DONOT_ACT) {\n        if (hasTraitId(buff.vals, 3012)) {\n            description = 'Charm';\n        }\n    }\n\n    return (\n        <Link to={`/buff/${buff.id}`}>\n            {description} <BuffIcon location={buff.icon}/>\n        </Link>\n    );\n}\n","import React from \"react\";\nimport Trait from \"../Api/Data/Trait\";\nimport {Renderable} from \"./Renderable\";\n\nexport function describeTrait(trait: Trait): Renderable {\n    return <span key={`trait-${trait.id}`}>{trait.name}</span>;\n}\n\nexport function hasTraitId(traits: Trait[], id: number): boolean {\n    return traits.filter(trait => trait.id === id).length > 0;\n}\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport Func from \"../../Api/Data/Func\";\nimport {default as ServantNoblePhantasmData} from \"../../Api/Data/NoblePhantasm\";\nimport {describeFunc, describeMutators} from \"../../Helper/FuncHelper\";\n\ninterface IProps {\n    noblePhantasm: ServantNoblePhantasmData;\n}\n\ninterface IState {\n    showFunc: boolean;\n    func?: Func;\n}\n\nclass ServantNoblePhantasm extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            showFunc: false\n        };\n    }\n\n    render() {\n        const np = this.props.noblePhantasm;\n\n        return (\n            <div>\n                <h3>\n                    {np.name}\n                    &nbsp;\n                    <Link to={`/noble-phantasm/${np.id}`}>\n                        <FontAwesomeIcon icon={faShare}/>\n                    </Link>\n                </h3>\n                <p>{np.detail}</p>\n\n                <Table responsive>\n                    <thead>\n                    <tr>\n                        <th>Effect</th>\n                        <th>1</th>\n                        <th>2</th>\n                        <th>3</th>\n                        <th>4</th>\n                        <th>5</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {np.functions.map((func, index) => {\n                        let funcDescription = describeFunc(func),\n                            mutatingDescriptions = describeMutators(func);\n\n                        for (let i = 0; i < 5; i++) {\n                            if (!mutatingDescriptions[i])\n                                mutatingDescriptions.push('-');\n                        }\n\n                        return (\n                            <tr key={index}>\n                                <td>\n                                    {funcDescription}\n                                    &nbsp;\n                                    <Link to={`/func/${func.funcId}`}>\n                                        <FontAwesomeIcon icon={faShare}/>\n                                    </Link>\n                                </td>\n                                {mutatingDescriptions.map((description, index) => {\n                                    return (\n                                        <td key={index}>{description}</td>\n                                    );\n                                })}\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default ServantNoblePhantasm;\n","import React from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport ServantListEntity from \"../../Api/Data/ServantListEntity\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps extends RouteComponentProps {\n    id: number;\n    servants: ServantListEntity[];\n}\n\nclass ServantPicker extends React.Component<IProps> {\n    private changeServant(id: number) {\n        this.props.history.push(`/servant/${id}`);\n    }\n\n    render() {\n        return (\n            <div>\n                Jump to:\n                <FormControl as={\"select\"} custom\n                             onChange={(ev: Event) => {\n                                 this.changeServant(parseInt(ev.target.value));\n                             }}\n                             value={this.props.id}>\n                    {this.props.servants.map((servant, index) => {\n                        return (\n                            <option key={index} value={servant.collectionNo}>\n                                {servant.name}\n                            </option>\n                        );\n                    })}\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ServantPicker);\n","import React from \"react\";\nimport ServantEntity from \"../../Api/Data/ServantEntity\";\n\ninterface IProps {\n    servant: ServantEntity;\n}\n\nclass ServantPortrait extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                <img alt={this.props.servant.name}\n                     className={'profile'}\n                     src={this.props.servant.extraAssets.charaGraph.ascension[\"1\"]}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantPortrait;\n","import React from \"react\";\nimport Skill from \"../../Api/Data/Skill\";\n\ninterface IProps {\n    skill: Skill;\n}\n\nclass ServantSkill extends React.Component<IProps, any>{\n    render() {\n        return (\n            <div>\n                Skill: {this.props.skill.name}\n            </div>\n        );\n    }\n}\n\nexport default ServantSkill;\n","import React from \"react\";\nimport Trait from \"../../Api/Data/Trait\";\nimport {joinElements} from \"../../Helper/ArrayHelper\";\nimport {describeTrait} from \"../../Helper/TraitHelper\";\n\ninterface IProps {\n    traits: Trait[];\n}\n\nclass ServantTraits extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {joinElements(\n                    this.props.traits.map(trait => describeTrait(trait)),\n                    ', '\n                ).map(\n                    (element, index) => <span key={index}>{element}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ServantTraits;\n","import React from \"react\";\nimport {Col, Row, Tab, Tabs} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport ServantEntity from \"../Api/Data/ServantEntity\";\nimport ServantListEntity from \"../Api/Data/ServantListEntity\";\nimport Loading from \"../Component/Loading\";\nimport ServantMiscData from \"./Servant/ServantMiscData\";\nimport ServantMainData from \"./Servant/ServantMainData\";\nimport ServantNoblePhantasm from \"./Servant/ServantNoblePhantasm\";\nimport ServantPicker from \"./Servant/ServantPicker\";\nimport ServantPortrait from \"./Servant/ServantPortrait\";\nimport ServantSkill from \"./Servant/ServantSkill\";\nimport ServantTraits from \"./Servant/ServantTraits\";\n\nimport './ServantPage.css';\n\ninterface IProp {\n    id: string;\n}\n\ninterface IState {\n    loading: boolean;\n    id: number;\n    servants: ServantListEntity[];\n    servant?: ServantEntity;\n}\n\nclass ServantPage extends React.Component<IProp, IState> {\n    constructor(props: IProp) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            id: parseInt(this.props.id),\n            servants: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadServant();\n    }\n\n    async loadServant() {\n        let [servants, servant] = await Promise.all([\n            Connection.servantList(),\n            Connection.servant(this.state.id)\n        ]);\n\n        this.setState({\n            loading: false,\n            servants,\n            servant\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.servant)\n            return <Loading/>;\n\n        return (\n            <div id={'servant'}>\n                <ServantPicker servants={this.state.servants} id={this.state.servant.collectionNo}/>\n                <hr/>\n\n                <Row>\n                    <Col xs={{span: 12, order: 2}} lg={{span: 6, order: 1}}>\n                        <ServantMainData servant={this.state.servant}/>\n                    </Col>\n                    <Col xs={{span: 12, order: 1}} lg={{span: 6, order: 2}}>\n                        <ServantPortrait servant={this.state.servant}/>\n                    </Col>\n                </Row>\n\n                <Tabs id={'servant-tabs'} defaultActiveKey={'skills'} transition={false}>\n                    <Tab eventKey={'skills'} title={'Skills'}>\n                        <br/>\n                        {this.state.servant.skills.map((skill, index) => {\n                            return <ServantSkill key={index} skill={skill}/>;\n                        })}\n                    </Tab>\n                    <Tab eventKey={'nps'} title={'Noble Phantasms'}>\n                        <br/>\n                        {this.state.servant.noblePhantasms.map((noblePhantasm, index) => {\n                            return <ServantNoblePhantasm key={index} noblePhantasm={noblePhantasm}/>;\n                        })}\n                    </Tab>\n                    <Tab eventKey={'traits'} title={'Traits'}>\n                        <br/>\n                        <ServantTraits traits={this.state.servant.traits}/>\n                    </Tab>\n                    <Tab eventKey={'misc'} title={'Misc'}>\n                        <br/>\n                        <ServantMiscData servant={this.state.servant}/>\n                    </Tab>\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default ServantPage;\n","import React from \"react\";\n\ninterface IProps {\n    rarity: number;\n}\n\nconst fillChars = function (count: number, character: string): string {\n    return (new Array(count)).fill(null).map(v => character).join('');\n}\n\nclass RarityStars extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {\n                    fillChars(this.props.rarity, '★')\n                    + fillChars(5 - this.props.rarity, '☆')\n                }\n            </div>\n        );\n    }\n}\n\nexport default RarityStars;\n","import React from \"react\";\n\ninterface IProps {\n    rarity: number;\n    location: string;\n    height?: number;\n}\n\nclass ServantThumbnail extends React.Component<IProps> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location}\n                 style={this.props.height ? {height: this.props.height} : undefined}/>\n        );\n    }\n\n}\n\nexport default ServantThumbnail;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport ServantListEntity from \"../Api/Data/ServantListEntity\";\nimport ClassIcon from \"../Component/ClassIcon\";\nimport Loading from \"../Component/Loading\";\nimport RarityStars from \"../Component/RarityStars\";\nimport ServantThumbnail from \"../Component/ServantThumbnail\";\n\nimport './ServantsPage.css';\n\ninterface IProps {\n}\n\ninterface IState {\n    loading: boolean;\n    servants: ServantListEntity[];\n}\n\nclass ServantsPage extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            servants: [],\n        };\n    }\n\n    componentDidMount() {\n        Connection.servantList().then(servantList => {\n            this.setState({\n                loading: false,\n                servants: servantList\n            });\n        });\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading/>\n\n        return (\n            <div id=\"servants\">\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th style={{textAlign: \"center\", width: '1px'}}>#</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Class</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Thumbnail</th>\n                        <th>Name</th>\n                        <th>Rarity</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.servants.map((servant, index) => {\n                        return <tr key={index}>\n                            <td align={\"center\"}>\n                                <Link to={`/servant/${servant.collectionNo}`}>\n                                    {servant.collectionNo}\n                                </Link>\n                            </td>\n                            <td align={\"center\"}>\n                                <ClassIcon className={servant.className} rarity={servant.rarity} height={50} />\n                            </td>\n                            <td align={\"center\"}>\n                                <Link to={`/servant/${servant.collectionNo}`}>\n                                    <ServantThumbnail rarity={servant.rarity} location={servant.face} height={50}/>\n                                </Link>\n                            </td>\n                            <td>\n                                <Link to={`/servant/${servant.collectionNo}`}>\n                                    {servant.name}\n                                </Link>\n                            </td>\n                            <td>\n                                <RarityStars rarity={servant.rarity}/>\n                            </td>\n                        </tr>\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n\n}\n\nexport default ServantsPage;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport {Container} from \"react-bootstrap\";\nimport {HashRouter as Router, Route, Switch,} from \"react-router-dom\";\nimport Navigation from \"./Component/Navigation\";\nimport BuffPage from \"./Page/BuffPage\";\nimport FuncPage from './Page/FuncPage';\nimport NoblePhantasmPage from \"./Page/NoblePhantasmPage\";\nimport ServantPage from \"./Page/ServantPage\";\nimport ServantsPage from \"./Page/ServantsPage\";\nimport Manager from \"./Setting/Manager\";\nimport {LanguageOption, RegionOption} from \"./Setting/Option\";\n\ninterface IState {\n    region: RegionOption,\n    language: LanguageOption,\n}\n\nclass App extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            region: Manager.region(),\n            language: Manager.language(),\n        };\n\n        Manager.onUpdate(() => this.updateSettings());\n    }\n\n    private updateSettings() {\n        this.setState({\n            region: Manager.region(),\n            language: Manager.language(),\n        });\n    }\n\n    render() {\n        return (\n            <Router>\n                <Navigation/>\n                <br/>\n\n                <Container key={`${this.state.region}-${this.state.language}`}>\n                    <Switch>\n                        <Route path=\"/buff/:id\" render={(\n                            props => <BuffPage key={props.match.params.id} id={props.match.params.id}/>\n                        )}/>\n                        <Route path=\"/func/:id\" render={(\n                            props => <FuncPage key={props.match.params.id} id={props.match.params.id}/>\n                        )}/>\n                        <Route path=\"/noble-phantasm/:id\" render={(\n                            props => <NoblePhantasmPage key={props.match.params.id} id={props.match.params.id}/>\n                        )}/>\n                        <Route path=\"/servant/:id\" render={(\n                            props => <ServantPage key={props.match.params.id} id={props.match.params.id}/>\n                        )}/>\n                        <Route path=\"/servants\" component={ServantsPage}/>\n                        <Route path=\"/\" component={ServantsPage}/>\n                    </Switch>\n                </Container>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}