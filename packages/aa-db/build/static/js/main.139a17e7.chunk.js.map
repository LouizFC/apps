{"version":3,"sources":["Setting/Option.tsx","Component/ErrorStatus.tsx","Setting/Manager.tsx","Api/Data/Region.tsx","Setting/SettingForm.tsx","Component/Navigation.tsx","Api/ResultCache.tsx","Api/Connection.tsx","Component/BuffIcon.tsx","Component/DataTable.tsx","Component/Loading.tsx","Api/Data/Func.tsx","Api/Data/Buff.tsx","Component/RawDataViewer.tsx","Helper/OutputHelper.tsx","Descriptor/BuffValueDescriptor.tsx","Descriptor/FuncValueDescriptor.tsx","Helper/FuncHelper.tsx","Descriptor/Func/FuncDescriptorSections.tsx","Api/Data/EntityType.tsx","Descriptor/BuffDescriptor.tsx","Descriptor/TraitDescriptor.tsx","Descriptor/Func/handleTargetSection.tsx","Descriptor/FuncDescriptor.tsx","Descriptor/Func/handleChanceSection.tsx","Descriptor/Func/handleActionSection.tsx","Descriptor/Func/handleAmountSection.tsx","Descriptor/Func/handleAffectsSection.tsx","Descriptor/Func/handleDurationSection.tsx","Descriptor/Func/handleScalingSection.tsx","Page/BuffPage.tsx","Descriptor/RarityDescriptor.tsx","Page/CraftEssence/CraftEssenceMainData.tsx","Page/CraftEssence/CraftEssencePicker.tsx","Page/CraftEssence/CraftEssencePortrait.tsx","Descriptor/QuestDescriptor.tsx","Descriptor/SkillDescriptor.tsx","Page/CraftEssence/CraftEssenceSkill.tsx","Page/CraftEssencePage.tsx","Component/FaceIcon.tsx","Page/CraftEssencesPage.tsx","Descriptor/NoblePhantasmDescriptor.tsx","Page/Func/FuncMainData.tsx","Page/FuncPage.tsx","Api/Data/ClassName.tsx","Component/ClassIcon.tsx","Descriptor/ServantDescriptor.tsx","Page/Func/DataValMainData.tsx","Page/NoblePhantasm/NoblePhantasmVersion.tsx","Page/NoblePhantasmPage.tsx","Page/QuestPage.tsx","Page/Servant/ServantMainData.tsx","Page/Servant/ServantMiscData.tsx","Page/Servant/ServantNoblePhantasm.tsx","Page/Servant/ServantPicker.tsx","Page/Servant/ServantPortrait.tsx","Page/Servant/ServantSkill.tsx","Page/Servant/ServantTraits.tsx","Page/ServantPage.tsx","Page/ServantsPage.tsx","Descriptor/CraftEssenceDescriptor.tsx","Page/Skill/SkillVersion.tsx","Page/SkillPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LanguageOption","images","ErrorStatus","message","undefined","this","props","error","response","status","data","detail","random","Math","floor","length","image","id","alt","src","style","display","height","margin","className","React","Component","Region","callbacks","Manager","value","window","localStorage","getItem","language","Object","values","find","v","DEFAULT","setItem","triggerCallbacks","callback","push","forEach","call","SettingForm","state","onUpdate","syncSettings","setState","setLanguage","Form","Group","Label","Control","as","onChange","ev","updateLanguage","target","map","Navigation","showSettings","Navbar","bg","variant","expand","Container","to","Toggle","Collapse","Nav","NavItem","Link","href","icon","faDiscord","faGithub","Button","onClick","faCog","Modal","show","onHide","hideSettings","Header","closeButton","Title","Body","ResultCache","cache","Map","pending","key","fetcher","duration","get","Promise","resolve","set","then","delete","setTimeout","host","fetch","endpoint","a","axios","buff","craftEssence","craftEssenceList","func","noblePhantasm","quest","servant","servantList","skill","traitMap","Connection","region","query","ENGLISH","NA","getCacheableCraftEssenceList","JP","jp","na","names","entity","name","phase","getCacheableServantList","BuffIcon","location","verticalAlign","DataTable","header","Table","bordered","hover","keys","index","Loading","FuncType","FuncTargetType","FuncTargetTeam","DataValField","BuffType","RawDataViewer","showing","cursor","faSearchPlus","size","hide","collapsed","asPercent","pow","decimal","handleNewLine","text","joinElements","split","elements","separator","parts","pushElement","element","previous","toString","BuffValueDescriptor","type","UP_ATK","DOWN_ATK","UP_COMMANDALL","DOWN_COMMANDALL","UP_CRITICALDAMAGE","DOWN_CRITICALDAMAGE","UP_DEFENCE","DOWN_DEFENCE","UP_DROPNP","DOWN_DROPNP","UP_HATE","UP_TOLERANCE","DOWN_TOLERANCE","dataVal","Value","FuncValueDescriptor","Rate","funcType","ADD_STATE","ADD_STATE_SHORT","buffs","DAMAGE_NP","DAMAGE_NP_INDIVIDUAL","DAMAGE_NP_STATE_INDIVIDUAL_FIX","DAMAGE_NP_PIERCE","GAIN_NP","LOSS_NP","Correction","hasChangingDataVals","vals","i","JSON","stringify","hasUniqueValues","Set","describeMutators","isLevel","funcUpdatesByLevel","isOvercharge","funcUpdatesByOvercharge","fields","filter","field","val","getMutatingFieldNames","mutatingVals","x","getMutatingFieldValues","getMixedDataValList","getOverchargeDataValList","getLevelDataValList","mutatingVal","svals","dataVals","getTargetVersionValues","getStaticFieldValues","getStaticFieldNames","staticVals","level","overcharge","svals2","svals3","svals4","svals5","EntityType","FuncDescriptorSection","preposition","FuncDescriptorSections","chance","action","amount","affects","scaling","BuffDescriptor","description","DONOT_ACT","trait","TraitDescriptor","targetMap","SELF","PT_ONE","PT_ALL","ENEMY","ENEMY_ALL","PT_FULL","ENEMY_FULL","PT_OTHER","PT_ONE_OTHER","PT_RANDOM","ENEMY_OTHER","ENEMY_RANDOM","PT_OTHER_FULL","ENEMY_OTHER_FULL","PTSELECT_ONE_SUB","PTSELECT_SUB","PT_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_RANDOM","ENEMY_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_FIRST","COMMAND_TYPE_SELF_TREASURE_DEVICE","FuncDescriptor","staticValues","sections","section","NONE","handleChanceSection","SUB_STATE","traitVals","Target","DELAY_NPTURN","GAIN_HP","GAIN_STAR","INSTANT_DEATH","LOSS_HP_SAFE","handleActionSection","COMMANDATTACK_FUNCTION","NPATTACK_PREV_BUFF","SkillID","handleAmountSection","functvals","handleAffectsSection","has","funcTargetType","handleTargetSection","Count","Turn","countDesc","turnDesc","handleDurationSection","handleScalingSection","concat","funcId","faShare","Fragment","BuffPage","loading","loadBuff","reverseFunctions","assetMap","RarityDescriptor","rarity","CraftEssenceMainData","collectionNo","cost","lvMax","hpBase","atkBase","hpMax","atkMax","CraftEssencePicker","history","FormControl","custom","changeCraftEssence","parseInt","craftEssences","slice","reverse","withRouter","CraftEssencePortrait","extraAssets","charaGraph","ascension","shift","assetKey","QuestDescriptor","questId","questPhase","SkillDescriptor","iconHeight","CraftEssenceSkill","condQuestId","condQuestPhase","Alert","responsive","functions","CraftEssencePage","loadServant","all","Row","Col","xs","span","order","lg","skills","num","FaceIcon","CraftEssencesPage","activeRarityFilters","list","indexOf","activeRarity","active","opacity","toggleRarityFilter","striped","textAlign","width","route","align","face","NoblePhantasmDescriptor","FuncMainData","funcTargetTeam","funcPopupText","FuncPage","loadFunc","funcPopupIcon","reverseSkills","reverseTds","ClassName","classTypes","classIds","SABER","ARCHER","LANCER","RIDER","CASTER","ASSASSIN","BERSERKER","SHIELDER","RULER","ALTER_EGO","AVENGER","MOON_CANCER","FOREIGNER","GRAND_CASTER","BEAST_I","BEAST_II","BEAST_IIIL","BEAST_IIIR","BEAST_UNKNOWN","ALL","EXTRA","ClassIcon","classId","ServantDescriptor","DataValMainData","NoblePhantasmVersion","md","NoblePhantasmPage","loadNp","rank","card","reverseServants","NORMAL","HEROINE","inline","justifyContent","changeLevel","changeOvercharge","QuestPage","loadQuest","ServantMainData","gender","attribute","buffIconPath","deathChanceIcon","hitCountIcon","starGenIcon","showHits","hits","hit","ServantMiscData","hitsDistribution","buster","arts","quick","extra","starAbsorb","starGen","instantDeathChance","hitsColumn","miscColumn","ServantNoblePhantasm","np","mutatingDescriptions","ServantPicker","changeServant","servants","ServantPortrait","ServantSkill","coolDown","cooldown","ServantTraits","traits","ServantPage","Tabs","defaultActiveKey","transition","Tab","eventKey","title","noblePhantasms","classFilters","ServantsPage","activeClassFilters","isClassFilterActive","exists","activeFilters","activeClassName","activeClass","isExtra","toggleClassFilter","CraftEssenceDescriptor","SkillVersion","SkillPage","levels","loadSkill","SERVANT_EQUIP","Array","from","App","updateSettings","exact","path","render","match","params","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.139a17e7.chunk.js","sourcesContent":["export enum LanguageOption {\n    DEFAULT = 'Default',\n    ENGLISH = 'English',\n}\n\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\n\nconst images = [\n    './assets/figure_016.png',\n    './assets/figure_074.png',\n    './assets/figure_127.png',\n    './assets/figure_145.png',\n    './assets/figure_150.png',\n    './assets/figure_174.png',\n    './assets/figure_189.png',\n    './assets/figure_198.png',\n    './assets/figure_241.png',\n    './assets/figure_253.png',\n];\n\ninterface IProps {\n    error?: AxiosError;\n}\n\nclass ErrorStatus extends React.Component<IProps> {\n    render() {\n        let message: string;\n\n        if (this.props.error === undefined) {\n            message = 'Not Found';\n        } else if (this.props.error.response?.status === 500) {\n            message = 'Server Error';\n        } else if (this.props.error.response?.status === 404) {\n            message = 'Not Found';\n        } else {\n            message = 'Code: ' + this.props.error.response?.status;\n        }\n\n        if (\n            typeof this.props.error?.response?.data === \"object\"\n            && this.props.error.response.data.detail !== undefined\n        ) {\n            message = this.props.error.response.data.detail;\n        }\n\n        const random = Math.floor(Math.random() * images.length),\n            image = images[random];\n\n        return (\n            <div id={'error-status'}>\n                <img alt={'Error'} src={image} style={{\n                    display: \"block\",\n                    height: 300,\n                    margin: '0 auto',\n                }}/>\n\n                <p className={'text-center'} style={{margin: 50}}>\n                    <strong>ERROR: {message}</strong>\n                </p>\n            </div>\n        );\n    }\n\n}\n\nexport default ErrorStatus;\n","import {LanguageOption} from \"./Option\";\n\nconst languageKey = 'language';\n\nconst callbacks: Function[] = [];\n\nclass Manager {\n    static language(): LanguageOption {\n        const value = window.localStorage.getItem(languageKey),\n            language = Object.values(LanguageOption).find(v => v === value);\n\n        return language ?? LanguageOption.DEFAULT;\n    }\n\n    static setLanguage(value: string) {\n        const language = Object.values(LanguageOption).find(v => v === value);\n        if (language === undefined)\n            return;\n\n        window.localStorage.setItem(languageKey, language);\n        Manager.triggerCallbacks();\n    }\n\n    static onUpdate(callback: Function) {\n        callbacks.push(callback);\n    }\n\n    private static triggerCallbacks() {\n        callbacks.forEach(callback => {\n            callback.call(null);\n        });\n    }\n}\n\nexport default Manager;\n","enum Region {\n    JP = 'JP',\n    NA = 'NA'\n}\n\nexport default Region;\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport Manager from \"./Manager\";\nimport {LanguageOption} from \"./Option\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IState {\n    language: LanguageOption\n}\n\nclass SettingForm extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            language: Manager.language(),\n        }\n\n        Manager.onUpdate(() => this.syncSettings());\n    }\n\n    private syncSettings() {\n        this.setState({\n            language: Manager.language(),\n        });\n    }\n\n    updateLanguage(value: string) {\n        Manager.setLanguage(value);\n    }\n\n    render() {\n        return (\n            <div>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Language</Form.Label>\n                        <Form.Control as={'select'} value={this.state.language}\n                                      onChange={(ev: Event) => this.updateLanguage(ev.target.value)}>\n                            {Object.values(LanguageOption).map(v => (\n                                <option value={v}>{v}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default SettingForm;\n","import {faDiscord, faGithub} from \"@fortawesome/free-brands-svg-icons\";\nimport {faCog} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Button, Container, Modal, Nav, Navbar, NavItem} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport SettingForm from \"../Setting/SettingForm\";\n\ninterface IState {\n    showSettings: boolean;\n}\n\nclass Navigation extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            showSettings: false,\n        };\n    }\n\n    hideSettings() {\n        this.setState({showSettings: false});\n    }\n\n    showSettings() {\n        this.setState({showSettings: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar bg={\"dark\"} variant={'dark'} expand={\"lg\"}>\n                    <Container>\n                        <Link to=\"/\" className={'navbar-brand'}>AA-DB</Link>\n                        <Navbar.Toggle/>\n\n                        <Navbar.Collapse>\n                            <Nav>\n                                <Link to=\"/JP/servants\" className={'nav-link'}>\n                                    <NavItem>JP Servants</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav>\n                                <Link to=\"/NA/servants\" className={'nav-link'}>\n                                    <NavItem>NA Servants</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav>\n                                <Link to=\"/JP/craft-essences\" className={'nav-link'}>\n                                    <NavItem>JP CE</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav>\n                                <Link to=\"/NA/craft-essences\" className={'nav-link'}>\n                                    <NavItem>NA CE</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav className={'ml-auto'}>\n                                <Nav.Link href={'https://discord.gg/TKJmuCR'} target={'_blank'}>\n                                    <FontAwesomeIcon icon={faDiscord}/>\n                                </Nav.Link>\n                                <Nav.Link href={'https://github.com/atlasacademy/aa-db'} target={'_blank'}>\n                                    <FontAwesomeIcon icon={faGithub}/>\n                                </Nav.Link>\n                                <Button variant={\"primary\"} onClick={() => this.showSettings()}>\n                                    <FontAwesomeIcon icon={faCog}/>\n                                </Button>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Container>\n                </Navbar>\n\n                <Modal show={this.state.showSettings} onHide={() => this.hideSettings()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Settings</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <SettingForm/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n\n}\n\nexport default Navigation;\n","class ResultCache<K, V> {\n    private cache = new Map<K, V>([]);\n    private pending = new Map<K, Function[]>([]);\n\n    get(key: K, fetcher: Function, duration: number | null): Promise<V> {\n        const value = this.cache.get(key);\n        if (value !== undefined) {\n            return new Promise<V>(resolve => {\n                resolve(value);\n            });\n        }\n\n        const callbacks = this.pending.get(key);\n        if (callbacks !== undefined) {\n            return new Promise<V>(resolve => {\n                callbacks.push(resolve);\n            });\n        }\n\n        this.pending.set(key, []);\n        return new Promise<V>(resolve => {\n            fetcher\n                .call(null)\n                .then((value: V) => {\n                    const callbacks = this.pending.get(key) ?? [];\n\n                    callbacks.forEach(callback => {\n                        callback.call(this, value);\n                    });\n\n                    this.cache.set(key, value);\n                    this.pending.delete(key);\n\n                    if (duration !== null) {\n                        window.setTimeout(() => {\n                            this.cache.delete(key);\n                        }, duration);\n                    }\n\n                    resolve(value);\n                });\n        });\n    }\n}\n\nexport default ResultCache;\n","import axios from \"axios\";\nimport Manager from \"../Setting/Manager\";\nimport {LanguageOption} from \"../Setting/Option\";\nimport BasicListEntity from \"./Data/BasicListEntity\";\nimport Buff from \"./Data/Buff\";\nimport CraftEssence from \"./Data/CraftEssence\";\nimport Func from \"./Data/Func\";\nimport NoblePhantasm from \"./Data/NoblePhantasm\";\nimport Quest from \"./Data/Quest\";\nimport Region from \"./Data/Region\";\nimport Servant from \"./Data/Servant\";\nimport Skill from \"./Data/Skill\";\nimport TraitMap from \"./Data/TraitMap\";\nimport ResultCache from \"./ResultCache\";\n\nconst host = 'https://api.atlasacademy.io',\n    cacheDuration = 20 * 1000,\n    fetch = async function <T>(endpoint: string): Promise<T> {\n        const response = await axios.get<T>(endpoint);\n\n        return response.data;\n    },\n    cache = {\n        buff: new ResultCache<string, Buff>(),\n        craftEssence: new ResultCache<string, CraftEssence>(),\n        craftEssenceList: new ResultCache<Region, BasicListEntity[]>(),\n        func: new ResultCache<string, Func>(),\n        noblePhantasm: new ResultCache<string, NoblePhantasm>(),\n        quest: new ResultCache<string, Quest>(),\n        servant: new ResultCache<string, Servant>(),\n        servantList: new ResultCache<Region, BasicListEntity[]>(),\n        skill: new ResultCache<string, Skill>(),\n        traitMap: new ResultCache<Region, TraitMap>(),\n    };\n\nclass Connection {\n    static buff(region: Region, id: number): Promise<Buff> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.buff.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Buff>(`${host}/nice/${region}/buff/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static craftEssence(region: Region, id: number): Promise<CraftEssence> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.craftEssence.get(\n            key,\n            () => {\n                let query = '?lore=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Servant>(`${host}/nice/${region}/equip/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async craftEssenceList(region: Region): Promise<BasicListEntity[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableCraftEssenceList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableCraftEssenceList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableCraftEssenceList(Region.JP),\n            na = await Connection.getCacheableCraftEssenceList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<BasicListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static func(region: Region, id: number): Promise<Func> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.func.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Func>(`${host}/nice/${region}/function/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static noblePhantasm(region: Region, id: number): Promise<NoblePhantasm> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.noblePhantasm.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<NoblePhantasm>(`${host}/nice/${region}/NP/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static quest(region: Region, id: number, phase: number): Promise<Quest> {\n        const key = `${region}-${id}-${phase}`;\n\n        return cache.quest.get(\n            key,\n            () => {\n                return fetch<Quest>(`${host}/nice/${region}/quest/${id}/${phase}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static servant(region: Region, id: number): Promise<Servant> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.servant.get(\n            key,\n            () => {\n                let query = '?lore=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Servant>(`${host}/nice/${region}/servant/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async servantList(region: Region): Promise<BasicListEntity[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableServantList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableServantList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableServantList(Region.JP),\n            na = await Connection.getCacheableServantList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<BasicListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static skill(region: Region, id: number): Promise<Skill> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.skill.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Skill>(`${host}/nice/${region}/skill/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static traitMap(region: Region): Promise<TraitMap> {\n        return cache.traitMap.get(\n            region,\n            () => {\n                return fetch<TraitMap>(`${host}/export/${region}/nice_trait.json`);\n            },\n            null\n        );\n    }\n\n    private static async getCacheableCraftEssenceList(region: Region): Promise<BasicListEntity[]> {\n        return cache.craftEssenceList.get(\n            region,\n            () => {\n                return fetch<BasicListEntity[]>(`${host}/export/${region}/basic_equip.json`);\n            },\n            null\n        );\n    }\n\n    private static async getCacheableServantList(region: Region): Promise<BasicListEntity[]> {\n        return cache.servantList.get(\n            region,\n            () => {\n                return fetch<BasicListEntity[]>(`${host}/export/${region}/basic_servant.json`);\n            },\n            null\n        );\n    }\n}\n\nexport default Connection;\n","import React from \"react\";\n\ninterface IProp {\n    location: string;\n    height?: number;\n}\n\nclass BuffIcon extends React.Component<IProp> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location} style={{\n                height: this.props.height ?? 25,\n                verticalAlign: \"bottom\",\n            }}/>\n        );\n    }\n\n}\n\nexport default BuffIcon;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\n\nimport \"./DataTable.css\";\nimport {Renderable} from \"../Helper/OutputHelper\";\n\ninterface IProp {\n    header?: JSX.Element | string,\n    data: {\n        [key: string]: Renderable;\n    }\n}\n\nclass DataTable extends React.Component<IProp> {\n    render() {\n        return (\n            <div>\n                {this.props.header ? (\n                    <div className={'data-header'}>\n                        {this.props.header}\n                    </div>\n                ) : null}\n\n                <Table bordered hover className={'data-table'}>\n                    <tbody>\n                    {Object.keys(this.props.data).map((key, index) => {\n                        return (\n                            <tr key={index}>\n                                <th>{key}</th>\n                                <td>{this.props.data[key]}</td>\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default DataTable;\n","import React from \"react\";\n\nimport \"./Loading.css\";\n\nfunction Loading() {\n    return (\n        <div id={'loading'}>\n            <img alt={''} className={'fou f1'} src={'./assets/load_icon_A01.png'} />\n            <img alt={''} className={'fou f2'} src={'./assets/load_icon_A02.png'} />\n            <img alt={''} className={'fou f3'} src={'./assets/load_icon_A03.png'} />\n            <img alt={''} className={'fou f4'} src={'./assets/load_icon_A04.png'} />\n        </div>\n    );\n}\n\nexport default Loading;\n","import Buff from \"./Buff\";\nimport NoblePhantasm from \"./NoblePhantasm\";\nimport Skill from \"./Skill\";\nimport Trait from \"./Trait\";\n\nexport enum FuncType {\n    NONE = \"none\",\n    ADD_STATE = \"addState\",\n    SUB_STATE = \"subState\",\n    DAMAGE = \"damage\",\n    DAMAGE_NP = \"damageNp\",\n    GAIN_STAR = \"gainStar\",\n    GAIN_HP = \"gainHp\",\n    GAIN_NP = \"gainNp\",\n    LOSS_NP = \"lossNp\",\n    SHORTEN_SKILL = \"shortenSkill\",\n    EXTEND_SKILL = \"extendSkill\",\n    RELEASE_STATE = \"releaseState\",\n    LOSS_HP = \"lossHp\",\n    INSTANT_DEATH = \"instantDeath\",\n    DAMAGE_NP_PIERCE = \"damageNpPierce\",\n    DAMAGE_NP_INDIVIDUAL = \"damageNpIndividual\",\n    ADD_STATE_SHORT = \"addStateShort\",\n    GAIN_HP_PER = \"gainHpPer\",\n    DAMAGE_NP_STATE_INDIVIDUAL = \"damageNpStateIndividual\",\n    HASTEN_NPTURN = \"hastenNpturn\",\n    DELAY_NPTURN = \"delayNpturn\",\n    DAMAGE_NP_HPRATIO_HIGH = \"damageNpHpratioHigh\",\n    DAMAGE_NP_HPRATIO_LOW = \"damageNpHpratioLow\",\n    CARD_RESET = \"cardReset\",\n    REPLACE_MEMBER = \"replaceMember\",\n    LOSS_HP_SAFE = \"lossHpSafe\",\n    DAMAGE_NP_COUNTER = \"damageNpCounter\",\n    DAMAGE_NP_STATE_INDIVIDUAL_FIX = \"damageNpStateIndividualFix\",\n    DAMAGE_NP_SAFE = \"damageNpSafe\",\n    CALL_SERVANT = \"callServant\",\n    PT_SHUFFLE = \"ptShuffle\",\n    LOSS_STAR = \"lossStar\",\n    CHANGE_SERVANT = \"changeServant\",\n    CHANGE_BG = \"changeBg\",\n    DAMAGE_VALUE = \"damageValue\",\n    WITHDRAW = \"withdraw\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    SHORTEN_BUFFTURN = \"shortenBuffturn\",\n    EXTEND_BUFFTURN = \"extendBuffturn\",\n    SHORTEN_BUFFCOUNT = \"shortenBuffcount\",\n    EXTEND_BUFFCOUNT = \"extendBuffcount\",\n    CHANGE_BGM = \"changeBgm\",\n    DISPLAY_BUFFSTRING = \"displayBuffstring\",\n    EXP_UP = \"expUp\",\n    QP_UP = \"qpUp\",\n    DROP_UP = \"dropUp\",\n    FRIEND_POINT_UP = \"friendPointUp\",\n    EVENT_DROP_UP = \"eventDropUp\",\n    EVENT_DROP_RATE_UP = \"eventDropRateUp\",\n    EVENT_POINT_UP = \"eventPointUp\",\n    EVENT_POINT_RATE_UP = \"eventPointRateUp\",\n    TRANSFORM_SERVANT = \"transformServant\",\n    QP_DROP_UP = \"qpDropUp\",\n    SERVANT_FRIENDSHIP_UP = \"servantFriendshipUp\",\n    USER_EQUIP_EXP_UP = \"userEquipExpUp\",\n    CLASS_DROP_UP = \"classDropUp\",\n    ENEMY_ENCOUNT_COPY_RATE_UP = \"enemyEncountCopyRateUp\",\n    ENEMY_ENCOUNT_RATE_UP = \"enemyEncountRateUp\",\n    ENEMY_PROB_DOWN = \"enemyProbDown\",\n}\n\nexport enum FuncTargetType {\n    SELF = \"self\",\n    PT_ONE = \"ptOne\",\n    PT_ANOTHER = \"ptAnother\",\n    PT_ALL = \"ptAll\",\n    ENEMY = \"enemy\",\n    ENEMY_ANOTHER = \"enemyAnother\",\n    ENEMY_ALL = \"enemyAll\",\n    PT_FULL = \"ptFull\",\n    ENEMY_FULL = \"enemyFull\",\n    PT_OTHER = \"ptOther\",\n    PT_ONE_OTHER = \"ptOneOther\",\n    PT_RANDOM = \"ptRandom\",\n    ENEMY_OTHER = \"enemyOther\",\n    ENEMY_RANDOM = \"enemyRandom\",\n    PT_OTHER_FULL = \"ptOtherFull\",\n    ENEMY_OTHER_FULL = \"enemyOtherFull\",\n    PTSELECT_ONE_SUB = \"ptselectOneSub\",\n    PTSELECT_SUB = \"ptselectSub\",\n    PT_ONE_ANOTHER_RANDOM = \"ptOneAnotherRandom\",\n    PT_SELF_ANOTHER_RANDOM = \"ptSelfAnotherRandom\",\n    ENEMY_ONE_ANOTHER_RANDOM = \"enemyOneAnotherRandom\",\n    PT_SELF_ANOTHER_FIRST = \"ptSelfAnotherFirst\",\n    PT_SELF_BEFORE = \"ptSelfBefore\",\n    PT_SELF_AFTER = \"ptSelfAfter\",\n    PT_SELF_ANOTHER_LAST = \"ptSelfAnotherLast\",\n    COMMAND_TYPE_SELF_TREASURE_DEVICE = \"commandTypeSelfTreasureDevice\",\n}\n\nexport enum FuncTargetTeam {\n    PLAYER = \"player\",\n    ENEMY = \"enemy\",\n    PLAYER_AND_ENEMY = \"playerAndEnemy\",\n}\n\nexport enum DataValField {\n    RATE = \"Rate\",\n    TURN = \"Turn\",\n    COUNT = \"Count\",\n    VALUE = \"Value\",\n    VALUE2 = \"Value2\",\n    USE_RATE = \"UseRate\",\n    TARGET = \"Target\",\n    CORRECTION = \"Correction\",\n    PARAM_ADD = \"ParamAdd\",\n    PARAM_MAX = \"ParamMax\",\n    HIDE_MISS = \"HideMiss\",\n    ON_FIELD = \"OnField\",\n    HIDE_NO_EFFECT = \"HideNoEffect\",\n    UNAFFECTED = \"Unaffected\",\n    SHOW_STATE = \"ShowState\",\n    AURA_EFFECT_ID = \"AuraEffectId\",\n    ACT_SET = \"ActSet\",\n    ACT_SET_WEIGHT = \"ActSetWeight\",\n    SHOW_QUEST_NO_EFFECT = \"ShowQuestNoEffect\",\n    CHECK_DEAD = \"CheckDead\",\n    RATIO_HP_HIGH = \"RatioHPHigh\",\n    RATIO_HP_LOW = \"RatioHPLow\",\n    SET_PASSIVE_FRAME = \"SetPassiveFrame\",\n    PROC_PASSIVE = \"ProcPassive\",\n    PROC_ACTIVE = \"ProcActive\",\n    HIDE_PARAM = \"HideParam\",\n    SKILL_ID = \"SkillID\",\n    SKILL_LV = \"SkillLV\",\n    SHOW_CARD_ONLY = \"ShowCardOnly\",\n    EFFECT_SUMMON = \"EffectSummon\",\n    RATIO_HP_RANGE_HIGH = \"RatioHPRangeHigh\",\n    RATIO_HP_RANGE_LOW = \"RatioHPRangeLow\",\n    TARGET_LIST = \"TargetList\",\n    OPPONENT_ONLY = \"OpponentOnly\",\n    TARGET_RARITY_LIST = \"TargetRarityList\",\n}\n\nexport type DataVal = {\n    [key in DataValField]?: number;\n}\n\nexport default interface Func {\n    funcId: number;\n    funcType: FuncType;\n    funcTargetType: FuncTargetType;\n    funcTargetTeam: FuncTargetTeam;\n    funcPopupText: string;\n    funcPopupIcon?: string;\n    functvals: Trait[];\n    funcquestTvals: number[];\n    traitVals?: Trait[];\n    buffs: Buff[];\n    svals?: DataVal[];\n    svals2?: DataVal[];\n    svals3?: DataVal[];\n    svals4?: DataVal[];\n    svals5?: DataVal[];\n    reverseSkills: Skill[];\n    reverseTds: NoblePhantasm[];\n}\n","import Func from \"./Func\";\nimport Trait from \"./Trait\";\n\nexport enum BuffType {\n    NONE = \"none\",\n    UP_COMMANDATK = \"upCommandatk\",\n    UP_STARWEIGHT = \"upStarweight\",\n    UP_CRITICALPOINT = \"upCriticalpoint\",\n    DOWN_CRITICALPOINT = \"downCriticalpoint\",\n    REGAIN_NP = \"regainNp\",\n    REGAIN_STAR = \"regainStar\",\n    REGAIN_HP = \"regainHp\",\n    REDUCE_HP = \"reduceHp\",\n    UP_ATK = \"upAtk\",\n    DOWN_ATK = \"downAtk\",\n    UP_DAMAGE = \"upDamage\",\n    DOWN_DAMAGE = \"downDamage\",\n    ADD_DAMAGE = \"addDamage\",\n    SUB_DAMAGE = \"subDamage\",\n    UP_NPDAMAGE = \"upNpdamage\",\n    DOWN_NPDAMAGE = \"downNpdamage\",\n    UP_DROPNP = \"upDropnp\",\n    UP_CRITICALDAMAGE = \"upCriticaldamage\",\n    DOWN_CRITICALDAMAGE = \"downCriticaldamage\",\n    UP_SELFDAMAGE = \"upSelfdamage\",\n    DOWN_SELFDAMAGE = \"downSelfdamage\",\n    ADD_SELFDAMAGE = \"addSelfdamage\",\n    SUB_SELFDAMAGE = \"subSelfdamage\",\n    AVOIDANCE = \"avoidance\",\n    BREAK_AVOIDANCE = \"breakAvoidance\",\n    INVINCIBLE = \"invincible\",\n    UP_GRANTSTATE = \"upGrantstate\",\n    DOWN_GRANTSTATE = \"downGrantstate\",\n    UP_TOLERANCE = \"upTolerance\",\n    DOWN_TOLERANCE = \"downTolerance\",\n    AVOID_STATE = \"avoidState\",\n    DONOT_ACT = \"donotAct\",\n    DONOT_SKILL = \"donotSkill\",\n    DONOT_NOBLE = \"donotNoble\",\n    DONOT_RECOVERY = \"donotRecovery\",\n    DISABLE_GENDER = \"disableGender\",\n    GUTS = \"guts\",\n    UP_HATE = \"upHate\",\n    ADD_INDIVIDUALITY = \"addIndividuality\",\n    SUB_INDIVIDUALITY = \"subIndividuality\",\n    UP_DEFENCE = \"upDefence\",\n    DOWN_DEFENCE = \"downDefence\",\n    UP_COMMANDSTAR = \"upCommandstar\",\n    UP_COMMANDNP = \"upCommandnp\",\n    UP_COMMANDALL = \"upCommandall\",\n    DOWN_COMMANDALL = \"downCommandall\",\n    DOWN_STARWEIGHT = \"downStarweight\",\n    REDUCE_NP = \"reduceNp\",\n    DOWN_DROPNP = \"downDropnp\",\n    UP_GAIN_HP = \"upGainHp\",\n    DOWN_GAIN_HP = \"downGainHp\",\n    DOWN_COMMANDATK = \"downCommandatk\",\n    DOWN_COMMANSTAR = \"downCommanstar\",\n    DOWN_COMMANDNP = \"downCommandnp\",\n    UP_CRITICALRATE = \"upCriticalrate\",\n    DOWN_CRITICALRATE = \"downCriticalrate\",\n    PIERCE_INVINCIBLE = \"pierceInvincible\",\n    AVOID_INSTANTDEATH = \"avoidInstantdeath\",\n    UP_RESIST_INSTANTDEATH = \"upResistInstantdeath\",\n    UP_NONRESIST_INSTANTDEATH = \"upNonresistInstantdeath\",\n    DELAY_FUNCTION = \"delayFunction\",\n    REGAIN_NP_USED_NOBLE = \"regainNpUsedNoble\",\n    DEAD_FUNCTION = \"deadFunction\",\n    UP_MAXHP = \"upMaxhp\",\n    DOWN_MAXHP = \"downMaxhp\",\n    ADD_MAXHP = \"addMaxhp\",\n    SUB_MAXHP = \"subMaxhp\",\n    BATTLESTART_FUNCTION = \"battlestartFunction\",\n    WAVESTART_FUNCTION = \"wavestartFunction\",\n    SELFTURNEND_FUNCTION = \"selfturnendFunction\",\n    UP_GIVEGAIN_HP = \"upGivegainHp\",\n    DOWN_GIVEGAIN_HP = \"downGivegainHp\",\n    COMMANDATTACK_FUNCTION = \"commandattackFunction\",\n    DEADATTACK_FUNCTION = \"deadattackFunction\",\n    UP_SPECIALDEFENCE = \"upSpecialdefence\",\n    DOWN_SPECIALDEFENCE = \"downSpecialdefence\",\n    UP_DAMAGEDROPNP = \"upDamagedropnp\",\n    DOWN_DAMAGEDROPNP = \"downDamagedropnp\",\n    ENTRY_FUNCTION = \"entryFunction\",\n    UP_CHAGETD = \"upChagetd\",\n    REFLECTION_FUNCTION = \"reflectionFunction\",\n    UP_GRANT_SUBSTATE = \"upGrantSubstate\",\n    DOWN_GRANT_SUBSTATE = \"downGrantSubstate\",\n    UP_TOLERANCE_SUBSTATE = \"upToleranceSubstate\",\n    DOWN_TOLERANCE_SUBSTATE = \"downToleranceSubstate\",\n    UP_GRANT_INSTANTDEATH = \"upGrantInstantdeath\",\n    DOWN_GRANT_INSTANTDEATH = \"downGrantInstantdeath\",\n    GUTS_RATIO = \"gutsRatio\",\n    DAMAGE_FUNCTION = \"damageFunction\",\n    UP_DEFENCECOMMANDALL = \"upDefencecommandall\",\n    DOWN_DEFENCECOMMANDALL = \"downDefencecommandall\",\n    OVERWRITE_BATTLECLASS = \"overwriteBattleclass\",\n    OVERWRITE_CLASSRELATIO_ATK = \"overwriteClassrelatioAtk\",\n    OVERWRITE_CLASSRELATIO_DEF = \"overwriteClassrelatioDef\",\n    UP_DAMAGE_INDIVIDUALITY = \"upDamageIndividuality\",\n    DOWN_DAMAGE_INDIVIDUALITY = \"downDamageIndividuality\",\n    UP_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"upDamageIndividualityActiveonly\",\n    DOWN_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"downDamageIndividualityActiveonly\",\n    UP_NPTURNVAL = \"upNpturnval\",\n    DOWN_NPTURNVAL = \"downNpturnval\",\n    MULTIATTACK = \"multiattack\",\n    UP_GIVE_NP = \"upGiveNp\",\n    DOWN_GIVE_NP = \"downGiveNp\",\n    UP_RESISTANCE_DELAY_NPTURN = \"upResistanceDelayNpturn\",\n    DOWN_RESISTANCE_DELAY_NPTURN = \"downResistanceDelayNpturn\",\n    PIERCE_DEFENCE = \"pierceDefence\",\n    UP_GUTS_HP = \"upGutsHp\",\n    DOWN_GUTS_HP = \"downGutsHp\",\n    UP_FUNCGAIN_NP = \"upFuncgainNp\",\n    DOWN_FUNCGAIN_NP = \"downFuncgainNp\",\n    UP_FUNC_HP_REDUCE = \"upFuncHpReduce\",\n    DOWN_FUNC_HP_REDUCE = \"downFuncHpReduce\",\n    UP_DEFENCECOMMAN_DAMAGE = \"upDefencecommanDamage\",\n    DOWN_DEFENCECOMMAN_DAMAGE = \"downDefencecommanDamage\",\n    NPATTACK_PREV_BUFF = \"npattackPrevBuff\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    DONOT_GAINNP = \"donotGainnp\",\n    FIELD_INDIVIDUALITY = \"fieldIndividuality\",\n    DONOT_ACT_COMMANDTYPE = \"donotActCommandtype\",\n    UP_DAMAGE_EVENT_POINT = \"upDamageEventPoint\",\n}\n\nexport default interface Buff {\n    id: number;\n    name: string;\n    detail: string;\n    icon: string;\n    type: BuffType;\n    vals: Trait[];\n    tvals: Trait[];\n    ckSelfIndv: Trait[];\n    ckOpIndv: Trait[];\n    maxRate: number;\n    reverseFunctions: Func[];\n}\n","import {faSearchPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Modal} from \"react-bootstrap\";\nimport ReactJson from \"react-json-view\";\n\ninterface IProps {\n    data: object;\n}\n\ninterface IState {\n    showing: boolean;\n}\n\nclass RawDataViewer extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            showing: false\n        };\n    }\n\n    hide() {\n        this.setState({showing: false});\n    }\n\n    show() {\n        this.setState({showing: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <span className={'text-primary'}\n                      style={{cursor: \"pointer\"}}\n                      onClick={() => {\n                          this.show();\n                      }}>\n                    View Raw\n                    &nbsp;\n                    <FontAwesomeIcon icon={faSearchPlus}/>\n                </span>\n\n                <Modal size={\"lg\"} show={this.state.showing} onHide={() => this.hide()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Raw Data Viewer</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ReactJson src={this.props.data} collapsed={1}/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default RawDataViewer;\n","import React from \"react\";\n\nexport type Renderable = (\n    JSX.Element\n    | string\n    | number\n    | undefined\n    )\n\nexport function asPercent(value: number | undefined, pow: number): string {\n    const decimal = (value ?? 0) / Math.pow(10, pow);\n\n    return `${decimal}%`;\n}\n\nexport function handleNewLine(text?: string): Renderable {\n    if (!text)\n        return \"\";\n\n    return (\n        <span>\n            {joinElements(text.split(\"\\n\"), <br/>)}\n        </span>\n    );\n}\n\nexport function joinElements(elements: Renderable[], separator: Renderable): Renderable[] {\n    const parts: Renderable[] = [],\n        pushElement = function (element: Renderable) {\n            if (element === undefined)\n                return;\n\n            if (typeof element === 'object') {\n                parts.push(element);\n                return;\n            }\n\n            if (parts.length === 0) {\n                parts.push(element.toString());\n                return;\n            }\n\n            const previous = parts[parts.length - 1];\n            if (typeof previous !== 'string') {\n                parts.push(element.toString());\n                return;\n            }\n\n            parts[parts.length - 1] = previous + element.toString();\n        };\n\n    elements.forEach((element, index) => {\n        if (index > 0)\n            pushElement(separator);\n\n        pushElement(element);\n    });\n\n    return parts;\n}\n","import React from \"react\";\nimport Buff, {BuffType} from \"../Api/Data/Buff\";\nimport {DataVal} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {asPercent} from \"../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    buff: Buff;\n    dataVal: DataVal;\n}\n\nclass BuffValueDescriptor extends React.Component<IProps>{\n    render() {\n        let value = \"\";\n\n        switch (this.props.buff.type) {\n            case BuffType.UP_ATK:\n            case BuffType.DOWN_ATK:\n            case BuffType.UP_COMMANDALL:\n            case BuffType.DOWN_COMMANDALL:\n            case BuffType.UP_CRITICALDAMAGE:\n            case BuffType.DOWN_CRITICALDAMAGE:\n            case BuffType.UP_DEFENCE:\n            case BuffType.DOWN_DEFENCE:\n            case BuffType.UP_DROPNP:\n            case BuffType.DOWN_DROPNP:\n            case BuffType.UP_HATE:\n            case BuffType.UP_TOLERANCE:\n            case BuffType.DOWN_TOLERANCE:\n                value = asPercent(this.props.dataVal.Value, 1);\n                break;\n            default:\n                value = this.props.dataVal.Value?.toString() ?? \"\";\n        }\n\n        return value;\n    }\n}\n\nexport default BuffValueDescriptor;\n","import React from \"react\";\nimport Func, {DataVal, FuncType} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {asPercent, joinElements, Renderable} from \"../Helper/OutputHelper\";\nimport BuffValueDescriptor from \"./BuffValueDescriptor\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n    dataVal: DataVal;\n}\n\nclass FuncValueDescriptor extends React.Component<IProps> {\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            dataVal = this.props.dataVal,\n            parts: Renderable[] = [];\n\n        if (dataVal.Rate !== undefined) {\n            parts.push(asPercent(dataVal.Rate, 1));\n        }\n\n        if (dataVal.Value !== undefined) {\n            switch (func.funcType) {\n                case FuncType.ADD_STATE:\n                case FuncType.ADD_STATE_SHORT:\n                    parts.push(<BuffValueDescriptor region={region} buff={func.buffs[0]} dataVal={dataVal}/>);\n                    break;\n                case FuncType.DAMAGE_NP:\n                case FuncType.DAMAGE_NP_INDIVIDUAL:\n                case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                case FuncType.DAMAGE_NP_PIERCE:\n                    parts.push(asPercent(dataVal.Value, 1));\n                    break;\n                case FuncType.GAIN_NP:\n                case FuncType.LOSS_NP:\n                    parts.push(asPercent(dataVal.Value, 2));\n                    break;\n                default:\n                    parts.push(dataVal.Value.toString());\n            }\n        }\n\n        if (dataVal.Correction !== undefined) {\n            switch (func.funcType) {\n                case FuncType.DAMAGE_NP_INDIVIDUAL:\n                case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                    parts.push(asPercent(dataVal.Correction, 1));\n                    break;\n                default:\n                    parts.push(dataVal.Correction.toString());\n            }\n        }\n\n        if (!parts.length)\n            return <span>-</span>;\n\n        return <span>{joinElements(parts, ' + ')}</span>;\n    }\n}\n\nexport default FuncValueDescriptor;\n","import React from \"react\";\nimport Func, {DataVal, DataValField} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport FuncValueDescriptor from \"../Descriptor/FuncValueDescriptor\";\nimport {Renderable} from \"./OutputHelper\";\n\nconst hasChangingDataVals = function (vals: DataVal[]): boolean {\n    if (!vals.length)\n        return false;\n\n    let previous = vals[0];\n    for (let i = 1; i < vals.length; i++) {\n        if (JSON.stringify(previous) !== JSON.stringify(vals[i]))\n            return true;\n\n        previous = vals[i];\n    }\n\n    return false;\n};\n\nconst hasUniqueValues = function (values: (number | undefined)[]): boolean {\n    return new Set(values).size > 1;\n};\n\nexport function describeMutators(region: Region, func: Func): Renderable[] {\n    const isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func),\n        dataVals = isLevel && isOvercharge\n            ? getMixedDataValList(func)\n            : (isOvercharge ? getOverchargeDataValList(func) : getLevelDataValList(func)),\n        mutatingVals = getMutatingFieldValues(dataVals);\n\n    return mutatingVals\n        .map(mutatingVal => <FuncValueDescriptor region={region} func={func} dataVal={mutatingVal}/>);\n}\n\nexport function funcUpdatesByLevel(func: Func): boolean {\n    return hasChangingDataVals(getLevelDataValList(func));\n}\n\nexport function funcUpdatesByOvercharge(func: Func): boolean {\n    return hasChangingDataVals(getOverchargeDataValList(func));\n}\n\nexport function getLevelDataValList(func: Func): DataVal[] {\n    return func.svals ?? [];\n}\n\nexport function getMixedDataValList(func: Func): DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, i, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getMutatingFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return hasUniqueValues(values);\n    });\n}\n\nexport function getMutatingFieldValues(vals: DataVal[]): DataVal[] {\n    if (!vals.length)\n        return [];\n\n    const fields = getMutatingFieldNames(vals);\n\n    return vals.map(val => {\n        const mutatingVals: DataVal = {};\n\n        for (let x in fields) {\n            mutatingVals[fields[x]] = val[fields[x]];\n        }\n\n        return mutatingVals;\n    });\n}\n\nexport function getOverchargeDataValList(func: Func): DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, 1, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getStaticFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return !hasUniqueValues(values);\n    });\n}\n\nexport function getStaticFieldValues(vals: DataVal[]): DataVal {\n    if (!vals.length)\n        return {};\n\n    const fields = getStaticFieldNames(vals),\n        staticVals: DataVal = {};\n\n    for (let x in fields) {\n        staticVals[fields[x]] = vals[0][fields[x]];\n    }\n\n    return staticVals;\n}\n\nexport function getTargetVersionValues(func: Func, level: number, overcharge: number = 1): DataVal | undefined {\n    if (func.svals === undefined)\n        return undefined;\n\n    let dataVals;\n\n    if (overcharge === 2 && func.svals2)\n        dataVals = func.svals2;\n    else if (overcharge === 3 && func.svals3)\n        dataVals = func.svals3;\n    else if (overcharge === 4 && func.svals4)\n        dataVals = func.svals4;\n    else if (overcharge === 5 && func.svals5)\n        dataVals = func.svals5;\n    else\n        dataVals = func.svals;\n\n    return dataVals[level - 1];\n}\n","import {Renderable} from \"../../Helper/OutputHelper\";\n\nexport class FuncDescriptorSection {\n    public showing: boolean = true;\n    public parts: Renderable[] = [];\n    public preposition?: string;\n\n    constructor(preposition?: string) {\n        this.preposition = preposition;\n    }\n}\n\nexport class FuncDescriptorSections {\n    public chance = new FuncDescriptorSection();\n    public action = new FuncDescriptorSection();\n    public amount = new FuncDescriptorSection('of');\n    public affects = new FuncDescriptorSection();\n    public target = new FuncDescriptorSection('to');\n    public duration = new FuncDescriptorSection();\n    public scaling = new FuncDescriptorSection();\n}\n","enum EntityType {\n    NORMAL = \"normal\",\n    HEROINE = \"heroine\",\n    COMBINE_MATERIAL = \"combineMaterial\",\n    ENEMY = \"enemy\",\n    ENEMY_COLLECTION = \"enemyCollection\",\n    SERVANT_EQUIP = \"servantEquip\",\n    STATUS_UP = \"statusUp\",\n    SVT_EQUIP_MATERIAL = \"svtEquipMaterial\",\n    ENEMY_COLLECTION_DETAIL = \"enemyCollectionDetail\",\n    ALL = \"all\",\n    COMMAND_CODE = \"commandCode\",\n}\n\nexport default EntityType;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Buff, {BuffType} from \"../Api/Data/Buff\";\nimport Region from \"../Api/Data/Region\";\nimport BuffIcon from \"../Component/BuffIcon\";\n\ninterface IProps {\n    region: Region;\n    buff: Buff;\n}\n\nclass BuffDescriptor extends React.Component<IProps>{\n    render() {\n        const buff = this.props.buff;\n\n        let description = buff.name;\n        if (buff.type === BuffType.DONOT_ACT) {\n            if (buff.vals.filter(trait => trait.id === 3012).length > 0) {\n                description = 'Charm';\n            }\n        }\n\n        return (\n            <Link to={`/${this.props.region}/buff/${buff.id}`}>\n                [{description} <BuffIcon location={buff.icon}/>]\n            </Link>\n        );\n    }\n}\n\nexport default BuffDescriptor;\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Region from \"../Api/Data/Region\";\nimport Trait from \"../Api/Data/Trait\";\n\ninterface IProps {\n    region: Region;\n    trait: Trait | number;\n}\n\ninterface IState {\n    id: number;\n    trait?: Trait;\n}\n\nclass TraitDescriptor extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            id: typeof props.trait === \"number\" ? props.trait : props.trait.id,\n            trait: typeof props.trait === \"number\" ? undefined : props.trait,\n        };\n    }\n\n    async componentDidMount() {\n        if (this.state.trait)\n            return;\n\n        const traitMap = await Connection.traitMap(this.props.region);\n        if (traitMap[this.state.id] !== undefined)\n            this.setState({\n                trait: {\n                    id: this.state.id,\n                    name: traitMap[this.state.id]\n                }\n            });\n    }\n\n    render() {\n        return (\n            <span>\n                [\n                {this.state.trait ? this.state.trait.name : 'unknown'}\n                {this.state.trait === undefined || this.state.trait.name === 'unknown' ? `(${this.state.id})` : null}\n                ]\n            </span>\n        );\n    }\n}\n\nexport default TraitDescriptor;\n","import Func, {DataVal, FuncTargetType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nconst targetMap = new Map<FuncTargetType, string>([\n    [FuncTargetType.SELF, 'self'],\n    [FuncTargetType.PT_ONE, 'party member'],\n    // PT_ANOTHER\n    [FuncTargetType.PT_ALL, 'party'],\n    [FuncTargetType.ENEMY, 'enemy'],\n    // ENEMY_ANOTHER\n    [FuncTargetType.ENEMY_ALL, 'enemies'],\n    [FuncTargetType.PT_FULL, 'party (including reserve)'],\n    [FuncTargetType.ENEMY_FULL, 'enemies (including reserve)'],\n    [FuncTargetType.PT_OTHER, 'party except self'],\n    [FuncTargetType.PT_ONE_OTHER, 'other party member'],\n    [FuncTargetType.PT_RANDOM, 'random party member'],\n    [FuncTargetType.ENEMY_OTHER, 'other enemies'],\n    [FuncTargetType.ENEMY_RANDOM, 'random enemy'],\n    [FuncTargetType.PT_OTHER_FULL, 'party except self (including reserve)'],\n    [FuncTargetType.ENEMY_OTHER_FULL, 'other enemies (including reserve)'],\n    [FuncTargetType.PTSELECT_ONE_SUB, 'active party member and reserve party member'],\n    [FuncTargetType.PTSELECT_SUB, 'reserve party member'],\n    // PT_ONE_ANOTHER_RANDOM\n    [FuncTargetType.PT_ONE_ANOTHER_RANDOM, 'other random party member'],\n    [FuncTargetType.PT_SELF_ANOTHER_RANDOM, 'other random party member (or self)'],\n    [FuncTargetType.ENEMY_ONE_ANOTHER_RANDOM, 'other random enemy'],\n    [FuncTargetType.PT_SELF_ANOTHER_FIRST, 'first other party member (or self)'],\n    // PT_SELF_BEFORE\n    // PT_SELF_AFTER\n    // PT_SELF_ANOTHER_LAST\n    [FuncTargetType.COMMAND_TYPE_SELF_TREASURE_DEVICE, 'target noble phantasm version'],\n]);\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.target,\n        parts = section.parts;\n\n    if (targetMap.has(func.funcTargetType)) {\n        parts.push(targetMap.get(func.funcTargetType));\n    } else {\n        parts.push(func.funcTargetType);\n    }\n}\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Func from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {\n    funcUpdatesByLevel,\n    funcUpdatesByOvercharge,\n    getLevelDataValList,\n    getMixedDataValList,\n    getOverchargeDataValList,\n    getStaticFieldValues\n} from \"../Helper/FuncHelper\";\nimport {joinElements, Renderable} from \"../Helper/OutputHelper\";\nimport {FuncDescriptorSections} from \"./Func/FuncDescriptorSections\";\nimport handleActionSection from \"./Func/handleActionSection\";\nimport handleAffectsSection from \"./Func/handleAffectsSection\";\nimport handleAmountSection from \"./Func/handleAmountSection\";\nimport handleChanceSection from \"./Func/handleChanceSection\";\nimport handleDurationSection from \"./Func/handleDurationSection\";\nimport handleScalingSection from \"./Func/handleScalingSection\";\nimport handleTargetSection from \"./Func/handleTargetSection\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n}\n\nclass FuncDescriptor extends React.Component<IProps> {\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            isLevel = funcUpdatesByLevel(func),\n            isOvercharge = funcUpdatesByOvercharge(func),\n            dataVals = isLevel && isOvercharge\n                ? getMixedDataValList(func)\n                : (isOvercharge ? getOverchargeDataValList(func) : getLevelDataValList(func)),\n            staticValues = getStaticFieldValues(dataVals);\n\n        const sections = new FuncDescriptorSections();\n\n        handleChanceSection(region, sections, func, staticValues);\n        handleActionSection(region, sections, func, staticValues);\n        handleAmountSection(region, sections, func, staticValues);\n        handleAffectsSection(region, sections, func, staticValues);\n        handleTargetSection(region, sections, func, staticValues);\n        handleDurationSection(region, sections, func, staticValues);\n        handleScalingSection(region, sections, func, staticValues);\n\n        let parts: Renderable[] = [];\n\n        Object.values(sections).forEach(section => {\n            if (!section.showing)\n                return;\n\n            if (section.preposition)\n                parts.push(section.preposition);\n\n            parts = parts.concat(section.parts);\n        });\n\n        parts.push(\n            <Link to={`/${region}/func/${func.funcId}`}>\n                <FontAwesomeIcon icon={faShare}/>\n            </Link>\n        );\n\n        parts = joinElements(parts, ' ');\n\n        return (\n            <span>\n                {parts.map((element, index) => {\n                    return <React.Fragment key={index}>{element}</React.Fragment>;\n                })}\n            </span>\n        );\n    }\n}\n\nexport default FuncDescriptor;\n","import Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.chance,\n        parts = section.parts;\n\n    if (dataVal.Rate && dataVal.Rate !== 1000) {\n        parts.push((dataVal.Rate / 10) + '% Chance to');\n    } else if (!dataVal.Rate && func.funcType !== FuncType.NONE) {\n        parts.push('Chance to');\n    } else {\n        section.showing = false;\n    }\n}\n","import React from \"react\";\nimport Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport BuffDescriptor from \"../BuffDescriptor\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    if (func.funcType === FuncType.ADD_STATE || func.funcType === FuncType.ADD_STATE_SHORT) {\n        parts.push('Apply');\n        func.buffs.forEach((buff, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<BuffDescriptor region={region} buff={buff}/>);\n        });\n\n        sections.target.preposition = 'on';\n    } else if (func.funcType === FuncType.SUB_STATE) {\n        parts.push('Remove effects');\n\n        if (func.traitVals?.length) {\n            parts.push('with');\n\n            func.traitVals.forEach((trait, index) => {\n                if (index > 0)\n                    parts.push('&');\n\n                parts.push(<TraitDescriptor region={region} trait={trait}/>);\n            });\n        }\n\n        sections.target.preposition = 'for';\n    } else if (func.funcType === FuncType.DAMAGE_NP) {\n        parts.push('Deal damage');\n\n        sections.amount.preposition = 'for';\n    } else if (\n        func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL\n        || func.funcType === FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX\n    ) {\n        if (dataVal.Target) {\n            parts.push(\n                <span>Deal damage (additional to targets with {\n                    <TraitDescriptor region={region} trait={dataVal.Target}/>\n                })</span>\n            );\n        } else {\n            parts.push('Deal damage');\n        }\n\n        sections.amount.preposition = 'for';\n    } else if (func.funcType === FuncType.DAMAGE_NP_PIERCE) {\n        parts.push('Deal damage that pierces defence');\n\n        sections.amount.preposition = 'for';\n    } else if (func.funcType === FuncType.DELAY_NPTURN) {\n        parts.push('Drain Charge');\n\n        sections.target.preposition = 'from';\n    } else if (func.funcType === FuncType.GAIN_HP) {\n        parts.push('Gain HP');\n\n        sections.target.preposition = 'on';\n    } else if (func.funcType === FuncType.GAIN_NP) {\n        parts.push('Charge NP');\n\n        sections.target.preposition = 'for';\n    } else if (func.funcType === FuncType.GAIN_STAR) {\n        parts.push('Gain Critical Stars');\n\n        sections.target.showing = false;\n    } else if (func.funcType === FuncType.INSTANT_DEATH) {\n        parts.push('Apply Death');\n    } else if (func.funcType === FuncType.LOSS_HP_SAFE) {\n        parts.push('Lose HP');\n\n        sections.target.showing = false;\n    } else if (func.funcType === FuncType.NONE) {\n        parts.push('No Effect');\n\n        sections.target.showing = false;\n    } else {\n        parts.push(func.funcType);\n    }\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {BuffType} from \"../../Api/Data/Buff\";\nimport Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport BuffValueDescriptor from \"../BuffValueDescriptor\";\nimport FuncValueDescriptor from \"../FuncValueDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.amount,\n        parts = section.parts;\n\n    if (!dataVal.Value) {\n        section.showing = false;\n        return;\n    }\n\n    if (func.buffs[0]?.type === BuffType.COMMANDATTACK_FUNCTION) {\n        section.preposition = 'that triggers';\n        parts.push(\n            <Link to={`/${region}/skill/${dataVal.Value}`}>\n                [Skill: {dataVal.Value}]\n            </Link>\n        )\n    } else if (func.buffs[0]?.type === BuffType.NPATTACK_PREV_BUFF) {\n        section.preposition = 'that triggers';\n        parts.push(\n            <Link to={`/${region}/skill/${dataVal.SkillID}`}>\n                [Skill: {dataVal.SkillID}]\n            </Link>\n        )\n    } else if (func.buffs[0]) {\n        parts.push(<BuffValueDescriptor region={region} buff={func.buffs[0]} dataVal={dataVal}/>);\n    } else {\n        // there are some properties that we don't want back as the description\n        const prunedValues = {...dataVal};\n        prunedValues.Rate = undefined;\n\n        parts.push(<FuncValueDescriptor region={region} func={func} dataVal={dataVal}/>);\n    }\n}\n","import React from \"react\";\nimport Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.affects,\n        parts = section.parts;\n\n    if (!func.functvals.length) {\n        section.showing = false;\n        return;\n    }\n\n    parts.push('for all');\n    func.functvals.forEach((trait, index) => {\n        if (index > 0)\n            parts.push('&');\n\n        parts.push(<TraitDescriptor region={region} trait={trait}/>);\n    });\n}\n","import Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.duration,\n        parts = section.parts;\n\n    if (dataVal.Count && dataVal.Count > 0 && dataVal.Turn && dataVal.Turn > 0) {\n        const countDesc = dataVal.Count === 1 ? '1 Time' : `${dataVal.Count} Times`,\n            turnDesc = dataVal.Turn === 1 ? '1 Turn' : `${dataVal.Turn} Turns`;\n\n        parts.push(`(${turnDesc}, ${countDesc})`);\n    } else if (dataVal.Turn && dataVal.Turn > 0) {\n        parts.push(dataVal.Turn === 1 ? '(1 Turn)' : `(${dataVal.Turn} Turns)`);\n    } else if (dataVal.Count && dataVal.Count > 0) {\n        parts.push(dataVal.Count === 1 ? '(1 Time)' : `(${dataVal.Count} Times)`);\n    } else {\n        section.showing = false;\n    }\n}\n","import Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {funcUpdatesByLevel, funcUpdatesByOvercharge} from \"../../Helper/FuncHelper\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.scaling,\n        parts = section.parts,\n        isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func);\n\n    if (!isLevel && !isOvercharge) {\n        section.showing = false;\n        return;\n    }\n\n    if (isLevel) {\n        parts.push('<LEVEL>');\n    }\n\n    if (isOvercharge) {\n        parts.push('<OVERCHARGE>');\n    }\n}\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Buff from \"../Api/Data/Buff\";\nimport Region from \"../Api/Data/Region\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport DataTable from \"../Component/DataTable\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\nimport FuncDescriptor from \"../Descriptor/FuncDescriptor\";\nimport {joinElements} from \"../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    buff?: Buff;\n}\n\nclass BuffPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.loadBuff();\n    }\n\n    async loadBuff() {\n        const buff = await Connection.buff(this.props.region, this.props.id);\n\n        this.setState({\n            loading: false,\n            buff: buff,\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.buff)\n            return <Loading/>;\n\n        const buff = this.state.buff;\n\n        return (\n            <div>\n                <h1>\n                    <BuffIcon location={buff.icon} height={48}/>\n                    &nbsp;\n                    {buff.name}\n                </h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={buff}/>,\n                    \"ID\": buff.id,\n                    \"Name\": buff.name,\n                    \"Detail\": buff.detail,\n                    \"Type\": buff.type,\n                    \"Gained Traits\": (\n                        <div>\n                            {joinElements(buff.vals.map(trait => trait.name), ', ')}\n                        </div>\n                    ),\n                }}/>\n\n                <h3>Related Functions</h3>\n                {buff.reverseFunctions.map((func, index) => {\n                    return (\n                        <p key={index}>\n                            <FuncDescriptor region={this.props.region} func={func}/>\n                        </p>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default BuffPage;\n","import React from \"react\";\n\nconst assetMap = new Map<number, string>([\n    [1, './assets/star1.png'],\n    [2, './assets/star2.png'],\n    [3, './assets/star3.png'],\n    [4, './assets/star4.png'],\n    [5, './assets/star5.png'],\n]);\n\ninterface IProps {\n    rarity: number;\n    height?: number;\n}\n\nclass RarityDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <span>\n                {assetMap.has(this.props.rarity) ? (\n                    <img alt={`${this.props.rarity} star(s)`}\n                         src={assetMap.get(this.props.rarity)}\n                         style={{height: this.props.height ?? 18}}/>\n                ) : null}\n            </span>\n        );\n    }\n}\n\nexport default RarityDescriptor;\n","import React from \"react\";\nimport CraftEssence from \"../../Api/Data/CraftEssence\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\nimport RarityDescriptor from \"../../Descriptor/RarityDescriptor\";\n\ninterface IProps {\n    craftEssence: CraftEssence;\n}\n\nclass CraftEssenceMainData extends React.Component<IProps> {\n    render() {\n        const craftEssence = this.props.craftEssence;\n\n        return (\n            <div>\n                <h1>\n                    {craftEssence.name}\n                </h1>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={craftEssence}/>,\n                    \"ID\": craftEssence.id,\n                    \"Collection\": craftEssence.collectionNo,\n                    \"Name\": craftEssence.name,\n                    \"Rarity\": <RarityDescriptor rarity={craftEssence.rarity}/>,\n                    \"Cost\": craftEssence.cost,\n                    \"Max Lv.\": craftEssence.lvMax,\n                    \"Base Hp\": craftEssence.hpBase,\n                    \"Base Atk\": craftEssence.atkBase,\n                    \"Max Hp\": craftEssence.hpMax,\n                    \"Max Atk\": craftEssence.atkMax,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssenceMainData;\n","import React from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport Region from \"../../Api/Data/Region\";\nimport BasicListEntity from \"../../Api/Data/BasicListEntity\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps extends RouteComponentProps {\n    region: Region;\n    id: number;\n    craftEssences: BasicListEntity[];\n}\n\nclass CraftEssencePicker extends React.Component<IProps> {\n    private changeCraftEssence(id: number) {\n        this.props.history.push(`/${this.props.region}/craft-essence/${id}`);\n    }\n\n    render() {\n        return (\n            <div>\n                Jump to:\n                <FormControl as={\"select\"} custom\n                             onChange={(ev: Event) => {\n                                 this.changeCraftEssence(parseInt(ev.target.value));\n                             }}\n                             value={this.props.id}>\n                    {this.props.craftEssences\n                        .slice()\n                        .reverse()\n                        .map((craftEssence, index) => {\n                            return (\n                                <option key={index} value={craftEssence.collectionNo}>\n                                    {craftEssence.name}\n                                </option>\n                            );\n                        })\n                    }\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(CraftEssencePicker);\n","import React from \"react\";\nimport {AssetMap} from \"../../Api/Data/AssetCollection\";\nimport CraftEssence from \"../../Api/Data/CraftEssence\";\n\nimport \"./CraftEssencePortrait.css\";\n\ninterface IProps {\n    craftEssence: CraftEssence;\n}\n\ninterface IState {\n    assetMap?: AssetMap;\n    assetKey?: string;\n}\n\nclass CraftEssencePortrait extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        const assetMap = (\n                props.craftEssence.extraAssets.charaGraph.ascension\n                ?? Object.values(props.craftEssence.extraAssets.charaGraph).shift()\n            ),\n            assetKey = assetMap === undefined ? undefined : Object.keys(assetMap).shift();\n\n        this.state = {assetMap, assetKey};\n    }\n\n    render() {\n        return (\n            <div>\n                <img alt={this.props.craftEssence.name}\n                     id={'craft-essence-portrait'}\n                     src={(\n                         this.state.assetMap && this.state.assetKey\n                             ? this.state.assetMap[this.state.assetKey]\n                             : undefined\n                     )}/>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssencePortrait;\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Region from \"../Api/Data/Region\";\n\ninterface IProps {\n    region: Region;\n    questId: number;\n    questPhase: number;\n}\n\nclass QuestDescriptor extends React.Component<IProps>{\n    render() {\n        const prefix = Math.floor(this.props.questId / 1000000);\n        let type = \"\";\n\n        switch (prefix) {\n            case 91:\n                type = 'Interlude';\n                break;\n            case 94:\n                type = 'Strengthening';\n                break;\n            default:\n                type = 'Main Quest';\n                break;\n        }\n\n        return (\n            <Link to={`/${this.props.region}/quest/${this.props.questId}/${this.props.questPhase}`}>\n                {type} Quest <FontAwesomeIcon icon={faShare} />\n            </Link>\n        );\n    }\n}\n\nexport default QuestDescriptor;\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Region from \"../Api/Data/Region\";\nimport Skill from \"../Api/Data/Skill\";\nimport BuffIcon from \"../Component/BuffIcon\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n    iconHeight?: number;\n}\n\nclass SkillDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/skill/${this.props.skill.id}`}>\n                <BuffIcon location={this.props.skill.icon} height={this.props.iconHeight}/>\n                {' '}\n                {this.props.skill.name}\n                {' '}\n                <FontAwesomeIcon icon={faShare} />\n            </Link>\n        );\n    }\n}\n\nexport default SkillDescriptor;\n","import React from \"react\";\nimport {Alert, Table} from \"react-bootstrap\";\nimport Region from \"../../Api/Data/Region\";\nimport Skill from \"../../Api/Data/Skill\";\nimport FuncDescriptor from \"../../Descriptor/FuncDescriptor\";\nimport QuestDescriptor from \"../../Descriptor/QuestDescriptor\";\nimport SkillDescriptor from \"../../Descriptor/SkillDescriptor\";\nimport {handleNewLine} from \"../../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n}\n\nclass CraftEssenceSkill extends React.Component<IProps, any> {\n    render() {\n        const skill = this.props.skill;\n        return (\n            <div>\n                <h3>\n                    <SkillDescriptor region={this.props.region} skill={skill} iconHeight={33}/>\n                </h3>\n\n                {skill.condQuestId && skill.condQuestPhase ? (\n                    <Alert variant={'primary'}>\n                        Available after <QuestDescriptor region={this.props.region}\n                                                         questId={skill.condQuestId}\n                                                         questPhase={skill.condQuestPhase}/>\n                    </Alert>\n                ) : null}\n\n                <p>{handleNewLine(skill.detail)}</p>\n\n                <Table responsive>\n                    <thead>\n                    <tr>\n                        <th>Effect</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {skill.functions.map((func, index) => {\n                        return (\n                            <tr key={index}>\n                                <td>\n                                    <FuncDescriptor region={this.props.region} func={func}/>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssenceSkill;\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport BasicListEntity from \"../Api/Data/BasicListEntity\";\nimport CraftEssence from \"../Api/Data/CraftEssence\";\nimport Region from \"../Api/Data/Region\";\nimport TraitMap from \"../Api/Data/TraitMap\";\nimport Loading from \"../Component/Loading\";\nimport CraftEssenceMainData from \"./CraftEssence/CraftEssenceMainData\";\nimport CraftEssencePicker from \"./CraftEssence/CraftEssencePicker\";\nimport CraftEssencePortrait from \"./CraftEssence/CraftEssencePortrait\";\nimport CraftEssenceSkill from \"./CraftEssence/CraftEssenceSkill\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    id: number;\n    craftEssences: BasicListEntity[];\n    craftEssence?: CraftEssence;\n}\n\nclass CraftEssencePage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            id: this.props.id,\n            craftEssences: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadServant();\n    }\n\n    async loadServant() {\n        let [craftEssences, craftEssence] = await Promise.all<BasicListEntity[], CraftEssence, TraitMap>([\n            Connection.craftEssenceList(this.props.region),\n            Connection.craftEssence(this.props.region, this.state.id),\n            Connection.traitMap(this.props.region)\n        ]);\n\n        this.setState({\n            loading: false,\n            craftEssences,\n            craftEssence\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.craftEssence)\n            return <Loading/>;\n\n        return (\n            <div>\n                <CraftEssencePicker region={this.props.region}\n                                    craftEssences={this.state.craftEssences}\n                                    id={this.state.craftEssence.collectionNo}/>\n                <hr/>\n\n                <Row>\n                    <Col xs={{span: 12, order: 2}} lg={{span: 6, order: 1}}>\n                        <CraftEssenceMainData craftEssence={this.state.craftEssence}/>\n                    </Col>\n                    <Col xs={{span: 12, order: 1}} lg={{span: 6, order: 2}}>\n                        <CraftEssencePortrait craftEssence={this.state.craftEssence}/>\n                    </Col>\n                </Row>\n\n                <br/>\n                <Row>\n                    {this.state.craftEssence.skills\n                        .filter(skill => skill.num === 1)\n                        .map((skill, index) => {\n                            return (\n                                <Col key={index} xs={12} lg={6}>\n                                    <CraftEssenceSkill region={this.props.region} skill={skill}/>\n                                </Col>\n                            );\n                        })}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssencePage;\n","import React from \"react\";\nimport EntityType from \"../Api/Data/EntityType\";\n\ninterface IProps {\n    type: EntityType;\n    rarity: number;\n    location: string;\n    height?: number;\n}\n\nclass FaceIcon extends React.Component<IProps> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location}\n                 style={this.props.height ? {height: this.props.height} : undefined}/>\n        );\n    }\n\n}\n\nexport default FaceIcon;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport BasicListEntity from \"../Api/Data/BasicListEntity\";\nimport Region from \"../Api/Data/Region\";\nimport FaceIcon from \"../Component/FaceIcon\";\nimport Loading from \"../Component/Loading\";\nimport RarityDescriptor from \"../Descriptor/RarityDescriptor\";\n\nimport \"./CraftEssencesPage.css\";\n\ninterface Event extends React.MouseEvent<HTMLInputElement> {\n\n}\n\ninterface IProps {\n    region: Region;\n}\n\ninterface IState {\n    loading: boolean;\n    craftEssences: BasicListEntity[];\n    activeRarityFilters: number[];\n}\n\nclass CraftEssencesPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            craftEssences: [],\n            activeRarityFilters: [1, 2, 3, 4, 5],\n        };\n    }\n\n    componentDidMount() {\n        Connection.craftEssenceList(this.props.region).then(list => {\n            this.setState({\n                loading: false,\n                craftEssences: list\n            });\n        });\n    }\n\n    private toggleRarityFilter(rarity: number): void {\n        const exists = this.state.activeRarityFilters.indexOf(rarity) !== -1;\n\n        if (exists) {\n            this.setState({\n                activeRarityFilters: this.state.activeRarityFilters.filter(activeRarity => activeRarity !== rarity)\n            });\n        } else {\n            this.setState({\n                activeRarityFilters: [\n                    ...this.state.activeRarityFilters,\n                    rarity\n                ]\n            });\n        }\n    }\n\n    private craftEssences(): BasicListEntity[] {\n        let list = this.state.craftEssences.slice().reverse();\n\n        if (this.state.activeRarityFilters.length !== 5) {\n            list = list.filter(entity => {\n                return this.state.activeRarityFilters.indexOf(entity.rarity) !== -1;\n            });\n        }\n\n        return list;\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading/>;\n\n        return (\n            <div id={'craft-essences'}>\n                <p className={'text-center'}>\n                    {[1, 2, 3, 4, 5].map(rarity => {\n                        const active = this.state.activeRarityFilters.indexOf(rarity) !== -1;\n\n                        return (\n                            <span key={rarity}\n                                  className={'filter'}\n                                  style={{opacity: active ? 1 : 0.5}}\n                                  onClick={(ev: Event) => {\n                                      this.toggleRarityFilter(rarity);\n                                  }}>\n                                <RarityDescriptor rarity={rarity} height={20}/>\n                            </span>\n                        );\n                    })}\n                </p>\n\n                <hr/>\n\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th style={{textAlign: \"center\", width: '1px'}}>#</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Thumbnail</th>\n                        <th>Name</th>\n                        <th>Rarity</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.craftEssences()\n                        .map((craftEssence, index) => {\n                            const route = `/${this.props.region}/craft-essence/${craftEssence.collectionNo}`;\n\n                            return <tr key={index}>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        {craftEssence.collectionNo}\n                                    </Link>\n                                </td>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        <FaceIcon type={craftEssence.type}\n                                                  rarity={craftEssence.rarity}\n                                                  location={craftEssence.face}\n                                                  height={50}/>\n                                    </Link>\n                                </td>\n                                <td>\n                                    <Link to={route}>\n                                        {craftEssence.name}\n                                    </Link>\n                                </td>\n                                <td>\n                                    <RarityDescriptor rarity={craftEssence.rarity}/>\n                                </td>\n                            </tr>\n                        })\n                    }\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssencesPage;\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport NoblePhantasm from \"../Api/Data/NoblePhantasm\";\nimport Region from \"../Api/Data/Region\";\n\ninterface IProps {\n    region: Region;\n    noblePhantasm: NoblePhantasm;\n}\n\nclass NoblePhantasmDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/noble-phantasm/${this.props.noblePhantasm.id}`}>\n                {this.props.noblePhantasm.name}\n                {' '}\n                <FontAwesomeIcon icon={faShare}/>\n            </Link>\n        );\n    }\n}\n\nexport default NoblePhantasmDescriptor;\n","import React from \"react\";\nimport Func from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport BuffDescriptor from \"../../Descriptor/BuffDescriptor\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\nimport TraitDescriptor from \"../../Descriptor/TraitDescriptor\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n}\n\nclass FuncMainData extends React.Component<IProps> {\n    render() {\n        const func = this.props.func;\n\n        return (\n            <DataTable data={{\n                \"Raw\": <RawDataViewer data={func}/>,\n                \"ID\": func.funcId,\n                \"Type\": func.funcType,\n                \"Target\": func.funcTargetType,\n                \"Affects Players/Enemies\": func.funcTargetTeam,\n                \"Popup Text\": func.funcPopupText,\n                \"Affects Traits\": (\n                    <div>\n                        {func.traitVals?.map((trait, index) => {\n                            return <TraitDescriptor key={index} region={this.props.region} trait={trait}/>;\n                        })}\n                    </div>\n                ),\n                \"Buffs\": (\n                    <div>\n                        {func.buffs.map((buff, index) => {\n                            return <BuffDescriptor key={index} region={this.props.region} buff={buff}/>;\n                        })}\n                    </div>\n                )\n            }}/>\n        );\n    }\n}\n\nexport default FuncMainData;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport Func from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport NoblePhantasmDescriptor from \"../Descriptor/NoblePhantasmDescriptor\";\nimport SkillDescriptor from \"../Descriptor/SkillDescriptor\";\nimport FuncMainData from \"./Func/FuncMainData\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    func?: Func;\n}\n\nclass FuncPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.loadFunc();\n    }\n\n    async loadFunc() {\n        try {\n            const func = await Connection.func(this.props.region, this.props.id);\n\n            this.setState({\n                loading: false,\n                func: func,\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error} />;\n\n        if (this.state.loading || !this.state.func)\n            return <Loading/>;\n\n        const func = this.state.func;\n\n        return (\n            <div>\n                <h1>\n                    {func.funcPopupIcon ? (\n                        <span>\n                            <BuffIcon location={func.funcPopupIcon} height={48}/>\n                            &nbsp;\n                        </span>\n                    ) : null}\n                    Function: {this.props.id}\n                </h1>\n                <br/>\n\n                <FuncMainData region={this.props.region} func={func}/>\n\n                <Row>\n                    <Col xs={12} lg={6}>\n                        <h3>Related Skills</h3>\n                        {func.reverseSkills.map((skill, index) => {\n                            return (\n                                <p key={index}>\n                                    <SkillDescriptor region={this.props.region} skill={skill}/>\n                                </p>\n                            )\n                        })}\n                    </Col>\n                    <Col xs={12} lg={6}>\n                        <h3>Related Noble Phantasms</h3>\n                        {func.reverseTds.map((noblePhantasm, index) => {\n                            return (\n                                <p key={index}>\n                                    <NoblePhantasmDescriptor region={this.props.region} noblePhantasm={noblePhantasm}/>\n                                </p>\n                            )\n                        })}\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default FuncPage;\n","enum ClassName {\n    SABER = \"saber\",\n    ARCHER = \"archer\",\n    LANCER = \"lancer\",\n    RIDER = \"rider\",\n    CASTER = \"caster\",\n    ASSASSIN = \"assassin\",\n    BERSERKER = \"berserker\",\n    SHIELDER = \"shielder\",\n    RULER = \"ruler\",\n    ALTER_EGO = \"alterEgo\",\n    AVENGER = \"avenger\",\n    GRAND_CASTER = \"grandCaster\",\n    BEAST_II = \"beastII\",\n    BEAST_I = \"beastI\",\n    MOON_CANCER = \"moonCancer\",\n    BEAST_IIIR = \"beastIIIR\",\n    FOREIGNER = \"foreigner\",\n    BEAST_IIIL = \"beastIIIL\",\n    BEAST_UNKNOWN = \"beastUnknown\",\n    ALL = \"ALL\",\n    EXTRA = \"EXTRA\",\n}\n\nexport default ClassName;\n","import React from \"react\";\nimport ClassName from \"../Api/Data/ClassName\";\n\nconst classTypes = new Map<number, number>([\n    [1, 1],\n    [2, 1],\n    [3, 2],\n    [4, 3],\n    [5, 3],\n]);\nconst unknownClassType = 3;\nconst classIds = new Map<ClassName, number>([\n    [ClassName.SABER, 1],\n    [ClassName.ARCHER, 2],\n    [ClassName.LANCER, 3],\n    [ClassName.RIDER, 4],\n    [ClassName.CASTER, 5],\n    [ClassName.ASSASSIN, 6],\n    [ClassName.BERSERKER, 7],\n    [ClassName.SHIELDER, 8],\n    [ClassName.RULER, 9],\n    [ClassName.ALTER_EGO, 10],\n    [ClassName.AVENGER, 11],\n    [ClassName.MOON_CANCER, 23],\n    [ClassName.FOREIGNER, 25],\n    [ClassName.GRAND_CASTER, 5],\n    [ClassName.BEAST_I, 20],\n    [ClassName.BEAST_II, 20],\n    [ClassName.BEAST_IIIL, 20],\n    [ClassName.BEAST_IIIR, 20],\n    [ClassName.BEAST_UNKNOWN, 20],\n\n    [ClassName.ALL, 1001],\n    [ClassName.EXTRA, 1002],\n]);\nconst unknownClassId = 12;\n\ninterface IProps {\n    className: ClassName;\n    rarity?: number;\n    height?: number;\n}\n\nclass ClassIcon extends React.Component<IProps> {\n    render() {\n        return (\n            <img alt={''} src={this.location()}\n                 style={{height: this.props.height ?? 24}}/>\n        );\n    }\n\n    private location(): string {\n        let classId = classIds.has(this.props.className) ? classIds.get(this.props.className) : unknownClassId,\n            rarity = this.props.rarity ?? 5,\n            type = classTypes.has(rarity) ? classTypes.get(rarity) : unknownClassType;\n\n        return `https://assets.atlasacademy.io/GameData/NA/ClassIcons/class${type}_${classId}.png`;\n    }\n}\n\nexport default ClassIcon;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Region from \"../Api/Data/Region\";\nimport Servant from \"../Api/Data/Servant\";\nimport ClassIcon from \"../Component/ClassIcon\";\n\ninterface IProps {\n    region: Region;\n    servant: Servant;\n    iconHeight?: number;\n}\n\nclass ServantDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/servant/${this.props.servant.id}`}>\n                <ClassIcon className={this.props.servant.className}\n                           rarity={this.props.servant.rarity}\n                           height={this.props.iconHeight}/>\n                {' '}\n                {this.props.servant.name}\n            </Link>\n        );\n    }\n}\n\nexport default ServantDescriptor;\n","import React from \"react\";\nimport {DataVal} from \"../../Api/Data/Func\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\n\ninterface IProps {\n    dataVal: DataVal;\n}\n\nclass DataValMainData extends React.Component<IProps> {\n    render() {\n        return (\n            <DataTable data={{\n                \"Raw\": <RawDataViewer data={this.props.dataVal}/>,\n                ...this.props.dataVal\n            }}/>\n        );\n    }\n}\n\nexport default DataValMainData;\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport NoblePhantasm from \"../../Api/Data/NoblePhantasm\";\nimport Region from \"../../Api/Data/Region\";\nimport FuncDescriptor from \"../../Descriptor/FuncDescriptor\";\nimport {getTargetVersionValues} from \"../../Helper/FuncHelper\";\nimport DataValMainData from \"../Func/DataValMainData\";\nimport FuncMainData from \"../Func/FuncMainData\";\n\ninterface IProps {\n    region: Region;\n    noblePhantasm: NoblePhantasm;\n    level: number;\n    overcharge: number;\n}\n\nclass NoblePhantasmVersion extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {this.props.noblePhantasm.functions.map((func, index) => {\n                    const dataVal = getTargetVersionValues(func, this.props.level, this.props.overcharge);\n\n                    return (\n                        <div key={index}>\n                            <h3>Effect #{index + 1}</h3>\n                            <p>\n                                <FuncDescriptor region={this.props.region} func={func}/>\n                            </p>\n\n                            <Row>\n                                <Col xs={12} md={6}>\n                                    <h5>Function</h5>\n                                    <FuncMainData region={this.props.region} func={func}/>\n                                </Col>\n                                <Col xs={12} md={6}>\n                                    <h5>Values</h5>\n                                    <DataValMainData dataVal={dataVal ?? {}}/>\n                                </Col>\n                            </Row>\n\n                            <hr/>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default NoblePhantasmVersion;\n","import React from \"react\";\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport EntityType from \"../Api/Data/EntityType\";\nimport NoblePhantasm from \"../Api/Data/NoblePhantasm\";\nimport Region from \"../Api/Data/Region\";\nimport DataTable from \"../Component/DataTable\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\nimport ServantDescriptor from \"../Descriptor/ServantDescriptor\";\nimport NoblePhantasmVersion from \"./NoblePhantasm/NoblePhantasmVersion\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    noblePhantasm?: NoblePhantasm;\n    level: number;\n    overcharge: number;\n}\n\nclass NoblePhantasmPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            level: 1,\n            overcharge: 1,\n        };\n    }\n\n    componentDidMount() {\n        this.loadNp();\n    }\n\n    async loadNp() {\n        const noblePhantasm = await Connection.noblePhantasm(this.props.region, this.props.id);\n\n        this.setState({\n            loading: false,\n            noblePhantasm: noblePhantasm,\n        });\n    }\n\n    private changeLevel(level: number) {\n        this.setState({\n            level: level\n        });\n    }\n\n    private changeOvercharge(level: number) {\n        this.setState({\n            overcharge: level\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.noblePhantasm)\n            return <Loading/>;\n\n        const noblePhantasm = this.state.noblePhantasm;\n\n        return (\n            <div>\n                <h1>{noblePhantasm.name}</h1>\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={noblePhantasm}/>,\n                    \"ID\": noblePhantasm.id,\n                    \"Name\": noblePhantasm.name,\n                    \"Type\": noblePhantasm.type,\n                    \"Rank\": noblePhantasm.rank,\n                    \"Detail\": noblePhantasm.detail,\n                    \"Card Type\": noblePhantasm.card,\n                    \"Owner\": (\n                        <div>\n                            {noblePhantasm.reverseServants\n                                .filter(servant => {\n                                    return servant.type === EntityType.NORMAL\n                                        || servant.type === EntityType.HEROINE\n                                })\n                                .map((servant, index) => {\n                                    return (\n                                        <div>\n                                            <ServantDescriptor region={this.props.region}\n                                                               servant={servant}\n                                                               iconHeight={24}/>\n                                        </div>\n                                    );\n                                })\n                            }\n                        </div>\n                    )\n                }}/>\n\n                <br/>\n                <Row>\n                    <Col>\n                        <Form inline style={{justifyContent: 'flex-end'}}>\n                            <Form.Control as={'select'} value={this.state.level}\n                                          onChange={(ev: Event) => this.changeLevel(parseInt(ev.target.value))}>\n                                {[1, 2, 3, 4, 5].map(level => (\n                                    <option key={level} value={level}>NP LEVEL {level}</option>\n                                ))}\n                            </Form.Control>\n                        </Form>\n                    </Col>\n                    <Col>\n                        <Form inline>\n                            <Form.Control as={'select'} value={this.state.overcharge}\n                                          onChange={(ev: Event) => this.changeOvercharge(parseInt(ev.target.value))}>\n                                {[1, 2, 3, 4, 5].map(level => (\n                                    <option key={level} value={level}>OVERCHARGE {level}</option>\n                                ))}\n                            </Form.Control>\n                        </Form>\n                    </Col>\n                </Row>\n\n                <br/>\n                <NoblePhantasmVersion region={this.props.region}\n                                      noblePhantasm={noblePhantasm}\n                                      level={this.state.level}\n                                      overcharge={this.state.overcharge}/>\n            </div>\n        );\n    }\n}\n\nexport default NoblePhantasmPage;\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Quest from \"../Api/Data/Quest\";\nimport Region from \"../Api/Data/Region\";\nimport DataTable from \"../Component/DataTable\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n    phase: number;\n}\n\ninterface IState {\n    loading: boolean;\n    quest?: Quest;\n}\n\nclass QuestPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.loadQuest();\n    }\n\n    async loadQuest() {\n        const quest = await Connection.quest(this.props.region, this.props.id, this.props.phase);\n\n        this.setState({\n            loading: false,\n            quest: quest,\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.quest)\n            return <Loading/>;\n\n        const quest = this.state.quest;\n\n        return (\n            <div>\n                <h1>{quest.name}</h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={quest}/>,\n                    \"ID\": quest.id,\n                    \"Phase\": quest.phase,\n                    \"Name\": quest.name,\n                    \"Type\": quest.type,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default QuestPage;\n","import React from \"react\";\nimport Servant from \"../../Api/Data/Servant\";\nimport ClassIcon from \"../../Component/ClassIcon\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\nimport RarityDescriptor from \"../../Descriptor/RarityDescriptor\";\n\ninterface IProps {\n    servant: Servant;\n}\n\nclass ServantMainData extends React.Component<IProps> {\n    render() {\n        const servant = this.props.servant;\n\n        return (\n            <div>\n                <h1>\n                    <ClassIcon className={servant.className} rarity={servant.rarity} height={50}/>\n                    &nbsp;\n                    {servant.name}\n                </h1>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={servant}/>,\n                    \"ID\": servant.id,\n                    \"Collection\": servant.collectionNo,\n                    \"Name\": servant.name,\n                    \"Class\": servant.className,\n                    \"Rarity\": <RarityDescriptor rarity={servant.rarity}/>,\n                    \"Cost\": servant.cost,\n                    \"Gender\": servant.gender,\n                    \"Attribute\": servant.attribute,\n                    \"Max Lv.\": servant.lvMax,\n                    \"Base Hp\": servant.hpBase,\n                    \"Base Atk\": servant.atkBase,\n                    \"Max Hp\": servant.hpMax,\n                    \"Max Atk\": servant.atkMax,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantMainData;\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Servant from \"../../Api/Data/Servant\";\nimport BuffIcon from \"../../Component/BuffIcon\";\nimport DataTable from \"../../Component/DataTable\";\nimport {asPercent} from \"../../Helper/OutputHelper\";\n\nconst buffIconPath = 'https://assets.atlasacademy.io/GameData/JP/BuffIcons',\n    deathChanceIcon = `${buffIconPath}/bufficon_337.png`,\n    hitCountIcon = `${buffIconPath}/bufficon_349.png`,\n    starGenIcon = `${buffIconPath}/bufficon_310.png`,\n    showHits = function (hits: number[] | undefined): JSX.Element | string {\n        if (hits === undefined)\n            return '';\n\n        return <span>\n            {hits.map((hit, index) => {\n                return (index > 0 ? ', ' : '') + asPercent(hit, 0);\n            })}\n            &nbsp;-&nbsp;\n            {hits.length} Hits\n        </span>\n    };\n\ninterface IProps {\n    servant: Servant;\n}\n\nclass ServantMiscData extends React.Component<IProps> {\n    private hitsColumn() {\n        return (\n            <Col xs={12} md={12} lg={6}>\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={hitCountIcon}/>\n                            &nbsp;\n                            Hit Count\n                        </div>\n                    )}\n                    data={{\n                        \"Buster\": showHits(this.props.servant.hitsDistribution.buster),\n                        \"Arts\": showHits(this.props.servant.hitsDistribution.arts),\n                        \"Quick\": showHits(this.props.servant.hitsDistribution.quick),\n                        \"Extra\": showHits(this.props.servant.hitsDistribution.extra),\n                    }}/>\n            </Col>\n        );\n    }\n\n    private miscColumn() {\n        return (\n            <Col xs={12} md={12} lg={6}>\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={starGenIcon}/>&nbsp;Crit Stars\n                        </div>\n                    )}\n                    data={{\n                        \"Star Absorb\": this.props.servant.starAbsorb,\n                        \"Star Gen\": asPercent(this.props.servant.starGen, 1),\n                    }}/>\n\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={deathChanceIcon}/>&nbsp;Instant Death\n                        </div>\n                    )}\n                    data={{\n                        \"Death Chance\": asPercent(this.props.servant.instantDeathChance, 1),\n                    }}/>\n            </Col>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    {this.hitsColumn()}\n                    {this.miscColumn()}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default ServantMiscData;\n","import React from \"react\";\nimport {Alert, Table} from \"react-bootstrap\";\nimport {default as ServantNoblePhantasmData} from \"../../Api/Data/NoblePhantasm\";\nimport Region from \"../../Api/Data/Region\";\nimport FuncDescriptor from \"../../Descriptor/FuncDescriptor\";\nimport NoblePhantasmDescriptor from \"../../Descriptor/NoblePhantasmDescriptor\";\nimport QuestDescriptor from \"../../Descriptor/QuestDescriptor\";\nimport {describeMutators} from \"../../Helper/FuncHelper\";\nimport {handleNewLine} from \"../../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    noblePhantasm: ServantNoblePhantasmData;\n}\n\nclass ServantNoblePhantasm extends React.Component<IProps> {\n    render() {\n        const np = this.props.noblePhantasm;\n\n        return (\n            <div>\n                <h3>\n                    <NoblePhantasmDescriptor region={this.props.region} noblePhantasm={np}/>\n                </h3>\n\n                {np.condQuestId && np.condQuestPhase ? (\n                    <Alert variant={'primary'}>\n                        Available after <QuestDescriptor region={this.props.region}\n                                                         questId={np.condQuestId}\n                                                         questPhase={np.condQuestPhase}/>\n                    </Alert>\n                ) : null}\n\n                <p>{handleNewLine(np.detail)}</p>\n\n                <Table responsive>\n                    <thead>\n                    <tr>\n                        <th>Effect</th>\n                        <th>1</th>\n                        <th>2</th>\n                        <th>3</th>\n                        <th>4</th>\n                        <th>5</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {np.functions.map((func, index) => {\n                        let mutatingDescriptions = describeMutators(this.props.region, func);\n\n                        for (let i = 0; i < 5; i++) {\n                            if (!mutatingDescriptions[i])\n                                mutatingDescriptions.push('-');\n                        }\n\n                        return (\n                            <tr key={index}>\n                                <td>\n                                    <FuncDescriptor region={this.props.region} func={func}/>\n                                </td>\n                                {mutatingDescriptions.map((description, index) => {\n                                    return (\n                                        <td key={index}>{description}</td>\n                                    );\n                                })}\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default ServantNoblePhantasm;\n","import React from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport Region from \"../../Api/Data/Region\";\nimport BasicListEntity from \"../../Api/Data/BasicListEntity\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps extends RouteComponentProps {\n    region: Region;\n    id: number;\n    servants: BasicListEntity[];\n}\n\nclass ServantPicker extends React.Component<IProps> {\n    private changeServant(id: number) {\n        this.props.history.push(`/${this.props.region}/servant/${id}`);\n    }\n\n    render() {\n        return (\n            <div>\n                Jump to:\n                <FormControl as={\"select\"} custom\n                             onChange={(ev: Event) => {\n                                 this.changeServant(parseInt(ev.target.value));\n                             }}\n                             value={this.props.id}>\n                    {this.props.servants\n                        .slice()\n                        .reverse()\n                        .map((servant, index) => {\n                            return (\n                                <option key={index} value={servant.collectionNo}>\n                                    {servant.name}\n                                </option>\n                            );\n                        })\n                    }\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ServantPicker);\n","import React from \"react\";\nimport {AssetMap} from \"../../Api/Data/AssetCollection\";\nimport Servant from \"../../Api/Data/Servant\";\n\nimport \"./ServantPortrait.css\";\n\ninterface IProps {\n    servant: Servant;\n}\n\ninterface IState {\n    assetMap?: AssetMap;\n    assetKey?: string;\n}\n\nclass ServantPortrait extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        const assetMap = (\n                props.servant.extraAssets.charaGraph.ascension\n                ?? Object.values(props.servant.extraAssets.charaGraph).shift()\n            ),\n            assetKey = assetMap === undefined ? undefined : Object.keys(assetMap).shift();\n\n        this.state = {assetMap, assetKey};\n    }\n\n    render() {\n        return (\n            <div>\n                <img alt={this.props.servant.name}\n                     id={'servant-portrait'}\n                     src={(\n                         this.state.assetMap && this.state.assetKey\n                             ? this.state.assetMap[this.state.assetKey]\n                             : undefined\n                     )}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantPortrait;\n","import React from \"react\";\nimport {Alert, Table} from \"react-bootstrap\";\nimport Region from \"../../Api/Data/Region\";\nimport Skill from \"../../Api/Data/Skill\";\nimport FuncDescriptor from \"../../Descriptor/FuncDescriptor\";\nimport QuestDescriptor from \"../../Descriptor/QuestDescriptor\";\nimport SkillDescriptor from \"../../Descriptor/SkillDescriptor\";\nimport {describeMutators} from \"../../Helper/FuncHelper\";\nimport {handleNewLine} from \"../../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n}\n\nclass ServantSkill extends React.Component<IProps, any> {\n    render() {\n        const skill = this.props.skill;\n        return (\n            <div>\n                <h3>\n                    <SkillDescriptor region={this.props.region} skill={skill} iconHeight={33}/>\n                </h3>\n\n                {skill.condQuestId && skill.condQuestPhase ? (\n                    <Alert variant={'primary'}>\n                        Available after <QuestDescriptor region={this.props.region}\n                                                         questId={skill.condQuestId}\n                                                         questPhase={skill.condQuestPhase}/>\n                    </Alert>\n                ) : null}\n\n                <p>{handleNewLine(skill.detail)}</p>\n\n                <Table responsive>\n                    <thead>\n                    <tr>\n                        <th>Effect</th>\n                        <th>1</th>\n                        <th>2</th>\n                        <th>3</th>\n                        <th>4</th>\n                        <th>5</th>\n                        <th>6</th>\n                        <th>7</th>\n                        <th>8</th>\n                        <th>9</th>\n                        <th>10</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>Cooldown</td>\n                        {skill.coolDown.map((cooldown, index) => {\n                            return <td key={index}>{cooldown}</td>;\n                        })}\n                    </tr>\n                    {skill.functions.map((func, index) => {\n                        let mutatingDescriptions = describeMutators(this.props.region, func);\n\n                        for (let i = 0; i < 10; i++) {\n                            if (!mutatingDescriptions[i])\n                                mutatingDescriptions.push('-');\n                        }\n\n                        return (\n                            <tr key={index}>\n                                <td>\n                                    <FuncDescriptor region={this.props.region} func={func}/>\n                                </td>\n                                {mutatingDescriptions.map((description, index) => {\n                                    return (\n                                        <td key={index}>{description}</td>\n                                    );\n                                })}\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default ServantSkill;\n","import React from \"react\";\nimport Region from \"../../Api/Data/Region\";\nimport Trait from \"../../Api/Data/Trait\";\nimport TraitDescriptor from \"../../Descriptor/TraitDescriptor\";\nimport {joinElements} from \"../../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    traits: Trait[];\n}\n\nclass ServantTraits extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {joinElements(\n                    this.props.traits.map(trait => <TraitDescriptor region={this.props.region} trait={trait}/>),\n                    ', '\n                ).map(\n                    (element, index) => <span key={index}>{element}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ServantTraits;\n","import React from \"react\";\nimport {Col, Row, Tab, Tabs} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport BasicListEntity from \"../Api/Data/BasicListEntity\";\nimport Region from \"../Api/Data/Region\";\nimport Servant from \"../Api/Data/Servant\";\nimport TraitMap from \"../Api/Data/TraitMap\";\nimport Loading from \"../Component/Loading\";\nimport ServantMainData from \"./Servant/ServantMainData\";\nimport ServantMiscData from \"./Servant/ServantMiscData\";\nimport ServantNoblePhantasm from \"./Servant/ServantNoblePhantasm\";\nimport ServantPicker from \"./Servant/ServantPicker\";\nimport ServantPortrait from \"./Servant/ServantPortrait\";\nimport ServantSkill from \"./Servant/ServantSkill\";\nimport ServantTraits from \"./Servant/ServantTraits\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    id: number;\n    servants: BasicListEntity[];\n    servant?: Servant;\n}\n\nclass ServantPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            id: this.props.id,\n            servants: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadServant();\n    }\n\n    async loadServant() {\n        let [servants, servant] = await Promise.all<BasicListEntity[], Servant, TraitMap>([\n            Connection.servantList(this.props.region),\n            Connection.servant(this.props.region, this.state.id),\n            Connection.traitMap(this.props.region)\n        ]);\n\n        this.setState({\n            loading: false,\n            servants,\n            servant\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.servant)\n            return <Loading/>;\n\n        return (\n            <div id={'servant'}>\n                <ServantPicker region={this.props.region}\n                               servants={this.state.servants}\n                               id={this.state.servant.collectionNo}/>\n                <hr/>\n\n                <Row>\n                    <Col xs={{span: 12, order: 2}} lg={{span: 6, order: 1}}>\n                        <ServantMainData servant={this.state.servant}/>\n                    </Col>\n                    <Col xs={{span: 12, order: 1}} lg={{span: 6, order: 2}}>\n                        <ServantPortrait servant={this.state.servant}/>\n                    </Col>\n                </Row>\n\n                <Tabs id={'servant-tabs'} defaultActiveKey={'skill-1'} transition={false}>\n                    <Tab eventKey={'skill-1'} title={'Skill 1'}>\n                        <br/>\n                        {this.state.servant.skills\n                            .filter(skill => skill.num === 1)\n                            .map((skill, index) => {\n                                return <ServantSkill region={this.props.region} key={index} skill={skill}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'skill-2'} title={'Skill 2'}>\n                        <br/>\n                        {this.state.servant.skills\n                            .filter(skill => skill.num === 2)\n                            .map((skill, index) => {\n                                return <ServantSkill region={this.props.region} key={index} skill={skill}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'skill-3'} title={'Skill 3'}>\n                        <br/>\n                        {this.state.servant.skills\n                            .filter(skill => skill.num === 3)\n                            .map((skill, index) => {\n                                return <ServantSkill region={this.props.region} key={index} skill={skill}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'nps'} title={'Noble Phantasms'}>\n                        <br/>\n                        {this.state.servant.noblePhantasms\n                            .filter(noblePhantasm => noblePhantasm.functions.length > 0)\n                            .map((noblePhantasm, index) => {\n                                return <ServantNoblePhantasm region={this.props.region} key={index}\n                                                             noblePhantasm={noblePhantasm}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'traits'} title={'Traits'}>\n                        <br/>\n                        <ServantTraits region={this.props.region} traits={this.state.servant.traits}/>\n                    </Tab>\n                    <Tab eventKey={'misc'} title={'Misc'}>\n                        <br/>\n                        <ServantMiscData servant={this.state.servant}/>\n                    </Tab>\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default ServantPage;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport BasicListEntity from \"../Api/Data/BasicListEntity\";\nimport ClassName from \"../Api/Data/ClassName\";\nimport Region from \"../Api/Data/Region\";\nimport ClassIcon from \"../Component/ClassIcon\";\nimport FaceIcon from \"../Component/FaceIcon\";\nimport Loading from \"../Component/Loading\";\nimport RarityDescriptor from \"../Descriptor/RarityDescriptor\";\n\nimport './ServantsPage.css';\n\nconst classFilters: ClassName[] = [\n    ClassName.ALL,\n    ClassName.SABER,\n    ClassName.ARCHER,\n    ClassName.LANCER,\n    ClassName.RIDER,\n    ClassName.CASTER,\n    ClassName.ASSASSIN,\n    ClassName.BERSERKER,\n    ClassName.EXTRA,\n];\n\ninterface Event extends React.MouseEvent<HTMLInputElement> {\n\n}\n\ninterface IProps {\n    region: Region,\n}\n\ninterface IState {\n    loading: boolean;\n    servants: BasicListEntity[];\n    activeClassFilters: ClassName[];\n    activeRarityFilters: number[];\n}\n\nclass ServantsPage extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            servants: [],\n            activeClassFilters: classFilters.slice(),\n            activeRarityFilters: [1, 2, 3, 4, 5],\n        };\n    }\n\n    componentDidMount() {\n        Connection.servantList(this.props.region).then(servantList => {\n            this.setState({\n                loading: false,\n                servants: servantList\n            });\n        });\n    }\n\n    private isClassFilterActive(className: ClassName): boolean {\n        return this.state.activeClassFilters.indexOf(className) !== -1;\n    }\n\n    private isExtra(className: ClassName): boolean {\n        return !(className === ClassName.SABER\n            || className === ClassName.ARCHER\n            || className === ClassName.LANCER\n            || className === ClassName.RIDER\n            || className === ClassName.CASTER\n            || className === ClassName.ASSASSIN\n            || className === ClassName.BERSERKER);\n    }\n\n    private toggleClassFilter(className: ClassName): void {\n        if (className === ClassName.ALL) {\n            if (this.isClassFilterActive(className)) {\n                this.setState({\n                    activeClassFilters: [],\n                    activeRarityFilters: [],\n                });\n            } else {\n                this.setState({\n                    activeClassFilters: classFilters.slice(),\n                    activeRarityFilters: [1, 2, 3, 4, 5],\n                });\n            }\n        } else {\n            let exists = false,\n                activeFilters = this.state.activeClassFilters.filter(activeClassName => {\n                    if (activeClassName === ClassName.ALL)\n                        return false;\n\n                    if (activeClassName === className) {\n                        exists = true;\n                        return false;\n                    }\n\n                    return true;\n                });\n\n            if (!exists)\n                activeFilters.push(className);\n\n            this.setState({activeClassFilters: activeFilters});\n        }\n    }\n\n    private toggleRarityFilter(rarity: number): void {\n        const exists = this.state.activeRarityFilters.indexOf(rarity) !== -1;\n\n        if (exists) {\n            this.setState({\n                activeClassFilters: this.state.activeClassFilters.filter(activeClass => activeClass !== ClassName.ALL),\n                activeRarityFilters: this.state.activeRarityFilters.filter(activeRarity => activeRarity !== rarity)\n            });\n        } else {\n            this.setState({\n                activeClassFilters: this.state.activeClassFilters.filter(activeClass => activeClass !== ClassName.ALL),\n                activeRarityFilters: [\n                    ...this.state.activeRarityFilters,\n                    rarity\n                ]\n            });\n        }\n    }\n\n    private servants(): BasicListEntity[] {\n        let list = this.state.servants.slice().reverse();\n\n        if (this.state.activeRarityFilters.length !== 5) {\n            list = list.filter(entity => {\n                return this.state.activeRarityFilters.indexOf(entity.rarity) !== -1;\n            });\n        }\n\n        if (!this.isClassFilterActive(ClassName.ALL)) {\n            list = list.filter(entity => {\n                for (let x in this.state.activeClassFilters) {\n                    const className = this.state.activeClassFilters[x];\n\n                    if (className === ClassName.EXTRA && this.isExtra(entity.className)) {\n                        return true;\n                    } else if (entity.className === className) {\n                        return true;\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        return list;\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading/>;\n\n        return (\n            <div id=\"servants\">\n                <p className={'text-center'}>\n                    {classFilters.map(className => {\n                        const active = this.isClassFilterActive(className);\n                        return (\n                            <span key={className}\n                                  className={'filter'}\n                                  style={{opacity: active ? 1 : 0.5}}\n                                  onClick={(ev: Event) => {\n                                      this.toggleClassFilter(className);\n                                  }}>\n                                <ClassIcon height={50} rarity={active ? 5 : 3} className={className}/>\n                            </span>\n                        );\n                    })}\n                </p>\n\n                <p className={'text-center'}>\n                    {[1, 2, 3, 4, 5].map(rarity => {\n                        const active = this.state.activeRarityFilters.indexOf(rarity) !== -1;\n\n                        return (\n                            <span key={rarity}\n                                  className={'filter'}\n                                  style={{opacity: active ? 1 : 0.5}}\n                                  onClick={(ev: Event) => {\n                                      this.toggleRarityFilter(rarity);\n                                  }}>\n                                <RarityDescriptor rarity={rarity} height={20}/>\n                            </span>\n                        );\n                    })}\n                </p>\n\n                <hr/>\n\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th style={{textAlign: \"center\", width: '1px'}}>#</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Class</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Thumbnail</th>\n                        <th>Name</th>\n                        <th>Rarity</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this\n                        .servants()\n                        .map((servant, index) => {\n                            const route = `/${this.props.region}/servant/${servant.collectionNo}`;\n\n                            return <tr key={index}>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        {servant.collectionNo}\n                                    </Link>\n                                </td>\n                                <td align={\"center\"}>\n                                    <ClassIcon className={servant.className} rarity={servant.rarity} height={50}/>\n                                </td>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        <FaceIcon type={servant.type}\n                                                  rarity={servant.rarity}\n                                                  location={servant.face}\n                                                  height={50}/>\n                                    </Link>\n                                </td>\n                                <td>\n                                    <Link to={route}>\n                                        {servant.name}\n                                    </Link>\n                                </td>\n                                <td>\n                                    <RarityDescriptor rarity={servant.rarity}/>\n                                </td>\n                            </tr>\n                        })\n                    }\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n\n}\n\nexport default ServantsPage;\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport CraftEssence from \"../Api/Data/CraftEssence\";\nimport Region from \"../Api/Data/Region\";\n\ninterface IProps {\n    region: Region;\n    craftEssence: CraftEssence;\n}\n\nclass CraftEssenceDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/craft-essence/${this.props.craftEssence.id}`}>\n                {this.props.craftEssence.name}\n                {' '}\n                <FontAwesomeIcon icon={faShare} />\n            </Link>\n        );\n    }\n}\n\nexport default CraftEssenceDescriptor;\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Region from \"../../Api/Data/Region\";\nimport Skill from \"../../Api/Data/Skill\";\nimport FuncDescriptor from \"../../Descriptor/FuncDescriptor\";\nimport {getTargetVersionValues} from \"../../Helper/FuncHelper\";\nimport DataValMainData from \"../Func/DataValMainData\";\nimport FuncMainData from \"../Func/FuncMainData\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n    level: number;\n}\n\nclass SkillVersion extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {this.props.skill.functions.map((func, index) => {\n                    const dataVal = getTargetVersionValues(func, this.props.level);\n\n                    return (\n                        <div key={index}>\n                            <h3>Effect #{index + 1}</h3>\n                            <p>\n                                <FuncDescriptor region={this.props.region} func={func}/>\n                            </p>\n\n                            <Row>\n                                <Col xs={12} md={6}>\n                                    <h5>Function</h5>\n                                    <FuncMainData region={this.props.region} func={func}/>\n                                </Col>\n                                <Col xs={12} md={6}>\n                                    <h5>Values</h5>\n                                    <DataValMainData dataVal={dataVal ?? {}}/>\n                                </Col>\n                            </Row>\n\n                            <hr/>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default SkillVersion;\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport CraftEssence from \"../Api/Data/CraftEssence\";\nimport EntityType from \"../Api/Data/EntityType\";\nimport Region from \"../Api/Data/Region\";\nimport Servant from \"../Api/Data/Servant\";\nimport Skill from \"../Api/Data/Skill\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport DataTable from \"../Component/DataTable\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\nimport CraftEssenceDescriptor from \"../Descriptor/CraftEssenceDescriptor\";\nimport ServantDescriptor from \"../Descriptor/ServantDescriptor\";\nimport SkillVersion from \"./Skill/SkillVersion\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    skill?: Skill;\n    levels: number;\n    level: number;\n}\n\nclass SkillPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            levels: 1,\n            level: 1\n        };\n    }\n\n    componentDidMount() {\n        this.loadSkill();\n    }\n\n    async loadSkill() {\n        const skill = await Connection.skill(this.props.region, this.props.id);\n\n        this.setState({\n            loading: false,\n            skill: skill,\n            levels: skill.functions[0].svals?.length ?? 1,\n        });\n    }\n\n    private changeLevel(level: number) {\n        this.setState({\n            level: level\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.skill)\n            return <Loading/>;\n\n        const skill = this.state.skill;\n\n        return (\n            <div>\n                <h1>\n                    <BuffIcon location={skill.icon} height={48}/>\n                    &nbsp;\n                    {skill.name}\n                </h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={skill}/>,\n                    \"ID\": skill.id,\n                    \"Name\": skill.name,\n                    \"Detail\": skill.detail,\n                    \"Owner\": (\n                        <div>\n                            {skill.reverseServants\n                                .filter(entity => {\n                                    return entity.type === EntityType.NORMAL\n                                        || entity.type === EntityType.HEROINE\n                                        || entity.type === EntityType.SERVANT_EQUIP;\n                                })\n                                .map((entity, index) => {\n                                    if (entity.type === EntityType.SERVANT_EQUIP) {\n                                        return (\n                                            <div key={index}>\n                                                <CraftEssenceDescriptor region={this.props.region}\n                                                                        craftEssence={entity as CraftEssence}/>\n                                            </div>\n                                        );\n                                    } else {\n                                        return (\n                                            <div key={index}>\n                                                <ServantDescriptor region={this.props.region}\n                                                                   servant={entity as Servant}\n                                                                   iconHeight={24}/>\n                                            </div>\n                                        );\n                                    }\n                                })\n                            }\n                        </div>\n                    )\n                }}/>\n\n                <br/>\n                <Form inline style={{justifyContent: 'center'}}>\n                    <Form.Control as={'select'} value={this.state.level}\n                                  onChange={(ev: Event) => this.changeLevel(parseInt(ev.target.value))}>\n                        {Array.from(Array(this.state.levels).keys()).map(i => i + 1).map(level => (\n                            <option key={level} value={level}>LEVEL {level}</option>\n                        ))}\n                    </Form.Control>\n                </Form>\n\n                <br/>\n                <SkillVersion region={this.props.region}\n                              skill={skill}\n                              level={this.state.level}/>\n            </div>\n        );\n    }\n}\n\nexport default SkillPage;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport {Container} from \"react-bootstrap\";\nimport {HashRouter as Router, Route, Switch,} from \"react-router-dom\";\nimport ErrorStatus from \"./Component/ErrorStatus\";\nimport Navigation from \"./Component/Navigation\";\nimport BuffPage from \"./Page/BuffPage\";\nimport CraftEssencePage from \"./Page/CraftEssencePage\";\nimport CraftEssencesPage from \"./Page/CraftEssencesPage\";\nimport FuncPage from './Page/FuncPage';\nimport NoblePhantasmPage from \"./Page/NoblePhantasmPage\";\nimport QuestPage from \"./Page/QuestPage\";\nimport ServantPage from \"./Page/ServantPage\";\nimport ServantsPage from \"./Page/ServantsPage\";\nimport SkillPage from \"./Page/SkillPage\";\nimport Manager from \"./Setting/Manager\";\nimport {LanguageOption} from \"./Setting/Option\";\n\ninterface IState {\n    language: LanguageOption,\n}\n\nclass App extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            language: Manager.language(),\n        };\n\n        Manager.onUpdate(() => this.updateSettings());\n    }\n\n    private updateSettings() {\n        this.setState({\n            language: Manager.language(),\n        });\n    }\n\n    render() {\n        return (\n            <Router>\n                <Navigation/>\n                <br/>\n\n                <Container key={`${this.state.language}`}>\n                    <Switch>\n                        <Route exact={true} path=\"/:region(JP|NA)/buff/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <BuffPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/craft-essence/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <CraftEssencePage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/func/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <FuncPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/noble-phantasm/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <NoblePhantasmPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/quest/:id([0-9]+)/:phase([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                phase = props.match.params.phase,\n                                key = `${region}-${id}-${phase}`;\n                            return <QuestPage key={key} region={region} id={id} phase={phase}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/servant/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <ServantPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/skill/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <SkillPage key={key} region={region} id={id}/>\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/craft-essences\" render={props => {\n                            const region = props.match.params.region;\n                            return <CraftEssencesPage key={region} region={region}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/servants\" render={props => {\n                            const region = props.match.params.region;\n                            return <ServantsPage key={region} region={region}/>;\n                        }}/>\n                        <Route path=\"/\" exact={true} render={props => {\n                            return \"\";\n                        }}/>\n                        <Route path=\"*\" exact={true} render={props => {\n                            return <ErrorStatus/>;\n                        }}/>\n                    </Switch>\n                </Container>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}