{"version":3,"sources":["Api/ResultCache.tsx","Api/Connection.tsx","Component/FaceIcon.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Descriptor/RarityDescriptor.tsx","Api/Data/ClassName.tsx","Component/ClassIcon.tsx","Page/ServantsPage.tsx"],"names":["ResultCache","cache","Map","pending","pendingCatches","key","fetcher","duration","value","this","get","undefined","Promise","resolve","callbacks","reject","push","set","call","then","forEach","callback","delete","window","setTimeout","catch","error","host","fetch","endpoint","a","axios","response","data","buff","commandCode","commandCodes","craftEssence","craftEssenceList","func","mysticCode","mysticCodeList","noblePhantasm","quest","servant","servantList","skill","traitMap","Connection","region","id","language","Manager","query","LanguageOption","ENGLISH","Region","NA","getCommandCodeEssenceList","JP","DEFAULT","jp","na","names","map","entity","name","getCacheableCraftEssenceList","getCacheableMysticCodeList","phase","source","type","encodeURI","text","target","team","FaceIcon","alt","src","props","location","style","height","React","Component","_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","slice","constructor","from","test","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError","assetMap","RarityDescriptor","has","rarity","ClassName","classTypes","classIds","SABER","ARCHER","LANCER","RIDER","CASTER","ASSASSIN","BERSERKER","SHIELDER","RULER","ALTER_EGO","AVENGER","MOON_CANCER","FOREIGNER","GRAND_CASTER","BEAST_I","BEAST_II","BEAST_IIIL","BEAST_IIIR","BEAST_UNKNOWN","ALL","EXTRA","ClassIcon","classId","className","classFilters","ServantsPage","state","loading","servants","activeClassFilters","activeRarityFilters","setState","e","indexOf","exists","activeFilters","filter","activeClassName","activeClass","activeRarity","list","reverse","x","isExtra","search","words","split","word","toLowerCase","every","includes","inline","justifyContent","active","isClassFilterActive","opacity","onClick","ev","toggleClassFilter","Control","marginLeft","placeholder","onChange","striped","bordered","hover","responsive","textAlign","width","index","route","collectionNo","align","to","face"],"mappings":"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","file":"static/js/15.42c50051.chunk.js","sourcesContent":["class ResultCache<K, V> {\n    private cache = new Map<K, V>();\n    private pending = new Map<K, Function[]>();\n    private pendingCatches = new Map<K, Function[]>();\n\n    get(key: K, fetcher: Function, duration: number | null): Promise<V> {\n        const value = this.cache.get(key);\n        if (value !== undefined) {\n            return new Promise<V>(resolve => {\n                resolve(value);\n            });\n        }\n\n        const callbacks = this.pending.get(key);\n        if (callbacks !== undefined) {\n            return new Promise<V>((resolve, reject) => {\n                callbacks.push(resolve);\n\n                const catches = this.pendingCatches.get(key) ?? [];\n                catches.push(reject);\n            });\n        }\n\n        this.pending.set(key, []);\n        this.pendingCatches.set(key, []);\n        return new Promise<V>((resolve, reject) => {\n            fetcher\n                .call(null)\n                .then((value: V) => {\n                    const callbacks = this.pending.get(key) ?? [];\n\n                    callbacks.forEach(callback => {\n                        callback.call(null, value);\n                    });\n\n                    this.cache.set(key, value);\n                    this.pending.delete(key);\n                    this.pendingCatches.delete(key);\n\n                    if (duration !== null) {\n                        window.setTimeout(() => {\n                            this.cache.delete(key);\n                        }, duration);\n                    }\n\n                    resolve(value);\n                })\n                .catch((error: any) => {\n                    const callbacks = this.pendingCatches.get(key) ?? [];\n\n                    callbacks.forEach(callback => {\n                        callback.call(null, error);\n                    });\n\n                    this.pending.delete(key);\n                    this.pendingCatches.delete(key);\n\n                    reject(error);\n                });\n        });\n    }\n}\n\nexport default ResultCache;\n","import axios from \"axios\";\nimport Manager from \"../Setting/Manager\";\nimport {LanguageOption} from \"../Setting/Option\";\nimport BasicListEntity from \"./Data/BasicListEntity\";\nimport Buff, {BuffType} from \"./Data/Buff\";\nimport CommandCode from \"./Data/CommandCode\";\nimport CraftEssence from \"./Data/CraftEssence\";\nimport Func, {FuncTargetTeam, FuncTargetType, FuncType} from \"./Data/Func\";\nimport MysticCode from \"./Data/MysticCode\";\nimport NoblePhantasm from \"./Data/NoblePhantasm\";\nimport Quest from \"./Data/Quest\";\nimport Region from \"./Data/Region\";\nimport Servant from \"./Data/Servant\";\nimport Skill from \"./Data/Skill\";\nimport TraitMap from \"./Data/TraitMap\";\nimport ResultCache from \"./ResultCache\";\n\nconst host = 'https://api.atlasacademy.io',\n    cacheDuration = 20 * 1000,\n    fetch = async function <T>(endpoint: string): Promise<T> {\n        const response = await axios.get<T>(endpoint);\n\n        return response.data;\n    },\n    cache = {\n        buff: new ResultCache<string, Buff>(),\n        commandCode: new ResultCache<string, CommandCode>(),\n        commandCodes: new ResultCache<Region, CommandCode[]>(),\n        craftEssence: new ResultCache<string, CraftEssence>(),\n        craftEssenceList: new ResultCache<Region, BasicListEntity[]>(),\n        func: new ResultCache<string, Func>(),\n        mysticCode: new ResultCache<string, MysticCode>(),\n        mysticCodeList: new ResultCache<Region, MysticCode[]>(),\n        noblePhantasm: new ResultCache<string, NoblePhantasm>(),\n        quest: new ResultCache<string, Quest>(),\n        servant: new ResultCache<string, Servant>(),\n        servantList: new ResultCache<string, BasicListEntity[]>(),\n        skill: new ResultCache<string, Skill>(),\n        traitMap: new ResultCache<Region, TraitMap>(),\n    };\n\nclass Connection {\n    static buff(region: Region, id: number): Promise<Buff> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.buff.get(\n            key,\n            () => {\n                let query = '?reverse=true&reverseDepth=skillNp' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Buff>(`${host}/nice/${region}/buff/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static commandCode(region: Region, id: number): Promise<CommandCode> {\n        const key = `${region}-${id}`;\n\n        return cache.commandCode.get(\n            key,\n            () => {\n                return fetch<CommandCode>(`${host}/nice/${region}/CC/${id}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async commandCodeList(region: Region): Promise<CommandCode[]> {\n        if (region === Region.NA) {\n            return Connection.getCommandCodeEssenceList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCommandCodeEssenceList(Region.JP);\n        }\n\n        const jp = await Connection.getCommandCodeEssenceList(Region.JP),\n            na = await Connection.getCommandCodeEssenceList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static craftEssence(region: Region, id: number): Promise<CraftEssence> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.craftEssence.get(\n            key,\n            () => {\n                let query = '?lore=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Servant>(`${host}/nice/${region}/equip/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async craftEssenceList(region: Region): Promise<BasicListEntity[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableCraftEssenceList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableCraftEssenceList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableCraftEssenceList(Region.JP),\n            na = await Connection.getCacheableCraftEssenceList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<BasicListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static func(region: Region, id: number): Promise<Func> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.func.get(\n            key,\n            () => {\n                let query = '?reverse=true&reverseDepth=servant' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Func>(`${host}/nice/${region}/function/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static mysticCode(region: Region, id: number): Promise<MysticCode> {\n        const key = `${region}-${id}`;\n\n        return cache.mysticCode.get(\n            key,\n            () => {\n                return fetch<MysticCode>(`${host}/nice/${region}/MC/${id}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async mysticCodeList(region: Region): Promise<MysticCode[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableMysticCodeList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableMysticCodeList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableMysticCodeList(Region.JP),\n            na = await Connection.getCacheableMysticCodeList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<MysticCode>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static noblePhantasm(region: Region, id: number): Promise<NoblePhantasm> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.noblePhantasm.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<NoblePhantasm>(`${host}/nice/${region}/NP/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static quest(region: Region, id: number, phase: number): Promise<Quest> {\n        const key = `${region}-${id}-${phase}`;\n\n        return cache.quest.get(\n            key,\n            () => {\n                return fetch<Quest>(`${host}/nice/${region}/quest/${id}/${phase}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static servant(region: Region, id: number): Promise<Servant> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.servant.get(\n            key,\n            () => {\n                let query = '?lore=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Servant>(`${host}/nice/${region}/servant/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async servantList(region: Region): Promise<BasicListEntity[]> {\n        const language = Manager.language(),\n            key = `${region}-${language}`;\n\n        let source: string;\n\n        if (region === Region.NA) {\n            source = `${host}/export/NA/basic_servant.json`;\n        } else if (region === Region.JP && language === LanguageOption.DEFAULT) {\n            source = `${host}/export/JP/basic_servant.json`;\n        } else {\n            source = `${host}/export/JP/basic_servant_lang_en.json`;\n        }\n\n        return cache.servantList.get(\n            key,\n            () => {\n                return fetch<BasicListEntity[]>(source);\n            },\n            null\n        );\n    }\n\n    static skill(region: Region, id: number): Promise<Skill> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.skill.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Skill>(`${host}/nice/${region}/skill/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static traitMap(region: Region): Promise<TraitMap> {\n        return cache.traitMap.get(\n            region,\n            () => {\n                return fetch<TraitMap>(`${host}/export/${region}/nice_trait.json`);\n            },\n            null\n        );\n    }\n\n    static searchBuffs(region: Region, name?: string, type?: BuffType): Promise<Buff[]> {\n        const language = Manager.language();\n\n        let query = \"?reverse=true\";\n\n        if (language === LanguageOption.ENGLISH)\n            query += \"&lang=en\";\n        if (name)\n            query += \"&name=\" + encodeURI(name);\n        if (type)\n            query += \"&type=\" + type;\n\n        return fetch<Buff[]>(`${host}/nice/${region}/buff/search${query}`);\n    }\n\n    static searchFuncs(region: Region,\n                       text?: string,\n                       type?: FuncType,\n                       target?: FuncTargetType,\n                       team?: FuncTargetTeam): Promise<Func[]> {\n        const language = Manager.language();\n\n        let query = \"?reverse=true\";\n\n        if (language === LanguageOption.ENGLISH)\n            query += \"&lang=en\";\n        if (text)\n            query += \"&popupText=\" + encodeURI(text);\n        if (type)\n            query += \"&type=\" + type;\n        if (target)\n            query += \"&targetType=\" + target;\n        if (team)\n            query += \"&targetTeam=\" + team;\n\n        return fetch<Func[]>(`${host}/nice/${region}/function/search${query}`);\n    }\n\n    private static async getCommandCodeEssenceList(region: Region): Promise<CommandCode[]> {\n        return cache.commandCodes.get(\n            region,\n            () => {\n                return fetch<CommandCode[]>(`${host}/export/${region}/nice_command_code.json`);\n            },\n            null\n        );\n    }\n\n    private static async getCacheableCraftEssenceList(region: Region): Promise<BasicListEntity[]> {\n        return cache.craftEssenceList.get(\n            region,\n            () => {\n                return fetch<BasicListEntity[]>(`${host}/export/${region}/basic_equip.json`);\n            },\n            null\n        );\n    }\n\n    private static async getCacheableMysticCodeList(region: Region): Promise<MysticCode[]> {\n        return cache.mysticCodeList.get(\n            region,\n            () => {\n                return fetch<BasicListEntity[]>(`${host}/export/${region}/nice_mystic_code.json`);\n            },\n            null\n        );\n    }\n}\n\nexport default Connection;\n","import React from \"react\";\nimport EntityType from \"../Api/Data/EntityType\";\n\ninterface IProps {\n    type?: EntityType;\n    rarity?: number;\n    location: string;\n    height?: number | string;\n}\n\nclass FaceIcon extends React.Component<IProps> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location}\n                 style={{height: this.props.height ?? '2em'}}/>\n        );\n    }\n\n}\n\nexport default FaceIcon;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\n\nconst assetMap = new Map<number, string>([\n    [1, './assets/star1.png'],\n    [2, './assets/star2.png'],\n    [3, './assets/star3.png'],\n    [4, './assets/star4.png'],\n    [5, './assets/star5.png'],\n]);\n\ninterface IProps {\n    rarity: number;\n    height?: number;\n}\n\nclass RarityDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <span>\n                {assetMap.has(this.props.rarity) ? (\n                    <img alt={`${this.props.rarity} star(s)`}\n                         src={assetMap.get(this.props.rarity)}\n                         style={{height: this.props.height ?? 18}}/>\n                ) : null}\n            </span>\n        );\n    }\n}\n\nexport default RarityDescriptor;\n","enum ClassName {\n    SABER = \"saber\",\n    ARCHER = \"archer\",\n    LANCER = \"lancer\",\n    RIDER = \"rider\",\n    CASTER = \"caster\",\n    ASSASSIN = \"assassin\",\n    BERSERKER = \"berserker\",\n    SHIELDER = \"shielder\",\n    RULER = \"ruler\",\n    ALTER_EGO = \"alterEgo\",\n    AVENGER = \"avenger\",\n    GRAND_CASTER = \"grandCaster\",\n    BEAST_II = \"beastII\",\n    BEAST_I = \"beastI\",\n    MOON_CANCER = \"moonCancer\",\n    BEAST_IIIR = \"beastIIIR\",\n    FOREIGNER = \"foreigner\",\n    BEAST_IIIL = \"beastIIIL\",\n    BEAST_UNKNOWN = \"beastUnknown\",\n    ALL = \"ALL\",\n    EXTRA = \"EXTRA\",\n}\n\nexport default ClassName;\n","import React from \"react\";\nimport ClassName from \"../Api/Data/ClassName\";\n\nconst classTypes = new Map<number, number>([\n    [0, 0],\n    [1, 1],\n    [2, 1],\n    [3, 2],\n    [4, 3],\n    [5, 3],\n]);\nconst unknownClassType = 3;\nconst classIds = new Map<ClassName, number>([\n    [ClassName.SABER, 1],\n    [ClassName.ARCHER, 2],\n    [ClassName.LANCER, 3],\n    [ClassName.RIDER, 4],\n    [ClassName.CASTER, 5],\n    [ClassName.ASSASSIN, 6],\n    [ClassName.BERSERKER, 7],\n    [ClassName.SHIELDER, 8],\n    [ClassName.RULER, 9],\n    [ClassName.ALTER_EGO, 10],\n    [ClassName.AVENGER, 11],\n    [ClassName.MOON_CANCER, 23],\n    [ClassName.FOREIGNER, 25],\n    [ClassName.GRAND_CASTER, 5],\n    [ClassName.BEAST_I, 20],\n    [ClassName.BEAST_II, 20],\n    [ClassName.BEAST_IIIL, 20],\n    [ClassName.BEAST_IIIR, 20],\n    [ClassName.BEAST_UNKNOWN, 20],\n\n    [ClassName.ALL, 1001],\n    [ClassName.EXTRA, 1002],\n]);\nconst unknownClassId = 12;\n\ninterface IProps {\n    className: ClassName;\n    rarity?: number;\n    height?: number;\n}\n\nclass ClassIcon extends React.Component<IProps> {\n    render() {\n        return (\n            <img alt={''} src={this.location()}\n                 style={{height: this.props.height ?? 24}}/>\n        );\n    }\n\n    private location(): string {\n        let classId = classIds.has(this.props.className) ? classIds.get(this.props.className) : unknownClassId,\n            rarity = this.props.rarity ?? 5,\n            type = classTypes.has(rarity) ? classTypes.get(rarity) : unknownClassType;\n\n        return `https://assets.atlasacademy.io/GameData/NA/ClassIcons/class${type}_${classId}.png`;\n    }\n}\n\nexport default ClassIcon;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Form, Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport BasicListEntity from \"../Api/Data/BasicListEntity\";\nimport ClassName from \"../Api/Data/ClassName\";\nimport Region from \"../Api/Data/Region\";\nimport ClassIcon from \"../Component/ClassIcon\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport FaceIcon from \"../Component/FaceIcon\";\nimport Loading from \"../Component/Loading\";\nimport RarityDescriptor from \"../Descriptor/RarityDescriptor\";\n\nimport './ServantsPage.css';\n\nconst classFilters: ClassName[] = [\n    ClassName.SABER,\n    ClassName.ARCHER,\n    ClassName.LANCER,\n    ClassName.RIDER,\n    ClassName.CASTER,\n    ClassName.ASSASSIN,\n    ClassName.BERSERKER,\n    ClassName.EXTRA,\n];\n\ninterface ChangeEvent extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface MouseEvent extends React.MouseEvent<HTMLInputElement> {\n\n}\n\ninterface IProps {\n    region: Region,\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    servants: BasicListEntity[];\n    activeClassFilters: ClassName[];\n    activeRarityFilters: number[];\n    search?: string;\n}\n\nclass ServantsPage extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            servants: [],\n            activeClassFilters: [],\n            activeRarityFilters: [],\n        };\n    }\n\n    componentDidMount() {\n        try {\n            Connection.servantList(this.props.region).then(servantList => {\n                this.setState({\n                    loading: false,\n                    servants: servantList\n                });\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    private isClassFilterActive(className: ClassName): boolean {\n        return this.state.activeClassFilters.indexOf(className) !== -1;\n    }\n\n    private isExtra(className: ClassName): boolean {\n        return !(className === ClassName.SABER\n            || className === ClassName.ARCHER\n            || className === ClassName.LANCER\n            || className === ClassName.RIDER\n            || className === ClassName.CASTER\n            || className === ClassName.ASSASSIN\n            || className === ClassName.BERSERKER);\n    }\n\n    private toggleClassFilter(className: ClassName): void {\n        let exists = false,\n            activeFilters = this.state.activeClassFilters.filter(activeClassName => {\n                if (activeClassName === ClassName.ALL)\n                    return false;\n\n                if (activeClassName === className) {\n                    exists = true;\n                    return false;\n                }\n\n                return true;\n            });\n\n        if (!exists)\n            activeFilters.push(className);\n\n        this.setState({activeClassFilters: activeFilters});\n    }\n\n    private toggleRarityFilter(rarity: number): void {\n        const exists = this.state.activeRarityFilters.indexOf(rarity) !== -1;\n\n        if (exists) {\n            this.setState({\n                activeClassFilters: this.state.activeClassFilters.filter(activeClass => activeClass !== ClassName.ALL),\n                activeRarityFilters: this.state.activeRarityFilters.filter(activeRarity => activeRarity !== rarity)\n            });\n        } else {\n            this.setState({\n                activeClassFilters: this.state.activeClassFilters.filter(activeClass => activeClass !== ClassName.ALL),\n                activeRarityFilters: [\n                    ...this.state.activeRarityFilters,\n                    rarity\n                ]\n            });\n        }\n    }\n\n    private servants(): BasicListEntity[] {\n        let list = this.state.servants.slice().reverse();\n\n        if (this.state.activeRarityFilters.length > 0) {\n            list = list.filter(entity => {\n                return this.state.activeRarityFilters.indexOf(entity.rarity) !== -1;\n            });\n        }\n\n        if (this.state.activeClassFilters.length > 0) {\n            list = list.filter(entity => {\n                for (let x in this.state.activeClassFilters) {\n                    const className = this.state.activeClassFilters[x];\n\n                    if (className === ClassName.EXTRA && this.isExtra(entity.className)) {\n                        return true;\n                    } else if (entity.className === className) {\n                        return true;\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        if (this.state.search) {\n            const words = this.state.search\n                .split(' ')\n                .filter(word => word)\n                .map(word => word.toLowerCase());\n\n            list = list.filter(entity => words.every(word => entity.name.toLowerCase().includes(word)));\n        }\n\n        return list;\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading)\n            return <Loading/>;\n\n        return (\n            <div id=\"servants\">\n                <Form inline style={{justifyContent: 'center'}}>\n                    {classFilters.map(className => {\n                        const active = this.isClassFilterActive(className);\n                        return (\n                            <span key={className}\n                                  className={'filter'}\n                                  style={{opacity: active ? 1 : 0.5}}\n                                  onClick={(ev: MouseEvent) => {\n                                      this.toggleClassFilter(className);\n                                  }}>\n                                <ClassIcon height={50} rarity={active ? 5 : 3} className={className}/>\n                            </span>\n                        );\n                    })}\n                    <Form.Control style={{marginLeft: 'auto'}} placeholder={'Search'} value={this.state.search ?? ''}\n                                  onChange={(ev: ChangeEvent) => {\n                                      this.setState({search: ev.target.value});\n                                  }}/>\n                </Form>\n\n                <hr/>\n\n                <Table striped bordered hover responsive>\n                    <thead>\n                    <tr>\n                        <th style={{textAlign: \"center\", width: '1px'}}>#</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Class</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Thumbnail</th>\n                        <th>Name</th>\n                        <th>Rarity</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this\n                        .servants()\n                        .map((servant, index) => {\n                            const route = `/${this.props.region}/servant/${servant.collectionNo}`;\n\n                            return <tr key={index}>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        {servant.collectionNo}\n                                    </Link>\n                                </td>\n                                <td align={\"center\"}>\n                                    <ClassIcon className={servant.className} rarity={servant.rarity} height={50}/>\n                                </td>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        <FaceIcon type={servant.type}\n                                                  rarity={servant.rarity}\n                                                  location={servant.face}\n                                                  height={50}/>\n                                    </Link>\n                                </td>\n                                <td>\n                                    <Link to={route}>\n                                        {servant.name}\n                                    </Link>\n                                </td>\n                                <td>\n                                    <RarityDescriptor rarity={servant.rarity}/>\n                                </td>\n                            </tr>\n                        })\n                    }\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n\n}\n\nexport default ServantsPage;\n"],"sourceRoot":""}