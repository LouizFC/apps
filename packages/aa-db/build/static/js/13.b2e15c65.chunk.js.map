{"version":3,"sources":["Helper/OutputHelper.tsx","Descriptor/TraitDescription.tsx","Component/FaceIcon.tsx","../../aa-api-descriptor/dist/Descriptor.js","../../aa-api-descriptor/dist/Trait/TraitOverrideNames.js","../../aa-api-descriptor/dist/Trait/describe.js","../../aa-api-descriptor/dist/Trait/TraitReferencePartial.js","../../aa-api-descriptor/dist/Trait/index.js","Component/SearchableSelect.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Descriptor/Description.tsx","../node_modules/react-bootstrap/esm/Table.js","../node_modules/react-bootstrap/esm/Badge.js","Page/Entities/TraitsSelector.tsx","Page/EntitiesPage.tsx"],"names":["asPercent","value","pow","parseInt","decimal","Math","formatNumber","String","replace","handleNewLine","text","mergeElements","split","joinElements","elements","separator","parts","pushElement","element","undefined","length","previous","toString","push","forEach","index","seperator","Fragment","map","key","TraitDescription","props","state","id","trait","this","Api","traitList","i","setState","descriptor","TraitDescriptor","describe","region","disableLink","getDescription","to","getLocation","React","Component","FaceIcon","alt","src","location","style","height","PartialType","ReferenceType","ValueType","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","BasePartial","type","ParticlePartial","_super","call","PARTICLE","ReferencePartial","referenceType","_this","REFERENCE","TextPartial","TEXT","ValuePartial","valueType","VALUE","Descriptor","partials","_partials","references","filter","partial","TraitOverrideNames","Map","toTitleCase","matches","match","word","charAt","toUpperCase","slice","join","TraitReferencePartial","TRAIT","overrideName","get","name","UNKNOWN","SearchableSelect","ref","createRef","selected","focused","results","current","clear","description","labels","disableLabelStyling","label","hideAll","getOption","concat","options","onChange","getOptions","placeholder","ignoreDiacritics","maxResults","onBlur","resetInput","selectOption","onFocus","hideReset","className","onClick","e","preventDefault","clearSelection","onMouseDown","icon","faTimes","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","arguments","source","getOwnPropertyDescriptors","defineProperties","Description","fragments","renderParticle","renderReference","renderText","renderValue","PERCENT","Table","forwardRef","_ref","bsPrefix","striped","bordered","borderless","hover","size","variant","responsive","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","Badge","pill","_ref$as","as","prefix","displayName","defaultProps","TraitsSelector","renderAsString","padStart","resetField","input","addTrait","onUpdate","traits","console","log","_trait","cursor","removeTrait","faTimesCircle","onInputChange","onKeyDown","keyCode","addInputTrait","attributeDescriptions","classNameDescriptions","entityTypeDescriptions","Entity","EntityType","NORMAL","HEROINE","COMBINE_MATERIAL","ENEMY","ENEMY_COLLECTION","ENEMY_COLLECTION_DETAIL","SERVANT_EQUIP","STATUS_UP","genderDescriptions","stateCache","EntitiesPage","defaultState","loading","searching","entities","traitSelected","Manager","setRegion","search","history","error","set","entity","collectionNo","gender","attribute","alert","searchEntity","ErrorStatus","Loading","onSubmit","ev","Form","Group","Label","Control","values","ClassName","EXTRA","Gender","Attribute","Button","faSearch","route","face","withRouter"],"mappings":"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","file":"static/js/13.b2e15c65.chunk.js","sourcesContent":["import React from \"react\";\n\nexport type Renderable = (\n    JSX.Element\n    | string\n    | number\n    | undefined\n    )\n\nexport function asPercent(value: number | string | undefined, pow: number): string {\n    if (typeof value === \"string\")\n        return asPercent(parseInt(value), pow);\n\n    const decimal = (value ?? 0) / Math.pow(10, pow);\n\n    return `${decimal}%`;\n}\n\nexport function formatNumber(value: number): string {\n    return String(value).replace(/(.)(?=(\\d{3})+$)/g, '$1,');\n}\n\nexport function handleNewLine(text?: string): Renderable {\n    if (!text)\n        return \"\";\n\n    return (\n        <span>\n            {mergeElements(text.split(\"\\n\"), <br/>)}\n        </span>\n    );\n}\n\nexport function joinElements(elements: Renderable[], separator: Renderable): Renderable[] {\n    const parts: Renderable[] = [],\n        pushElement = function (element: Renderable) {\n            if (element === undefined)\n                return;\n\n            if (typeof element === 'object') {\n                parts.push(element);\n                return;\n            }\n\n            if (parts.length === 0) {\n                parts.push(element.toString());\n                return;\n            }\n\n            const previous = parts[parts.length - 1];\n            if (typeof previous !== 'string') {\n                parts.push(element.toString());\n                return;\n            }\n\n            parts[parts.length - 1] = previous + element.toString();\n        };\n\n    elements.forEach((element, index) => {\n        if (index > 0)\n            pushElement(separator);\n\n        pushElement(element);\n    });\n\n    return parts;\n}\n\nexport function mergeElements(elements: Renderable[], seperator: Renderable): Renderable {\n    return <React.Fragment>\n        {joinElements(elements, seperator).map((element, index) => {\n            return <React.Fragment key={index}>{element}</React.Fragment>;\n        })}\n    </React.Fragment>\n}\n","import {Region, Trait} from \"@atlasacademy/api-connector\";\nimport {TraitDescriptor} from \"@atlasacademy/api-descriptor\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Api from \"../Api\";\nimport Description from \"./Description\";\n\ninterface IProps {\n    region: Region;\n    trait: Trait.Trait | number;\n    disableLink?: boolean;\n}\n\ninterface IState {\n    id: number;\n    trait?: Trait.Trait;\n}\n\nclass TraitDescription extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            id: typeof props.trait === \"number\" ? props.trait : props.trait.id,\n            trait: typeof props.trait === \"number\" ? undefined : props.trait,\n        };\n    }\n\n    async componentDidMount() {\n        if (this.state.trait)\n            return;\n\n        const traitList = await Api.traitList();\n\n        for (let i = 0; i < traitList.length; i++) {\n            const trait = traitList[i];\n\n            if (trait.id === this.state.id) {\n                this.setState({trait});\n\n                return;\n            }\n        }\n    }\n\n    private getDescription(trait: Trait.Trait | number) {\n        const descriptor = TraitDescriptor.describe(trait);\n\n        return <Description region={this.props.region} descriptor={descriptor}/>;\n    }\n\n    private getLocation(): string {\n        return `/${this.props.region}/entities/trait/${this.state.id}`;\n    }\n\n    render() {\n        const trait = this.state.trait ?? this.state.id;\n\n        return (\n            this.props.disableLink\n                ? <span>[{this.getDescription(trait)}]</span>\n                : <Link to={this.getLocation()}>[{this.getDescription(trait)}]</Link>\n        );\n    }\n}\n\nexport default TraitDescription;\n","import {Entity} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\n\ninterface IProps {\n    type?: Entity.EntityType;\n    rarity?: number;\n    location: string;\n    height?: number | string;\n}\n\nclass FaceIcon extends React.Component<IProps> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location}\n                 style={{height: this.props.height ?? '2em'}}/>\n        );\n    }\n\n}\n\nexport default FaceIcon;\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport var PartialType;\n(function (PartialType) {\n    PartialType[\"PARTICLE\"] = \"particle\";\n    PartialType[\"REFERENCE\"] = \"reference\";\n    PartialType[\"TEXT\"] = \"text\";\n    PartialType[\"VALUE\"] = \"value\";\n})(PartialType || (PartialType = {}));\nexport var ReferenceType;\n(function (ReferenceType) {\n    ReferenceType[\"TRAIT\"] = \"trait\";\n})(ReferenceType || (ReferenceType = {}));\nexport var ValueType;\n(function (ValueType) {\n    ValueType[\"NUMBER\"] = \"number\";\n    ValueType[\"PERCENT\"] = \"percent\";\n    ValueType[\"UNKNOWN\"] = \"unknown\";\n})(ValueType || (ValueType = {}));\nvar BasePartial = /** @class */ (function () {\n    function BasePartial(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    return BasePartial;\n}());\nexport { BasePartial };\nvar ParticlePartial = /** @class */ (function (_super) {\n    __extends(ParticlePartial, _super);\n    function ParticlePartial(value) {\n        return _super.call(this, PartialType.PARTICLE, value) || this;\n    }\n    return ParticlePartial;\n}(BasePartial));\nexport { ParticlePartial };\nvar ReferencePartial = /** @class */ (function (_super) {\n    __extends(ReferencePartial, _super);\n    function ReferencePartial(referenceType, value) {\n        var _this = _super.call(this, PartialType.REFERENCE, value) || this;\n        _this.referenceType = referenceType;\n        return _this;\n    }\n    return ReferencePartial;\n}(BasePartial));\nexport { ReferencePartial };\nvar TextPartial = /** @class */ (function (_super) {\n    __extends(TextPartial, _super);\n    function TextPartial(value) {\n        return _super.call(this, PartialType.TEXT, value) || this;\n    }\n    return TextPartial;\n}(BasePartial));\nexport { TextPartial };\nvar ValuePartial = /** @class */ (function (_super) {\n    __extends(ValuePartial, _super);\n    function ValuePartial(valueType, value) {\n        var _this = _super.call(this, PartialType.VALUE, value) || this;\n        _this.valueType = valueType;\n        return _this;\n    }\n    return ValuePartial;\n}(BasePartial));\nexport { ValuePartial };\nvar Descriptor = /** @class */ (function () {\n    function Descriptor(partials) {\n        this._partials = partials;\n    }\n    Descriptor.prototype.partials = function () {\n        return this._partials;\n    };\n    Descriptor.prototype.references = function () {\n        return this\n            ._partials\n            .filter(function (partial) { return partial.type === PartialType.REFERENCE; });\n    };\n    return Descriptor;\n}());\nexport { Descriptor };\n","var TraitOverrideNames = new Map([\n    [1, \"Gender:Male\"],\n    [2, \"Gender:Female\"],\n    [3, \"Gender:Unknown\"],\n    [100, \"Class:Saber\"],\n    [101, \"Class:Lancer\"],\n    [102, \"Class:Archer\"],\n    [103, \"Class:Rider\"],\n    [104, \"Class:Caster\"],\n    [105, \"Class:Assassin\"],\n    [106, \"Class:Berserker\"],\n    [107, \"Class:Shielder\"],\n    [108, \"Class:Ruler\"],\n    [109, \"Class:Alter Ego\"],\n    [110, \"Class:Avenger\"],\n    [111, \"Demon Pillar\"],\n    [112, \"Class:Grand Caster\"],\n    [113, \"Beast I\"],\n    [114, \"Beast II\"],\n    [115, \"Class:Moon Cancer\"],\n    [116, \"Beast IIIR\"],\n    [117, \"Class:Foreigner\"],\n    [118, \"Beast IIIL\"],\n    [119, \"Beast Unknown\"],\n    [200, \"Attribute:Sky\"],\n    [201, \"Attribute:Earth\"],\n    [202, \"Attribute:Human\"],\n    [203, \"Attribute:Star\"],\n    [204, \"Attribute:Beast\"],\n    [300, \"Alignment:Lawful\"],\n    [301, \"Alignment:Chaotic\"],\n    [302, \"Alignment:Neutral\"],\n    [303, \"Alignment:Good\"],\n    [304, \"Alignment:Evil\"],\n    [305, \"Alignment:Balanced\"],\n    [306, \"Alignment:Madness\"],\n    [308, \"Alignment:Summer\"],\n    [2386, \"Kingprotea:Proliferation\"],\n    [2387, \"Kingprotea:Growth\"],\n    [2664, \"Kingprotea:Proliferation NP Defense\"],\n    [3006, \"Buff:Offensive\"],\n    [3007, \"Buff:Defensive\"],\n    [3011, \"Poison\"],\n    [3012, \"Charm\"],\n    [3015, \"Burn\"],\n    [3021, \"Evade\"],\n    [3026, \"Curse\"],\n    [3047, \"Pigify\"],\n    [4001, \"Card:Arts\"],\n    [4002, \"Card:Buster\"],\n    [4003, \"Card:Quick\"],\n    [4004, \"Card:Extra\"],\n    [4008, \"Player Card\"],\n    [4100, \"Critical Hit\"],\n]);\nexport default TraitOverrideNames;\n","import { Descriptor, ParticlePartial, TextPartial, ValuePartial, ValueType } from \"../Descriptor\";\nimport TraitOverrideNames from \"./TraitOverrideNames\";\nfunction toTitleCase(value) {\n    var matches = value.match(/[A-Z]*[a-z0-9]*/g);\n    if (!matches || !matches.length)\n        return value;\n    var words = matches\n        .filter(function (word) { return word.length > 0; })\n        .map(function (word) {\n        return word.charAt(0).toUpperCase() + word.slice(1);\n    });\n    return words.join(' ');\n}\nexport default function (trait) {\n    var id = typeof trait === 'number' ? trait : trait.id;\n    var overrideName = TraitOverrideNames.get(id);\n    if (overrideName !== undefined) {\n        return new Descriptor([\n            new TextPartial(overrideName)\n        ]);\n    }\n    var name = typeof trait === \"number\" ? 'unknown' : trait.name;\n    if (name !== 'unknown') {\n        return new Descriptor([\n            new TextPartial(toTitleCase(name))\n        ]);\n    }\n    return new Descriptor([\n        new ParticlePartial('unknown('),\n        new ValuePartial(ValueType.UNKNOWN, id),\n        new ParticlePartial(')'),\n    ]);\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ReferencePartial, ReferenceType } from \"../Descriptor\";\nvar TraitReferencePartial = /** @class */ (function (_super) {\n    __extends(TraitReferencePartial, _super);\n    function TraitReferencePartial(trait) {\n        return _super.call(this, ReferenceType.TRAIT, trait) || this;\n    }\n    return TraitReferencePartial;\n}(ReferencePartial));\nexport default TraitReferencePartial;\n","import describe from \"./describe\";\nimport TraitOverrideNames from \"./TraitOverrideNames\";\nimport TraitReferencePartial from \"./TraitReferencePartial\";\nexport default {\n    describe: describe,\n    TraitOverrideNames: TraitOverrideNames,\n    TraitReferencePartial: TraitReferencePartial\n};\n","import {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React, {RefObject} from \"react\";\nimport {Typeahead} from \"react-bootstrap-typeahead\";\n\nimport \"./SearchableSelect.css\";\n\ninterface Option<T> {\n    label: string,\n    value?: T,\n}\n\ninterface IProps<T> {\n    id: string,\n    options: T[],\n    labels: Map<T, string>,\n    onChange: Function,\n    selected?: T,\n    hideAll?: boolean,\n    hideReset?: boolean,\n    disableLabelStyling?: boolean,\n    maxResults?: number,\n}\n\ninterface IState<T> {\n    ref: RefObject<any>,\n    selected?: T,\n    focused: boolean,\n    results: boolean,\n}\n\nclass SearchableSelect<T> extends React.Component<IProps<T>, IState<T>> {\n    constructor(props: IProps<T>) {\n        super(props);\n\n        this.state = {\n            ref: React.createRef(),\n            selected: props.selected,\n            focused: false,\n            results: false,\n        };\n    }\n\n    private async clearSelection() {\n        await this.setState({selected: undefined, results: true});\n        this.state.ref.current.clear();\n    }\n\n    private getDescription(value?: T): string {\n        if (value === undefined)\n            return 'All';\n\n        const description = this.props.labels.get(value);\n\n        if (this.props.disableLabelStyling) {\n            if (description)\n                return description;\n\n            return typeof value === 'string' ? value : 'Unknown';\n        }\n\n        return description\n            ? `${description} - ${value}`\n            : `(${value})`;\n    }\n\n    private getOption(value?: T): Option<T> {\n        const label = this.getDescription(value);\n\n        return {label, value};\n    }\n\n    private getOptions(): Option<T>[] {\n        return (this.props.hideAll ? [] : [this.getOption()])\n            .concat(\n                this.props.options.map(value => this.getOption(value))\n            );\n    }\n\n    private resetInput() {\n        this.setState({focused: false, results: false});\n    }\n\n    private async selectOption(options: Option<T>[]) {\n        if (options.length === 0) {\n            this.setState({results: false});\n        } else {\n            const selected = options[0].value;\n\n            await this.setState({selected, results: true});\n            this.props.onChange(selected);\n        }\n    }\n\n    render() {\n        return (\n            <Typeahead ref={this.state.ref}\n                       id={this.props.id}\n                       options={this.getOptions()}\n                       placeholder={this.getDescription(this.state.selected)}\n                       selected={this.state.focused && this.state.results ? [this.getOption(this.state.selected)] : []}\n                       ignoreDiacritics={true}\n                       maxResults={this.props.maxResults ?? 1000}\n                       onBlur={() => {\n                           this.resetInput();\n                       }}\n                       onChange={(selected) => {\n                           this.selectOption(selected);\n                       }}\n                       onFocus={() => {\n                           this.setState({focused: true});\n                       }}>\n\n                {this.props.hideReset ? null : (\n                    <button className='searchable-select-clear'\n                            onClick={e => {\n                                e.preventDefault();\n                                this.clearSelection();\n                            }}\n                            onMouseDown={e => {\n                                // Prevent input from losing focus.\n                                e.preventDefault();\n                            }}>\n                        <FontAwesomeIcon icon={faTimes}/>\n                    </button>\n                )}\n            </Typeahead>\n        );\n    }\n}\n\nexport default SearchableSelect;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import Region from \"@atlasacademy/api-connector/dist/Enum/Region\";\nimport {\n    Descriptor,\n    PartialType,\n    ParticlePartial,\n    ReferencePartial,\n    ReferenceType,\n    TextPartial,\n    ValuePartial,\n    ValueType\n} from \"@atlasacademy/api-descriptor\";\nimport React from \"react\";\nimport TraitDescription from \"./TraitDescription\";\n\ninterface IProps {\n    region: Region,\n    descriptor: Descriptor,\n}\n\nclass Description extends React.Component<IProps> {\n    private static renderParticle(partial: ParticlePartial): string {\n        return partial.value;\n    }\n\n    private renderReference(partial: ReferencePartial, key: number) {\n        if (partial.referenceType === ReferenceType.TRAIT) {\n            return <TraitDescription key={key} region={this.props.region} trait={partial.value}/>\n        }\n\n        return partial.value.toString();\n    }\n\n    private static renderText(partial: TextPartial): string {\n        return partial.value;\n    }\n\n    private static renderValue(partial: ValuePartial): string {\n        if (partial.valueType === ValueType.PERCENT) {\n            return (partial.value * 100).toString() + '%';\n        }\n\n        return partial.value.toString();\n    }\n\n    static renderAsString(descriptor: Descriptor): string {\n        const partials = descriptor.partials(),\n            fragments: string[] = [];\n\n        for (let i = 0; i < partials.length; i++) {\n            const partial = partials[i];\n\n            if (partial.type === PartialType.PARTICLE) {\n                fragments.push(Description.renderParticle(partial));\n            } else if (partial.type === PartialType.TEXT) {\n                fragments.push(Description.renderText(partial));\n            } else if (partial.type === PartialType.VALUE) {\n                fragments.push(Description.renderValue(partial as ValuePartial));\n            } else {\n                fragments.push(partial.value.toString());\n            }\n        }\n\n        return fragments.join();\n    }\n\n    render() {\n        const partials = this.props.descriptor.partials(),\n            fragments = [];\n\n        for (let i = 0; i < partials.length; i++) {\n            const partial = partials[i];\n\n            if (partial.type === PartialType.PARTICLE) {\n                fragments.push(Description.renderParticle(partial));\n            } else if (partial.type === PartialType.REFERENCE) {\n                fragments.push(this.renderReference(partial as ReferencePartial, i));\n            } else if (partial.type === PartialType.TEXT) {\n                fragments.push(Description.renderText(partial));\n            } else if (partial.type === PartialType.VALUE) {\n                fragments.push(Description.renderValue(partial as ValuePartial));\n            } else {\n                fragments.push(partial.value.toString());\n            }\n        }\n\n        return <React.Fragment>{fragments}</React.Fragment>;\n    }\n\n}\n\nexport default Description;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import {Region, Trait} from \"@atlasacademy/api-connector\";\nimport {TraitDescriptor} from \"@atlasacademy/api-descriptor\";\nimport {faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React, {RefObject} from \"react\";\nimport {Badge} from \"react-bootstrap\";\nimport {Typeahead} from \"react-bootstrap-typeahead\";\nimport Description from \"../../Descriptor/Description\";\nimport TraitDescription from \"../../Descriptor/TraitDescription\";\nimport {mergeElements} from \"../../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    traitList: Trait.Trait[];\n    traits: number[];\n    onUpdate: (traits: number[]) => void;\n}\n\ninterface IState {\n    ref: RefObject<any>,\n    input?: string,\n}\n\nclass TraitsSelector extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            ref: React.createRef()\n        };\n    }\n\n    private options() {\n        return this.props.traitList.map(trait => {\n            const descriptor = TraitDescriptor.describe(trait),\n                label = Description.renderAsString(descriptor);\n\n            return {\n                label: `${trait.id.toString().padStart(4, '0')} - ${label}`,\n                value: trait.id,\n            };\n        });\n    }\n\n    private resetInput(resetField = true) {\n        this.setState({\n            input: ''\n        });\n        if (resetField) this.state.ref.current.clear();\n    }\n\n    private addInputTrait() {\n        const value = this.state.input;\n        if (!value) {\n            this.resetInput();\n            return;\n        }\n\n        if (!value.match(/^[0-9]+$/)) {\n            this.resetInput();\n            return;\n        }\n\n        this.addTrait(parseInt(value));\n        this.resetInput();\n    }\n\n    private addTrait(trait: number) {\n        this.props.onUpdate(\n            this.props.traits.concat([trait])\n        );\n    }\n\n    private removeTrait(trait: number) {\n        console.log(\n            trait,\n            this.props.traits.filter(_trait => _trait !== trait)\n        );\n        this.props.onUpdate(\n            this.props.traits.filter(_trait => _trait !== trait)\n        );\n    }\n\n    render() {\n        return (\n            <div>\n\n                <p>\n                    {this.props.traits.length > 0 ? mergeElements(this.props.traits.map(trait => (\n                        <span key={trait}\n                              style={{cursor: 'pointer'}}\n                              onClick={(e) => {\n                                  e.preventDefault();\n                                  this.removeTrait(trait);\n                              }}>\n                            <Badge variant='primary'>\n                                <TraitDescription region={this.props.region} trait={trait} disableLink={true}/>\n                                &nbsp;\n                                <FontAwesomeIcon icon={faTimesCircle}/>\n                            </Badge>\n                        </span>\n                    )), ' ') : <i>No Traits Selected</i>}\n                </p>\n\n                <Typeahead ref={this.state.ref}\n                           id={'traitsSelector'}\n                           options={this.options()}\n                           placeholder='Add Trait Filter'\n                           ignoreDiacritics={true}\n                           selected={[]}\n                           onBlur={() => {\n                               this.resetInput(false);\n                           }}\n                           onChange={(selected) => {\n                               if (selected.length > 0) {\n                                   this.addTrait(selected[0].value);\n                               }\n                           }}\n                           onInputChange={text => {\n                               this.setState({input: text});\n                           }}\n                           onKeyDown={(e: any) => {\n                               if (e.keyCode === 13) {\n                                   this.addInputTrait();\n                               }\n                           }}/>\n\n            </div>\n        );\n    }\n}\n\nexport default TraitsSelector;\n","import {ClassName, Entity, Region, Trait} from \"@atlasacademy/api-connector\";\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Button, Form, Table} from \"react-bootstrap\";\nimport {withRouter} from \"react-router\";\nimport {Link, RouteComponentProps} from \"react-router-dom\";\nimport Api from \"../Api\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport FaceIcon from \"../Component/FaceIcon\";\nimport Loading from \"../Component/Loading\";\nimport SearchableSelect from \"../Component/SearchableSelect\";\nimport Manager from \"../Setting/Manager\";\nimport TraitsSelector from \"./Entities/TraitsSelector\";\n\nconst attributeDescriptions = new Map<Entity.Attribute, string>(),\n    classNameDescriptions = new Map<ClassName, string>(),\n    entityTypeDescriptions = new Map<Entity.EntityType, string>([\n        [Entity.EntityType.NORMAL, 'Servant'],\n        [Entity.EntityType.HEROINE, 'Servant (Mash)'],\n        [Entity.EntityType.COMBINE_MATERIAL, 'Exp Card'],\n        [Entity.EntityType.ENEMY, 'Enemy'],\n        [Entity.EntityType.ENEMY_COLLECTION, 'Enemy Servant'],\n        [Entity.EntityType.ENEMY_COLLECTION_DETAIL, 'Boss'],\n        [Entity.EntityType.SERVANT_EQUIP, 'Craft Essence'],\n        [Entity.EntityType.STATUS_UP, 'Fou Card'],\n    ]),\n    genderDescriptions = new Map<Entity.Gender, string>();\n\nlet stateCache = new Map<Region, IState>([]);\n\ninterface ChangeEvent extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps extends RouteComponentProps {\n    region: Region;\n    traitSelected?: number;\n}\n\ninterface IState {\n    loading: boolean;\n    error?: AxiosError;\n    traitList: Trait.Trait[];\n    searching: boolean;\n    entities: Entity.EntityBasic[];\n    name?: string;\n    type?: Entity.EntityType;\n    className?: ClassName;\n    gender?: Entity.Gender;\n    attribute?: Entity.Attribute;\n    traits: number[];\n}\n\nclass EntitiesPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        const defaultState: IState = {\n            loading: true,\n            traitList: [],\n            searching: false,\n            entities: [],\n            traits: []\n        };\n\n        if (props.traitSelected) {\n            this.state = {\n                ...defaultState,\n                traits: [props.traitSelected]\n            }\n        } else {\n            this.state = stateCache.get(props.region) ?? defaultState;\n        }\n    }\n\n    async componentDidMount() {\n        Manager.setRegion(this.props.region);\n\n        try {\n            const traitList = await Api.traitList();\n            if (this.props.traitSelected) {\n                await this.search();\n                this.props.history.replace(`/${this.props.region}/entities`);\n            }\n\n            this.setState({\n                loading: false,\n                traitList\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    componentDidUpdate() {\n        stateCache.set(this.props.region, {...this.state});\n    }\n\n    private location(entity: Entity.EntityBasic): string | undefined {\n        switch (entity.type) {\n            case Entity.EntityType.NORMAL:\n            case Entity.EntityType.HEROINE:\n                return entity.collectionNo === 0\n                    ? `/${this.props.region}/enemy/${entity.id}`\n                    : `/${this.props.region}/servant/${entity.id}`;\n            case Entity.EntityType.SERVANT_EQUIP:\n                return `/${this.props.region}/craft-essence/${entity.id}`;\n            case Entity.EntityType.ENEMY:\n            case Entity.EntityType.ENEMY_COLLECTION:\n            case Entity.EntityType.ENEMY_COLLECTION_DETAIL:\n                return `/${this.props.region}/enemy/${entity.id}`;\n        }\n\n        return undefined;\n    }\n\n    private async search() {\n        // no filter set\n        if (!this.state.name\n            && !this.state.type\n            && !this.state.className\n            && !this.state.gender\n            && !this.state.attribute\n            && this.state.traits.length === 0\n        ) {\n            this.setState({entities: []});\n            alert('Please refine the results before searching');\n            return;\n        }\n\n        try {\n            await this.setState({searching: true, entities: []});\n\n            const entities = await Api.searchEntity(\n                this.state.name,\n                this.state.type,\n                this.state.className,\n                this.state.gender,\n                this.state.attribute,\n                this.state.traits\n            );\n\n            this.setState({searching: false, entities: entities});\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading)\n            return <Loading/>;\n\n        return (\n            <div>\n                {this.state.searching ? <Loading/> : null}\n\n                <h1>Entities Search</h1>\n\n                <form onSubmit={(ev: React.FormEvent) => {\n                    ev.preventDefault();\n                    this.search();\n                }}>\n\n                    <Form.Group>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control value={this.state.name ?? ''}\n                                      onChange={(ev: ChangeEvent) => {\n                                          this.setState({name: ev.target.value});\n                                      }}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Type</Form.Label>\n                        <SearchableSelect<Entity.EntityType> id='select-EntityType'\n                                                      options={Object.values(Entity.EntityType)}\n                                                      labels={entityTypeDescriptions}\n                                                      selected={this.state.type}\n                                                      onChange={(value?: Entity.EntityType) => {\n                                                          this.setState({type: value});\n                                                      }}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Class</Form.Label>\n                        <SearchableSelect<ClassName> id='select-ClassName'\n                                                     options={\n                                                         Object\n                                                             .values(ClassName)\n                                                             .filter(className => className !== ClassName.EXTRA)\n                                                     }\n                                                     labels={classNameDescriptions}\n                                                     selected={this.state.className}\n                                                     onChange={(value?: ClassName) => {\n                                                         this.setState({className: value});\n                                                     }}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Gender</Form.Label>\n                        <SearchableSelect<Entity.Gender> id='select-Gender'\n                                                  options={Object.values(Entity.Gender)}\n                                                  labels={genderDescriptions}\n                                                  selected={this.state.gender}\n                                                  onChange={(value?: Entity.Gender) => {\n                                                      this.setState({gender: value});\n                                                  }}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Attribute</Form.Label>\n                        <SearchableSelect<Entity.Attribute> id='select-Attribute'\n                                                     options={Object.values(Entity.Attribute)}\n                                                     labels={attributeDescriptions}\n                                                     selected={this.state.attribute}\n                                                     onChange={(value?: Entity.Attribute) => {\n                                                         this.setState({attribute: value});\n                                                     }}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Traits</Form.Label>\n                        <TraitsSelector region={this.props.region}\n                                        traitList={this.state.traitList}\n                                        traits={this.state.traits}\n                                        onUpdate={(traits => {\n                                            this.setState({traits});\n                                        })}/>\n                    </Form.Group>\n                    <Button variant={'primary'} onClick={() => this.search()}>\n                        Search\n                        {' '}\n                        <FontAwesomeIcon icon={faSearch}/>\n                    </Button>\n                </form>\n\n                <hr/>\n\n                <Table responsive>\n                    <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Type</th>\n                        <th>Icon</th>\n                        <th>Name</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.entities.map((entity, index) => {\n                        const route = this.location(entity);\n\n                        return (\n                            <tr key={index}>\n                                <td>\n                                    {route ? (\n                                        <Link to={route}>\n                                            {entity.id}\n                                        </Link>\n                                    ) : entity.id}\n                                </td>\n                                <td>{entityTypeDescriptions.get(entity.type) ?? entity.type}</td>\n                                <td>\n                                    <FaceIcon location={entity.face}/>\n                                </td>\n                                <td>{entity.name}</td>\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(EntitiesPage);\n"],"sourceRoot":""}