{"version":3,"sources":["Api/Data/Func.tsx","Helper/FuncHelper.tsx","Descriptor/Func/FuncDescriptorSections.tsx","Descriptor/FuncDescriptor.tsx","Descriptor/Func/handleTeamSection.tsx","Descriptor/Func/handleChanceSection.tsx","Descriptor/Func/handleAffectsSection.tsx","Descriptor/Func/handleAmountSection.tsx","Descriptor/Func/handleDurationSection.tsx","Descriptor/Func/handleScalingSection.tsx","Descriptor/SkillDescriptor.tsx","Descriptor/SkillReferenceDescriptor.tsx","Descriptor/FuncValueDescriptor.tsx","Descriptor/BuffValueDescriptor.tsx","Descriptor/Func/handleActionSection.tsx","Descriptor/Func/handleTargetSection.tsx"],"names":["FuncType","FuncTargetType","FuncTargetTeam","DataValField","hasChangingDataVals","vals","length","previous","i","JSON","stringify","hasUniqueValues","values","Set","size","describeMutators","region","func","dataVals","getDataValList","staticVals","getStaticFieldValues","getMutatingFieldValues","fields","Object","filter","field","map","val","getMutatingFieldNames","dependingVals","undefined","DependFuncVals","dependingMutatingValues","staticValues","index","mutatingVals","x","DependFuncId","mutatingVal","staticDataVal","dataVal","funcUpdatesByLevel","getLevelDataValList","funcUpdatesByOvercharge","getOverchargeDataValList","isLevel","isOvercharge","getTargetVersionValues","push","getMixedDataValList","svals","getRelatedSkillIds","funcType","ADD_STATE","ADD_STATE_SHORT","buff","buffs","type","BuffType","ATTACK_FUNCTION","COMMANDATTACK_FUNCTION","COMMANDATTACK_BEFORE_FUNCTION","COMMANDCODEATTACK_FUNCTION","DAMAGE_FUNCTION","DEAD_FUNCTION","DELAY_FUNCTION","SELFTURNEND_FUNCTION","Value","NPATTACK_PREV_BUFF","SkillID","getStaticFieldNames","hasDependingVals","dependingStaticValues","level","overcharge","svals2","svals3","svals4","svals5","FuncDescriptorSection","preposition","showing","parts","this","FuncDescriptorSections","team","chance","action","affects","amount","target","duration","scaling","FuncDescriptor","props","getDataVal","sections","section","funcTargetTeam","PLAYER","ENEMY","handleTeamSection","Rate","NONE","handleChanceSection","handleActionSection","Target","DAMAGE_NP_INDIVIDUAL","DAMAGE_NP_STATE_INDIVIDUAL_FIX","TargetList","DAMAGE_NP_INDIVIDUAL_SUM","TraitDescriptor","trait","ParamAddMaxCount","TargetRarityList","DAMAGE_NP_RARE","split","DAMAGE_NP_PIERCE","funcquestTvals","mergeElements","functvals","forEach","handleAffectsSection","ADD_INDIVIDUALITY","CARD_RESET","FuncValueDescriptor","hideRate","GAIN_HP_FROM_TARGETS","GAIN_NP_FROM_TARGETS","SkillReferenceDescriptor","id","BuffValueDescriptor","handleAmountSection","handleTargetSection","Count","Turn","countDesc","turnDesc","handleDurationSection","handleScalingSection","concat","to","funcId","icon","faShare","joinElements","element","Fragment","key","React","Component","SkillDescriptor","skill","location","height","iconHeight","name","state","Connection","setState","route","Value2","asPercent","DAMAGE_NP","GAIN_NP","LOSS_NP","toString","Correction","chargeAmount","value","UP_ATK","DOWN_ATK","UP_COMMANDALL","DOWN_COMMANDALL","UP_CRITICALDAMAGE","DOWN_CRITICALDAMAGE","UP_CRITICALPOINT","DOWN_CRITICALPOINT","UP_CRITICALRATE","DOWN_CRITICALRATE","UP_CRITICAL_RATE_DAMAGE_TAKEN","DOWN_CRITICAL_RATE_DAMAGE_TAKEN","UP_DAMAGE","DOWN_DAMAGE","UP_DAMAGEDROPNP","DOWN_DAMAGEDROPNP","UP_DEFENCE","DOWN_DEFENCE","UP_DEFENCECOMMANDALL","DOWN_DEFENCECOMMANDALL","UP_DROPNP","DOWN_DROPNP","UP_FUNC_HP_REDUCE","DOWN_FUNC_HP_REDUCE","UP_HATE","UP_NONRESIST_INSTANTDEATH","UP_NPDAMAGE","DOWN_NPDAMAGE","UP_SPECIALDEFENCE","DOWN_SPECIALDEFENCE","UP_STARWEIGHT","DOWN_STARWEIGHT","UP_TOLERANCE","DOWN_TOLERANCE","UP_TOLERANCE_SUBSTATE","DOWN_TOLERANCE_SUBSTATE","REGAIN_NP","SkillLV","FIELD_INDIVIDUALITY","funcDescriptions","Map","DELAY_NPTURN","EXP_UP","FORCE_INSTANT_DEATH","GAIN_HP","GAIN_STAR","HASTEN_NPTURN","INSTANT_DEATH","LOSS_HP_SAFE","SUB_STATE","handleBuffActionSection","get","traitVals","handleCleanseActionSection","targetDescriptions","SELF","PT_ONE","PT_ALL","ENEMY_ALL","PT_FULL","ENEMY_FULL","PT_OTHER","PT_ONE_OTHER","PT_RANDOM","ENEMY_OTHER","ENEMY_RANDOM","PT_OTHER_FULL","ENEMY_OTHER_FULL","PTSELECT_ONE_SUB","PTSELECT_SUB","PT_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_RANDOM","ENEMY_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_FIRST","COMMAND_TYPE_SELF_TREASURE_DEVICE","targetType","funcTargetType"],"mappings":"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","file":"static/js/3.d30e0468.chunk.js","sourcesContent":["import Buff from \"./Buff\";\nimport NoblePhantasm from \"./NoblePhantasm\";\nimport Skill from \"./Skill\";\nimport Trait from \"./Trait\";\n\nexport enum FuncType {\n    NONE = \"none\",\n    ADD_STATE = \"addState\",\n    SUB_STATE = \"subState\",\n    DAMAGE = \"damage\",\n    DAMAGE_NP = \"damageNp\",\n    GAIN_STAR = \"gainStar\",\n    GAIN_HP = \"gainHp\",\n    GAIN_NP = \"gainNp\",\n    LOSS_NP = \"lossNp\",\n    SHORTEN_SKILL = \"shortenSkill\",\n    EXTEND_SKILL = \"extendSkill\",\n    RELEASE_STATE = \"releaseState\",\n    LOSS_HP = \"lossHp\",\n    INSTANT_DEATH = \"instantDeath\",\n    DAMAGE_NP_PIERCE = \"damageNpPierce\",\n    DAMAGE_NP_INDIVIDUAL = \"damageNpIndividual\",\n    ADD_STATE_SHORT = \"addStateShort\",\n    GAIN_HP_PER = \"gainHpPer\",\n    DAMAGE_NP_STATE_INDIVIDUAL = \"damageNpStateIndividual\",\n    HASTEN_NPTURN = \"hastenNpturn\",\n    DELAY_NPTURN = \"delayNpturn\",\n    DAMAGE_NP_HPRATIO_HIGH = \"damageNpHpratioHigh\",\n    DAMAGE_NP_HPRATIO_LOW = \"damageNpHpratioLow\",\n    CARD_RESET = \"cardReset\",\n    REPLACE_MEMBER = \"replaceMember\",\n    LOSS_HP_SAFE = \"lossHpSafe\",\n    DAMAGE_NP_COUNTER = \"damageNpCounter\",\n    DAMAGE_NP_STATE_INDIVIDUAL_FIX = \"damageNpStateIndividualFix\",\n    DAMAGE_NP_SAFE = \"damageNpSafe\",\n    CALL_SERVANT = \"callServant\",\n    PT_SHUFFLE = \"ptShuffle\",\n    LOSS_STAR = \"lossStar\",\n    CHANGE_SERVANT = \"changeServant\",\n    CHANGE_BG = \"changeBg\",\n    DAMAGE_VALUE = \"damageValue\",\n    WITHDRAW = \"withdraw\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    SHORTEN_BUFFTURN = \"shortenBuffturn\",\n    EXTEND_BUFFTURN = \"extendBuffturn\",\n    SHORTEN_BUFFCOUNT = \"shortenBuffcount\",\n    EXTEND_BUFFCOUNT = \"extendBuffcount\",\n    CHANGE_BGM = \"changeBgm\",\n    DISPLAY_BUFFSTRING = \"displayBuffstring\",\n    RESURRECTION = \"resurrection\",\n    GAIN_NP_BUFF_INDIVIDUAL_SUM = \"gainNpBuffIndividualSum\",\n    SET_SYSTEM_ALIVE_FLAG = \"setSystemAliveFlag\",\n    FORCE_INSTANT_DEATH = \"forceInstantDeath\",\n    DAMAGE_NP_RARE = \"damageNpRare\",\n    GAIN_NP_FROM_TARGETS = \"gainNpFromTargets\",\n    GAIN_HP_FROM_TARGETS = \"gainHpFromTargets\",\n    LOSS_HP_PER = \"lossHpPer\",\n    LOSS_HP_PER_SAFE = \"lossHpPerSafe\",\n    SHORTEN_USER_EQUIP_SKILL = \"shortenUserEquipSkill\",\n    QUICK_CHANGE_BG = \"quickChangeBg\",\n    SHIFT_SERVANT = \"shiftServant\",\n    DAMAGE_NP_AND_CHECK_INDIVIDUALITY = \"damageNpAndCheckIndividuality\",\n    ABSORB_NPTURN = \"absorbNpturn\",\n    OVERWRITE_DEAD_TYPE = \"overwriteDeadType\",\n    FORCE_ALL_BUFF_NOACT = \"forceAllBuffNoact\",\n    BREAK_GAUGE_UP = \"breakGaugeUp\",\n    BREAK_GAUGE_DOWN = \"breakGaugeDown\",\n    EXP_UP = \"expUp\",\n    QP_UP = \"qpUp\",\n    DROP_UP = \"dropUp\",\n    FRIEND_POINT_UP = \"friendPointUp\",\n    EVENT_DROP_UP = \"eventDropUp\",\n    EVENT_DROP_RATE_UP = \"eventDropRateUp\",\n    EVENT_POINT_UP = \"eventPointUp\",\n    EVENT_POINT_RATE_UP = \"eventPointRateUp\",\n    TRANSFORM_SERVANT = \"transformServant\",\n    QP_DROP_UP = \"qpDropUp\",\n    SERVANT_FRIENDSHIP_UP = \"servantFriendshipUp\",\n    USER_EQUIP_EXP_UP = \"userEquipExpUp\",\n    CLASS_DROP_UP = \"classDropUp\",\n    ENEMY_ENCOUNT_COPY_RATE_UP = \"enemyEncountCopyRateUp\",\n    ENEMY_ENCOUNT_RATE_UP = \"enemyEncountRateUp\",\n    ENEMY_PROB_DOWN = \"enemyProbDown\",\n    GET_REWARD_GIFT = \"getRewardGift\",\n    SEND_SUPPORT_FRIEND_POINT = \"sendSupportFriendPoint\",\n    MOVE_POSITION = \"movePosition\",\n    REVIVAL = \"revival\",\n    DAMAGE_NP_INDIVIDUAL_SUM = \"damageNpIndividualSum\",\n}\n\nexport enum FuncTargetType {\n    SELF = \"self\",\n    PT_ONE = \"ptOne\",\n    PT_ANOTHER = \"ptAnother\",\n    PT_ALL = \"ptAll\",\n    ENEMY = \"enemy\",\n    ENEMY_ANOTHER = \"enemyAnother\",\n    ENEMY_ALL = \"enemyAll\",\n    PT_FULL = \"ptFull\",\n    ENEMY_FULL = \"enemyFull\",\n    PT_OTHER = \"ptOther\",\n    PT_ONE_OTHER = \"ptOneOther\",\n    PT_RANDOM = \"ptRandom\",\n    ENEMY_OTHER = \"enemyOther\",\n    ENEMY_RANDOM = \"enemyRandom\",\n    PT_OTHER_FULL = \"ptOtherFull\",\n    ENEMY_OTHER_FULL = \"enemyOtherFull\",\n    PTSELECT_ONE_SUB = \"ptselectOneSub\",\n    PTSELECT_SUB = \"ptselectSub\",\n    PT_ONE_ANOTHER_RANDOM = \"ptOneAnotherRandom\",\n    PT_SELF_ANOTHER_RANDOM = \"ptSelfAnotherRandom\",\n    ENEMY_ONE_ANOTHER_RANDOM = \"enemyOneAnotherRandom\",\n    PT_SELF_ANOTHER_FIRST = \"ptSelfAnotherFirst\",\n    PT_SELF_BEFORE = \"ptSelfBefore\",\n    PT_SELF_AFTER = \"ptSelfAfter\",\n    PT_SELF_ANOTHER_LAST = \"ptSelfAnotherLast\",\n    COMMAND_TYPE_SELF_TREASURE_DEVICE = \"commandTypeSelfTreasureDevice\",\n}\n\nexport enum FuncTargetTeam {\n    PLAYER = \"player\",\n    ENEMY = \"enemy\",\n    PLAYER_AND_ENEMY = \"playerAndEnemy\",\n}\n\nexport enum DataValField {\n    RATE = \"Rate\",\n    TURN = \"Turn\",\n    COUNT = \"Count\",\n    VALUE = \"Value\",\n    VALUE2 = \"Value2\",\n    USE_RATE = \"UseRate\",\n    TARGET = \"Target\",\n    CORRECTION = \"Correction\",\n    PARAM_ADD = \"ParamAdd\",\n    PARAM_MAX = \"ParamMax\",\n    HIDE_MISS = \"HideMiss\",\n    ON_FIELD = \"OnField\",\n    HIDE_NO_EFFECT = \"HideNoEffect\",\n    UNAFFECTED = \"Unaffected\",\n    SHOW_STATE = \"ShowState\",\n    AURA_EFFECT_ID = \"AuraEffectId\",\n    ACT_SET = \"ActSet\",\n    ACT_SET_WEIGHT = \"ActSetWeight\",\n    SHOW_QUEST_NO_EFFECT = \"ShowQuestNoEffect\",\n    CHECK_DEAD = \"CheckDead\",\n    RATIO_HP_HIGH = \"RatioHPHigh\",\n    RATIO_HP_LOW = \"RatioHPLow\",\n    SET_PASSIVE_FRAME = \"SetPassiveFrame\",\n    PROC_PASSIVE = \"ProcPassive\",\n    PROC_ACTIVE = \"ProcActive\",\n    HIDE_PARAM = \"HideParam\",\n    SKILL_ID = \"SkillID\",\n    SKILL_LV = \"SkillLV\",\n    SHOW_CARD_ONLY = \"ShowCardOnly\",\n    EFFECT_SUMMON = \"EffectSummon\",\n    RATIO_HP_RANGE_HIGH = \"RatioHPRangeHigh\",\n    RATIO_HP_RANGE_LOW = \"RatioHPRangeLow\",\n    TARGET_LIST = \"TargetList\",\n    OPPONENT_ONLY = \"OpponentOnly\",\n    STATUS_EFFECT_ID = \"StatusEffectId\",\n    END_BATTLE = \"EndBattle\",\n    LOSE_BATTLE = \"LoseBattle\",\n    ADD_INDIVIDUALTY = \"AddIndividualty\",\n    ADD_LINKAGE_TARGET_INDIVIDUALTY = \"AddLinkageTargetIndividualty\",\n    SAME_BUFF_LIMIT_TARGET_INDIVIDUALITY = \"SameBuffLimitTargetIndividuality\",\n    SAME_BUFF_LIMIT_NUM = \"SameBuffLimitNum\",\n    CHECK_DUPLICATE = \"CheckDuplicate\",\n    ON_FIELD_COUNT = \"OnFieldCount\",\n    TARGET_RARITY_LIST = \"TargetRarityList\",\n    DEPEND_FUNC_ID = \"DependFuncId\",\n    INVALID_HIDE = \"InvalidHide\",\n    OUT_ENEMY_NPC_ID = \"OutEnemyNpcId\",\n    IN_ENEMY_NPC_ID = \"InEnemyNpcId\",\n    OUT_ENEMY_POSITION = \"OutEnemyPosition\",\n    IGNORE_INDIVIDUALITY = \"IgnoreIndividuality\",\n    STAR_HIGHER = \"StarHigher\",\n    CHANGE_TD_COMMAND_TYPE = \"ChangeTDCommandType\",\n    SHIFT_NPC_ID = \"ShiftNpcId\",\n    DISPLAY_LAST_FUNC_INVALID_TYPE = \"DisplayLastFuncInvalidType\",\n    AND_CHECK_INDIVIDUALITY_LIST = \"AndCheckIndividualityList\",\n    WIN_BATTLE_NOT_RELATED_SURVIVAL_STATUS = \"WinBattleNotRelatedSurvivalStatus\",\n    FORCE_SELF_INSTANT_DEATH = \"ForceSelfInstantDeath\",\n    CHANGE_MAX_BREAK_GAUGE = \"ChangeMaxBreakGauge\",\n    PARAM_ADD_MAX_VALUE = \"ParamAddMaxValue\",\n    PARAM_ADD_MAX_COUNT = \"ParamAddMaxCount\",\n    LOSS_HP_NO_CHANGE_DAMAGE = \"LossHpNoChangeDamage\",\n    INCLUDE_PASSIVE_INDIVIDUALITY = \"IncludePassiveIndividuality\",\n}\n\ntype BaseDataVal = { [key in DataValField]?: number | string; };\n\nexport type DataVal = (\n    BaseDataVal\n    & { DependFuncVals?: BaseDataVal; }\n    );\n\nexport default interface Func {\n    funcId: number;\n    funcType: FuncType;\n    funcTargetType: FuncTargetType;\n    funcTargetTeam: FuncTargetTeam;\n    funcPopupText: string;\n    funcPopupIcon?: string;\n    functvals: Trait[];\n    funcquestTvals: number[];\n    traitVals?: Trait[];\n    buffs: Buff[];\n    svals?: DataVal[];\n    svals2?: DataVal[];\n    svals3?: DataVal[];\n    svals4?: DataVal[];\n    svals5?: DataVal[];\n    reverseSkills: Skill[];\n    reverseTds: NoblePhantasm[];\n}\n","import React from \"react\";\nimport {BuffType} from \"../Api/Data/Buff\";\nimport Func, {DataVal, DataValField, FuncType} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport FuncValueDescriptor from \"../Descriptor/FuncValueDescriptor\";\nimport {Renderable} from \"./OutputHelper\";\n\nconst hasChangingDataVals = function (vals: DataVal[]): boolean {\n    if (!vals.length)\n        return false;\n\n    let previous = vals[0];\n    for (let i = 1; i < vals.length; i++) {\n        if (JSON.stringify(previous) !== JSON.stringify(vals[i]))\n            return true;\n\n        previous = vals[i];\n    }\n\n    return false;\n};\n\nconst hasUniqueValues = function (values: (number | string | undefined)[]): boolean {\n    return new Set(values).size > 1;\n};\n\nexport function describeMutators(region: Region, func: Func): Renderable[] {\n    const dataVals = getDataValList(func),\n        staticVals = getStaticFieldValues(dataVals),\n        mutatingVals = getMutatingFieldValues(dataVals);\n\n    return mutatingVals\n        .map(mutatingVal => <FuncValueDescriptor region={region} func={func} staticDataVal={staticVals} dataVal={mutatingVal}/>);\n}\n\nexport function funcUpdatesByLevel(func: Func): boolean {\n    return hasChangingDataVals(getLevelDataValList(func));\n}\n\nexport function funcUpdatesByOvercharge(func: Func): boolean {\n    return hasChangingDataVals(getOverchargeDataValList(func));\n}\n\nexport function getDataValList(func: Func): DataVal[] {\n    const isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func);\n\n    return isLevel && isOvercharge\n        ? getMixedDataValList(func)\n        : (isOvercharge ? getOverchargeDataValList(func) : getLevelDataValList(func));\n}\n\nexport function getLevelDataValList(func: Func): DataVal[] {\n    return func.svals ?? [];\n}\n\nexport function getMixedDataValList(func: Func): DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, i, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getMutatingFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return hasUniqueValues(values);\n    });\n}\n\nexport function getMutatingFieldValues(vals: DataVal[]): DataVal[] {\n    if (!vals.length)\n        return [];\n\n    const fields = getMutatingFieldNames(vals),\n        hasDependingVals = vals.filter(val => val.DependFuncVals !== undefined).length > 0,\n        dependingVals: (DataVal[] | undefined) = (\n            hasDependingVals\n                ? vals.map(val => (val.DependFuncVals ?? {}) as DataVal)\n                : undefined\n        ),\n        dependingMutatingValues = dependingVals ? getMutatingFieldValues(dependingVals) : [],\n        staticValues = getStaticFieldValues(vals);\n\n    return vals.map((val, index) => {\n        const mutatingVals: DataVal = {};\n\n        for (let x in fields) {\n            mutatingVals[fields[x]] = val[fields[x]];\n        }\n\n        if (staticValues.DependFuncId && dependingMutatingValues[index]) {\n            mutatingVals.DependFuncId = staticValues.DependFuncId;\n            mutatingVals.DependFuncVals = dependingMutatingValues[index];\n        }\n\n        return mutatingVals;\n    });\n}\n\nexport function getOverchargeDataValList(func: Func): DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, 1, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getRelatedSkillIds(func: Func): number[] {\n    if (func.funcType !== FuncType.ADD_STATE && func.funcType !== FuncType.ADD_STATE_SHORT)\n        return [];\n\n    const buff = func.buffs[0];\n    if (\n        buff.type === BuffType.ATTACK_FUNCTION\n        || buff.type === BuffType.COMMANDATTACK_FUNCTION\n        || buff.type === BuffType.COMMANDATTACK_BEFORE_FUNCTION\n        || buff.type === BuffType.COMMANDCODEATTACK_FUNCTION\n        || buff.type === BuffType.DAMAGE_FUNCTION\n        || buff.type === BuffType.DEAD_FUNCTION\n        || buff.type === BuffType.DELAY_FUNCTION\n        || buff.type === BuffType.SELFTURNEND_FUNCTION\n    ) {\n        const dataVals = getDataValList(func),\n            dataVal = dataVals[0];\n\n        return typeof dataVal.Value === \"number\" ? [dataVal.Value] : [];\n    }\n\n    if (buff.type === BuffType.NPATTACK_PREV_BUFF) {\n        const dataVals = getDataValList(func),\n            dataVal = dataVals[0];\n\n        return typeof dataVal.SkillID === \"number\" ? [dataVal.SkillID] : [];\n    }\n\n    return [];\n}\n\nexport function getStaticFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return !hasUniqueValues(values);\n    });\n}\n\nexport function getStaticFieldValues(vals: DataVal[]): DataVal {\n    if (!vals.length)\n        return {};\n\n    const fields = getStaticFieldNames(vals),\n        staticVals: DataVal = {},\n        hasDependingVals = vals.filter(val => val.DependFuncVals !== undefined).length > 0,\n        dependingVals: (DataVal[] | undefined) = (\n            hasDependingVals\n                ? vals.map(val => (val.DependFuncVals ?? {}) as DataVal)\n                : undefined\n        ),\n        dependingStaticValues = dependingVals ? getStaticFieldValues(dependingVals) : undefined;\n\n    for (let x in fields) {\n        staticVals[fields[x]] = vals[0][fields[x]];\n    }\n\n    if (hasDependingVals)\n        staticVals.DependFuncVals = dependingStaticValues;\n\n    return staticVals;\n}\n\nexport function getTargetVersionValues(func: Func, level: number, overcharge: number = 1): DataVal | undefined {\n    if (func.svals === undefined)\n        return undefined;\n\n    let dataVals;\n\n    if (overcharge === 2 && func.svals2)\n        dataVals = func.svals2;\n    else if (overcharge === 3 && func.svals3)\n        dataVals = func.svals3;\n    else if (overcharge === 4 && func.svals4)\n        dataVals = func.svals4;\n    else if (overcharge === 5 && func.svals5)\n        dataVals = func.svals5;\n    else\n        dataVals = func.svals;\n\n    return dataVals[level - 1];\n}\n","import {Renderable} from \"../../Helper/OutputHelper\";\n\nexport class FuncDescriptorSection {\n    public showing: boolean = true;\n    public parts: Renderable[] = [];\n    public preposition?: string;\n\n    constructor(preposition?: string) {\n        this.preposition = preposition;\n    }\n}\n\nexport class FuncDescriptorSections {\n    public team = new FuncDescriptorSection();\n    public chance = new FuncDescriptorSection();\n    public action = new FuncDescriptorSection();\n    public affects = new FuncDescriptorSection();\n    public amount = new FuncDescriptorSection('of');\n    public target = new FuncDescriptorSection('to');\n    public duration = new FuncDescriptorSection();\n    public scaling = new FuncDescriptorSection();\n}\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Func, {DataVal} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {getDataValList, getStaticFieldValues, getTargetVersionValues} from \"../Helper/FuncHelper\";\nimport {joinElements, Renderable} from \"../Helper/OutputHelper\";\nimport {FuncDescriptorSections} from \"./Func/FuncDescriptorSections\";\nimport handleActionSection from \"./Func/handleActionSection\";\nimport handleAffectsSection from \"./Func/handleAffectsSection\";\nimport handleAmountSection from \"./Func/handleAmountSection\";\nimport handleChanceSection from \"./Func/handleChanceSection\";\nimport handleDurationSection from \"./Func/handleDurationSection\";\nimport handleScalingSection from \"./Func/handleScalingSection\";\nimport handleTargetSection from \"./Func/handleTargetSection\";\nimport handleTeamSection from \"./Func/handleTeamSection\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n    level?: number;\n    overcharge?: number;\n}\n\nclass FuncDescriptor extends React.Component<IProps> {\n    getDataVal(): DataVal {\n        const func = this.props.func;\n\n        if (this.props.level) {\n            return getTargetVersionValues(func, this.props.level, this.props.overcharge ?? 1) ?? {};\n        } else {\n            const dataVals = getDataValList(func);\n\n            return getStaticFieldValues(dataVals);\n        }\n    }\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            dataVal = this.getDataVal();\n\n        const sections = new FuncDescriptorSections();\n\n        handleTeamSection(region, sections, func, dataVal);\n        handleChanceSection(region, sections, func, dataVal);\n        handleActionSection(region, sections, func, dataVal);\n        handleAffectsSection(region, sections, func, dataVal);\n        handleAmountSection(region, sections, func, dataVal);\n        handleTargetSection(region, sections, func, dataVal);\n        handleDurationSection(region, sections, func, dataVal);\n        handleScalingSection(region, sections, func, dataVal);\n\n        let parts: Renderable[] = [];\n\n        Object.values(sections).forEach(section => {\n            if (!section.showing)\n                return;\n\n            if (section.preposition)\n                parts.push(section.preposition);\n\n            parts = parts.concat(section.parts);\n        });\n\n        parts.push(\n            <Link to={`/${region}/func/${func.funcId}`}>\n                <FontAwesomeIcon icon={faShare}/>\n            </Link>\n        );\n\n        parts = joinElements(parts, ' ');\n\n        return (\n            <span>\n                {parts.map((element, index) => {\n                    return <React.Fragment key={index}>{element}</React.Fragment>;\n                })}\n            </span>\n        );\n    }\n}\n\nexport default FuncDescriptor;\n","import Func, {DataVal, FuncTargetTeam} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.team,\n        parts = section.parts;\n\n    if (func.funcTargetTeam === FuncTargetTeam.PLAYER)\n        parts.push('[Player]');\n    else if (func.funcTargetTeam === FuncTargetTeam.ENEMY)\n        parts.push('[Enemy]');\n    else\n        section.showing = false;\n}\n","import Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.chance,\n        parts = section.parts;\n\n    if (dataVal.Rate && dataVal.Rate < 0) {\n        parts.push('Guaranteed to');\n    } else if (typeof dataVal.Rate === \"number\" && dataVal.Rate !== 1000) {\n        parts.push((dataVal.Rate / 10) + '% Chance to');\n    } else if (!dataVal.Rate && func.funcType !== FuncType.NONE) {\n        parts.push('Chance to');\n    } else {\n        section.showing = false;\n    }\n}\n","import React from \"react\";\nimport Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {mergeElements} from \"../../Helper/OutputHelper\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.affects,\n        parts = section.parts;\n\n    if (typeof dataVal.Target === \"number\"\n        && (\n            func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL\n            || func.funcType === FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX\n        )\n    ) {\n        parts.push(\n            <span>(additional to targets with {\n                <TraitDescriptor region={region} trait={dataVal.Target}/>\n            })</span>\n        );\n    } else if (typeof dataVal.TargetList === \"number\" && func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL_SUM) {\n        parts.push(\n            <span>(bonus per trait of {\n                <TraitDescriptor region={region} trait={dataVal.TargetList}/>\n            }{\n                dataVal.ParamAddMaxCount ? `[Limit ${dataVal.ParamAddMaxCount}]` : null\n            })</span>\n        );\n    } else if (typeof dataVal.TargetRarityList === \"string\" && func.funcType === FuncType.DAMAGE_NP_RARE) {\n        parts.push(\n            <span>(bonus to {dataVal.TargetRarityList} {\n                dataVal.TargetRarityList.split('/').length > 1 ? 'rarities' : 'rarity'\n            })</span>\n        )\n    } else if (func.funcType === FuncType.DAMAGE_NP_PIERCE) {\n        parts.push('(that pierces defense)');\n    }\n\n    if (func.funcquestTvals.length) {\n        parts.push('if on field');\n        parts.push(\n            mergeElements(\n                func.funcquestTvals.map(trait => <TraitDescriptor region={region} trait={trait}/>),\n                ' & '\n            )\n        );\n    }\n\n    if (func.functvals.length) {\n        parts.push('for');\n\n        if (func.functvals.length > 1) {\n            parts.push('all');\n        }\n\n        func.functvals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<TraitDescriptor region={region} trait={trait}/>);\n        });\n    }\n\n    if (!parts.length) {\n        section.showing = false;\n    }\n\n}\n","import React from \"react\";\nimport {BuffType} from \"../../Api/Data/Buff\";\nimport Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport BuffValueDescriptor from \"../BuffValueDescriptor\";\nimport FuncValueDescriptor from \"../FuncValueDescriptor\";\nimport SkillReferenceDescriptor from \"../SkillReferenceDescriptor\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.amount,\n        parts = section.parts;\n\n    if (func.buffs[0]?.type === BuffType.ADD_INDIVIDUALITY && typeof dataVal.Value === \"number\") {\n        parts.push(\n            <TraitDescriptor region={region} trait={dataVal.Value}/>\n        );\n    } else if (\n        (\n            func.buffs[0]?.type === BuffType.ATTACK_FUNCTION\n            || func.buffs[0]?.type === BuffType.COMMANDATTACK_FUNCTION\n            || func.buffs[0]?.type === BuffType.COMMANDATTACK_BEFORE_FUNCTION\n            || func.buffs[0]?.type === BuffType.COMMANDCODEATTACK_FUNCTION\n            || func.buffs[0]?.type === BuffType.DAMAGE_FUNCTION\n            || func.buffs[0]?.type === BuffType.DEAD_FUNCTION\n            || func.buffs[0]?.type === BuffType.DELAY_FUNCTION\n            || func.buffs[0]?.type === BuffType.SELFTURNEND_FUNCTION\n        )\n        && typeof dataVal.Value === \"number\"\n    ) {\n        section.preposition = undefined;\n        parts.push('that triggers');\n        parts.push(\n            <SkillReferenceDescriptor region={region} id={dataVal.Value}/>\n        );\n    } else if (func.funcType === FuncType.CARD_RESET && dataVal.Value) {\n        section.preposition = undefined;\n        parts.push(`${dataVal.Value} time${dataVal.Value > 1 ? 's' : ''}`);\n    } else if (func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL_SUM) {\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal} hideRate={true}/>);\n    } else if (\n        (\n            func.funcType === FuncType.GAIN_HP_FROM_TARGETS\n            || func.funcType === FuncType.GAIN_NP_FROM_TARGETS\n        ) && dataVal.DependFuncId\n    ) {\n        if (dataVal.DependFuncVals?.Value) {\n            section.parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal} hideRate={true}/>);\n        } else {\n            section.showing = false;\n        }\n    } else if (func.buffs[0]?.type === BuffType.NPATTACK_PREV_BUFF) {\n        if (typeof dataVal.SkillID !== \"number\") {\n            section.showing = false;\n            return;\n        }\n\n        section.preposition = undefined;\n        parts.push('that triggers');\n        parts.push(\n            <SkillReferenceDescriptor region={region} id={dataVal.SkillID}/>\n        );\n    } else if (func.buffs[0] && dataVal.Value) {\n        parts.push(<BuffValueDescriptor region={region} buff={func.buffs[0]} dataVal={dataVal}/>);\n    } else if (dataVal.Value) {\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal} hideRate={true}/>);\n    } else {\n        section.showing = false;\n    }\n}\n","import Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.duration,\n        parts = section.parts;\n\n    if (dataVal.Count && dataVal.Count > 0 && dataVal.Turn && dataVal.Turn > 0) {\n        const countDesc = dataVal.Count === 1 ? '1 Time' : `${dataVal.Count} Times`,\n            turnDesc = dataVal.Turn === 1 ? '1 Turn' : `${dataVal.Turn} Turns`;\n\n        parts.push(`(${turnDesc}, ${countDesc})`);\n    } else if (dataVal.Turn && dataVal.Turn > 0) {\n        parts.push(dataVal.Turn === 1 ? '(1 Turn)' : `(${dataVal.Turn} Turns)`);\n    } else if (dataVal.Count && dataVal.Count > 0) {\n        parts.push(dataVal.Count === 1 ? '(1 Time)' : `(${dataVal.Count} Times)`);\n    } else {\n        section.showing = false;\n    }\n}\n","import Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {funcUpdatesByLevel, funcUpdatesByOvercharge} from \"../../Helper/FuncHelper\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.scaling,\n        parts = section.parts,\n        isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func);\n\n    if (!isLevel && !isOvercharge) {\n        section.showing = false;\n        return;\n    }\n\n    if (isLevel) {\n        parts.push('<LEVEL>');\n    }\n\n    if (isOvercharge) {\n        parts.push('<OVERCHARGE>');\n    }\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Region from \"../Api/Data/Region\";\nimport Skill from \"../Api/Data/Skill\";\nimport BuffIcon from \"../Component/BuffIcon\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n    iconHeight?: number;\n}\n\nclass SkillDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/skill/${this.props.skill.id}`}>\n                [\n                <BuffIcon location={this.props.skill.icon} height={this.props.iconHeight}/>\n                {' '}\n                {this.props.skill.name ? this.props.skill.name : `Skill: ${this.props.skill.id}`}\n                ]\n            </Link>\n        );\n    }\n}\n\nexport default SkillDescriptor;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport Region from \"../Api/Data/Region\";\nimport Skill from \"../Api/Data/Skill\";\nimport SkillDescriptor from \"./SkillDescriptor\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    skill?: Skill;\n}\n\nclass SkillReferenceDescriptor extends React.Component<IProps, IState> {\n    constructor(props:IProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    async componentDidMount() {\n        try {\n            this.setState({\n                skill: await Connection.skill(this.props.region, this.props.id)\n            });\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    render() {\n        const route = `/${this.props.region}/skill/${this.props.id}`;\n\n        if (this.state.skill === undefined) {\n            return <Link to={route}>[Skill: {this.props.id}]</Link>;\n        }\n\n        return (\n            <SkillDescriptor region={this.props.region} skill={this.state.skill}/>\n        );\n    }\n}\n\nexport default SkillReferenceDescriptor;\n","import React from \"react\";\nimport {BuffType} from \"../Api/Data/Buff\";\nimport Func, {DataVal, FuncType} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {asPercent, mergeElements, Renderable} from \"../Helper/OutputHelper\";\nimport BuffValueDescriptor from \"./BuffValueDescriptor\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n    staticDataVal: DataVal;\n    dataVal: DataVal;\n    hideRate?: boolean;\n}\n\nclass FuncValueDescriptor extends React.Component<IProps> {\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            dataVal = this.props.dataVal,\n            parts: Renderable[] = [];\n\n        if (this.props.func.funcType === FuncType.GAIN_NP_FROM_TARGETS) {\n            switch (this.props.staticDataVal.DependFuncId) {\n                case 474:\n                    if (this.props.dataVal.DependFuncVals?.Value) {\n                        parts.push(`${this.props.dataVal.DependFuncVals.Value} Charge`);\n                    }\n\n                    if (this.props.dataVal.DependFuncVals?.Value2) {\n                        parts.push(`${asPercent(this.props.dataVal.DependFuncVals.Value2, 2)}`);\n                    }\n\n                    if (parts.length) {\n                        return <React.Fragment>\n                            ({mergeElements(parts, ' => ')})\n                        </React.Fragment>;\n                    }\n                    break;\n            }\n        }\n\n        if (\n            (func.funcType === FuncType.ADD_STATE || func.funcType === FuncType.ADD_STATE_SHORT)\n            && func.buffs[0]\n            && (\n                dataVal.Value\n                || (func.buffs[0].type === BuffType.DAMAGE_FUNCTION && dataVal.Value2)\n                || (func.buffs[0].type === BuffType.DEAD_FUNCTION && dataVal.Value2)\n                || (func.buffs[0].type === BuffType.DELAY_FUNCTION && dataVal.Value2)\n                || (func.buffs[0].type === BuffType.NPATTACK_PREV_BUFF && dataVal.SkillID)\n                || (func.buffs[0].type === BuffType.SELFTURNEND_FUNCTION && dataVal.Value2)\n            )\n        ) {\n            return <BuffValueDescriptor region={region} buff={func.buffs[0]} dataVal={dataVal}/>;\n        }\n\n        if (!this.props.hideRate && dataVal.Rate !== undefined) {\n            parts.push(asPercent(dataVal.Rate, 1));\n        }\n\n        if (dataVal.Value !== undefined) {\n            switch (func.funcType) {\n                case FuncType.DAMAGE_NP:\n                case FuncType.DAMAGE_NP_INDIVIDUAL:\n                case FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                case FuncType.DAMAGE_NP_PIERCE:\n                case FuncType.DAMAGE_NP_RARE:\n                case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                    parts.push(asPercent(dataVal.Value, 1));\n                    break;\n                case FuncType.GAIN_NP:\n                case FuncType.LOSS_NP:\n                    parts.push(asPercent(dataVal.Value, 2));\n                    break;\n                default:\n                    parts.push(dataVal.Value.toString());\n            }\n        }\n\n        if (dataVal.Value2 !== undefined) {\n            switch (func.funcType) {\n                case FuncType.GAIN_NP_FROM_TARGETS:\n                    parts.push(asPercent(dataVal.Value2, 2));\n                    break;\n                case FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                    parts.push(\"additional \" + asPercent(dataVal.Value2, 1));\n            }\n        }\n\n        if (dataVal.Correction !== undefined) {\n            switch (func.funcType) {\n                case FuncType.DAMAGE_NP_INDIVIDUAL:\n                case FuncType.DAMAGE_NP_RARE:\n                case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                    parts.push(asPercent(dataVal.Correction, 1));\n                    break;\n                case FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                    parts.push(\"(\" + asPercent(dataVal.Correction, 1) + \" x count)\");\n                    break;\n                default:\n                    parts.push(dataVal.Correction.toString());\n            }\n        }\n\n        if (dataVal.DependFuncId !== undefined && dataVal.DependFuncVals !== undefined) {\n            switch (func.funcType) {\n                case FuncType.GAIN_HP_FROM_TARGETS:\n                    let amount;\n\n                    switch (dataVal.DependFuncId) {\n                        case 711:\n                            amount = dataVal.DependFuncVals.Value;\n                            break;\n                    }\n\n                    if (amount !== undefined) {\n                        parts.push(amount);\n                    }\n\n                    break;\n                case FuncType.GAIN_NP_FROM_TARGETS:\n                    let chargeAmount;\n\n                    switch (dataVal.DependFuncId) {\n                        case 474:\n                            chargeAmount = dataVal.DependFuncVals.Value2;\n                            break;\n                        case 3962:\n                            chargeAmount = dataVal.DependFuncVals.Value;\n                            break;\n                    }\n\n                    if (chargeAmount !== undefined) {\n                        parts.push(asPercent(chargeAmount, 2));\n                    }\n                    break;\n            }\n        }\n\n        if (!parts.length)\n            return <span>-</span>;\n\n        return <span>{mergeElements(parts, ' + ')}</span>;\n    }\n}\n\nexport default FuncValueDescriptor;\n","import React from \"react\";\nimport Buff, {BuffType} from \"../Api/Data/Buff\";\nimport {DataVal} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {asPercent} from \"../Helper/OutputHelper\";\nimport TraitDescriptor from \"./TraitDescriptor\";\n\ninterface IProps {\n    region: Region;\n    buff: Buff;\n    dataVal: DataVal;\n}\n\nclass BuffValueDescriptor extends React.Component<IProps> {\n    render() {\n        let value: JSX.Element | string | null = null;\n\n        switch (this.props.buff.type) {\n            case BuffType.UP_ATK:\n            case BuffType.DOWN_ATK:\n            case BuffType.UP_COMMANDALL:\n            case BuffType.DOWN_COMMANDALL:\n            case BuffType.UP_CRITICALDAMAGE:\n            case BuffType.DOWN_CRITICALDAMAGE:\n            case BuffType.UP_CRITICALPOINT:\n            case BuffType.DOWN_CRITICALPOINT:\n            case BuffType.UP_CRITICALRATE:\n            case BuffType.DOWN_CRITICALRATE:\n            case BuffType.UP_CRITICAL_RATE_DAMAGE_TAKEN:\n            case BuffType.DOWN_CRITICAL_RATE_DAMAGE_TAKEN:\n            case BuffType.UP_DAMAGE:\n            case BuffType.DOWN_DAMAGE:\n            case BuffType.UP_DAMAGEDROPNP:\n            case BuffType.DOWN_DAMAGEDROPNP:\n            case BuffType.UP_DEFENCE:\n            case BuffType.DOWN_DEFENCE:\n            case BuffType.UP_DEFENCECOMMANDALL:\n            case BuffType.DOWN_DEFENCECOMMANDALL:\n            case BuffType.UP_DROPNP:\n            case BuffType.DOWN_DROPNP:\n            case BuffType.UP_FUNC_HP_REDUCE:\n            case BuffType.DOWN_FUNC_HP_REDUCE:\n            case BuffType.UP_HATE:\n            case BuffType.UP_NONRESIST_INSTANTDEATH:\n            case BuffType.UP_NPDAMAGE:\n            case BuffType.DOWN_NPDAMAGE:\n            case BuffType.UP_SPECIALDEFENCE:\n            case BuffType.DOWN_SPECIALDEFENCE:\n            case BuffType.UP_STARWEIGHT:\n            case BuffType.DOWN_STARWEIGHT:\n            case BuffType.UP_TOLERANCE:\n            case BuffType.DOWN_TOLERANCE:\n            case BuffType.UP_TOLERANCE_SUBSTATE:\n            case BuffType.DOWN_TOLERANCE_SUBSTATE:\n                value = asPercent(this.props.dataVal.Value, 1);\n                break;\n            case BuffType.REGAIN_NP:\n                value = asPercent(this.props.dataVal.Value, 2);\n                break;\n            case BuffType.ATTACK_FUNCTION:\n            case BuffType.COMMANDATTACK_FUNCTION:\n            case BuffType.COMMANDATTACK_BEFORE_FUNCTION:\n            case BuffType.DAMAGE_FUNCTION:\n            case BuffType.DEAD_FUNCTION:\n            case BuffType.DELAY_FUNCTION:\n            case BuffType.SELFTURNEND_FUNCTION:\n                if (this.props.dataVal.Value2)\n                    value = 'Lv. ' + this.props.dataVal.Value2;\n                break;\n            case BuffType.NPATTACK_PREV_BUFF:\n                if (this.props.dataVal.SkillLV)\n                    value = 'Lv. ' + this.props.dataVal.SkillLV;\n                break;\n            case BuffType.FIELD_INDIVIDUALITY:\n                if (typeof this.props.dataVal.Value === \"number\")\n                    value = <TraitDescriptor region={this.props.region} trait={this.props.dataVal.Value}/>;\n                break;\n            default:\n                value = this.props.dataVal.Value?.toString() ?? \"\";\n        }\n\n        return value;\n    }\n}\n\nexport default BuffValueDescriptor;\n","import React from \"react\";\nimport {BuffType} from \"../../Api/Data/Buff\";\nimport Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport BuffDescriptor from \"../BuffDescriptor\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport const funcDescriptions = new Map<FuncType, string>([\n    [FuncType.ADD_STATE, 'Apply Buff'],\n    [FuncType.ADD_STATE_SHORT, 'Apply Buff'],\n    [FuncType.CARD_RESET, 'Shuffle Cards'],\n    [FuncType.DAMAGE_NP, 'Deal Damage'],\n    [FuncType.DAMAGE_NP_INDIVIDUAL, 'Deal Damage with Bonus to Trait'],\n    [FuncType.DAMAGE_NP_INDIVIDUAL_SUM, 'Deal Damage with Bonus per Trait'],\n    [FuncType.DAMAGE_NP_PIERCE, 'Deal Damage that pierces defense'],\n    [FuncType.DAMAGE_NP_RARE, 'Deal Damage with Bonus to Rarity'],\n    [FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX, 'Deal Damage with Bonus to Trait'],\n    [FuncType.DELAY_NPTURN, 'Drain Charge'],\n    [FuncType.EXP_UP, 'Increase Master Exp'],\n    [FuncType.FORCE_INSTANT_DEATH, 'Force Instant Death'],\n    [FuncType.GAIN_HP, 'Restore HP'],\n    [FuncType.GAIN_HP_FROM_TARGETS, 'Absorb HP'],\n    [FuncType.GAIN_NP_FROM_TARGETS, 'Absorb NP'],\n    [FuncType.GAIN_NP, 'Charge NP'],\n    [FuncType.GAIN_STAR, 'Gain Critical Stars'],\n    [FuncType.HASTEN_NPTURN, 'Increase Charge'],\n    [FuncType.INSTANT_DEATH, 'Apply Death'],\n    [FuncType.LOSS_HP_SAFE, 'Drain HP without killing'],\n    [FuncType.LOSS_NP, 'Drain NP'],\n    [FuncType.NONE, 'No Effect'],\n    [FuncType.SUB_STATE, 'Remove Effects'],\n]);\n\nfunction handleBuffActionSection(region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    parts.push('Apply');\n    func.buffs.forEach((buff, index) => {\n        if (index > 0)\n            parts.push('&');\n\n        parts.push(<BuffDescriptor region={region} buff={buff}/>);\n    });\n\n    if (func.buffs[0]?.type === BuffType.FIELD_INDIVIDUALITY) {\n        sections.amount.preposition = 'to';\n    }\n\n    sections.target.preposition = 'on';\n    if (\n        func.buffs[0]?.type === BuffType.COMMANDATTACK_FUNCTION\n        || func.buffs[0]?.type === BuffType.NPATTACK_PREV_BUFF\n    ) {\n        sections.target.preposition = 'for';\n    }\n}\n\nfunction handleCleanseActionSection(region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n\n    if (func.traitVals?.length) {\n        parts.push('with');\n\n        func.traitVals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<TraitDescriptor region={region} trait={trait}/>);\n        });\n    }\n\n    sections.target.preposition = 'on';\n}\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    if (func.funcType === FuncType.ADD_STATE || func.funcType === FuncType.ADD_STATE_SHORT) {\n        handleBuffActionSection(region, sections, func, dataVal);\n    } else if (func.funcType === FuncType.SUB_STATE) {\n        handleCleanseActionSection(region, sections, func, dataVal);\n    } else if (\n        func.funcType === FuncType.DAMAGE_NP\n        || func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL\n        || func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL_SUM\n        || func.funcType === FuncType.DAMAGE_NP_PIERCE\n        || func.funcType === FuncType.DAMAGE_NP_RARE\n        || func.funcType === FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX\n    ) {\n        parts.push('Deal damage');\n\n        sections.amount.preposition = 'of';\n    } else if (\n        func.funcType === FuncType.CARD_RESET\n        || func.funcType === FuncType.GAIN_STAR\n        || func.funcType === FuncType.NONE\n    ) {\n        parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n\n        sections.target.showing = false;\n    } else if (\n        func.funcType === FuncType.DELAY_NPTURN\n        || func.funcType === FuncType.GAIN_HP_FROM_TARGETS\n        || func.funcType === FuncType.GAIN_NP_FROM_TARGETS\n        || func.funcType === FuncType.LOSS_HP_SAFE\n        || func.funcType === FuncType.LOSS_NP\n    ) {\n        parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n\n        sections.amount.preposition = 'of';\n        sections.target.preposition = 'from';\n    } else if (func.funcType === FuncType.EXP_UP) {\n        parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n\n        sections.chance.showing = false;\n        sections.amount.preposition = 'by';\n        sections.target.showing = false;\n    } else if (\n        func.funcType === FuncType.FORCE_INSTANT_DEATH\n        || func.funcType === FuncType.INSTANT_DEATH\n    ) {\n        parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n\n        sections.amount.showing = false;\n        sections.target.preposition = 'on';\n    } else if (\n        func.funcType === FuncType.GAIN_HP\n        || func.funcType === FuncType.GAIN_NP\n        || func.funcType === FuncType.HASTEN_NPTURN\n    ) {\n        parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n\n        sections.amount.preposition = 'by';\n        sections.target.preposition = 'for';\n    } else {\n        parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n    }\n}\n","import Func, {DataVal, FuncTargetType, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport const targetDescriptions = new Map<FuncTargetType, string>([\n    [FuncTargetType.SELF, 'self'],\n    [FuncTargetType.PT_ONE, 'party member'],\n    // PT_ANOTHER\n    [FuncTargetType.PT_ALL, 'party'],\n    [FuncTargetType.ENEMY, 'enemy'],\n    // ENEMY_ANOTHER\n    [FuncTargetType.ENEMY_ALL, 'enemies'],\n    [FuncTargetType.PT_FULL, 'party (including reserve)'],\n    [FuncTargetType.ENEMY_FULL, 'enemies (including reserve)'],\n    [FuncTargetType.PT_OTHER, 'party except self'],\n    [FuncTargetType.PT_ONE_OTHER, 'other party members besides target'],\n    [FuncTargetType.PT_RANDOM, 'random party member'],\n    [FuncTargetType.ENEMY_OTHER, 'other enemies besides target'],\n    [FuncTargetType.ENEMY_RANDOM, 'random enemy'],\n    [FuncTargetType.PT_OTHER_FULL, 'party except self (including reserve)'],\n    [FuncTargetType.ENEMY_OTHER_FULL, 'other enemies (including reserve)'],\n    [FuncTargetType.PTSELECT_ONE_SUB, 'active party member and reserve party member'],\n    [FuncTargetType.PTSELECT_SUB, 'reserve party member'],\n    // PT_ONE_ANOTHER_RANDOM\n    [FuncTargetType.PT_ONE_ANOTHER_RANDOM, 'other random party member'],\n    [FuncTargetType.PT_SELF_ANOTHER_RANDOM, 'other random party member (except self)'],\n    [FuncTargetType.ENEMY_ONE_ANOTHER_RANDOM, 'other random enemy'],\n    [FuncTargetType.PT_SELF_ANOTHER_FIRST, 'first other party member (except self)'],\n    // PT_SELF_BEFORE\n    // PT_SELF_AFTER\n    // PT_SELF_ANOTHER_LAST\n    [FuncTargetType.COMMAND_TYPE_SELF_TREASURE_DEVICE, 'target noble phantasm version'],\n]);\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.target,\n        parts = section.parts;\n\n    let targetType: FuncTargetType | undefined = func.funcTargetType;\n\n    if (func.funcType === FuncType.GAIN_HP_FROM_TARGETS) {\n        switch (dataVal.DependFuncId) {\n            case 711:\n                targetType = FuncTargetType.ENEMY_ALL;\n                break;\n            default:\n                targetType = undefined;\n                section.showing = false;\n                break;\n        }\n    } else if (func.funcType === FuncType.GAIN_NP_FROM_TARGETS) {\n        switch (dataVal.DependFuncId) {\n            case 474:\n                targetType = FuncTargetType.ENEMY_ALL;\n                break;\n            case 3962:\n                targetType = FuncTargetType.PT_OTHER;\n                break;\n        }\n    }\n\n    if (targetType) {\n        parts.push(targetDescriptions.get(targetType) ?? targetType);\n    }\n}\n"],"sourceRoot":""}