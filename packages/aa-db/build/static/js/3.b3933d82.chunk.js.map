{"version":3,"sources":["Api/Data/Func.tsx","Helper/FuncHelper.tsx","Descriptor/Func/FuncDescriptorSections.tsx","Descriptor/Func/handleAmountSection.tsx","Descriptor/FuncDescriptor.tsx","Descriptor/Func/handleTeamSection.tsx","Descriptor/Func/handleChanceSection.tsx","Descriptor/Func/handleAffectsSection.tsx","Descriptor/Func/handleDurationSection.tsx","Descriptor/Func/handleScalingSection.tsx","Descriptor/SkillDescriptor.tsx","Descriptor/SkillReferenceDescriptor.tsx","Descriptor/FuncValueDescriptor.tsx","Descriptor/BuffValueDescriptor.tsx","Descriptor/Func/handleActionSection.tsx","Descriptor/Func/handleTargetSection.tsx"],"names":["FuncType","FuncTargetType","FuncTargetTeam","DataValField","hasChangingDataVals","vals","length","previous","i","JSON","stringify","hasUniqueValues","values","Set","size","describeMutators","region","func","dataVals","getDataValList","staticVals","getStaticFieldValues","getMutatingFieldValues","fields","Object","filter","field","map","val","getMutatingFieldNames","dependingVals","undefined","DependFuncVals","dependingMutatingValues","staticValues","index","mutatingVals","x","DependFuncId","mutatingVal","staticDataVal","dataVal","funcUpdatesByLevel","getLevelDataValList","funcUpdatesByOvercharge","getOverchargeDataValList","isLevel","isOvercharge","getTargetVersionValues","push","getMixedDataValList","getFollowerDataValList","followerVals","svals","getRelatedSkillIds","funcType","ADD_STATE","ADD_STATE_SHORT","buff","buffs","type","BuffType","ATTACK_FUNCTION","COMMANDATTACK_FUNCTION","COMMANDATTACK_BEFORE_FUNCTION","COMMANDCODEATTACK_FUNCTION","DAMAGE_FUNCTION","DEAD_FUNCTION","DELAY_FUNCTION","SELFTURNEND_FUNCTION","Value","NPATTACK_PREV_BUFF","SkillID","getStaticFieldNames","hasDependingVals","dependingStaticValues","getTargetFollowerVersionValues","level","overcharge","svals2","svals3","svals4","svals5","hasFollowerDataVals","FuncDescriptorSection","preposition","showing","parts","this","FuncDescriptorSections","team","chance","action","affects","amount","target","duration","scaling","sections","support","section","ADD_INDIVIDUALITY","TraitDescriptor","trait","CARD_RESET","DAMAGE_NP_INDIVIDUAL_SUM","FuncValueDescriptor","hideRate","ABSORB_NPTURN","GAIN_HP_FROM_TARGETS","GAIN_NP_FROM_TARGETS","AddCount","EVENT_DROP_UP","EXP_UP","QP_UP","USER_EQUIP_EXP_UP","RateCount","QP_DROP_UP","SERVANT_FRIENDSHIP_UP","SkillReferenceDescriptor","id","BuffValueDescriptor","Correction","FuncDescriptor","props","getDataVal","followerDataVal","getFollowerDataVal","funcTargetTeam","PLAYER","ENEMY","handleTeamSection","Rate","ENEMY_ENCOUNT_COPY_RATE_UP","ENEMY_ENCOUNT_RATE_UP","NONE","asPercent","handleChanceSection","handleActionSection","DAMAGE_NP_HPRATIO_LOW","Target","DAMAGE_NP_INDIVIDUAL","DAMAGE_NP_STATE_INDIVIDUAL_FIX","TargetList","ParamAddMaxCount","TargetRarityList","DAMAGE_NP_RARE","split","DAMAGE_NP_PIERCE","Individuality","Number","EventId","funcquestTvals","mergeElements","functvals","forEach","handleAffectsSection","handleAmountSection","handleTargetSection","Count","Turn","countDesc","turnDesc","handleDurationSection","handleScalingSection","concat","to","funcId","icon","faShare","joinElements","element","Fragment","key","React","Component","SkillDescriptor","skill","location","height","iconHeight","name","state","Connection","setState","route","npAbsorbParts","Value2","toString","DAMAGE_NP","GAIN_HP_PER","GAIN_NP","GAIN_NP_BUFF_INDIVIDUAL_SUM","LOSS_NP","value","UP_ATK","DOWN_ATK","UP_COMMANDALL","DOWN_COMMANDALL","UP_CRITICALDAMAGE","DOWN_CRITICALDAMAGE","UP_CRITICALPOINT","DOWN_CRITICALPOINT","UP_CRITICALRATE","DOWN_CRITICALRATE","UP_CRITICAL_RATE_DAMAGE_TAKEN","DOWN_CRITICAL_RATE_DAMAGE_TAKEN","UP_DAMAGE","DOWN_DAMAGE","UP_DAMAGEDROPNP","DOWN_DAMAGEDROPNP","UP_DEFENCE","DOWN_DEFENCE","UP_DEFENCECOMMANDALL","DOWN_DEFENCECOMMANDALL","UP_DROPNP","DOWN_DROPNP","UP_FUNC_HP_REDUCE","DOWN_FUNC_HP_REDUCE","UP_HATE","UP_NONRESIST_INSTANTDEATH","UP_NPDAMAGE","DOWN_NPDAMAGE","UP_SPECIALDEFENCE","DOWN_SPECIALDEFENCE","UP_STARWEIGHT","DOWN_STARWEIGHT","UP_TOLERANCE","DOWN_TOLERANCE","UP_TOLERANCE_SUBSTATE","DOWN_TOLERANCE_SUBSTATE","REGAIN_NP","SkillLV","FIELD_INDIVIDUALITY","funcDescriptions","Map","DELAY_NPTURN","EXTEND_SKILL","FIX_COMMANDCARD","FORCE_INSTANT_DEATH","GAIN_HP","GAIN_STAR","HASTEN_NPTURN","INSTANT_DEATH","LOSS_HP","LOSS_HP_SAFE","LOSS_STAR","REPLACE_MEMBER","SHORTEN_SKILL","SUB_STATE","get","traitVals","handleChargeNpPerTraitActionSection","handleCleanseActionSection","handleBuffActionSection","targetDescriptions","SELF","PT_ONE","PT_ALL","ENEMY_ALL","PT_FULL","ENEMY_FULL","PT_OTHER","PT_ONE_OTHER","PT_RANDOM","ENEMY_OTHER","ENEMY_RANDOM","PT_OTHER_FULL","ENEMY_OTHER_FULL","PTSELECT_ONE_SUB","PTSELECT_SUB","PT_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_RANDOM","ENEMY_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_FIRST","COMMAND_TYPE_SELF_TREASURE_DEVICE","targetType","funcTargetType"],"mappings":"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","file":"static/js/3.b3933d82.chunk.js","sourcesContent":["import Buff from \"./Buff\";\nimport NoblePhantasm from \"./NoblePhantasm\";\nimport Skill from \"./Skill\";\nimport Trait from \"./Trait\";\n\nexport enum FuncType {\n    NONE = \"none\",\n    ADD_STATE = \"addState\",\n    SUB_STATE = \"subState\",\n    DAMAGE = \"damage\",\n    DAMAGE_NP = \"damageNp\",\n    GAIN_STAR = \"gainStar\",\n    GAIN_HP = \"gainHp\",\n    GAIN_NP = \"gainNp\",\n    LOSS_NP = \"lossNp\",\n    SHORTEN_SKILL = \"shortenSkill\",\n    EXTEND_SKILL = \"extendSkill\",\n    RELEASE_STATE = \"releaseState\",\n    LOSS_HP = \"lossHp\",\n    INSTANT_DEATH = \"instantDeath\",\n    DAMAGE_NP_PIERCE = \"damageNpPierce\",\n    DAMAGE_NP_INDIVIDUAL = \"damageNpIndividual\",\n    ADD_STATE_SHORT = \"addStateShort\",\n    GAIN_HP_PER = \"gainHpPer\",\n    DAMAGE_NP_STATE_INDIVIDUAL = \"damageNpStateIndividual\",\n    HASTEN_NPTURN = \"hastenNpturn\",\n    DELAY_NPTURN = \"delayNpturn\",\n    DAMAGE_NP_HPRATIO_HIGH = \"damageNpHpratioHigh\",\n    DAMAGE_NP_HPRATIO_LOW = \"damageNpHpratioLow\",\n    CARD_RESET = \"cardReset\",\n    REPLACE_MEMBER = \"replaceMember\",\n    LOSS_HP_SAFE = \"lossHpSafe\",\n    DAMAGE_NP_COUNTER = \"damageNpCounter\",\n    DAMAGE_NP_STATE_INDIVIDUAL_FIX = \"damageNpStateIndividualFix\",\n    DAMAGE_NP_SAFE = \"damageNpSafe\",\n    CALL_SERVANT = \"callServant\",\n    PT_SHUFFLE = \"ptShuffle\",\n    LOSS_STAR = \"lossStar\",\n    CHANGE_SERVANT = \"changeServant\",\n    CHANGE_BG = \"changeBg\",\n    DAMAGE_VALUE = \"damageValue\",\n    WITHDRAW = \"withdraw\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    SHORTEN_BUFFTURN = \"shortenBuffturn\",\n    EXTEND_BUFFTURN = \"extendBuffturn\",\n    SHORTEN_BUFFCOUNT = \"shortenBuffcount\",\n    EXTEND_BUFFCOUNT = \"extendBuffcount\",\n    CHANGE_BGM = \"changeBgm\",\n    DISPLAY_BUFFSTRING = \"displayBuffstring\",\n    RESURRECTION = \"resurrection\",\n    GAIN_NP_BUFF_INDIVIDUAL_SUM = \"gainNpBuffIndividualSum\",\n    SET_SYSTEM_ALIVE_FLAG = \"setSystemAliveFlag\",\n    FORCE_INSTANT_DEATH = \"forceInstantDeath\",\n    DAMAGE_NP_RARE = \"damageNpRare\",\n    GAIN_NP_FROM_TARGETS = \"gainNpFromTargets\",\n    GAIN_HP_FROM_TARGETS = \"gainHpFromTargets\",\n    LOSS_HP_PER = \"lossHpPer\",\n    LOSS_HP_PER_SAFE = \"lossHpPerSafe\",\n    SHORTEN_USER_EQUIP_SKILL = \"shortenUserEquipSkill\",\n    QUICK_CHANGE_BG = \"quickChangeBg\",\n    SHIFT_SERVANT = \"shiftServant\",\n    DAMAGE_NP_AND_CHECK_INDIVIDUALITY = \"damageNpAndCheckIndividuality\",\n    ABSORB_NPTURN = \"absorbNpturn\",\n    OVERWRITE_DEAD_TYPE = \"overwriteDeadType\",\n    FORCE_ALL_BUFF_NOACT = \"forceAllBuffNoact\",\n    BREAK_GAUGE_UP = \"breakGaugeUp\",\n    BREAK_GAUGE_DOWN = \"breakGaugeDown\",\n    EXP_UP = \"expUp\",\n    QP_UP = \"qpUp\",\n    DROP_UP = \"dropUp\",\n    FRIEND_POINT_UP = \"friendPointUp\",\n    EVENT_DROP_UP = \"eventDropUp\",\n    EVENT_DROP_RATE_UP = \"eventDropRateUp\",\n    EVENT_POINT_UP = \"eventPointUp\",\n    EVENT_POINT_RATE_UP = \"eventPointRateUp\",\n    TRANSFORM_SERVANT = \"transformServant\",\n    QP_DROP_UP = \"qpDropUp\",\n    SERVANT_FRIENDSHIP_UP = \"servantFriendshipUp\",\n    USER_EQUIP_EXP_UP = \"userEquipExpUp\",\n    CLASS_DROP_UP = \"classDropUp\",\n    ENEMY_ENCOUNT_COPY_RATE_UP = \"enemyEncountCopyRateUp\",\n    ENEMY_ENCOUNT_RATE_UP = \"enemyEncountRateUp\",\n    ENEMY_PROB_DOWN = \"enemyProbDown\",\n    GET_REWARD_GIFT = \"getRewardGift\",\n    SEND_SUPPORT_FRIEND_POINT = \"sendSupportFriendPoint\",\n    MOVE_POSITION = \"movePosition\",\n    REVIVAL = \"revival\",\n    DAMAGE_NP_INDIVIDUAL_SUM = \"damageNpIndividualSum\",\n}\n\nexport enum FuncTargetType {\n    SELF = \"self\",\n    PT_ONE = \"ptOne\",\n    PT_ANOTHER = \"ptAnother\",\n    PT_ALL = \"ptAll\",\n    ENEMY = \"enemy\",\n    ENEMY_ANOTHER = \"enemyAnother\",\n    ENEMY_ALL = \"enemyAll\",\n    PT_FULL = \"ptFull\",\n    ENEMY_FULL = \"enemyFull\",\n    PT_OTHER = \"ptOther\",\n    PT_ONE_OTHER = \"ptOneOther\",\n    PT_RANDOM = \"ptRandom\",\n    ENEMY_OTHER = \"enemyOther\",\n    ENEMY_RANDOM = \"enemyRandom\",\n    PT_OTHER_FULL = \"ptOtherFull\",\n    ENEMY_OTHER_FULL = \"enemyOtherFull\",\n    PTSELECT_ONE_SUB = \"ptselectOneSub\",\n    PTSELECT_SUB = \"ptselectSub\",\n    PT_ONE_ANOTHER_RANDOM = \"ptOneAnotherRandom\",\n    PT_SELF_ANOTHER_RANDOM = \"ptSelfAnotherRandom\",\n    ENEMY_ONE_ANOTHER_RANDOM = \"enemyOneAnotherRandom\",\n    PT_SELF_ANOTHER_FIRST = \"ptSelfAnotherFirst\",\n    PT_SELF_BEFORE = \"ptSelfBefore\",\n    PT_SELF_AFTER = \"ptSelfAfter\",\n    PT_SELF_ANOTHER_LAST = \"ptSelfAnotherLast\",\n    COMMAND_TYPE_SELF_TREASURE_DEVICE = \"commandTypeSelfTreasureDevice\",\n}\n\nexport enum FuncTargetTeam {\n    PLAYER = \"player\",\n    ENEMY = \"enemy\",\n    PLAYER_AND_ENEMY = \"playerAndEnemy\",\n}\n\nexport enum DataValField {\n    RATE = \"Rate\",\n    TURN = \"Turn\",\n    COUNT = \"Count\",\n    VALUE = \"Value\",\n    VALUE2 = \"Value2\",\n    USE_RATE = \"UseRate\",\n    TARGET = \"Target\",\n    CORRECTION = \"Correction\",\n    PARAM_ADD = \"ParamAdd\",\n    PARAM_MAX = \"ParamMax\",\n    HIDE_MISS = \"HideMiss\",\n    ON_FIELD = \"OnField\",\n    HIDE_NO_EFFECT = \"HideNoEffect\",\n    UNAFFECTED = \"Unaffected\",\n    SHOW_STATE = \"ShowState\",\n    AURA_EFFECT_ID = \"AuraEffectId\",\n    ACT_SET = \"ActSet\",\n    ACT_SET_WEIGHT = \"ActSetWeight\",\n    SHOW_QUEST_NO_EFFECT = \"ShowQuestNoEffect\",\n    CHECK_DEAD = \"CheckDead\",\n    RATIO_HP_HIGH = \"RatioHPHigh\",\n    RATIO_HP_LOW = \"RatioHPLow\",\n    SET_PASSIVE_FRAME = \"SetPassiveFrame\",\n    PROC_PASSIVE = \"ProcPassive\",\n    PROC_ACTIVE = \"ProcActive\",\n    HIDE_PARAM = \"HideParam\",\n    SKILL_ID = \"SkillID\",\n    SKILL_LV = \"SkillLV\",\n    SHOW_CARD_ONLY = \"ShowCardOnly\",\n    EFFECT_SUMMON = \"EffectSummon\",\n    RATIO_HP_RANGE_HIGH = \"RatioHPRangeHigh\",\n    RATIO_HP_RANGE_LOW = \"RatioHPRangeLow\",\n    TARGET_LIST = \"TargetList\",\n    OPPONENT_ONLY = \"OpponentOnly\",\n    STATUS_EFFECT_ID = \"StatusEffectId\",\n    END_BATTLE = \"EndBattle\",\n    LOSE_BATTLE = \"LoseBattle\",\n    ADD_INDIVIDUALTY = \"AddIndividualty\",\n    ADD_LINKAGE_TARGET_INDIVIDUALTY = \"AddLinkageTargetIndividualty\",\n    SAME_BUFF_LIMIT_TARGET_INDIVIDUALITY = \"SameBuffLimitTargetIndividuality\",\n    SAME_BUFF_LIMIT_NUM = \"SameBuffLimitNum\",\n    CHECK_DUPLICATE = \"CheckDuplicate\",\n    ON_FIELD_COUNT = \"OnFieldCount\",\n    TARGET_RARITY_LIST = \"TargetRarityList\",\n    DEPEND_FUNC_ID = \"DependFuncId\",\n    INVALID_HIDE = \"InvalidHide\",\n    OUT_ENEMY_NPC_ID = \"OutEnemyNpcId\",\n    IN_ENEMY_NPC_ID = \"InEnemyNpcId\",\n    OUT_ENEMY_POSITION = \"OutEnemyPosition\",\n    IGNORE_INDIVIDUALITY = \"IgnoreIndividuality\",\n    STAR_HIGHER = \"StarHigher\",\n    CHANGE_TD_COMMAND_TYPE = \"ChangeTDCommandType\",\n    SHIFT_NPC_ID = \"ShiftNpcId\",\n    DISPLAY_LAST_FUNC_INVALID_TYPE = \"DisplayLastFuncInvalidType\",\n    AND_CHECK_INDIVIDUALITY_LIST = \"AndCheckIndividualityList\",\n    WIN_BATTLE_NOT_RELATED_SURVIVAL_STATUS = \"WinBattleNotRelatedSurvivalStatus\",\n    FORCE_SELF_INSTANT_DEATH = \"ForceSelfInstantDeath\",\n    CHANGE_MAX_BREAK_GAUGE = \"ChangeMaxBreakGauge\",\n    PARAM_ADD_MAX_VALUE = \"ParamAddMaxValue\",\n    PARAM_ADD_MAX_COUNT = \"ParamAddMaxCount\",\n    LOSS_HP_NO_CHANGE_DAMAGE = \"LossHpNoChangeDamage\",\n    INCLUDE_PASSIVE_INDIVIDUALITY = \"IncludePassiveIndividuality\",\n    INDIVIDUALITY = \"Individuality\",\n    EVENT_ID = \"EventId\",\n    ADD_COUNT = \"AddCount\",\n    RATE_COUNT = \"RateCount\",\n}\n\ntype BaseDataVal = { [key in DataValField]?: number | string; };\n\nexport type DataVal = (\n    BaseDataVal\n    & { FriendshipTarget?: FuncTargetType, DependFuncVals?: BaseDataVal; }\n    );\n\nexport default interface Func {\n    funcId: number;\n    funcType: FuncType;\n    funcTargetType: FuncTargetType;\n    funcTargetTeam: FuncTargetTeam;\n    funcPopupText: string;\n    funcPopupIcon?: string;\n    functvals: Trait[];\n    funcquestTvals: number[];\n    traitVals?: Trait[];\n    buffs: Buff[];\n    svals?: DataVal[];\n    svals2?: DataVal[];\n    svals3?: DataVal[];\n    svals4?: DataVal[];\n    svals5?: DataVal[];\n    followerVals?: DataVal[];\n    reverseSkills: Skill[];\n    reverseTds: NoblePhantasm[];\n}\n","import React from \"react\";\nimport {BuffType} from \"../Api/Data/Buff\";\nimport Func, {DataVal, DataValField, FuncType} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport FuncValueDescriptor from \"../Descriptor/FuncValueDescriptor\";\nimport {Renderable} from \"./OutputHelper\";\n\nconst hasChangingDataVals = function (vals: DataVal[]): boolean {\n    if (!vals.length)\n        return false;\n\n    let previous = vals[0];\n    for (let i = 1; i < vals.length; i++) {\n        if (JSON.stringify(previous) !== JSON.stringify(vals[i]))\n            return true;\n\n        previous = vals[i];\n    }\n\n    return false;\n};\n\nconst hasUniqueValues = function (values: (number | string | undefined)[]): boolean {\n    return new Set(values).size > 1;\n};\n\nexport function describeMutators(region: Region, func: Func): Renderable[] {\n    const dataVals = getDataValList(func),\n        staticVals = getStaticFieldValues(dataVals),\n        mutatingVals = getMutatingFieldValues(dataVals);\n\n    return mutatingVals\n        .map(mutatingVal => <FuncValueDescriptor region={region} func={func} staticDataVal={staticVals}\n                                                 dataVal={mutatingVal}/>);\n}\n\nexport function funcUpdatesByLevel(func: Func): boolean {\n    return hasChangingDataVals(getLevelDataValList(func));\n}\n\nexport function funcUpdatesByOvercharge(func: Func): boolean {\n    return hasChangingDataVals(getOverchargeDataValList(func));\n}\n\nexport function getDataValList(func: Func): DataVal[] {\n    const isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func);\n\n    return isLevel && isOvercharge\n        ? getMixedDataValList(func)\n        : (isOvercharge ? getOverchargeDataValList(func) : getLevelDataValList(func));\n}\n\nexport function getFollowerDataValList(func: Func): DataVal[] {\n    return func.followerVals ?? [];\n}\n\nexport function getLevelDataValList(func: Func): DataVal[] {\n    return func.svals ?? [];\n}\n\nexport function getMixedDataValList(func: Func): DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, i, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getMutatingFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return hasUniqueValues(values);\n    });\n}\n\nexport function getMutatingFieldValues(vals: DataVal[]): DataVal[] {\n    if (!vals.length)\n        return [];\n\n    const fields = getMutatingFieldNames(vals),\n        hasDependingVals = vals.filter(val => val.DependFuncVals !== undefined).length > 0,\n        dependingVals: (DataVal[] | undefined) = (\n            hasDependingVals\n                ? vals.map(val => (val.DependFuncVals ?? {}) as DataVal)\n                : undefined\n        ),\n        dependingMutatingValues = dependingVals ? getMutatingFieldValues(dependingVals) : [],\n        staticValues = getStaticFieldValues(vals);\n\n    return vals.map((val, index) => {\n        const mutatingVals: DataVal = {};\n\n        for (let x in fields) {\n            mutatingVals[fields[x]] = val[fields[x]];\n        }\n\n        if (staticValues.DependFuncId && dependingMutatingValues[index]) {\n            mutatingVals.DependFuncId = staticValues.DependFuncId;\n            mutatingVals.DependFuncVals = dependingMutatingValues[index];\n        }\n\n        return mutatingVals;\n    });\n}\n\nexport function getOverchargeDataValList(func: Func): DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, 1, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getRelatedSkillIds(func: Func): number[] {\n    if (func.funcType !== FuncType.ADD_STATE && func.funcType !== FuncType.ADD_STATE_SHORT)\n        return [];\n\n    const buff = func.buffs[0];\n    if (\n        buff.type === BuffType.ATTACK_FUNCTION\n        || buff.type === BuffType.COMMANDATTACK_FUNCTION\n        || buff.type === BuffType.COMMANDATTACK_BEFORE_FUNCTION\n        || buff.type === BuffType.COMMANDCODEATTACK_FUNCTION\n        || buff.type === BuffType.DAMAGE_FUNCTION\n        || buff.type === BuffType.DEAD_FUNCTION\n        || buff.type === BuffType.DELAY_FUNCTION\n        || buff.type === BuffType.SELFTURNEND_FUNCTION\n    ) {\n        const dataVals = getDataValList(func),\n            dataVal = dataVals[0];\n\n        return typeof dataVal.Value === \"number\" ? [dataVal.Value] : [];\n    }\n\n    if (buff.type === BuffType.NPATTACK_PREV_BUFF) {\n        const dataVals = getDataValList(func),\n            dataVal = dataVals[0];\n\n        return typeof dataVal.SkillID === \"number\" ? [dataVal.SkillID] : [];\n    }\n\n    return [];\n}\n\nexport function getStaticFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return !hasUniqueValues(values);\n    });\n}\n\nexport function getStaticFieldValues(vals: DataVal[]): DataVal {\n    if (!vals.length)\n        return {};\n\n    const fields = getStaticFieldNames(vals),\n        staticVals: DataVal = {},\n        hasDependingVals = vals.filter(val => val.DependFuncVals !== undefined).length > 0,\n        dependingVals: (DataVal[] | undefined) = (\n            hasDependingVals\n                ? vals.map(val => (val.DependFuncVals ?? {}) as DataVal)\n                : undefined\n        ),\n        dependingStaticValues = dependingVals ? getStaticFieldValues(dependingVals) : undefined;\n\n    for (let x in fields) {\n        staticVals[fields[x]] = vals[0][fields[x]];\n    }\n\n    if (hasDependingVals)\n        staticVals.DependFuncVals = dependingStaticValues;\n\n    return staticVals;\n}\n\nexport function getTargetFollowerVersionValues(func: Func, level: number): DataVal | undefined {\n    if (func.followerVals === undefined)\n        return undefined;\n\n    return func.followerVals[level - 1];\n}\n\nexport function getTargetVersionValues(func: Func, level: number, overcharge: number = 1): DataVal | undefined {\n    if (func.svals === undefined)\n        return undefined;\n\n    let dataVals;\n\n    if (overcharge === 2 && func.svals2)\n        dataVals = func.svals2;\n    else if (overcharge === 3 && func.svals3)\n        dataVals = func.svals3;\n    else if (overcharge === 4 && func.svals4)\n        dataVals = func.svals4;\n    else if (overcharge === 5 && func.svals5)\n        dataVals = func.svals5;\n    else\n        dataVals = func.svals;\n\n    return dataVals[level - 1];\n}\n\nexport function hasFollowerDataVals(func: Func): boolean {\n    return func.followerVals !== undefined;\n}\n","import {Renderable} from \"../../Helper/OutputHelper\";\n\nexport class FuncDescriptorSection {\n    public showing: boolean = true;\n    public parts: Renderable[] = [];\n    public preposition?: string;\n\n    constructor(preposition?: string) {\n        this.preposition = preposition;\n    }\n}\n\nexport class FuncDescriptorSections {\n    public team = new FuncDescriptorSection();\n    public chance = new FuncDescriptorSection();\n    public action = new FuncDescriptorSection();\n    public affects = new FuncDescriptorSection();\n    public amount = new FuncDescriptorSection('of');\n    public target = new FuncDescriptorSection('to');\n    public duration = new FuncDescriptorSection();\n    public scaling = new FuncDescriptorSection();\n}\n","import React from \"react\";\nimport {BuffType} from \"../../Api/Data/Buff\";\nimport Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport BuffValueDescriptor from \"../BuffValueDescriptor\";\nimport FuncValueDescriptor from \"../FuncValueDescriptor\";\nimport SkillReferenceDescriptor from \"../SkillReferenceDescriptor\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal, support?: boolean): void {\n    const section = sections.amount,\n        parts = section.parts;\n\n    if (support) {\n        parts.push('( Support only:');\n    }\n\n    if (func.buffs[0]?.type === BuffType.ADD_INDIVIDUALITY && typeof dataVal.Value === \"number\") {\n        parts.push(\n            <TraitDescriptor region={region} trait={dataVal.Value}/>\n        );\n    } else if (\n        (\n            func.buffs[0]?.type === BuffType.ATTACK_FUNCTION\n            || func.buffs[0]?.type === BuffType.COMMANDATTACK_FUNCTION\n            || func.buffs[0]?.type === BuffType.COMMANDATTACK_BEFORE_FUNCTION\n            || func.buffs[0]?.type === BuffType.COMMANDCODEATTACK_FUNCTION\n            || func.buffs[0]?.type === BuffType.DAMAGE_FUNCTION\n            || func.buffs[0]?.type === BuffType.DEAD_FUNCTION\n            || func.buffs[0]?.type === BuffType.DELAY_FUNCTION\n            || func.buffs[0]?.type === BuffType.SELFTURNEND_FUNCTION\n        )\n        && typeof dataVal.Value === \"number\"\n    ) {\n        section.preposition = undefined;\n        parts.push('that triggers');\n        parts.push(\n            <SkillReferenceDescriptor region={region} id={dataVal.Value}/>\n        );\n    } else if (func.funcType === FuncType.CARD_RESET && dataVal.Value) {\n        section.preposition = undefined;\n        parts.push(`${dataVal.Value} time${dataVal.Value > 1 ? 's' : ''}`);\n    } else if (func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL_SUM) {\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}\n                                        hideRate={true}/>);\n    } else if (\n        (\n            func.funcType === FuncType.ABSORB_NPTURN\n            || func.funcType === FuncType.GAIN_HP_FROM_TARGETS\n            || func.funcType === FuncType.GAIN_NP_FROM_TARGETS\n        ) && dataVal.DependFuncId\n    ) {\n        if (dataVal.DependFuncVals?.Value) {\n            section.parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal}\n                                                    dataVal={dataVal} hideRate={true}/>);\n        } else {\n            section.showing = false;\n        }\n    } else if (dataVal.AddCount && (\n        func.funcType === FuncType.EVENT_DROP_UP\n        || func.funcType === FuncType.EXP_UP\n        || func.funcType === FuncType.QP_UP\n        || func.funcType === FuncType.USER_EQUIP_EXP_UP\n    )) {\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}/>);\n    } else if (dataVal.RateCount && (\n        func.funcType === FuncType.QP_DROP_UP\n        || func.funcType === FuncType.SERVANT_FRIENDSHIP_UP\n        || func.funcType === FuncType.USER_EQUIP_EXP_UP\n    )) {\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}/>);\n    } else if (func.buffs[0]?.type === BuffType.NPATTACK_PREV_BUFF) {\n        if (typeof dataVal.SkillID !== \"number\") {\n            section.showing = false;\n            return;\n        }\n\n        section.preposition = undefined;\n        parts.push('that triggers');\n        parts.push(\n            <SkillReferenceDescriptor region={region} id={dataVal.SkillID}/>\n        );\n    } else if (func.buffs[0] && dataVal.Value) {\n        parts.push(<BuffValueDescriptor region={region} buff={func.buffs[0]} dataVal={dataVal}/>);\n    } else if (dataVal.Value) {\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}\n                                        hideRate={true}/>);\n    } else if (!dataVal.Value && dataVal.Correction) {\n        section.preposition = 'with';\n        parts.push('bonus');\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}\n                                        hideRate={true}/>);\n    } else {\n        section.showing = false;\n    }\n\n    if (support) {\n        parts.push(')');\n    }\n}\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Func, {DataVal} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {\n    getDataValList, getFollowerDataValList,\n    getStaticFieldValues,\n    getTargetFollowerVersionValues,\n    getTargetVersionValues,\n    hasFollowerDataVals\n} from \"../Helper/FuncHelper\";\nimport {joinElements, Renderable} from \"../Helper/OutputHelper\";\nimport {FuncDescriptorSections} from \"./Func/FuncDescriptorSections\";\nimport handleActionSection from \"./Func/handleActionSection\";\nimport handleAffectsSection from \"./Func/handleAffectsSection\";\nimport handleAmountSection from \"./Func/handleAmountSection\";\nimport handleChanceSection from \"./Func/handleChanceSection\";\nimport handleDurationSection from \"./Func/handleDurationSection\";\nimport handleScalingSection from \"./Func/handleScalingSection\";\nimport handleTargetSection from \"./Func/handleTargetSection\";\nimport handleTeamSection from \"./Func/handleTeamSection\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n    level?: number;\n    overcharge?: number;\n}\n\nclass FuncDescriptor extends React.Component<IProps> {\n    getDataVal(): DataVal {\n        const func = this.props.func;\n\n        if (this.props.level) {\n            return getTargetVersionValues(func, this.props.level, this.props.overcharge ?? 1) ?? {};\n        } else {\n            const dataVals = getDataValList(func);\n\n            return getStaticFieldValues(dataVals);\n        }\n    }\n\n    getFollowerDataVal(): DataVal | undefined {\n        const func = this.props.func;\n\n        if (!hasFollowerDataVals(func))\n            return undefined;\n\n        if (this.props.level) {\n            return getTargetFollowerVersionValues(func, this.props.level) ?? {};\n        } else {\n            const dataVals = getFollowerDataValList(func);\n\n            return getStaticFieldValues(dataVals);\n        }\n    }\n\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            dataVal = this.getDataVal(),\n            followerDataVal = this.getFollowerDataVal();\n\n        const sections = new FuncDescriptorSections();\n\n        handleTeamSection(region, sections, func, dataVal);\n        handleChanceSection(region, sections, func, dataVal);\n        handleActionSection(region, sections, func, dataVal);\n        handleAffectsSection(region, sections, func, dataVal);\n        handleAmountSection(region, sections, func, dataVal);\n        if (followerDataVal) {\n            handleAmountSection(region, sections, func, followerDataVal, true);\n        }\n        handleTargetSection(region, sections, func, dataVal);\n        handleDurationSection(region, sections, func, dataVal);\n        handleScalingSection(region, sections, func, dataVal);\n\n        let parts: Renderable[] = [];\n\n        Object.values(sections).forEach(section => {\n            if (!section.showing)\n                return;\n\n            if (section.preposition)\n                parts.push(section.preposition);\n\n            parts = parts.concat(section.parts);\n        });\n\n        parts.push(\n            <Link to={`/${region}/func/${func.funcId}`}>\n                <FontAwesomeIcon icon={faShare}/>\n            </Link>\n        );\n\n        parts = joinElements(parts, ' ');\n\n        return (\n            <span>\n                {parts.map((element, index) => {\n                    return <React.Fragment key={index}>{element}</React.Fragment>;\n                })}\n            </span>\n        );\n    }\n}\n\nexport default FuncDescriptor;\n","import Func, {DataVal, FuncTargetTeam} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.team,\n        parts = section.parts;\n\n    if (func.funcTargetTeam === FuncTargetTeam.PLAYER)\n        parts.push('[Player]');\n    else if (func.funcTargetTeam === FuncTargetTeam.ENEMY)\n        parts.push('[Enemy]');\n    else\n        section.showing = false;\n}\n","import Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {asPercent} from \"../../Helper/OutputHelper\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.chance,\n        parts = section.parts;\n\n    if (dataVal.Rate && dataVal.Rate < 0) {\n        parts.push('Guaranteed to');\n    } else if (typeof dataVal.Rate === \"number\" && dataVal.Rate !== 1000) {\n        parts.push((dataVal.Rate / 10) + '% Chance to');\n    } else if (dataVal.RateCount && (\n        func.funcType === FuncType.ENEMY_ENCOUNT_COPY_RATE_UP\n        || func.funcType === FuncType.ENEMY_ENCOUNT_RATE_UP\n    )) {\n        parts.push(asPercent(dataVal.RateCount, 1) + ' Chance per Target to');\n    } else if (!dataVal.Rate && func.funcType !== FuncType.NONE) {\n        parts.push('Chance to');\n    } else {\n        section.showing = false;\n    }\n}\n","import React from \"react\";\nimport Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {mergeElements} from \"../../Helper/OutputHelper\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.affects,\n        parts = section.parts;\n\n    if (func.funcType === FuncType.DAMAGE_NP_HPRATIO_LOW) {\n        parts.push('(additional for low HP)');\n    } else if (typeof dataVal.Target === \"number\"\n        && (\n            func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL\n            || func.funcType === FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX\n        )\n    ) {\n        parts.push(\n            <span>(additional to targets with {\n                <TraitDescriptor region={region} trait={dataVal.Target}/>\n            })</span>\n        );\n    } else if (typeof dataVal.TargetList === \"number\" && func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL_SUM) {\n        parts.push(\n            <span>(bonus per trait of {\n                <TraitDescriptor region={region} trait={dataVal.TargetList}/>\n            }{\n                dataVal.ParamAddMaxCount ? `[Limit ${dataVal.ParamAddMaxCount}]` : null\n            })</span>\n        );\n    } else if (typeof dataVal.TargetRarityList === \"string\" && func.funcType === FuncType.DAMAGE_NP_RARE) {\n        parts.push(\n            <span>(bonus to {dataVal.TargetRarityList} {\n                dataVal.TargetRarityList.split('/').length > 1 ? 'rarities' : 'rarity'\n            })</span>\n        )\n    } else if (func.funcType === FuncType.DAMAGE_NP_PIERCE) {\n        parts.push('(that pierces defense)');\n    }\n\n    if (\n        func.funcType === FuncType.ENEMY_ENCOUNT_COPY_RATE_UP\n        || func.funcType === FuncType.ENEMY_ENCOUNT_RATE_UP\n        || func.funcType === FuncType.EVENT_DROP_UP\n    ) {\n        if (dataVal.Individuality) {\n            parts.push(\n                <span>with <TraitDescriptor region={region} trait={Number(dataVal.Individuality)}/></span>\n            )\n        }\n\n        if (dataVal.EventId) {\n            parts.push(\n                <span>during event <TraitDescriptor region={region} trait={Number(dataVal.EventId)}/></span>\n            )\n        }\n    }\n\n    if (func.funcquestTvals.length) {\n        parts.push('if on field');\n        parts.push(\n            mergeElements(\n                func.funcquestTvals.map(trait => <TraitDescriptor region={region} trait={trait}/>),\n                ' & '\n            )\n        );\n    }\n\n    if (func.functvals.length) {\n        parts.push('for targets');\n\n        if (func.functvals.length > 1) {\n            parts.push('all');\n        }\n\n        func.functvals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<TraitDescriptor region={region} trait={trait}/>);\n        });\n    }\n\n    if (!parts.length) {\n        section.showing = false;\n    }\n\n}\n","import Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.duration,\n        parts = section.parts;\n\n    if (dataVal.Count && dataVal.Count > 0 && dataVal.Turn && dataVal.Turn > 0) {\n        const countDesc = dataVal.Count === 1 ? '1 Time' : `${dataVal.Count} Times`,\n            turnDesc = dataVal.Turn === 1 ? '1 Turn' : `${dataVal.Turn} Turns`;\n\n        parts.push(`(${turnDesc}, ${countDesc})`);\n    } else if (dataVal.Turn && dataVal.Turn > 0) {\n        parts.push(dataVal.Turn === 1 ? '(1 Turn)' : `(${dataVal.Turn} Turns)`);\n    } else if (dataVal.Count && dataVal.Count > 0) {\n        parts.push(dataVal.Count === 1 ? '(1 Time)' : `(${dataVal.Count} Times)`);\n    } else {\n        section.showing = false;\n    }\n}\n","import Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {funcUpdatesByLevel, funcUpdatesByOvercharge} from \"../../Helper/FuncHelper\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.scaling,\n        parts = section.parts,\n        isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func);\n\n    if (!isLevel && !isOvercharge) {\n        section.showing = false;\n        return;\n    }\n\n    if (isLevel) {\n        parts.push('<LEVEL>');\n    }\n\n    if (isOvercharge) {\n        parts.push('<OVERCHARGE>');\n    }\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Region from \"../Api/Data/Region\";\nimport Skill from \"../Api/Data/Skill\";\nimport BuffIcon from \"../Component/BuffIcon\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n    iconHeight?: number;\n}\n\nclass SkillDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/skill/${this.props.skill.id}`}>\n                <BuffIcon location={this.props.skill.icon} height={this.props.iconHeight}/>\n                {' '}\n                [{this.props.skill.name ? this.props.skill.name : `Skill: ${this.props.skill.id}`}]\n            </Link>\n        );\n    }\n}\n\nexport default SkillDescriptor;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport Region from \"../Api/Data/Region\";\nimport Skill from \"../Api/Data/Skill\";\nimport SkillDescriptor from \"./SkillDescriptor\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    skill?: Skill;\n}\n\nclass SkillReferenceDescriptor extends React.Component<IProps, IState> {\n    constructor(props:IProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    async componentDidMount() {\n        try {\n            this.setState({\n                skill: await Connection.skill(this.props.region, this.props.id)\n            });\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    render() {\n        const route = `/${this.props.region}/skill/${this.props.id}`;\n\n        if (this.state.skill === undefined) {\n            return <Link to={route}>[Skill: {this.props.id}]</Link>;\n        }\n\n        return (\n            <SkillDescriptor region={this.props.region} skill={this.state.skill}/>\n        );\n    }\n}\n\nexport default SkillReferenceDescriptor;\n","import React from \"react\";\nimport {BuffType} from \"../Api/Data/Buff\";\nimport Func, {DataVal, FuncType} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {asPercent, mergeElements, Renderable} from \"../Helper/OutputHelper\";\nimport BuffValueDescriptor from \"./BuffValueDescriptor\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n    staticDataVal: DataVal;\n    dataVal: DataVal;\n    hideRate?: boolean;\n}\n\nclass FuncValueDescriptor extends React.Component<IProps> {\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            dataVal = this.props.dataVal,\n            parts: Renderable[] = [];\n\n        if (func.funcType === FuncType.ABSORB_NPTURN) {\n            switch (this.props.staticDataVal.DependFuncId) {\n                case 469:\n                    const npAbsorbParts = [];\n                    if (dataVal.DependFuncVals?.Value) {\n                        npAbsorbParts.push(`${asPercent(dataVal.DependFuncVals.Value, 2)}`);\n                    }\n\n                    if (typeof dataVal.DependFuncVals?.Value2 === \"number\") {\n                        npAbsorbParts.push(`${dataVal.DependFuncVals.Value2 / 100} Charge`);\n                    }\n\n                    if (npAbsorbParts.length) {\n                        parts.push(<React.Fragment>\n                            ({mergeElements(npAbsorbParts, ' => ')})\n                        </React.Fragment>);\n                    }\n                    break;\n                case 5061:\n                    if (dataVal.DependFuncVals?.Value)\n                        parts.push(dataVal.DependFuncVals.Value.toString());\n                    break;\n            }\n        }\n\n        if (func.funcType === FuncType.GAIN_HP_FROM_TARGETS) {\n            switch (this.props.staticDataVal.DependFuncId) {\n                case 711:\n                    if (dataVal.DependFuncVals?.Value)\n                        parts.push(dataVal.DependFuncVals?.Value.toString());\n                    break;\n            }\n        }\n\n        if (func.funcType === FuncType.GAIN_NP_FROM_TARGETS) {\n            switch (this.props.staticDataVal.DependFuncId) {\n                case 474:\n                    const npAbsorbParts = [];\n                    if (dataVal.DependFuncVals?.Value) {\n                        npAbsorbParts.push(`${dataVal.DependFuncVals.Value} Charge`);\n                    }\n\n                    if (dataVal.DependFuncVals?.Value2) {\n                        npAbsorbParts.push(`${asPercent(dataVal.DependFuncVals.Value2, 2)}`);\n                    }\n\n                    if (npAbsorbParts.length) {\n                        parts.push(<React.Fragment>\n                            ({mergeElements(npAbsorbParts, ' => ')})\n                        </React.Fragment>);\n                    }\n                    break;\n                case 3962:\n                    if (dataVal.DependFuncVals?.Value)\n                        parts.push(asPercent(dataVal.DependFuncVals?.Value, 2));\n                    break;\n            }\n        }\n\n        if (\n            (func.funcType === FuncType.ADD_STATE || func.funcType === FuncType.ADD_STATE_SHORT)\n            && func.buffs[0]\n            && (\n                dataVal.Value\n                || (func.buffs[0].type === BuffType.DAMAGE_FUNCTION && dataVal.Value2)\n                || (func.buffs[0].type === BuffType.DEAD_FUNCTION && dataVal.Value2)\n                || (func.buffs[0].type === BuffType.DELAY_FUNCTION && dataVal.Value2)\n                || (func.buffs[0].type === BuffType.NPATTACK_PREV_BUFF && dataVal.SkillID)\n                || (func.buffs[0].type === BuffType.SELFTURNEND_FUNCTION && dataVal.Value2)\n            )\n        ) {\n            return <BuffValueDescriptor region={region} buff={func.buffs[0]} dataVal={dataVal}/>;\n        }\n\n        if (!this.props.hideRate && dataVal.Rate !== undefined) {\n            parts.push(asPercent(dataVal.Rate, 1));\n        }\n\n        if (dataVal.Value !== undefined) {\n            switch (func.funcType) {\n                case FuncType.DAMAGE_NP:\n                case FuncType.DAMAGE_NP_HPRATIO_LOW:\n                case FuncType.DAMAGE_NP_INDIVIDUAL:\n                case FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                case FuncType.DAMAGE_NP_PIERCE:\n                case FuncType.DAMAGE_NP_RARE:\n                case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                case FuncType.GAIN_HP_PER:\n                case FuncType.QP_DROP_UP:\n                    parts.push(asPercent(dataVal.Value, 1));\n                    break;\n                case FuncType.GAIN_NP:\n                case FuncType.GAIN_NP_BUFF_INDIVIDUAL_SUM:\n                case FuncType.LOSS_NP:\n                    parts.push(asPercent(dataVal.Value, 2));\n                    break;\n                default:\n                    parts.push(dataVal.Value.toString());\n            }\n        }\n\n        if (dataVal.Value2 !== undefined) {\n            switch (func.funcType) {\n                case FuncType.GAIN_NP_FROM_TARGETS:\n                    parts.push(asPercent(dataVal.Value2, 2));\n                    break;\n                case FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                    parts.push(\"additional \" + asPercent(dataVal.Value2, 1));\n            }\n        }\n\n        if (dataVal.Correction !== undefined) {\n            switch (func.funcType) {\n                case FuncType.DAMAGE_NP_INDIVIDUAL:\n                case FuncType.DAMAGE_NP_RARE:\n                case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                    parts.push(asPercent(dataVal.Correction, 1));\n                    break;\n                case FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                    parts.push(\"(\" + asPercent(dataVal.Correction, 1) + \" x count)\");\n                    break;\n                default:\n                    parts.push(dataVal.Correction.toString());\n            }\n        }\n\n        if (dataVal.Target !== undefined) {\n            switch (func.funcType) {\n                case FuncType.DAMAGE_NP_HPRATIO_LOW:\n                    parts.push(asPercent(dataVal.Target, 1));\n                    break;\n                // default:\n                //     parts.push(dataVal.Target.toString());\n            }\n        }\n\n        if (dataVal.AddCount !== undefined) {\n            switch (func.funcType) {\n                default:\n                    parts.push(dataVal.AddCount);\n            }\n        }\n\n        if (dataVal.RateCount) {\n            switch (func.funcType) {\n                case FuncType.QP_DROP_UP:\n                case FuncType.SERVANT_FRIENDSHIP_UP:\n                case FuncType.USER_EQUIP_EXP_UP:\n                    parts.push(asPercent(dataVal.RateCount, 1));\n                    break;\n                default:\n                    parts.push(dataVal.RateCount);\n            }\n        }\n\n        if (!parts.length)\n            return <span>-</span>;\n\n        return <span>{mergeElements(parts, ' + ')}</span>;\n    }\n}\n\nexport default FuncValueDescriptor;\n","import React from \"react\";\nimport Buff, {BuffType} from \"../Api/Data/Buff\";\nimport {DataVal} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {asPercent} from \"../Helper/OutputHelper\";\nimport TraitDescriptor from \"./TraitDescriptor\";\n\ninterface IProps {\n    region: Region;\n    buff: Buff;\n    dataVal: DataVal;\n}\n\nclass BuffValueDescriptor extends React.Component<IProps> {\n    render() {\n        let value: JSX.Element | string | null = null;\n\n        switch (this.props.buff.type) {\n            case BuffType.UP_ATK:\n            case BuffType.DOWN_ATK:\n            case BuffType.UP_COMMANDALL:\n            case BuffType.DOWN_COMMANDALL:\n            case BuffType.UP_CRITICALDAMAGE:\n            case BuffType.DOWN_CRITICALDAMAGE:\n            case BuffType.UP_CRITICALPOINT:\n            case BuffType.DOWN_CRITICALPOINT:\n            case BuffType.UP_CRITICALRATE:\n            case BuffType.DOWN_CRITICALRATE:\n            case BuffType.UP_CRITICAL_RATE_DAMAGE_TAKEN:\n            case BuffType.DOWN_CRITICAL_RATE_DAMAGE_TAKEN:\n            case BuffType.UP_DAMAGE:\n            case BuffType.DOWN_DAMAGE:\n            case BuffType.UP_DAMAGEDROPNP:\n            case BuffType.DOWN_DAMAGEDROPNP:\n            case BuffType.UP_DEFENCE:\n            case BuffType.DOWN_DEFENCE:\n            case BuffType.UP_DEFENCECOMMANDALL:\n            case BuffType.DOWN_DEFENCECOMMANDALL:\n            case BuffType.UP_DROPNP:\n            case BuffType.DOWN_DROPNP:\n            case BuffType.UP_FUNC_HP_REDUCE:\n            case BuffType.DOWN_FUNC_HP_REDUCE:\n            case BuffType.UP_HATE:\n            case BuffType.UP_NONRESIST_INSTANTDEATH:\n            case BuffType.UP_NPDAMAGE:\n            case BuffType.DOWN_NPDAMAGE:\n            case BuffType.UP_SPECIALDEFENCE:\n            case BuffType.DOWN_SPECIALDEFENCE:\n            case BuffType.UP_STARWEIGHT:\n            case BuffType.DOWN_STARWEIGHT:\n            case BuffType.UP_TOLERANCE:\n            case BuffType.DOWN_TOLERANCE:\n            case BuffType.UP_TOLERANCE_SUBSTATE:\n            case BuffType.DOWN_TOLERANCE_SUBSTATE:\n                value = asPercent(this.props.dataVal.Value, 1);\n                break;\n            case BuffType.REGAIN_NP:\n                value = asPercent(this.props.dataVal.Value, 2);\n                break;\n            case BuffType.ATTACK_FUNCTION:\n            case BuffType.COMMANDATTACK_FUNCTION:\n            case BuffType.COMMANDATTACK_BEFORE_FUNCTION:\n            case BuffType.DAMAGE_FUNCTION:\n            case BuffType.DEAD_FUNCTION:\n            case BuffType.DELAY_FUNCTION:\n            case BuffType.SELFTURNEND_FUNCTION:\n                if (this.props.dataVal.Value2)\n                    value = 'Lv. ' + this.props.dataVal.Value2;\n                break;\n            case BuffType.NPATTACK_PREV_BUFF:\n                if (this.props.dataVal.SkillLV)\n                    value = 'Lv. ' + this.props.dataVal.SkillLV;\n                break;\n            case BuffType.FIELD_INDIVIDUALITY:\n                if (typeof this.props.dataVal.Value === \"number\")\n                    value = <TraitDescriptor region={this.props.region} trait={this.props.dataVal.Value}/>;\n                break;\n            default:\n                value = this.props.dataVal.Value?.toString() ?? \"\";\n        }\n\n        return value;\n    }\n}\n\nexport default BuffValueDescriptor;\n","import React from \"react\";\nimport {BuffType} from \"../../Api/Data/Buff\";\nimport Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport BuffDescriptor from \"../BuffDescriptor\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport const funcDescriptions = new Map<FuncType, string>([\n    [FuncType.ABSORB_NPTURN, 'Absorb Charge'],\n    [FuncType.ADD_STATE, 'Apply Buff'],\n    [FuncType.ADD_STATE_SHORT, 'Apply Buff'],\n    [FuncType.CARD_RESET, 'Shuffle Cards'],\n    [FuncType.DAMAGE_NP, 'Deal Damage'],\n    [FuncType.DAMAGE_NP_HPRATIO_LOW, 'Deal Damage with Bonus for Low Health'],\n    [FuncType.DAMAGE_NP_INDIVIDUAL, 'Deal Damage with Bonus to Trait'],\n    [FuncType.DAMAGE_NP_INDIVIDUAL_SUM, 'Deal Damage with Bonus per Trait'],\n    [FuncType.DAMAGE_NP_PIERCE, 'Deal Damage that pierces defense'],\n    [FuncType.DAMAGE_NP_RARE, 'Deal Damage with Bonus to Rarity'],\n    [FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX, 'Deal Damage with Bonus to Trait'],\n    [FuncType.DELAY_NPTURN, 'Drain Charge'],\n    [FuncType.EVENT_DROP_UP, 'Increase Drop Amount'],\n    [FuncType.ENEMY_ENCOUNT_COPY_RATE_UP, 'Create Clone of Enemy'],\n    [FuncType.ENEMY_ENCOUNT_RATE_UP, 'Improve Appearance Rate of Enemy'],\n    [FuncType.EXP_UP, 'Increase Master Exp'],\n    [FuncType.EXTEND_SKILL, 'Increase Cooldowns'],\n    [FuncType.FIX_COMMANDCARD, 'Lock Command Cards'],\n    [FuncType.FORCE_INSTANT_DEATH, 'Force Instant Death'],\n    [FuncType.GAIN_HP, 'Restore HP'],\n    [FuncType.GAIN_HP_FROM_TARGETS, 'Absorb HP'],\n    [FuncType.GAIN_HP_PER, 'Restore HP to Percent'],\n    [FuncType.GAIN_NP, 'Charge NP'],\n    [FuncType.GAIN_NP_BUFF_INDIVIDUAL_SUM, 'Charge NP per Trait'],\n    [FuncType.GAIN_NP_FROM_TARGETS, 'Absorb NP'],\n    [FuncType.GAIN_STAR, 'Gain Critical Stars'],\n    [FuncType.HASTEN_NPTURN, 'Increase Charge'],\n    [FuncType.INSTANT_DEATH, 'Apply Death'],\n    [FuncType.LOSS_HP, 'Drain HP'],\n    [FuncType.LOSS_HP_SAFE, 'Drain HP without killing'],\n    [FuncType.LOSS_NP, 'Drain NP'],\n    [FuncType.LOSS_STAR, 'Remove Critical Stars'],\n    [FuncType.NONE, 'No Effect'],\n    [FuncType.QP_DROP_UP, 'Increase QP Reward'],\n    [FuncType.QP_UP, 'Increase QP Reward'],\n    [FuncType.REPLACE_MEMBER, 'Swap members'],\n    [FuncType.SERVANT_FRIENDSHIP_UP, 'Increase Bond Gain'],\n    [FuncType.SHORTEN_SKILL, 'Reduce Cooldowns'],\n    [FuncType.SUB_STATE, 'Remove Effects'],\n    [FuncType.USER_EQUIP_EXP_UP, 'Increase Mystic Code Exp'],\n]);\n\nfunction handleBuffActionSection(region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    parts.push('Apply');\n    func.buffs.forEach((buff, index) => {\n        if (index > 0)\n            parts.push('&');\n\n        parts.push(<BuffDescriptor region={region} buff={buff}/>);\n    });\n\n    if (func.buffs[0]?.type === BuffType.FIELD_INDIVIDUALITY) {\n        sections.amount.preposition = 'to';\n    }\n\n    sections.target.preposition = 'on';\n    if (\n        func.buffs[0]?.type === BuffType.COMMANDATTACK_FUNCTION\n        || func.buffs[0]?.type === BuffType.NPATTACK_PREV_BUFF\n    ) {\n        sections.target.preposition = 'for';\n    }\n}\n\nfunction handleCleanseActionSection(region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n\n    if (func.traitVals?.length) {\n        parts.push('with');\n\n        func.traitVals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('or');\n\n            parts.push(<TraitDescriptor region={region} trait={trait}/>);\n        });\n    }\n\n    sections.target.preposition = 'on';\n}\n\nfunction handleChargeNpPerTraitActionSection(region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    parts.push('Charge NP per');\n\n    if (func.traitVals?.length) {\n        func.traitVals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<TraitDescriptor region={region} trait={trait}/>);\n        });\n    }\n\n    parts.push('traits');\n\n    sections.amount.preposition = 'by';\n    sections.target.preposition = 'for';\n}\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    if (func.funcType === FuncType.ADD_STATE || func.funcType === FuncType.ADD_STATE_SHORT) {\n        handleBuffActionSection(region, sections, func, dataVal);\n\n        return;\n    } else if (func.funcType === FuncType.SUB_STATE) {\n        handleCleanseActionSection(region, sections, func, dataVal);\n\n        return;\n    } else if (func.funcType === FuncType.GAIN_NP_BUFF_INDIVIDUAL_SUM) {\n        handleChargeNpPerTraitActionSection(region, sections, func, dataVal);\n\n        return;\n    } else if (\n        func.funcType === FuncType.DAMAGE_NP\n        || func.funcType === FuncType.DAMAGE_NP_HPRATIO_LOW\n        || func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL\n        || func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL_SUM\n        || func.funcType === FuncType.DAMAGE_NP_PIERCE\n        || func.funcType === FuncType.DAMAGE_NP_RARE\n        || func.funcType === FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX\n    ) {\n        parts.push('Deal damage');\n        sections.amount.preposition = 'of';\n\n        return;\n    }\n\n    switch (func.funcType) {\n        case FuncType.ABSORB_NPTURN:\n        case FuncType.GAIN_HP_FROM_TARGETS:\n        case FuncType.GAIN_NP_FROM_TARGETS:\n            sections.amount.preposition = 'of';\n            sections.target.preposition = 'from';\n            break;\n        case FuncType.CARD_RESET:\n        case FuncType.GAIN_STAR:\n        case FuncType.LOSS_STAR:\n        case FuncType.NONE:\n            sections.target.showing = false;\n            break;\n        case FuncType.DELAY_NPTURN:\n        case FuncType.LOSS_HP:\n        case FuncType.LOSS_HP_SAFE:\n        case FuncType.LOSS_NP:\n            sections.amount.preposition = 'by';\n            sections.target.preposition = 'from';\n            break;\n        case FuncType.ENEMY_ENCOUNT_COPY_RATE_UP:\n        case FuncType.ENEMY_ENCOUNT_RATE_UP:\n        case FuncType.FIX_COMMANDCARD:\n            sections.amount.showing = false;\n            sections.target.showing = false;\n            break;\n        case FuncType.EVENT_DROP_UP:\n        case FuncType.EXP_UP:\n        case FuncType.QP_DROP_UP:\n        case FuncType.QP_UP:\n        case FuncType.SERVANT_FRIENDSHIP_UP:\n        case FuncType.USER_EQUIP_EXP_UP:\n            sections.chance.showing = false;\n            sections.amount.preposition = 'by';\n            sections.target.showing = false;\n            break;\n        case FuncType.EXTEND_SKILL:\n        case FuncType.GAIN_HP:\n        case FuncType.GAIN_NP:\n        case FuncType.HASTEN_NPTURN:\n        case FuncType.SHORTEN_SKILL:\n            sections.amount.preposition = 'by';\n            sections.target.preposition = 'for';\n            break;\n        case FuncType.FORCE_INSTANT_DEATH:\n        case FuncType.INSTANT_DEATH:\n            sections.amount.showing = false;\n            sections.target.preposition = 'on';\n            break;\n        case FuncType.GAIN_HP_PER:\n            sections.amount.preposition = 'of';\n            sections.target.preposition = 'for';\n            break;\n        case FuncType.REPLACE_MEMBER:\n            sections.amount.showing = false;\n            sections.target.preposition = 'with';\n            break;\n    }\n\n    parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n}\n","import Func, {DataVal, FuncTargetType, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport const targetDescriptions = new Map<FuncTargetType, string>([\n    [FuncTargetType.SELF, 'self'],\n    [FuncTargetType.PT_ONE, 'party member'],\n    // PT_ANOTHER\n    [FuncTargetType.PT_ALL, 'party'],\n    [FuncTargetType.ENEMY, 'enemy'],\n    // ENEMY_ANOTHER\n    [FuncTargetType.ENEMY_ALL, 'enemies'],\n    [FuncTargetType.PT_FULL, 'party (including reserve)'],\n    [FuncTargetType.ENEMY_FULL, 'enemies (including reserve)'],\n    [FuncTargetType.PT_OTHER, 'party except self'],\n    [FuncTargetType.PT_ONE_OTHER, 'other party members besides target'],\n    [FuncTargetType.PT_RANDOM, 'random party member'],\n    [FuncTargetType.ENEMY_OTHER, 'other enemies besides target'],\n    [FuncTargetType.ENEMY_RANDOM, 'random enemy'],\n    [FuncTargetType.PT_OTHER_FULL, 'party except self (including reserve)'],\n    [FuncTargetType.ENEMY_OTHER_FULL, 'other enemies (including reserve)'],\n    [FuncTargetType.PTSELECT_ONE_SUB, 'active party member and reserve party member'],\n    [FuncTargetType.PTSELECT_SUB, 'reserve party member'],\n    // PT_ONE_ANOTHER_RANDOM\n    [FuncTargetType.PT_ONE_ANOTHER_RANDOM, 'other random party member'],\n    [FuncTargetType.PT_SELF_ANOTHER_RANDOM, 'other random party member (except self)'],\n    [FuncTargetType.ENEMY_ONE_ANOTHER_RANDOM, 'other random enemy'],\n    [FuncTargetType.PT_SELF_ANOTHER_FIRST, 'first other party member (except self)'],\n    // PT_SELF_BEFORE\n    // PT_SELF_AFTER\n    // PT_SELF_ANOTHER_LAST\n    [FuncTargetType.COMMAND_TYPE_SELF_TREASURE_DEVICE, 'target noble phantasm version'],\n]);\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.target,\n        parts = section.parts;\n\n    let targetType: FuncTargetType | undefined = func.funcTargetType;\n\n    if (func.funcType === FuncType.ABSORB_NPTURN) {\n        switch (dataVal.DependFuncId) {\n            case 469:\n                targetType = FuncTargetType.ENEMY_ALL;\n                break;\n            case 5061:\n                targetType = FuncTargetType.PT_OTHER;\n                break;\n        }\n    } else if (func.funcType === FuncType.GAIN_HP_FROM_TARGETS) {\n        switch (dataVal.DependFuncId) {\n            case 711:\n                targetType = FuncTargetType.ENEMY_ALL;\n                break;\n            default:\n                targetType = undefined;\n                section.showing = false;\n                break;\n        }\n    } else if (func.funcType === FuncType.GAIN_NP_FROM_TARGETS) {\n        switch (dataVal.DependFuncId) {\n            case 474:\n                targetType = FuncTargetType.ENEMY_ALL;\n                break;\n            case 3962:\n                targetType = FuncTargetType.PT_OTHER;\n                break;\n        }\n    }\n\n    if (targetType) {\n        parts.push(targetDescriptions.get(targetType) ?? targetType);\n    }\n}\n"],"sourceRoot":""}