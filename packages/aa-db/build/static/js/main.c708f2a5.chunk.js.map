{"version":3,"sources":["Setting/Option.tsx","Component/ErrorStatus.tsx","Setting/Manager.tsx","Api/Data/Region.tsx","Setting/SettingForm.tsx","Component/Navigation.tsx","Api/ResultCache.tsx","Api/Connection.tsx","Component/BuffIcon.tsx","Component/DataTable.tsx","Component/Loading.tsx","Api/Data/Buff.tsx","Api/Data/Func.tsx","Component/RawDataViewer.tsx","Helper/OutputHelper.tsx","Descriptor/TraitDescriptor.tsx","Descriptor/BuffValueDescriptor.tsx","Descriptor/FuncValueDescriptor.tsx","Helper/FuncHelper.tsx","Descriptor/Func/FuncDescriptorSections.tsx","Api/Data/Profile.tsx","Descriptor/BuffDescriptor.tsx","Descriptor/SkillDescriptor.tsx","Descriptor/SkillReferenceDescriptor.tsx","Descriptor/Func/handleTargetSection.tsx","Descriptor/FuncDescriptor.tsx","Descriptor/Func/handleTeamSection.tsx","Descriptor/Func/handleChanceSection.tsx","Descriptor/Func/handleActionSection.tsx","Descriptor/Func/handleAmountSection.tsx","Descriptor/Func/handleAffectsSection.tsx","Descriptor/Func/handleDurationSection.tsx","Descriptor/Func/handleScalingSection.tsx","Page/BuffPage.tsx","Descriptor/RarityDescriptor.tsx","Page/CraftEssence/CraftEssenceMainData.tsx","Page/CraftEssence/CraftEssencePicker.tsx","Page/CraftEssence/CraftEssencePortrait.tsx","Api/Data/EntityType.tsx","Descriptor/QuestDescriptor.tsx","Descriptor/ProfileConditionDescriptor.tsx","Page/Servant/ServantProfileComments.tsx","Page/CraftEssence/CraftEssenceProfileComments.tsx","Page/CraftEssence/CraftEssenceSkill.tsx","Page/CraftEssencePage.tsx","Component/FaceIcon.tsx","Page/CraftEssencesPage.tsx","Descriptor/NoblePhantasmDescriptor.tsx","Page/Func/FuncMainData.tsx","Page/FuncPage.tsx","Api/Data/ClassName.tsx","Component/ClassIcon.tsx","Descriptor/ServantDescriptor.tsx","Page/Func/DataValMainData.tsx","Page/NoblePhantasm/NoblePhantasmVersion.tsx","Page/NoblePhantasmPage.tsx","Page/QuestPage.tsx","Page/Servant/ServantMainData.tsx","Page/Servant/ServantMiscData.tsx","Page/Servant/ServantAdditionalEffectBreakdown.tsx","Page/Servant/ServantEffectBreakdownContent.tsx","Page/Servant/ServantEffectBreakdown.tsx","Page/Servant/ServantNoblePhantasm.tsx","Page/Servant/ServantPassive.tsx","Page/Servant/ServantPicker.tsx","Page/Servant/ServantPortrait.tsx","Page/Servant/ServantProfileStats.tsx","Page/Servant/ServantSkill.tsx","Page/Servant/ServantTraits.tsx","Page/ServantPage.tsx","Page/ServantsPage.tsx","Descriptor/CraftEssenceDescriptor.tsx","Page/Skill/SkillVersion.tsx","Page/SkillPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LanguageOption","images","ErrorStatus","message","undefined","this","props","error","response","status","data","detail","random","Math","floor","length","image","id","alt","src","style","display","height","margin","className","React","Component","Region","callbacks","Manager","value","window","localStorage","getItem","language","Object","values","find","v","DEFAULT","setItem","triggerCallbacks","callback","push","forEach","call","SettingForm","state","onUpdate","syncSettings","setState","setLanguage","Form","Group","Label","Control","as","onChange","ev","updateLanguage","target","map","Navigation","showSettings","Navbar","bg","variant","expand","Container","to","Toggle","Collapse","Nav","NavItem","Link","href","icon","faDiscord","faGithub","Button","onClick","faCog","Modal","show","onHide","hideSettings","Header","closeButton","Title","Body","ResultCache","cache","Map","pending","pendingCatches","key","fetcher","duration","get","Promise","resolve","reject","set","then","delete","setTimeout","catch","host","fetch","endpoint","a","axios","buff","craftEssence","craftEssenceList","func","noblePhantasm","quest","servant","servantList","skill","traitMap","Connection","region","query","ENGLISH","NA","getCacheableCraftEssenceList","JP","jp","na","names","entity","name","phase","getCacheableServantList","BuffIcon","location","verticalAlign","DataTable","header","Table","bordered","hover","keys","index","dumpValue","element","type","JSON","stringify","Loading","BuffType","FuncType","FuncTargetType","FuncTargetTeam","DataValField","RawDataViewer","showing","cursor","faSearchPlus","size","hide","collapsed","asPercent","pow","parseInt","decimal","handleNewLine","text","mergeElements","split","joinElements","elements","separator","parts","pushElement","previous","toString","seperator","Fragment","traitDescriptions","TraitDescriptor","trait","getDescription","BuffValueDescriptor","UP_ATK","DOWN_ATK","UP_COMMANDALL","DOWN_COMMANDALL","UP_CRITICALDAMAGE","DOWN_CRITICALDAMAGE","UP_CRITICALPOINT","DOWN_CRITICALPOINT","UP_CRITICALRATE","DOWN_CRITICALRATE","UP_CRITICAL_RATE_DAMAGE_TAKEN","DOWN_CRITICAL_RATE_DAMAGE_TAKEN","UP_DAMAGE","DOWN_DAMAGE","UP_DAMAGEDROPNP","DOWN_DAMAGEDROPNP","UP_DEFENCE","DOWN_DEFENCE","UP_DEFENCECOMMANDALL","DOWN_DEFENCECOMMANDALL","UP_DROPNP","DOWN_DROPNP","UP_FUNC_HP_REDUCE","DOWN_FUNC_HP_REDUCE","UP_HATE","UP_NONRESIST_INSTANTDEATH","UP_NPDAMAGE","DOWN_NPDAMAGE","UP_STARWEIGHT","DOWN_STARWEIGHT","UP_TOLERANCE","DOWN_TOLERANCE","UP_TOLERANCE_SUBSTATE","DOWN_TOLERANCE_SUBSTATE","dataVal","Value","REGAIN_NP","ATTACK_FUNCTION","COMMANDATTACK_FUNCTION","COMMANDATTACK_BEFORE_FUNCTION","DAMAGE_FUNCTION","DELAY_FUNCTION","SELFTURNEND_FUNCTION","Value2","NPATTACK_PREV_BUFF","SkillLV","FIELD_INDIVIDUALITY","FuncValueDescriptor","funcType","ADD_STATE","ADD_STATE_SHORT","buffs","SkillID","Rate","DAMAGE_NP","DAMAGE_NP_INDIVIDUAL","DAMAGE_NP_INDIVIDUAL_SUM","DAMAGE_NP_PIERCE","DAMAGE_NP_RARE","DAMAGE_NP_STATE_INDIVIDUAL_FIX","GAIN_NP","LOSS_NP","GAIN_NP_FROM_TARGETS","Correction","DependFuncId","DependFuncVals","chargeAmount","hasChangingDataVals","vals","i","hasUniqueValues","Set","describeMutators","getMutatingFieldValues","fields","filter","field","val","getMutatingFieldNames","dependingVals","dependingMutatingValues","staticValues","getStaticFieldValues","mutatingVals","x","getDataValList","mutatingVal","funcUpdatesByLevel","getLevelDataValList","funcUpdatesByOvercharge","getOverchargeDataValList","isLevel","isOvercharge","dataVals","getTargetVersionValues","getMixedDataValList","svals","getStaticFieldNames","staticVals","hasDependingVals","dependingStaticValues","level","overcharge","svals2","svals3","svals4","svals5","CommentConditionType","FuncDescriptorSection","preposition","FuncDescriptorSections","team","chance","action","amount","affects","scaling","upDownBuffs","up","down","description","UP_CHAGETD","UP_COMMANDATK","DOWN_COMMANDATK","UP_GRANT_INSTANTDEATH","DOWN_GRANT_INSTANTDEATH","UP_GRANTSTATE","DOWN_GRANTSTATE","typeDescriptions","AVOID_INSTANTDEATH","AVOID_STATE","ADD_DAMAGE","ADD_INDIVIDUALITY","AVOIDANCE","BREAK_AVOIDANCE","DONOT_NOBLE","DONOT_NOBLE_COND_MISMATCH","DONOT_RECOVERY","DONOT_SELECT_COMMANDCARD","DONOT_SKILL","GUTS","INVINCIBLE","MULTIATTACK","PIERCE_INVINCIBLE","REGAIN_HP","REGAIN_STAR","SUB_SELFDAMAGE","TD_TYPE_CHANGE","BuffDescriptor","getTraitFilters","cards","hasApplicableTrait","join","ckOpIndv","traitIds","traitId","ckSelfIndv","has","isUpDownBuff","getUpDownDescription","getTraitFilterAppend","getCommandCardTypes","hasTypeDescription","getTypeDescription","hasTraitDescription","getTraitDescription","getEffectiveTargetsDescriptions","SkillDescriptor","iconHeight","SkillReferenceDescriptor","route","targetMap","SELF","PT_ONE","PT_ALL","ENEMY","ENEMY_ALL","PT_FULL","ENEMY_FULL","PT_OTHER","PT_ONE_OTHER","PT_RANDOM","ENEMY_OTHER","ENEMY_RANDOM","PT_OTHER_FULL","ENEMY_OTHER_FULL","PTSELECT_ONE_SUB","PTSELECT_SUB","PT_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_RANDOM","ENEMY_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_FIRST","COMMAND_TYPE_SELF_TREASURE_DEVICE","FuncDescriptor","sections","section","funcTargetTeam","PLAYER","handleTeamSection","NONE","handleChanceSection","SUB_STATE","traitVals","CARD_RESET","Target","additional","TargetList","ParamAddMaxCount","TargetRarityList","DELAY_NPTURN","FORCE_INSTANT_DEATH","GAIN_HP","drainAmount","drainTargets","GAIN_STAR","HASTEN_NPTURN","INSTANT_DEATH","LOSS_HP_SAFE","handleActionSection","prunedValues","handleAmountSection","funcquestTvals","functvals","handleAffectsSection","funcTargetType","handleTargetSection","Count","Turn","countDesc","turnDesc","handleDurationSection","handleScalingSection","concat","funcId","faShare","BuffPage","loading","loadBuff","reverseFunctions","assetMap","RarityDescriptor","rarity","CraftEssenceMainData","collectionNo","cost","lvMax","hpBase","atkBase","hpMax","atkMax","CraftEssencePicker","history","FormControl","custom","changeCraftEssence","craftEssences","slice","reverse","withRouter","CraftEssencePortrait","extraAssets","charaGraph","ascension","shift","assetKey","EntityType","QuestDescriptor","questId","questPhase","ProfileConditionDescriptor","comment","condition","condMessage","condType","QUEST_CLEAR","condValues","condValue2","SVT_FRIENDSHIP","ServantProfileComments","comments","CraftEssenceProfileComments","CraftEssenceSkill","condQuestId","condQuestPhase","Alert","responsive","functions","CraftEssencePage","loadCraftEssence","all","Row","Col","xs","span","order","lg","Tabs","defaultActiveKey","transition","Tab","eventKey","title","skills","num","profile","FaceIcon","CraftEssencesPage","activeRarityFilters","list","e","indexOf","activeRarity","active","opacity","toggleRarityFilter","striped","textAlign","width","align","face","NoblePhantasmDescriptor","FuncMainData","funcPopupText","FuncPage","loadFunc","funcPopupIcon","reverseSkills","reverseTds","ClassName","classTypes","classIds","SABER","ARCHER","LANCER","RIDER","CASTER","ASSASSIN","BERSERKER","SHIELDER","RULER","ALTER_EGO","AVENGER","MOON_CANCER","FOREIGNER","GRAND_CASTER","BEAST_I","BEAST_II","BEAST_IIIL","BEAST_IIIR","BEAST_UNKNOWN","ALL","EXTRA","ClassIcon","classId","ServantDescriptor","DataValMainData","NoblePhantasmVersion","md","NoblePhantasmPage","loadNp","rank","card","reverseServants","NORMAL","HEROINE","inline","justifyContent","changeLevel","changeOvercharge","QuestPage","loadQuest","ServantMainData","gender","attribute","buffIconPath","deathChanceIcon","hitCountIcon","starGenIcon","showHits","hits","hit","ServantMiscData","hitsDistribution","buster","arts","quick","extra","starAbsorb","starGen","instantDeathChance","hitsColumn","miscColumn","ServantAdditionalEffectBreakdown","skillId","funcs","levels","relatedSkillId","ServantEffectBreakdownContent","cooldowns","cooldown","mutatingDescriptions","relatedSkillIds","getRelatedSkillIds","ServantEffectBreakdown","Array","from","ServantNoblePhantasm","np","npDistribution","ServantPassive","ServantPicker","changeServant","servants","ServantPortrait","ServantProfileStats","stats","strength","endurance","agility","magic","luck","ServantSkill","coolDown","ServantTraits","traits","ServantPage","loadServant","noblePhantasms","classPassive","classFilters","ServantsPage","activeClassFilters","isClassFilterActive","exists","activeFilters","activeClassName","activeClass","isExtra","toggleClassFilter","CraftEssenceDescriptor","SkillVersion","SkillPage","loadSkill","SERVANT_EQUIP","App","updateSettings","exact","path","render","match","params","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"2QAAYA,E,8FCGNC,EAAS,CACX,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BAgDWC,E,uKAxCD,IAAD,QACDC,EAEJ,QAAyBC,IAArBC,KAAKC,MAAMC,MACXJ,EAAU,iBACP,GAA0C,OAAtC,UAAAE,KAAKC,MAAMC,MAAMC,gBAAjB,eAA2BC,QAClCN,EAAU,oBACP,GAA0C,OAAtC,UAAAE,KAAKC,MAAMC,MAAMC,gBAAjB,eAA2BC,QAClCN,EAAU,gBACP,CAAC,IAAD,EACHA,EAAU,oBAAWE,KAAKC,MAAMC,MAAMC,gBAA5B,aAAW,EAA2BC,QAIJ,kBAA5C,UAAOJ,KAAKC,MAAMC,aAAlB,iBAAO,EAAkBC,gBAAzB,aAAO,EAA4BE,YACUN,IAA1CC,KAAKC,MAAMC,MAAMC,SAASE,KAAKC,SAElCR,EAAUE,KAAKC,MAAMC,MAAMC,SAASE,KAAKC,QAG7C,IAAMC,EAASC,KAAKC,MAAMD,KAAKD,SAAWX,EAAOc,QAC7CC,EAAQf,EAAOW,GAEnB,OACI,yBAAKK,GAAI,gBACL,yBAAKC,IAAK,QAASC,IAAKH,EAAOI,MAAO,CAClCC,QAAS,QACTC,OAAQ,IACRC,OAAQ,YAGZ,uBAAGC,UAAW,cAAeJ,MAAO,CAACG,OAAQ,KACzC,0CAAgBpB,S,GAjCVsB,IAAMC,W,sFDpBpB1B,K,kBAAAA,E,mBAAAA,M,KEEZ,ICFK2B,EDICC,EAAwB,GA8BfC,E,wGA1BP,IAAMC,EAAQC,OAAOC,aAAaC,QANtB,YAORC,EAAWC,OAAOC,OAAOpC,GAAgBqC,MAAK,SAAAC,GAAC,OAAIA,IAAMR,KAE7D,cAAOI,QAAP,IAAOA,IAAYlC,EAAeuC,U,kCAGnBT,GACf,IAAMI,EAAWC,OAAOC,OAAOpC,GAAgBqC,MAAK,SAAAC,GAAC,OAAIA,IAAMR,UAC9C1B,IAAb8B,IAGJH,OAAOC,aAAaQ,QAjBR,WAiB6BN,GACzCL,EAAQY,sB,+BAGIC,GACZd,EAAUe,KAAKD,K,yCAIfd,EAAUgB,SAAQ,SAAAF,GACdA,EAASG,KAAK,a,KEwBXC,E,kDAvCX,WAAYxC,GAAa,IAAD,8BACpB,cAAMA,IAEDyC,MAAQ,CACTb,SAAUL,EAAQK,YAGtBL,EAAQmB,UAAS,kBAAM,EAAKC,kBAPR,E,2DAWpB5C,KAAK6C,SAAS,CACVhB,SAAUL,EAAQK,e,qCAIXJ,GACXD,EAAQsB,YAAYrB,K,+BAGd,IAAD,OACL,OACI,6BACI,kBAACsB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,iBACA,kBAACF,EAAA,EAAKG,QAAN,CAAcC,GAAI,SAAU1B,MAAOzB,KAAK0C,MAAMb,SAChCuB,SAAU,SAACC,GAAD,OAAe,EAAKC,eAAeD,EAAGE,OAAO9B,SAChEK,OAAOC,OAAOpC,GAAgB6D,KAAI,SAAAvB,GAAC,OAChC,4BAAQR,MAAOQ,GAAIA,c,GA9BzBb,IAAMC,WC0EjBoC,E,kDA1EX,WAAYxD,GAAa,IAAD,8BACpB,cAAMA,IAEDyC,MAAQ,CACTgB,cAAc,GAJE,E,2DASpB1D,KAAK6C,SAAS,CAACa,cAAc,M,qCAI7B1D,KAAK6C,SAAS,CAACa,cAAc,M,+BAGvB,IAAD,OACL,OACI,6BACI,kBAACC,EAAA,EAAD,CAAQC,GAAI,OAAQC,QAAS,OAAQC,OAAQ,MACzC,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMC,GAAG,IAAI7C,UAAW,gBAAxB,SACA,kBAACwC,EAAA,EAAOM,OAAR,MAEA,kBAACN,EAAA,EAAOO,SAAR,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMH,GAAG,eAAe7C,UAAW,YAC/B,kBAACiD,EAAA,EAAD,sBAGR,kBAACD,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMH,GAAG,eAAe7C,UAAW,YAC/B,kBAACiD,EAAA,EAAD,sBAGR,kBAACD,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMH,GAAG,qBAAqB7C,UAAW,YACrC,kBAACiD,EAAA,EAAD,gBAGR,kBAACD,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMH,GAAG,qBAAqB7C,UAAW,YACrC,kBAACiD,EAAA,EAAD,gBAGR,kBAACD,EAAA,EAAD,CAAKhD,UAAW,WACZ,kBAACgD,EAAA,EAAIE,KAAL,CAAUC,KAAM,6BAA8Bf,OAAQ,UAClD,kBAAC,IAAD,CAAiBgB,KAAMC,OAE3B,kBAACL,EAAA,EAAIE,KAAL,CAAUC,KAAM,wCAAyCf,OAAQ,UAC7D,kBAAC,IAAD,CAAiBgB,KAAME,OAE3B,kBAACC,EAAA,EAAD,CAAQb,QAAS,UAAWc,QAAS,kBAAM,EAAKjB,iBAC5C,kBAAC,IAAD,CAAiBa,KAAMK,WAO3C,kBAACC,EAAA,EAAD,CAAOC,KAAM9E,KAAK0C,MAAMgB,aAAcqB,OAAQ,kBAAM,EAAKC,iBACrD,kBAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACrB,kBAACL,EAAA,EAAMM,MAAP,kBAEJ,kBAACN,EAAA,EAAMO,KAAP,KACI,kBAAC,EAAD,a,GAlEChE,IAAMC,W,4DFZ1BC,K,QAAAA,E,SAAAA,M,KAKUA,QG0DA+D,E,iDA9DHC,MAAQ,IAAIC,I,KACZC,QAAU,IAAID,I,KACdE,eAAiB,IAAIF,I,gDAEzBG,EAAQC,EAAmBC,GAAsC,IAAD,OAC1DnE,EAAQzB,KAAKsF,MAAMO,IAAIH,GAC7B,QAAc3F,IAAV0B,EACA,OAAO,IAAIqE,SAAW,SAAAC,GAClBA,EAAQtE,MAIhB,IAAMF,EAAYvB,KAAKwF,QAAQK,IAAIH,GACnC,YAAkB3F,IAAdwB,EACO,IAAIuE,SAAW,SAACC,EAASC,GAAY,IAAD,EACvCzE,EAAUe,KAAKyD,IAEF,UAAG,EAAKN,eAAeI,IAAIH,UAA3B,QAAmC,IACxCpD,KAAK0D,OAIrBhG,KAAKwF,QAAQS,IAAIP,EAAK,IACtB1F,KAAKyF,eAAeQ,IAAIP,EAAK,IACtB,IAAII,SAAW,SAACC,EAASC,GAC5BL,EACKnD,KAAK,MACL0D,MAAK,SAACzE,GAAc,IAAD,GACD,UAAG,EAAK+D,QAAQK,IAAIH,UAApB,QAA4B,IAEjCnD,SAAQ,SAAAF,GACdA,EAASG,KAAK,KAAMf,MAGxB,EAAK6D,MAAMW,IAAIP,EAAKjE,GACpB,EAAK+D,QAAQW,OAAOT,GACpB,EAAKD,eAAeU,OAAOT,GAEV,OAAbE,GACAlE,OAAO0E,YAAW,WACd,EAAKd,MAAMa,OAAOT,KACnBE,GAGPG,EAAQtE,MAEX4E,OAAM,SAACnG,GAAgB,IAAD,GACJ,UAAG,EAAKuF,eAAeI,IAAIH,UAA3B,QAAmC,IAExCnD,SAAQ,SAAAF,GACdA,EAASG,KAAK,KAAMtC,MAGxB,EAAKsF,QAAQW,OAAOT,GACpB,EAAKD,eAAeU,OAAOT,GAE3BM,EAAO9F,c,KC1CrBoG,EAAO,8BAETC,EAAK,uCAAG,WAAmBC,GAAnB,eAAAC,EAAA,sEACmBC,IAAMb,IAAOW,GADhC,cACErG,EADF,yBAGGA,EAASE,MAHZ,2CAAH,sDAKLiF,EAAQ,CACJqB,KAAM,IAAItB,EACVuB,aAAc,IAAIvB,EAClBwB,iBAAkB,IAAIxB,EACtByB,KAAM,IAAIzB,EACV0B,cAAe,IAAI1B,EACnB2B,MAAO,IAAI3B,EACX4B,QAAS,IAAI5B,EACb6B,YAAa,IAAI7B,EACjB8B,MAAO,IAAI9B,EACX+B,SAAU,IAAI/B,GA2LPgC,E,kGAvLCC,EAAgB1G,GACxB,IAAMiB,EAAWL,EAAQK,WACrB6D,EAAG,UAAM4B,EAAN,YAAgBzF,EAAhB,YAA4BjB,GAEnC,OAAO0E,EAAMqB,KAAKd,IACdH,GACA,WACI,IAAI6B,EAAQ,iBACR1F,IAAalC,EAAe6H,QAAU,WAAa,IAGvD,OAAOjB,EAAK,UAAUD,EAAV,iBAAuBgB,EAAvB,iBAAsC1G,GAAtC,OAA2C2G,MA/BnD,O,mCAqCID,EAAgB1G,GAChC,IAAMiB,EAAWL,EAAQK,WACrB6D,EAAG,UAAM4B,EAAN,YAAgBzF,EAAhB,YAA4BjB,GAEnC,OAAO0E,EAAMsB,aAAaf,IACtBH,GACA,WACI,IAAI6B,EAAQ,cACR1F,IAAalC,EAAe6H,QAAU,WAAa,IAGvD,OAAOjB,EAAK,UAAaD,EAAb,iBAA0BgB,EAA1B,kBAA0C1G,GAA1C,OAA+C2G,MAhDvD,O,gFAsDcD,G,8EACtBA,IAAWhG,EAAOmG,G,yCACXJ,EAAWK,6BAA6BpG,EAAOmG,K,UAC/CH,IAAWhG,EAAOqG,IAAMnG,EAAQK,aAAelC,EAAeuC,Q,yCAC9DmF,EAAWK,6BAA6BpG,EAAOqG,K,uBAGzCN,EAAWK,6BAA6BpG,EAAOqG,I,cAA1DC,E,iBACSP,EAAWK,6BAA6BpG,EAAOmG,I,eAA1DI,E,OACAC,EAAQ,IAAIvC,IAAoBsC,EAAGrE,KAAI,SAAAuE,GAAM,MAAI,CAACA,EAAOnH,GAAImH,EAAOC,U,kBAEjEJ,EAAGpE,KAAqB,SAAAuE,GAAW,IAAD,EACrC,OAAO,2BACAA,GADP,IAEIC,KAAI,UAAEF,EAAMjC,IAAIkC,EAAOnH,WAAnB,QAA0BmH,EAAOC,W,8HAKrCV,EAAgB1G,GACxB,IAAMiB,EAAWL,EAAQK,WACrB6D,EAAG,UAAM4B,EAAN,YAAgBzF,EAAhB,YAA4BjB,GAEnC,OAAO0E,EAAMwB,KAAKjB,IACdH,GACA,WACI,IAAI6B,EAAQ,iBACR1F,IAAalC,EAAe6H,QAAU,WAAa,IAGvD,OAAOjB,EAAK,UAAUD,EAAV,iBAAuBgB,EAAvB,qBAA0C1G,GAA1C,OAA+C2G,MApFvD,O,oCA0FKD,EAAgB1G,GACjC,IAAMiB,EAAWL,EAAQK,WACrB6D,EAAG,UAAM4B,EAAN,YAAgBzF,EAAhB,YAA4BjB,GAEnC,OAAO0E,EAAMyB,cAAclB,IACvBH,GACA,WACI,IAAI6B,EAAQ,iBACR1F,IAAalC,EAAe6H,QAAU,WAAa,IAGvD,OAAOjB,EAAK,UAAmBD,EAAnB,iBAAgCgB,EAAhC,eAA6C1G,GAA7C,OAAkD2G,MArG1D,O,4BA2GHD,EAAgB1G,EAAYqH,GACrC,IAAMvC,EAAG,UAAM4B,EAAN,YAAgB1G,EAAhB,YAAsBqH,GAE/B,OAAO3C,EAAM0B,MAAMnB,IACfH,GACA,WACI,OAAOa,EAAK,UAAWD,EAAX,iBAAwBgB,EAAxB,kBAAwC1G,EAAxC,YAA8CqH,MAjHtD,O,8BAuHDX,EAAgB1G,GAC3B,IAAMiB,EAAWL,EAAQK,WACrB6D,EAAG,UAAM4B,EAAN,YAAgBzF,EAAhB,YAA4BjB,GAEnC,OAAO0E,EAAM2B,QAAQpB,IACjBH,GACA,WACI,IAAI6B,EAAQ,cACR1F,IAAalC,EAAe6H,QAAU,WAAa,IAGvD,OAAOjB,EAAK,UAAaD,EAAb,iBAA0BgB,EAA1B,oBAA4C1G,GAA5C,OAAiD2G,MAlIzD,O,2EAwISD,G,8EACjBA,IAAWhG,EAAOmG,G,yCACXJ,EAAWa,wBAAwB5G,EAAOmG,K,UAC1CH,IAAWhG,EAAOqG,IAAMnG,EAAQK,aAAelC,EAAeuC,Q,yCAC9DmF,EAAWa,wBAAwB5G,EAAOqG,K,uBAGpCN,EAAWa,wBAAwB5G,EAAOqG,I,cAArDC,E,iBACSP,EAAWa,wBAAwB5G,EAAOmG,I,eAArDI,E,OACAC,EAAQ,IAAIvC,IAAoBsC,EAAGrE,KAAI,SAAAuE,GAAM,MAAI,CAACA,EAAOnH,GAAImH,EAAOC,U,kBAEjEJ,EAAGpE,KAAqB,SAAAuE,GAAW,IAAD,EACrC,OAAO,2BACAA,GADP,IAEIC,KAAI,UAAEF,EAAMjC,IAAIkC,EAAOnH,WAAnB,QAA0BmH,EAAOC,W,+HAKpCV,EAAgB1G,GACzB,IAAMiB,EAAWL,EAAQK,WACrB6D,EAAG,UAAM4B,EAAN,YAAgBzF,EAAhB,YAA4BjB,GAEnC,OAAO0E,EAAM6B,MAAMtB,IACfH,GACA,WACI,IAAI6B,EAAQ,iBACR1F,IAAalC,EAAe6H,QAAU,WAAa,IAGvD,OAAOjB,EAAK,UAAWD,EAAX,iBAAwBgB,EAAxB,kBAAwC1G,GAAxC,OAA6C2G,MAtKrD,O,+BA4KAD,GACZ,OAAOhC,EAAM8B,SAASvB,IAClByB,GACA,WACI,OAAOf,EAAK,UAAcD,EAAd,mBAA6BgB,EAA7B,uBAEhB,Q,4FAI0CA,G,0FACvChC,EAAMuB,iBAAiBhB,IAC1ByB,GACA,WACI,OAAOf,EAAK,UAAuBD,EAAvB,mBAAsCgB,EAAtC,wBAEhB,O,yLAIqCA,G,0FAClChC,EAAM4B,YAAYrB,IACrByB,GACA,WACI,OAAOf,EAAK,UAAuBD,EAAvB,mBAAsCgB,EAAtC,0BAEhB,O,yGClMGa,E,uKAXD,IAAD,EACL,OACI,yBAAKtH,IAAK,GAAIC,IAAKd,KAAKC,MAAMmI,SAAUrH,MAAO,CAC3CE,OAAM,UAAEjB,KAAKC,MAAMgB,cAAb,QAAuB,GAC7BoH,cAAe,gB,GANRjH,IAAMC,W,SC8CdiH,G,8KA1BD,IAAD,OACL,OACI,6BACKtI,KAAKC,MAAMsI,OACR,yBAAKpH,UAAW,eACXnB,KAAKC,MAAMsI,QAEhB,KAEJ,kBAACC,EAAA,EAAD,CAAOC,UAAQ,EAACC,OAAK,EAACvH,UAAW,cAC7B,+BACCW,OAAO6G,KAAK3I,KAAKC,MAAMI,MAAMmD,KAAI,SAACkC,EAAKkD,GACpC,OACI,wBAAIlD,IAAKkD,GACL,4BAAKlD,GACL,4BAAK4C,EAAUO,UAAU,EAAK5I,MAAMI,KAAKqF,e,iCA5B5CjE,GACrB,GAAqB,kBAAVA,EAAoB,CAC3B,IAAMqH,EAAUrH,EAChB,YAAoB1B,IAAhB+I,EAAQpD,UAAuC3F,IAAlB+I,EAAQ7I,YAAwCF,IAAjB+I,EAAQC,KAC7DD,EAEAE,KAAKC,UAAUxH,GAI9B,OAAOA,M,GAXSL,IAAMC,Y,OCEf6H,ICZHC,ECEAC,EAqFAC,EA6BAC,EAMAC,EF9GGL,EAXf,WACI,OACI,yBAAKtI,GAAI,WACL,yBAAKC,IAAK,GAAIM,UAAW,SAAUL,IAAK,+BACxC,yBAAKD,IAAK,GAAIM,UAAW,SAAUL,IAAK,+BACxC,yBAAKD,IAAK,GAAIM,UAAW,SAAUL,IAAK,+BACxC,yBAAKD,IAAK,GAAIM,UAAW,SAAUL,IAAK,iC,iBG+CrC0I,G,kDA1CX,WAAYvJ,GAAgB,IAAD,8BACvB,cAAMA,IAEDyC,MAAQ,CACT+G,SAAS,GAJU,E,mDASvBzJ,KAAK6C,SAAS,CAAC4G,SAAS,M,6BAIxBzJ,KAAK6C,SAAS,CAAC4G,SAAS,M,+BAGlB,IAAD,OACL,OACI,6BACI,0BAAMtI,UAAW,eACXJ,MAAO,CAAC2I,OAAQ,WAChB/E,QAAS,WACL,EAAKG,SAHf,gBAOI,kBAAC,IAAD,CAAiBP,KAAMoF,OAG3B,kBAAC9E,EAAA,EAAD,CAAO+E,KAAM,KAAM9E,KAAM9E,KAAK0C,MAAM+G,QAAS1E,OAAQ,kBAAM,EAAK8E,SAC5D,kBAAChF,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACrB,kBAACL,EAAA,EAAMM,MAAP,yBAEJ,kBAACN,EAAA,EAAMO,KAAP,KACI,kBAAC,IAAD,CAAWtE,IAAKd,KAAKC,MAAMI,KAAMyJ,UAAW,W,GAnCxC1I,IAAMC,WCL3B,SAAS0I,GAAUtI,EAAoCuI,GAC1D,GAAqB,kBAAVvI,EACP,OAAOsI,GAAUE,SAASxI,GAAQuI,GAEtC,IAAME,GAAU,OAACzI,QAAD,IAACA,IAAS,GAAKjB,KAAKwJ,IAAI,GAAIA,GAE5C,MAAM,GAAN,OAAUE,EAAV,KAGG,SAASC,GAAcC,GAC1B,OAAKA,EAID,8BACKC,GAAcD,EAAKE,MAAM,MAAO,+BAJ9B,GASR,SAASC,GAAaC,EAAwBC,GACjD,IAAMC,EAAsB,GACxBC,EAAc,SAAU7B,GACpB,QAAgB/I,IAAZ+I,EAGJ,GAAuB,kBAAZA,EAKX,GAAqB,IAAjB4B,EAAMhK,OAAV,CAKA,IAAMkK,EAAWF,EAAMA,EAAMhK,OAAS,GACd,kBAAbkK,EAKXF,EAAMA,EAAMhK,OAAS,GAAKkK,EAAW9B,EAAQ+B,WAJzCH,EAAMpI,KAAKwG,EAAQ+B,iBANnBH,EAAMpI,KAAKwG,EAAQ+B,iBALnBH,EAAMpI,KAAKwG,IAyBvB,OAPA0B,EAASjI,SAAQ,SAACuG,EAASF,GACnBA,EAAQ,GACR+B,EAAYF,GAEhBE,EAAY7B,MAGT4B,EAGJ,SAASL,GAAcG,EAAwBM,GAClD,OAAO,kBAAC,IAAMC,SAAP,KACFR,GAAaC,EAAUM,GAAWtH,KAAI,SAACsF,EAASF,GAC7C,OAAO,kBAAC,IAAMmC,SAAP,CAAgBrF,IAAKkD,GAAQE,Q,SHhEpCK,K,YAAAA,E,6BAAAA,E,6BAAAA,E,mCAAAA,E,uCAAAA,E,qBAAAA,E,yBAAAA,E,qBAAAA,E,qBAAAA,E,eAAAA,E,mBAAAA,E,qBAAAA,E,yBAAAA,E,uBAAAA,E,uBAAAA,E,yBAAAA,E,6BAAAA,E,qBAAAA,E,qCAAAA,E,yCAAAA,E,6BAAAA,E,iCAAAA,E,+BAAAA,E,+BAAAA,E,sBAAAA,E,iCAAAA,E,wBAAAA,E,6BAAAA,E,iCAAAA,E,2BAAAA,E,+BAAAA,E,yBAAAA,E,qBAAAA,E,yBAAAA,E,yBAAAA,E,+BAAAA,E,+BAAAA,E,YAAAA,E,iBAAAA,E,qCAAAA,E,qCAAAA,E,uBAAAA,E,2BAAAA,E,+BAAAA,E,2BAAAA,E,6BAAAA,E,iCAAAA,E,iCAAAA,E,qBAAAA,E,yBAAAA,E,sBAAAA,E,0BAAAA,E,iCAAAA,E,iCAAAA,E,+BAAAA,E,iCAAAA,E,qCAAAA,E,qCAAAA,E,uCAAAA,E,8CAAAA,E,oDAAAA,E,+BAAAA,E,yCAAAA,E,6BAAAA,E,mBAAAA,E,uBAAAA,E,qBAAAA,E,qBAAAA,E,2CAAAA,E,uCAAAA,E,2CAAAA,E,8BAAAA,E,kCAAAA,E,+CAAAA,E,yCAAAA,E,qCAAAA,E,yCAAAA,E,iCAAAA,E,qCAAAA,E,+BAAAA,E,uBAAAA,E,yCAAAA,E,oCAAAA,E,wCAAAA,E,4CAAAA,E,gDAAAA,E,4CAAAA,E,gDAAAA,E,uBAAAA,E,iCAAAA,E,2CAAAA,E,+CAAAA,E,6CAAAA,E,sDAAAA,E,sDAAAA,E,gDAAAA,E,oDAAAA,E,qEAAAA,E,yEAAAA,E,2BAAAA,E,+BAAAA,E,0BAAAA,E,sBAAAA,E,0BAAAA,E,qDAAAA,E,yDAAAA,E,+BAAAA,E,sBAAAA,E,0BAAAA,E,8BAAAA,E,kCAAAA,E,mCAAAA,E,uCAAAA,E,gDAAAA,E,oDAAAA,E,sCAAAA,E,iCAAAA,E,2BAAAA,E,yCAAAA,E,4CAAAA,E,2CAAAA,E,oCAAAA,E,iCAAAA,E,uDAAAA,E,mDAAAA,E,kDAAAA,E,6BAAAA,E,iDAAAA,E,8BAAAA,E,kDAAAA,E,uCAAAA,E,2CAAAA,E,yCAAAA,E,4DAAAA,E,6BAAAA,E,0DAAAA,E,8DAAAA,E,0DAAAA,E,+DAAAA,M,cCEAC,K,YAAAA,E,qBAAAA,E,qBAAAA,E,gBAAAA,E,qBAAAA,E,qBAAAA,E,iBAAAA,E,iBAAAA,E,iBAAAA,E,6BAAAA,E,2BAAAA,E,6BAAAA,E,iBAAAA,E,6BAAAA,E,kCAAAA,E,0CAAAA,E,gCAAAA,E,wBAAAA,E,qDAAAA,E,6BAAAA,E,2BAAAA,E,6CAAAA,E,2CAAAA,E,uBAAAA,E,+BAAAA,E,0BAAAA,E,oCAAAA,E,4DAAAA,E,8BAAAA,E,2BAAAA,E,uBAAAA,E,qBAAAA,E,+BAAAA,E,qBAAAA,E,2BAAAA,E,oBAAAA,E,iCAAAA,E,mCAAAA,E,i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","file":"static/js/main.c708f2a5.chunk.js","sourcesContent":["export enum LanguageOption {\n    DEFAULT = 'Default',\n    ENGLISH = 'English',\n}\n\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\n\nconst images = [\n    './assets/figure_016.png',\n    './assets/figure_074.png',\n    './assets/figure_127.png',\n    './assets/figure_145.png',\n    './assets/figure_150.png',\n    './assets/figure_174.png',\n    './assets/figure_189.png',\n    './assets/figure_198.png',\n    './assets/figure_241.png',\n    './assets/figure_253.png',\n];\n\ninterface IProps {\n    error?: AxiosError;\n}\n\nclass ErrorStatus extends React.Component<IProps> {\n    render() {\n        let message: string;\n\n        if (this.props.error === undefined) {\n            message = 'Not Found';\n        } else if (this.props.error.response?.status === 500) {\n            message = 'Server Error';\n        } else if (this.props.error.response?.status === 404) {\n            message = 'Not Found';\n        } else {\n            message = 'Code: ' + this.props.error.response?.status;\n        }\n\n        if (\n            typeof this.props.error?.response?.data === \"object\"\n            && this.props.error.response.data.detail !== undefined\n        ) {\n            message = this.props.error.response.data.detail;\n        }\n\n        const random = Math.floor(Math.random() * images.length),\n            image = images[random];\n\n        return (\n            <div id={'error-status'}>\n                <img alt={'Error'} src={image} style={{\n                    display: \"block\",\n                    height: 300,\n                    margin: '0 auto',\n                }}/>\n\n                <p className={'text-center'} style={{margin: 50}}>\n                    <strong>ERROR: {message}</strong>\n                </p>\n            </div>\n        );\n    }\n\n}\n\nexport default ErrorStatus;\n","import {LanguageOption} from \"./Option\";\n\nconst languageKey = 'language';\n\nconst callbacks: Function[] = [];\n\nclass Manager {\n    static language(): LanguageOption {\n        const value = window.localStorage.getItem(languageKey),\n            language = Object.values(LanguageOption).find(v => v === value);\n\n        return language ?? LanguageOption.DEFAULT;\n    }\n\n    static setLanguage(value: string) {\n        const language = Object.values(LanguageOption).find(v => v === value);\n        if (language === undefined)\n            return;\n\n        window.localStorage.setItem(languageKey, language);\n        Manager.triggerCallbacks();\n    }\n\n    static onUpdate(callback: Function) {\n        callbacks.push(callback);\n    }\n\n    private static triggerCallbacks() {\n        callbacks.forEach(callback => {\n            callback.call(null);\n        });\n    }\n}\n\nexport default Manager;\n","enum Region {\n    JP = 'JP',\n    NA = 'NA'\n}\n\nexport default Region;\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport Manager from \"./Manager\";\nimport {LanguageOption} from \"./Option\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IState {\n    language: LanguageOption\n}\n\nclass SettingForm extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            language: Manager.language(),\n        }\n\n        Manager.onUpdate(() => this.syncSettings());\n    }\n\n    private syncSettings() {\n        this.setState({\n            language: Manager.language(),\n        });\n    }\n\n    updateLanguage(value: string) {\n        Manager.setLanguage(value);\n    }\n\n    render() {\n        return (\n            <div>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Language</Form.Label>\n                        <Form.Control as={'select'} value={this.state.language}\n                                      onChange={(ev: Event) => this.updateLanguage(ev.target.value)}>\n                            {Object.values(LanguageOption).map(v => (\n                                <option value={v}>{v}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default SettingForm;\n","import {faDiscord, faGithub} from \"@fortawesome/free-brands-svg-icons\";\nimport {faCog} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Button, Container, Modal, Nav, Navbar, NavItem} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport SettingForm from \"../Setting/SettingForm\";\n\ninterface IState {\n    showSettings: boolean;\n}\n\nclass Navigation extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            showSettings: false,\n        };\n    }\n\n    hideSettings() {\n        this.setState({showSettings: false});\n    }\n\n    showSettings() {\n        this.setState({showSettings: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar bg={\"dark\"} variant={'dark'} expand={\"lg\"}>\n                    <Container>\n                        <Link to=\"/\" className={'navbar-brand'}>AA-DB</Link>\n                        <Navbar.Toggle/>\n\n                        <Navbar.Collapse>\n                            <Nav>\n                                <Link to=\"/JP/servants\" className={'nav-link'}>\n                                    <NavItem>JP Servants</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav>\n                                <Link to=\"/NA/servants\" className={'nav-link'}>\n                                    <NavItem>NA Servants</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav>\n                                <Link to=\"/JP/craft-essences\" className={'nav-link'}>\n                                    <NavItem>JP CE</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav>\n                                <Link to=\"/NA/craft-essences\" className={'nav-link'}>\n                                    <NavItem>NA CE</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav className={'ml-auto'}>\n                                <Nav.Link href={'https://discord.gg/TKJmuCR'} target={'_blank'}>\n                                    <FontAwesomeIcon icon={faDiscord}/>\n                                </Nav.Link>\n                                <Nav.Link href={'https://github.com/atlasacademy/aa-db'} target={'_blank'}>\n                                    <FontAwesomeIcon icon={faGithub}/>\n                                </Nav.Link>\n                                <Button variant={\"primary\"} onClick={() => this.showSettings()}>\n                                    <FontAwesomeIcon icon={faCog}/>\n                                </Button>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Container>\n                </Navbar>\n\n                <Modal show={this.state.showSettings} onHide={() => this.hideSettings()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Settings</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <SettingForm/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n\n}\n\nexport default Navigation;\n","class ResultCache<K, V> {\n    private cache = new Map<K, V>();\n    private pending = new Map<K, Function[]>();\n    private pendingCatches = new Map<K, Function[]>();\n\n    get(key: K, fetcher: Function, duration: number | null): Promise<V> {\n        const value = this.cache.get(key);\n        if (value !== undefined) {\n            return new Promise<V>(resolve => {\n                resolve(value);\n            });\n        }\n\n        const callbacks = this.pending.get(key);\n        if (callbacks !== undefined) {\n            return new Promise<V>((resolve, reject) => {\n                callbacks.push(resolve);\n\n                const catches = this.pendingCatches.get(key) ?? [];\n                catches.push(reject);\n            });\n        }\n\n        this.pending.set(key, []);\n        this.pendingCatches.set(key, []);\n        return new Promise<V>((resolve, reject) => {\n            fetcher\n                .call(null)\n                .then((value: V) => {\n                    const callbacks = this.pending.get(key) ?? [];\n\n                    callbacks.forEach(callback => {\n                        callback.call(null, value);\n                    });\n\n                    this.cache.set(key, value);\n                    this.pending.delete(key);\n                    this.pendingCatches.delete(key);\n\n                    if (duration !== null) {\n                        window.setTimeout(() => {\n                            this.cache.delete(key);\n                        }, duration);\n                    }\n\n                    resolve(value);\n                })\n                .catch((error: any) => {\n                    const callbacks = this.pendingCatches.get(key) ?? [];\n\n                    callbacks.forEach(callback => {\n                        callback.call(null, error);\n                    });\n\n                    this.pending.delete(key);\n                    this.pendingCatches.delete(key);\n\n                    reject(error);\n                });\n        });\n    }\n}\n\nexport default ResultCache;\n","import axios from \"axios\";\nimport Manager from \"../Setting/Manager\";\nimport {LanguageOption} from \"../Setting/Option\";\nimport BasicListEntity from \"./Data/BasicListEntity\";\nimport Buff from \"./Data/Buff\";\nimport CraftEssence from \"./Data/CraftEssence\";\nimport Func from \"./Data/Func\";\nimport NoblePhantasm from \"./Data/NoblePhantasm\";\nimport Quest from \"./Data/Quest\";\nimport Region from \"./Data/Region\";\nimport Servant from \"./Data/Servant\";\nimport Skill from \"./Data/Skill\";\nimport TraitMap from \"./Data/TraitMap\";\nimport ResultCache from \"./ResultCache\";\n\nconst host = 'https://api.atlasacademy.io',\n    cacheDuration = 20 * 1000,\n    fetch = async function <T>(endpoint: string): Promise<T> {\n        const response = await axios.get<T>(endpoint);\n\n        return response.data;\n    },\n    cache = {\n        buff: new ResultCache<string, Buff>(),\n        craftEssence: new ResultCache<string, CraftEssence>(),\n        craftEssenceList: new ResultCache<Region, BasicListEntity[]>(),\n        func: new ResultCache<string, Func>(),\n        noblePhantasm: new ResultCache<string, NoblePhantasm>(),\n        quest: new ResultCache<string, Quest>(),\n        servant: new ResultCache<string, Servant>(),\n        servantList: new ResultCache<Region, BasicListEntity[]>(),\n        skill: new ResultCache<string, Skill>(),\n        traitMap: new ResultCache<Region, TraitMap>(),\n    };\n\nclass Connection {\n    static buff(region: Region, id: number): Promise<Buff> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.buff.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Buff>(`${host}/nice/${region}/buff/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static craftEssence(region: Region, id: number): Promise<CraftEssence> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.craftEssence.get(\n            key,\n            () => {\n                let query = '?lore=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Servant>(`${host}/nice/${region}/equip/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async craftEssenceList(region: Region): Promise<BasicListEntity[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableCraftEssenceList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableCraftEssenceList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableCraftEssenceList(Region.JP),\n            na = await Connection.getCacheableCraftEssenceList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<BasicListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static func(region: Region, id: number): Promise<Func> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.func.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Func>(`${host}/nice/${region}/function/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static noblePhantasm(region: Region, id: number): Promise<NoblePhantasm> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.noblePhantasm.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<NoblePhantasm>(`${host}/nice/${region}/NP/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static quest(region: Region, id: number, phase: number): Promise<Quest> {\n        const key = `${region}-${id}-${phase}`;\n\n        return cache.quest.get(\n            key,\n            () => {\n                return fetch<Quest>(`${host}/nice/${region}/quest/${id}/${phase}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static servant(region: Region, id: number): Promise<Servant> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.servant.get(\n            key,\n            () => {\n                let query = '?lore=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Servant>(`${host}/nice/${region}/servant/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async servantList(region: Region): Promise<BasicListEntity[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableServantList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableServantList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableServantList(Region.JP),\n            na = await Connection.getCacheableServantList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<BasicListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static skill(region: Region, id: number): Promise<Skill> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.skill.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Skill>(`${host}/nice/${region}/skill/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static traitMap(region: Region): Promise<TraitMap> {\n        return cache.traitMap.get(\n            region,\n            () => {\n                return fetch<TraitMap>(`${host}/export/${region}/nice_trait.json`);\n            },\n            null\n        );\n    }\n\n    private static async getCacheableCraftEssenceList(region: Region): Promise<BasicListEntity[]> {\n        return cache.craftEssenceList.get(\n            region,\n            () => {\n                return fetch<BasicListEntity[]>(`${host}/export/${region}/basic_equip.json`);\n            },\n            null\n        );\n    }\n\n    private static async getCacheableServantList(region: Region): Promise<BasicListEntity[]> {\n        return cache.servantList.get(\n            region,\n            () => {\n                return fetch<BasicListEntity[]>(`${host}/export/${region}/basic_servant.json`);\n            },\n            null\n        );\n    }\n}\n\nexport default Connection;\n","import React from \"react\";\n\ninterface IProp {\n    location: string;\n    height?: number;\n}\n\nclass BuffIcon extends React.Component<IProp> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location} style={{\n                height: this.props.height ?? 25,\n                verticalAlign: \"bottom\",\n            }}/>\n        );\n    }\n\n}\n\nexport default BuffIcon;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\n\nimport \"./DataTable.css\";\nimport {Renderable} from \"../Helper/OutputHelper\";\n\ninterface IProp {\n    header?: JSX.Element | string,\n    data: {\n        [key: string]: Renderable | object;\n    }\n}\n\nclass DataTable extends React.Component<IProp> {\n    private static dumpValue(value: Renderable | object): Renderable {\n        if (typeof value === \"object\") {\n            const element = value as JSX.Element;\n            if (element.key !== undefined && element.props !== undefined && element.type !== undefined) {\n                return element;\n            } else {\n                return JSON.stringify(value);\n            }\n        }\n\n        return value;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.header ? (\n                    <div className={'data-header'}>\n                        {this.props.header}\n                    </div>\n                ) : null}\n\n                <Table bordered hover className={'data-table'}>\n                    <tbody>\n                    {Object.keys(this.props.data).map((key, index) => {\n                        return (\n                            <tr key={index}>\n                                <th>{key}</th>\n                                <td>{DataTable.dumpValue(this.props.data[key])}</td>\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default DataTable;\n","import React from \"react\";\n\nimport \"./Loading.css\";\n\nfunction Loading() {\n    return (\n        <div id={'loading'}>\n            <img alt={''} className={'fou f1'} src={'./assets/load_icon_A01.png'} />\n            <img alt={''} className={'fou f2'} src={'./assets/load_icon_A02.png'} />\n            <img alt={''} className={'fou f3'} src={'./assets/load_icon_A03.png'} />\n            <img alt={''} className={'fou f4'} src={'./assets/load_icon_A04.png'} />\n        </div>\n    );\n}\n\nexport default Loading;\n","import Func from \"./Func\";\nimport Trait from \"./Trait\";\n\nexport enum BuffType {\n    NONE = \"none\",\n    UP_COMMANDATK = \"upCommandatk\",\n    UP_STARWEIGHT = \"upStarweight\",\n    UP_CRITICALPOINT = \"upCriticalpoint\",\n    DOWN_CRITICALPOINT = \"downCriticalpoint\",\n    REGAIN_NP = \"regainNp\",\n    REGAIN_STAR = \"regainStar\",\n    REGAIN_HP = \"regainHp\",\n    REDUCE_HP = \"reduceHp\",\n    UP_ATK = \"upAtk\",\n    DOWN_ATK = \"downAtk\",\n    UP_DAMAGE = \"upDamage\",\n    DOWN_DAMAGE = \"downDamage\",\n    ADD_DAMAGE = \"addDamage\",\n    SUB_DAMAGE = \"subDamage\",\n    UP_NPDAMAGE = \"upNpdamage\",\n    DOWN_NPDAMAGE = \"downNpdamage\",\n    UP_DROPNP = \"upDropnp\",\n    UP_CRITICALDAMAGE = \"upCriticaldamage\",\n    DOWN_CRITICALDAMAGE = \"downCriticaldamage\",\n    UP_SELFDAMAGE = \"upSelfdamage\",\n    DOWN_SELFDAMAGE = \"downSelfdamage\",\n    ADD_SELFDAMAGE = \"addSelfdamage\",\n    SUB_SELFDAMAGE = \"subSelfdamage\",\n    AVOIDANCE = \"avoidance\",\n    BREAK_AVOIDANCE = \"breakAvoidance\",\n    INVINCIBLE = \"invincible\",\n    UP_GRANTSTATE = \"upGrantstate\",\n    DOWN_GRANTSTATE = \"downGrantstate\",\n    UP_TOLERANCE = \"upTolerance\",\n    DOWN_TOLERANCE = \"downTolerance\",\n    AVOID_STATE = \"avoidState\",\n    DONOT_ACT = \"donotAct\",\n    DONOT_SKILL = \"donotSkill\",\n    DONOT_NOBLE = \"donotNoble\",\n    DONOT_RECOVERY = \"donotRecovery\",\n    DISABLE_GENDER = \"disableGender\",\n    GUTS = \"guts\",\n    UP_HATE = \"upHate\",\n    ADD_INDIVIDUALITY = \"addIndividuality\",\n    SUB_INDIVIDUALITY = \"subIndividuality\",\n    UP_DEFENCE = \"upDefence\",\n    DOWN_DEFENCE = \"downDefence\",\n    UP_COMMANDSTAR = \"upCommandstar\",\n    UP_COMMANDNP = \"upCommandnp\",\n    UP_COMMANDALL = \"upCommandall\",\n    DOWN_COMMANDALL = \"downCommandall\",\n    DOWN_STARWEIGHT = \"downStarweight\",\n    REDUCE_NP = \"reduceNp\",\n    DOWN_DROPNP = \"downDropnp\",\n    UP_GAIN_HP = \"upGainHp\",\n    DOWN_GAIN_HP = \"downGainHp\",\n    DOWN_COMMANDATK = \"downCommandatk\",\n    DOWN_COMMANSTAR = \"downCommanstar\",\n    DOWN_COMMANDNP = \"downCommandnp\",\n    UP_CRITICALRATE = \"upCriticalrate\",\n    DOWN_CRITICALRATE = \"downCriticalrate\",\n    PIERCE_INVINCIBLE = \"pierceInvincible\",\n    AVOID_INSTANTDEATH = \"avoidInstantdeath\",\n    UP_RESIST_INSTANTDEATH = \"upResistInstantdeath\",\n    UP_NONRESIST_INSTANTDEATH = \"upNonresistInstantdeath\",\n    DELAY_FUNCTION = \"delayFunction\",\n    REGAIN_NP_USED_NOBLE = \"regainNpUsedNoble\",\n    DEAD_FUNCTION = \"deadFunction\",\n    UP_MAXHP = \"upMaxhp\",\n    DOWN_MAXHP = \"downMaxhp\",\n    ADD_MAXHP = \"addMaxhp\",\n    SUB_MAXHP = \"subMaxhp\",\n    BATTLESTART_FUNCTION = \"battlestartFunction\",\n    WAVESTART_FUNCTION = \"wavestartFunction\",\n    SELFTURNEND_FUNCTION = \"selfturnendFunction\",\n    UP_GIVEGAIN_HP = \"upGivegainHp\",\n    DOWN_GIVEGAIN_HP = \"downGivegainHp\",\n    COMMANDATTACK_FUNCTION = \"commandattackFunction\",\n    DEADATTACK_FUNCTION = \"deadattackFunction\",\n    UP_SPECIALDEFENCE = \"upSpecialdefence\",\n    DOWN_SPECIALDEFENCE = \"downSpecialdefence\",\n    UP_DAMAGEDROPNP = \"upDamagedropnp\",\n    DOWN_DAMAGEDROPNP = \"downDamagedropnp\",\n    ENTRY_FUNCTION = \"entryFunction\",\n    UP_CHAGETD = \"upChagetd\",\n    REFLECTION_FUNCTION = \"reflectionFunction\",\n    UP_GRANT_SUBSTATE = \"upGrantSubstate\",\n    DOWN_GRANT_SUBSTATE = \"downGrantSubstate\",\n    UP_TOLERANCE_SUBSTATE = \"upToleranceSubstate\",\n    DOWN_TOLERANCE_SUBSTATE = \"downToleranceSubstate\",\n    UP_GRANT_INSTANTDEATH = \"upGrantInstantdeath\",\n    DOWN_GRANT_INSTANTDEATH = \"downGrantInstantdeath\",\n    GUTS_RATIO = \"gutsRatio\",\n    DAMAGE_FUNCTION = \"damageFunction\",\n    UP_DEFENCECOMMANDALL = \"upDefencecommandall\",\n    DOWN_DEFENCECOMMANDALL = \"downDefencecommandall\",\n    OVERWRITE_BATTLECLASS = \"overwriteBattleclass\",\n    OVERWRITE_CLASSRELATIO_ATK = \"overwriteClassrelatioAtk\",\n    OVERWRITE_CLASSRELATIO_DEF = \"overwriteClassrelatioDef\",\n    UP_DAMAGE_INDIVIDUALITY = \"upDamageIndividuality\",\n    DOWN_DAMAGE_INDIVIDUALITY = \"downDamageIndividuality\",\n    UP_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"upDamageIndividualityActiveonly\",\n    DOWN_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"downDamageIndividualityActiveonly\",\n    UP_NPTURNVAL = \"upNpturnval\",\n    DOWN_NPTURNVAL = \"downNpturnval\",\n    MULTIATTACK = \"multiattack\",\n    UP_GIVE_NP = \"upGiveNp\",\n    DOWN_GIVE_NP = \"downGiveNp\",\n    UP_RESISTANCE_DELAY_NPTURN = \"upResistanceDelayNpturn\",\n    DOWN_RESISTANCE_DELAY_NPTURN = \"downResistanceDelayNpturn\",\n    PIERCE_DEFENCE = \"pierceDefence\",\n    UP_GUTS_HP = \"upGutsHp\",\n    DOWN_GUTS_HP = \"downGutsHp\",\n    UP_FUNCGAIN_NP = \"upFuncgainNp\",\n    DOWN_FUNCGAIN_NP = \"downFuncgainNp\",\n    UP_FUNC_HP_REDUCE = \"upFuncHpReduce\",\n    DOWN_FUNC_HP_REDUCE = \"downFuncHpReduce\",\n    UP_DEFENCECOMMAN_DAMAGE = \"upDefencecommanDamage\",\n    DOWN_DEFENCECOMMAN_DAMAGE = \"downDefencecommanDamage\",\n    NPATTACK_PREV_BUFF = \"npattackPrevBuff\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    DONOT_GAINNP = \"donotGainnp\",\n    FIELD_INDIVIDUALITY = \"fieldIndividuality\",\n    DONOT_ACT_COMMANDTYPE = \"donotActCommandtype\",\n    UP_DAMAGE_EVENT_POINT = \"upDamageEventPoint\",\n    UP_DAMAGE_SPECIAL = \"upDamageSpecial\",\n    ATTACK_FUNCTION = \"attackFunction\",\n    COMMANDCODEATTACK_FUNCTION = \"commandcodeattackFunction\",\n    DONOT_NOBLE_COND_MISMATCH = \"donotNobleCondMismatch\",\n    DONOT_SELECT_COMMANDCARD = \"donotSelectCommandcard\",\n    DONOT_REPLACE = \"donotReplace\",\n    SHORTEN_USER_EQUIP_SKILL = \"shortenUserEquipSkill\",\n    TD_TYPE_CHANGE = \"tdTypeChange\",\n    OVERWRITE_CLASS_RELATION = \"overwriteClassRelation\",\n    TD_TYPE_CHANGE_ARTS = \"tdTypeChangeArts\",\n    TD_TYPE_CHANGE_BUSTER = \"tdTypeChangeBuster\",\n    TD_TYPE_CHANGE_QUICK = \"tdTypeChangeQuick\",\n    COMMANDATTACK_BEFORE_FUNCTION = \"commandattackBeforeFunction\",\n    GUTS_FUNCTION = \"gutsFunction\",\n    UP_CRITICAL_RATE_DAMAGE_TAKEN = \"upCriticalRateDamageTaken\",\n    DOWN_CRITICAL_RATE_DAMAGE_TAKEN = \"downCriticalRateDamageTaken\",\n    UP_CRITICAL_STAR_DAMAGE_TAKEN = \"upCriticalStarDamageTaken\",\n    DOWN_CRITICAL_STAR_DAMAGE_TAKEN = \"downCriticalStarDamageTaken\",\n}\n\nexport default interface Buff {\n    id: number;\n    name: string;\n    detail: string;\n    icon: string;\n    type: BuffType;\n    vals: Trait[];\n    tvals: Trait[];\n    ckSelfIndv: Trait[];\n    ckOpIndv: Trait[];\n    maxRate: number;\n    reverseFunctions: Func[];\n}\n","import Buff from \"./Buff\";\nimport NoblePhantasm from \"./NoblePhantasm\";\nimport Skill from \"./Skill\";\nimport Trait from \"./Trait\";\n\nexport enum FuncType {\n    NONE = \"none\",\n    ADD_STATE = \"addState\",\n    SUB_STATE = \"subState\",\n    DAMAGE = \"damage\",\n    DAMAGE_NP = \"damageNp\",\n    GAIN_STAR = \"gainStar\",\n    GAIN_HP = \"gainHp\",\n    GAIN_NP = \"gainNp\",\n    LOSS_NP = \"lossNp\",\n    SHORTEN_SKILL = \"shortenSkill\",\n    EXTEND_SKILL = \"extendSkill\",\n    RELEASE_STATE = \"releaseState\",\n    LOSS_HP = \"lossHp\",\n    INSTANT_DEATH = \"instantDeath\",\n    DAMAGE_NP_PIERCE = \"damageNpPierce\",\n    DAMAGE_NP_INDIVIDUAL = \"damageNpIndividual\",\n    ADD_STATE_SHORT = \"addStateShort\",\n    GAIN_HP_PER = \"gainHpPer\",\n    DAMAGE_NP_STATE_INDIVIDUAL = \"damageNpStateIndividual\",\n    HASTEN_NPTURN = \"hastenNpturn\",\n    DELAY_NPTURN = \"delayNpturn\",\n    DAMAGE_NP_HPRATIO_HIGH = \"damageNpHpratioHigh\",\n    DAMAGE_NP_HPRATIO_LOW = \"damageNpHpratioLow\",\n    CARD_RESET = \"cardReset\",\n    REPLACE_MEMBER = \"replaceMember\",\n    LOSS_HP_SAFE = \"lossHpSafe\",\n    DAMAGE_NP_COUNTER = \"damageNpCounter\",\n    DAMAGE_NP_STATE_INDIVIDUAL_FIX = \"damageNpStateIndividualFix\",\n    DAMAGE_NP_SAFE = \"damageNpSafe\",\n    CALL_SERVANT = \"callServant\",\n    PT_SHUFFLE = \"ptShuffle\",\n    LOSS_STAR = \"lossStar\",\n    CHANGE_SERVANT = \"changeServant\",\n    CHANGE_BG = \"changeBg\",\n    DAMAGE_VALUE = \"damageValue\",\n    WITHDRAW = \"withdraw\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    SHORTEN_BUFFTURN = \"shortenBuffturn\",\n    EXTEND_BUFFTURN = \"extendBuffturn\",\n    SHORTEN_BUFFCOUNT = \"shortenBuffcount\",\n    EXTEND_BUFFCOUNT = \"extendBuffcount\",\n    CHANGE_BGM = \"changeBgm\",\n    DISPLAY_BUFFSTRING = \"displayBuffstring\",\n    RESURRECTION = \"resurrection\",\n    GAIN_NP_BUFF_INDIVIDUAL_SUM = \"gainNpBuffIndividualSum\",\n    SET_SYSTEM_ALIVE_FLAG = \"setSystemAliveFlag\",\n    FORCE_INSTANT_DEATH = \"forceInstantDeath\",\n    DAMAGE_NP_RARE = \"damageNpRare\",\n    GAIN_NP_FROM_TARGETS = \"gainNpFromTargets\",\n    GAIN_HP_FROM_TARGETS = \"gainHpFromTargets\",\n    LOSS_HP_PER = \"lossHpPer\",\n    LOSS_HP_PER_SAFE = \"lossHpPerSafe\",\n    SHORTEN_USER_EQUIP_SKILL = \"shortenUserEquipSkill\",\n    QUICK_CHANGE_BG = \"quickChangeBg\",\n    SHIFT_SERVANT = \"shiftServant\",\n    DAMAGE_NP_AND_CHECK_INDIVIDUALITY = \"damageNpAndCheckIndividuality\",\n    ABSORB_NPTURN = \"absorbNpturn\",\n    OVERWRITE_DEAD_TYPE = \"overwriteDeadType\",\n    FORCE_ALL_BUFF_NOACT = \"forceAllBuffNoact\",\n    BREAK_GAUGE_UP = \"breakGaugeUp\",\n    BREAK_GAUGE_DOWN = \"breakGaugeDown\",\n    EXP_UP = \"expUp\",\n    QP_UP = \"qpUp\",\n    DROP_UP = \"dropUp\",\n    FRIEND_POINT_UP = \"friendPointUp\",\n    EVENT_DROP_UP = \"eventDropUp\",\n    EVENT_DROP_RATE_UP = \"eventDropRateUp\",\n    EVENT_POINT_UP = \"eventPointUp\",\n    EVENT_POINT_RATE_UP = \"eventPointRateUp\",\n    TRANSFORM_SERVANT = \"transformServant\",\n    QP_DROP_UP = \"qpDropUp\",\n    SERVANT_FRIENDSHIP_UP = \"servantFriendshipUp\",\n    USER_EQUIP_EXP_UP = \"userEquipExpUp\",\n    CLASS_DROP_UP = \"classDropUp\",\n    ENEMY_ENCOUNT_COPY_RATE_UP = \"enemyEncountCopyRateUp\",\n    ENEMY_ENCOUNT_RATE_UP = \"enemyEncountRateUp\",\n    ENEMY_PROB_DOWN = \"enemyProbDown\",\n    GET_REWARD_GIFT = \"getRewardGift\",\n    SEND_SUPPORT_FRIEND_POINT = \"sendSupportFriendPoint\",\n    MOVE_POSITION = \"movePosition\",\n    REVIVAL = \"revival\",\n    DAMAGE_NP_INDIVIDUAL_SUM = \"damageNpIndividualSum\",\n}\n\nexport enum FuncTargetType {\n    SELF = \"self\",\n    PT_ONE = \"ptOne\",\n    PT_ANOTHER = \"ptAnother\",\n    PT_ALL = \"ptAll\",\n    ENEMY = \"enemy\",\n    ENEMY_ANOTHER = \"enemyAnother\",\n    ENEMY_ALL = \"enemyAll\",\n    PT_FULL = \"ptFull\",\n    ENEMY_FULL = \"enemyFull\",\n    PT_OTHER = \"ptOther\",\n    PT_ONE_OTHER = \"ptOneOther\",\n    PT_RANDOM = \"ptRandom\",\n    ENEMY_OTHER = \"enemyOther\",\n    ENEMY_RANDOM = \"enemyRandom\",\n    PT_OTHER_FULL = \"ptOtherFull\",\n    ENEMY_OTHER_FULL = \"enemyOtherFull\",\n    PTSELECT_ONE_SUB = \"ptselectOneSub\",\n    PTSELECT_SUB = \"ptselectSub\",\n    PT_ONE_ANOTHER_RANDOM = \"ptOneAnotherRandom\",\n    PT_SELF_ANOTHER_RANDOM = \"ptSelfAnotherRandom\",\n    ENEMY_ONE_ANOTHER_RANDOM = \"enemyOneAnotherRandom\",\n    PT_SELF_ANOTHER_FIRST = \"ptSelfAnotherFirst\",\n    PT_SELF_BEFORE = \"ptSelfBefore\",\n    PT_SELF_AFTER = \"ptSelfAfter\",\n    PT_SELF_ANOTHER_LAST = \"ptSelfAnotherLast\",\n    COMMAND_TYPE_SELF_TREASURE_DEVICE = \"commandTypeSelfTreasureDevice\",\n}\n\nexport enum FuncTargetTeam {\n    PLAYER = \"player\",\n    ENEMY = \"enemy\",\n    PLAYER_AND_ENEMY = \"playerAndEnemy\",\n}\n\nexport enum DataValField {\n    RATE = \"Rate\",\n    TURN = \"Turn\",\n    COUNT = \"Count\",\n    VALUE = \"Value\",\n    VALUE2 = \"Value2\",\n    USE_RATE = \"UseRate\",\n    TARGET = \"Target\",\n    CORRECTION = \"Correction\",\n    PARAM_ADD = \"ParamAdd\",\n    PARAM_MAX = \"ParamMax\",\n    HIDE_MISS = \"HideMiss\",\n    ON_FIELD = \"OnField\",\n    HIDE_NO_EFFECT = \"HideNoEffect\",\n    UNAFFECTED = \"Unaffected\",\n    SHOW_STATE = \"ShowState\",\n    AURA_EFFECT_ID = \"AuraEffectId\",\n    ACT_SET = \"ActSet\",\n    ACT_SET_WEIGHT = \"ActSetWeight\",\n    SHOW_QUEST_NO_EFFECT = \"ShowQuestNoEffect\",\n    CHECK_DEAD = \"CheckDead\",\n    RATIO_HP_HIGH = \"RatioHPHigh\",\n    RATIO_HP_LOW = \"RatioHPLow\",\n    SET_PASSIVE_FRAME = \"SetPassiveFrame\",\n    PROC_PASSIVE = \"ProcPassive\",\n    PROC_ACTIVE = \"ProcActive\",\n    HIDE_PARAM = \"HideParam\",\n    SKILL_ID = \"SkillID\",\n    SKILL_LV = \"SkillLV\",\n    SHOW_CARD_ONLY = \"ShowCardOnly\",\n    EFFECT_SUMMON = \"EffectSummon\",\n    RATIO_HP_RANGE_HIGH = \"RatioHPRangeHigh\",\n    RATIO_HP_RANGE_LOW = \"RatioHPRangeLow\",\n    TARGET_LIST = \"TargetList\",\n    OPPONENT_ONLY = \"OpponentOnly\",\n    STATUS_EFFECT_ID = \"StatusEffectId\",\n    END_BATTLE = \"EndBattle\",\n    LOSE_BATTLE = \"LoseBattle\",\n    ADD_INDIVIDUALTY = \"AddIndividualty\",\n    ADD_LINKAGE_TARGET_INDIVIDUALTY = \"AddLinkageTargetIndividualty\",\n    SAME_BUFF_LIMIT_TARGET_INDIVIDUALITY = \"SameBuffLimitTargetIndividuality\",\n    SAME_BUFF_LIMIT_NUM = \"SameBuffLimitNum\",\n    CHECK_DUPLICATE = \"CheckDuplicate\",\n    ON_FIELD_COUNT = \"OnFieldCount\",\n    TARGET_RARITY_LIST = \"TargetRarityList\",\n    DEPEND_FUNC_ID = \"DependFuncId\",\n    INVALID_HIDE = \"InvalidHide\",\n    OUT_ENEMY_NPC_ID = \"OutEnemyNpcId\",\n    IN_ENEMY_NPC_ID = \"InEnemyNpcId\",\n    OUT_ENEMY_POSITION = \"OutEnemyPosition\",\n    IGNORE_INDIVIDUALITY = \"IgnoreIndividuality\",\n    STAR_HIGHER = \"StarHigher\",\n    CHANGE_TD_COMMAND_TYPE = \"ChangeTDCommandType\",\n    SHIFT_NPC_ID = \"ShiftNpcId\",\n    DISPLAY_LAST_FUNC_INVALID_TYPE = \"DisplayLastFuncInvalidType\",\n    AND_CHECK_INDIVIDUALITY_LIST = \"AndCheckIndividualityList\",\n    WIN_BATTLE_NOT_RELATED_SURVIVAL_STATUS = \"WinBattleNotRelatedSurvivalStatus\",\n    FORCE_SELF_INSTANT_DEATH = \"ForceSelfInstantDeath\",\n    CHANGE_MAX_BREAK_GAUGE = \"ChangeMaxBreakGauge\",\n    PARAM_ADD_MAX_VALUE = \"ParamAddMaxValue\",\n    PARAM_ADD_MAX_COUNT = \"ParamAddMaxCount\",\n    LOSS_HP_NO_CHANGE_DAMAGE = \"LossHpNoChangeDamage\",\n    INCLUDE_PASSIVE_INDIVIDUALITY = \"IncludePassiveIndividuality\",\n}\n\ntype BaseDataVal = { [key in DataValField]?: number | string; };\n\nexport type DataVal = (\n    BaseDataVal\n    & { DependFuncVals?: BaseDataVal; }\n    );\n\nexport default interface Func {\n    funcId: number;\n    funcType: FuncType;\n    funcTargetType: FuncTargetType;\n    funcTargetTeam: FuncTargetTeam;\n    funcPopupText: string;\n    funcPopupIcon?: string;\n    functvals: Trait[];\n    funcquestTvals: number[];\n    traitVals?: Trait[];\n    buffs: Buff[];\n    svals?: DataVal[];\n    svals2?: DataVal[];\n    svals3?: DataVal[];\n    svals4?: DataVal[];\n    svals5?: DataVal[];\n    reverseSkills: Skill[];\n    reverseTds: NoblePhantasm[];\n}\n","import {faSearchPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Modal} from \"react-bootstrap\";\nimport ReactJson from \"react-json-view\";\n\ninterface IProps {\n    data: object;\n}\n\ninterface IState {\n    showing: boolean;\n}\n\nclass RawDataViewer extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            showing: false\n        };\n    }\n\n    hide() {\n        this.setState({showing: false});\n    }\n\n    show() {\n        this.setState({showing: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <span className={'text-primary'}\n                      style={{cursor: \"pointer\"}}\n                      onClick={() => {\n                          this.show();\n                      }}>\n                    View Raw\n                    &nbsp;\n                    <FontAwesomeIcon icon={faSearchPlus}/>\n                </span>\n\n                <Modal size={\"lg\"} show={this.state.showing} onHide={() => this.hide()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Raw Data Viewer</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ReactJson src={this.props.data} collapsed={1}/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default RawDataViewer;\n","import React from \"react\";\n\nexport type Renderable = (\n    JSX.Element\n    | string\n    | number\n    | undefined\n    )\n\nexport function asPercent(value: number | string | undefined, pow: number): string {\n    if (typeof value === \"string\")\n        return asPercent(parseInt(value), pow);\n\n    const decimal = (value ?? 0) / Math.pow(10, pow);\n\n    return `${decimal}%`;\n}\n\nexport function handleNewLine(text?: string): Renderable {\n    if (!text)\n        return \"\";\n\n    return (\n        <span>\n            {mergeElements(text.split(\"\\n\"), <br/>)}\n        </span>\n    );\n}\n\nexport function joinElements(elements: Renderable[], separator: Renderable): Renderable[] {\n    const parts: Renderable[] = [],\n        pushElement = function (element: Renderable) {\n            if (element === undefined)\n                return;\n\n            if (typeof element === 'object') {\n                parts.push(element);\n                return;\n            }\n\n            if (parts.length === 0) {\n                parts.push(element.toString());\n                return;\n            }\n\n            const previous = parts[parts.length - 1];\n            if (typeof previous !== 'string') {\n                parts.push(element.toString());\n                return;\n            }\n\n            parts[parts.length - 1] = previous + element.toString();\n        };\n\n    elements.forEach((element, index) => {\n        if (index > 0)\n            pushElement(separator);\n\n        pushElement(element);\n    });\n\n    return parts;\n}\n\nexport function mergeElements(elements: Renderable[], seperator: Renderable): Renderable {\n    return <React.Fragment>\n        {joinElements(elements, seperator).map((element, index) => {\n            return <React.Fragment key={index}>{element}</React.Fragment>;\n        })}\n    </React.Fragment>\n}\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Region from \"../Api/Data/Region\";\nimport Trait from \"../Api/Data/Trait\";\n\nconst traitDescriptions = new Map<number, string>([\n    [1, \"Gender:Male\"],\n    [2, \"Gender:Female\"],\n    [3, \"Gender:Unknown\"],\n    [100, \"Class:Saber\"],\n    [101, \"Class:Lancer\"],\n    [102, \"Class:Archer\"],\n    [103, \"Class:Rider\"],\n    [104, \"Class:Caster\"],\n    [105, \"Class:Assassin\"],\n    [106, \"Class:Berserker\"],\n    [107, \"Class:Shielder\"],\n    [108, \"Class:Ruler\"],\n    [109, \"Class:Alter Ego\"],\n    [110, \"Class:Avenger\"],\n    [111, \"Demon Pillar\"],\n    [112, \"Class:Grand Caster\"],\n    [113, \"Beast I\"],\n    [114, \"Beast II\"],\n    [115, \"Class:Moon Cancer\"],\n    [116, \"Beast IIIR\"],\n    [117, \"Class:Foreigner\"],\n    [118, \"Beast IIIL\"],\n    [119, \"Beast Unknown\"],\n    [200, \"Attribute:Sky\"],\n    [201, \"Attribute:Eart\"],\n    [202, \"Attribute:Human\"],\n    [203, \"Attribute:Star\"],\n    [204, \"Attribute:Beast\"],\n    [300, \"Alignment:Lawful\"],\n    [301, \"Alignment:Chaotic\"],\n    [302, \"Alignment:Neutral\"],\n    [303, \"Alignment:Good\"],\n    [304, \"Alignment:Evil\"],\n    [305, \"Alignment:Balanced\"],\n    [306, \"Alignment:Madness\"],\n    [308, \"Alignment:Summer\"],\n    [1000, \"Servant\"],\n    [1002, \"Undead\"],\n    [1122, \"Shadow Servant\"],\n    [2004, \"Roman\"],\n    [2005, \"Beasts\"],\n    [2019, \"Demonic\"],\n    [2039, \"Near Water\"],\n    [2654, \"Pseudo-Servant\"],\n    [3004, \"Buff\"],\n    [3005, \"Debuff\"],\n    [3006, \"Buff:Offensive\"],\n    [3007, \"Buff:Defensive\"],\n    [3011, \"Poison\"],\n    [3012, \"Charm\"],\n    [3015, \"Burn\"],\n    [3021, \"Evade\"],\n    [3026, \"Curse\"],\n    [3047, \"Pigify\"],\n    [4001, \"Card:Arts\"],\n    [4002, \"Card:Buster\"],\n    [4003, \"Card:Quick\"],\n    [4004, \"Card:Extra\"],\n    [4008, \"Player Card\"],\n    [4100, \"Critical Hit\"],\n]);\n\ninterface IProps {\n    region: Region;\n    trait: Trait | number;\n}\n\ninterface IState {\n    id: number;\n    trait?: Trait;\n}\n\nclass TraitDescriptor extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            id: typeof props.trait === \"number\" ? props.trait : props.trait.id,\n            trait: typeof props.trait === \"number\" ? undefined : props.trait,\n        };\n    }\n\n    async componentDidMount() {\n        if (this.state.trait)\n            return;\n\n        const traitMap = await Connection.traitMap(this.props.region);\n        if (traitMap[this.state.id] !== undefined)\n            this.setState({\n                trait: {\n                    id: this.state.id,\n                    name: traitMap[this.state.id]\n                }\n            });\n    }\n\n    private getDescription() : string {\n        let description;\n\n        description = traitDescriptions.get(this.state.id);\n        if (description) {\n            return description;\n        }\n\n        if (this.state.trait && this.state.trait.name !== 'unknown')\n            return this.state.trait.name;\n\n        return `unknown(${this.state.id})`;\n    }\n\n    render() {\n        return (\n            <span>\n                [{this.getDescription()}]\n            </span>\n        );\n    }\n}\n\nexport default TraitDescriptor;\n","import React from \"react\";\nimport Buff, {BuffType} from \"../Api/Data/Buff\";\nimport {DataVal} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {asPercent} from \"../Helper/OutputHelper\";\nimport TraitDescriptor from \"./TraitDescriptor\";\n\ninterface IProps {\n    region: Region;\n    buff: Buff;\n    dataVal: DataVal;\n}\n\nclass BuffValueDescriptor extends React.Component<IProps> {\n    render() {\n        let value: JSX.Element | string | null = null;\n\n        switch (this.props.buff.type) {\n            case BuffType.UP_ATK:\n            case BuffType.DOWN_ATK:\n            case BuffType.UP_COMMANDALL:\n            case BuffType.DOWN_COMMANDALL:\n            case BuffType.UP_CRITICALDAMAGE:\n            case BuffType.DOWN_CRITICALDAMAGE:\n            case BuffType.UP_CRITICALPOINT:\n            case BuffType.DOWN_CRITICALPOINT:\n            case BuffType.UP_CRITICALRATE:\n            case BuffType.DOWN_CRITICALRATE:\n            case BuffType.UP_CRITICAL_RATE_DAMAGE_TAKEN:\n            case BuffType.DOWN_CRITICAL_RATE_DAMAGE_TAKEN:\n            case BuffType.UP_DAMAGE:\n            case BuffType.DOWN_DAMAGE:\n            case BuffType.UP_DAMAGEDROPNP:\n            case BuffType.DOWN_DAMAGEDROPNP:\n            case BuffType.UP_DEFENCE:\n            case BuffType.DOWN_DEFENCE:\n            case BuffType.UP_DEFENCECOMMANDALL:\n            case BuffType.DOWN_DEFENCECOMMANDALL:\n            case BuffType.UP_DROPNP:\n            case BuffType.DOWN_DROPNP:\n            case BuffType.UP_FUNC_HP_REDUCE:\n            case BuffType.DOWN_FUNC_HP_REDUCE:\n            case BuffType.UP_HATE:\n            case BuffType.UP_NONRESIST_INSTANTDEATH:\n            case BuffType.UP_NPDAMAGE:\n            case BuffType.DOWN_NPDAMAGE:\n            case BuffType.UP_STARWEIGHT:\n            case BuffType.DOWN_STARWEIGHT:\n            case BuffType.UP_TOLERANCE:\n            case BuffType.DOWN_TOLERANCE:\n            case BuffType.UP_TOLERANCE_SUBSTATE:\n            case BuffType.DOWN_TOLERANCE_SUBSTATE:\n                value = asPercent(this.props.dataVal.Value, 1);\n                break;\n            case BuffType.REGAIN_NP:\n                value = asPercent(this.props.dataVal.Value, 2);\n                break;\n            case BuffType.ATTACK_FUNCTION:\n            case BuffType.COMMANDATTACK_FUNCTION:\n            case BuffType.COMMANDATTACK_BEFORE_FUNCTION:\n            case BuffType.DAMAGE_FUNCTION:\n            case BuffType.DELAY_FUNCTION:\n            case BuffType.SELFTURNEND_FUNCTION:\n                if (this.props.dataVal.Value2)\n                    value = 'Lv. ' + this.props.dataVal.Value2;\n                break;\n            case BuffType.NPATTACK_PREV_BUFF:\n                if (this.props.dataVal.SkillLV)\n                    value = 'Lv. ' + this.props.dataVal.SkillLV;\n                break;\n            case BuffType.FIELD_INDIVIDUALITY:\n                if (typeof this.props.dataVal.Value === \"number\")\n                    value = <TraitDescriptor region={this.props.region} trait={this.props.dataVal.Value}/>;\n                break;\n            default:\n                value = this.props.dataVal.Value?.toString() ?? \"\";\n        }\n\n        return value;\n    }\n}\n\nexport default BuffValueDescriptor;\n","import React from \"react\";\nimport {BuffType} from \"../Api/Data/Buff\";\nimport Func, {DataVal, FuncType} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {asPercent, mergeElements, Renderable} from \"../Helper/OutputHelper\";\nimport BuffValueDescriptor from \"./BuffValueDescriptor\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n    dataVal: DataVal;\n}\n\nclass FuncValueDescriptor extends React.Component<IProps> {\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            dataVal = this.props.dataVal,\n            parts: Renderable[] = [];\n\n        if (\n            (func.funcType === FuncType.ADD_STATE || func.funcType === FuncType.ADD_STATE_SHORT)\n            && func.buffs[0]\n            && (\n                dataVal.Value\n                || (func.buffs[0].type === BuffType.DAMAGE_FUNCTION && dataVal.Value2)\n                || (func.buffs[0].type === BuffType.DELAY_FUNCTION && dataVal.Value2)\n                || (func.buffs[0].type === BuffType.NPATTACK_PREV_BUFF && dataVal.SkillID)\n                || (func.buffs[0].type === BuffType.SELFTURNEND_FUNCTION && dataVal.Value2)\n            )\n        ) {\n            return <BuffValueDescriptor region={region} buff={func.buffs[0]} dataVal={dataVal}/>;\n        }\n\n        if (dataVal.Rate !== undefined) {\n            parts.push(asPercent(dataVal.Rate, 1));\n        }\n\n        if (dataVal.Value !== undefined) {\n            switch (func.funcType) {\n                case FuncType.DAMAGE_NP:\n                case FuncType.DAMAGE_NP_INDIVIDUAL:\n                case FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                case FuncType.DAMAGE_NP_PIERCE:\n                case FuncType.DAMAGE_NP_RARE:\n                case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                    parts.push(asPercent(dataVal.Value, 1));\n                    break;\n                case FuncType.GAIN_NP:\n                case FuncType.LOSS_NP:\n                    parts.push(asPercent(dataVal.Value, 2));\n                    break;\n                default:\n                    parts.push(dataVal.Value.toString());\n            }\n        }\n\n        if (dataVal.Value2 !== undefined) {\n            switch (func.funcType) {\n                case FuncType.GAIN_NP_FROM_TARGETS:\n                    parts.push(asPercent(dataVal.Value2, 2));\n                    break;\n                case FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                    parts.push(\"additional \" + asPercent(dataVal.Value2, 1));\n            }\n        }\n\n        if (dataVal.Correction !== undefined) {\n            switch (func.funcType) {\n                case FuncType.DAMAGE_NP_INDIVIDUAL:\n                case FuncType.DAMAGE_NP_RARE:\n                case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                    parts.push(asPercent(dataVal.Correction, 1));\n                    break;\n                case FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                    parts.push(\"(\" + asPercent(dataVal.Correction, 1) + \" x count)\");\n                    break;\n                default:\n                    parts.push(dataVal.Correction.toString());\n            }\n        }\n\n        if (dataVal.DependFuncId !== undefined && dataVal.DependFuncVals !== undefined) {\n            switch (func.funcType) {\n                case FuncType.GAIN_NP_FROM_TARGETS:\n                    let chargeAmount;\n\n                    switch (dataVal.DependFuncId) {\n                        case 474:\n                            chargeAmount = dataVal.DependFuncVals.Value2;\n                            break;\n                        case 3962:\n                            chargeAmount = dataVal.DependFuncVals.Value;\n                            break;\n                    }\n\n                    if (chargeAmount !== undefined) {\n                        parts.push(asPercent(chargeAmount, 2));\n                    }\n                    break;\n            }\n        }\n\n        if (!parts.length)\n            return <span>-</span>;\n\n        return <span>{mergeElements(parts, ' + ')}</span>;\n    }\n}\n\nexport default FuncValueDescriptor;\n","import React from \"react\";\nimport {BuffType} from \"../Api/Data/Buff\";\nimport Func, {DataVal, DataValField, FuncType} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport FuncValueDescriptor from \"../Descriptor/FuncValueDescriptor\";\nimport {Renderable} from \"./OutputHelper\";\n\nconst hasChangingDataVals = function (vals: DataVal[]): boolean {\n    if (!vals.length)\n        return false;\n\n    let previous = vals[0];\n    for (let i = 1; i < vals.length; i++) {\n        if (JSON.stringify(previous) !== JSON.stringify(vals[i]))\n            return true;\n\n        previous = vals[i];\n    }\n\n    return false;\n};\n\nconst hasUniqueValues = function (values: (number | string | undefined)[]): boolean {\n    return new Set(values).size > 1;\n};\n\nexport function describeMutators(region: Region, func: Func): Renderable[] {\n    const dataVals = getDataValList(func),\n        mutatingVals = getMutatingFieldValues(dataVals);\n\n    return mutatingVals\n        .map(mutatingVal => <FuncValueDescriptor region={region} func={func} dataVal={mutatingVal}/>);\n}\n\nexport function funcUpdatesByLevel(func: Func): boolean {\n    return hasChangingDataVals(getLevelDataValList(func));\n}\n\nexport function funcUpdatesByOvercharge(func: Func): boolean {\n    return hasChangingDataVals(getOverchargeDataValList(func));\n}\n\nexport function getDataValList(func: Func): DataVal[] {\n    const isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func);\n\n    return isLevel && isOvercharge\n        ? getMixedDataValList(func)\n        : (isOvercharge ? getOverchargeDataValList(func) : getLevelDataValList(func));\n}\n\nexport function getLevelDataValList(func: Func): DataVal[] {\n    return func.svals ?? [];\n}\n\nexport function getMixedDataValList(func: Func): DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, i, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getMutatingFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return hasUniqueValues(values);\n    });\n}\n\nexport function getMutatingFieldValues(vals: DataVal[]): DataVal[] {\n    if (!vals.length)\n        return [];\n\n    const fields = getMutatingFieldNames(vals),\n        hasDependingVals = vals.filter(val => val.DependFuncVals !== undefined).length > 0,\n        dependingVals: (DataVal[] | undefined) = (\n            hasDependingVals\n                ? vals.map(val => (val.DependFuncVals ?? {}) as DataVal)\n                : undefined\n        ),\n        dependingMutatingValues = dependingVals ? getMutatingFieldValues(dependingVals) : [],\n        staticValues = getStaticFieldValues(vals);\n\n    return vals.map((val, index) => {\n        const mutatingVals: DataVal = {};\n\n        for (let x in fields) {\n            mutatingVals[fields[x]] = val[fields[x]];\n        }\n\n        if (staticValues.DependFuncId && dependingMutatingValues[index]) {\n            mutatingVals.DependFuncId = staticValues.DependFuncId;\n            mutatingVals.DependFuncVals = dependingMutatingValues[index];\n        }\n\n        return mutatingVals;\n    });\n}\n\nexport function getOverchargeDataValList(func: Func): DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, 1, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getRelatedSkillIds(func: Func): number[] {\n    if (func.funcType !== FuncType.ADD_STATE && func.funcType !== FuncType.ADD_STATE_SHORT)\n        return [];\n\n    const buff = func.buffs[0];\n    if (\n        buff.type === BuffType.ATTACK_FUNCTION\n        || buff.type === BuffType.COMMANDATTACK_FUNCTION\n        || buff.type === BuffType.COMMANDATTACK_BEFORE_FUNCTION\n        || buff.type === BuffType.DAMAGE_FUNCTION\n        || buff.type === BuffType.DELAY_FUNCTION\n        || buff.type === BuffType.SELFTURNEND_FUNCTION\n    ) {\n        const dataVals = getDataValList(func),\n            dataVal = dataVals[0];\n\n        return typeof dataVal.Value === \"number\" ? [dataVal.Value] : [];\n    }\n\n    if (buff.type === BuffType.NPATTACK_PREV_BUFF) {\n        const dataVals = getDataValList(func),\n            dataVal = dataVals[0];\n\n        return typeof dataVal.SkillID === \"number\" ? [dataVal.SkillID] : [];\n    }\n\n    return [];\n}\n\nexport function getStaticFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return !hasUniqueValues(values);\n    });\n}\n\nexport function getStaticFieldValues(vals: DataVal[]): DataVal {\n    if (!vals.length)\n        return {};\n\n    const fields = getStaticFieldNames(vals),\n        staticVals: DataVal = {},\n        hasDependingVals = vals.filter(val => val.DependFuncVals !== undefined).length > 0,\n        dependingVals: (DataVal[] | undefined) = (\n            hasDependingVals\n                ? vals.map(val => (val.DependFuncVals ?? {}) as DataVal)\n                : undefined\n        ),\n        dependingStaticValues = dependingVals ? getStaticFieldValues(dependingVals) : undefined;\n\n    for (let x in fields) {\n        staticVals[fields[x]] = vals[0][fields[x]];\n    }\n\n    if (hasDependingVals)\n        staticVals.DependFuncVals = dependingStaticValues;\n\n    return staticVals;\n}\n\nexport function getTargetVersionValues(func: Func, level: number, overcharge: number = 1): DataVal | undefined {\n    if (func.svals === undefined)\n        return undefined;\n\n    let dataVals;\n\n    if (overcharge === 2 && func.svals2)\n        dataVals = func.svals2;\n    else if (overcharge === 3 && func.svals3)\n        dataVals = func.svals3;\n    else if (overcharge === 4 && func.svals4)\n        dataVals = func.svals4;\n    else if (overcharge === 5 && func.svals5)\n        dataVals = func.svals5;\n    else\n        dataVals = func.svals;\n\n    return dataVals[level - 1];\n}\n","import {Renderable} from \"../../Helper/OutputHelper\";\n\nexport class FuncDescriptorSection {\n    public showing: boolean = true;\n    public parts: Renderable[] = [];\n    public preposition?: string;\n\n    constructor(preposition?: string) {\n        this.preposition = preposition;\n    }\n}\n\nexport class FuncDescriptorSections {\n    public team = new FuncDescriptorSection();\n    public chance = new FuncDescriptorSection();\n    public action = new FuncDescriptorSection();\n    public amount = new FuncDescriptorSection('of');\n    public affects = new FuncDescriptorSection();\n    public target = new FuncDescriptorSection('to');\n    public duration = new FuncDescriptorSection();\n    public scaling = new FuncDescriptorSection();\n}\n","export interface ProfileStats {\n    strength: string;\n    endurance: string;\n    agility: string;\n    magic: string;\n    luck: string;\n    np: string;\n}\n\nexport enum CommentConditionType {\n    NONE = \"none\",\n    QUEST_CLEAR = \"questClear\",\n    ITEM_GET = \"itemGet\",\n    USE_ITEM_ETERNITY = \"useItemEternity\",\n    USE_ITEM_TIME = \"useItemTime\",\n    USE_ITEM_COUNT = \"useItemCount\",\n    SVT_LEVEL = \"svtLevel\",\n    SVT_LIMIT = \"svtLimit\",\n    SVT_GET = \"svtGet\",\n    SVT_FRIENDSHIP = \"svtFriendship\",\n    SVT_GROUP = \"svtGroup\",\n    EVENT = \"event\",\n    DATE = \"date\",\n    WEEKDAY = \"weekday\",\n    PURCHASE_QP_SHOP = \"purchaseQpShop\",\n    PURCHASE_STONE_SHOP = \"purchaseStoneShop\",\n    WAR_CLEAR = \"warClear\",\n    FLAG = \"flag\",\n    SVT_COUNT_STOP = \"svtCountStop\",\n    BIRTH_DAY = \"birthDay\",\n    EVENT_END = \"eventEnd\",\n    SVT_EVENT_JOIN = \"svtEventJoin\",\n    MISSION_CONDITION_DETAIL = \"missionConditionDetail\",\n    EVENT_MISSION_CLEAR = \"eventMissionClear\",\n    EVENT_MISSION_ACHIEVE = \"eventMissionAchieve\",\n    QUEST_CLEAR_NUM = \"questClearNum\",\n    NOT_QUEST_GROUP_CLEAR = \"notQuestGroupClear\",\n    RAID_ALIVE = \"raidAlive\",\n    RAID_DEAD = \"raidDead\",\n    RAID_DAMAGE = \"raidDamage\",\n    QUEST_CHALLENGE_NUM = \"questChallengeNum\",\n    MASTER_MISSION = \"masterMission\",\n    QUEST_GROUP_CLEAR = \"questGroupClear\",\n    SUPER_BOSS_DAMAGE = \"superBossDamage\",\n    SUPER_BOSS_DAMAGE_ALL = \"superBossDamageAll\",\n    PURCHASE_SHOP = \"purchaseShop\",\n    QUEST_NOT_CLEAR = \"questNotClear\",\n    NOT_SHOP_PURCHASE = \"notShopPurchase\",\n    NOT_SVT_GET = \"notSvtGet\",\n    NOT_EVENT_SHOP_PURCHASE = \"notEventShopPurchase\",\n    SVT_HAVING = \"svtHaving\",\n    NOT_SVT_HAVING = \"notSvtHaving\",\n    QUEST_CHALLENGE_NUM_EQUAL = \"questChallengeNumEqual\",\n    QUEST_CHALLENGE_NUM_BELOW = \"questChallengeNumBelow\",\n    QUEST_CLEAR_NUM_EQUAL = \"questClearNumEqual\",\n    QUEST_CLEAR_NUM_BELOW = \"questClearNumBelow\",\n    QUEST_CLEAR_PHASE = \"questClearPhase\",\n    NOT_QUEST_CLEAR_PHASE = \"notQuestClearPhase\",\n    EVENT_POINT_GROUP_WIN = \"eventPointGroupWin\",\n    EVENT_NORMA_POINT_CLEAR = \"eventNormaPointClear\",\n    QUEST_AVAILABLE = \"questAvailable\",\n    QUEST_GROUP_AVAILABLE_NUM = \"questGroupAvailableNum\",\n    EVENT_NORMA_POINT_NOT_CLEAR = \"eventNormaPointNotClear\",\n    NOT_ITEM_GET = \"notItemGet\",\n    COSTUME_GET = \"costumeGet\",\n    QUEST_RESET_AVAILABLE = \"questResetAvailable\",\n    SVT_GET_BEFORE_EVENT_END = \"svtGetBeforeEventEnd\",\n    QUEST_CLEAR_RAW = \"questClearRaw\",\n    QUEST_GROUP_CLEAR_RAW = \"questGroupClearRaw\",\n    EVENT_GROUP_POINT_RATIO_IN_TERM = \"eventGroupPointRatioInTerm\",\n    EVENT_GROUP_RANK_IN_TERM = \"eventGroupRankInTerm\",\n    NOT_EVENT_RACE_QUEST_OR_NOT_ALL_GROUP_GOAL = \"notEventRaceQuestOrNotAllGroupGoal\",\n    EVENT_GROUP_TOTAL_WIN_EACH_PLAYER = \"eventGroupTotalWinEachPlayer\",\n    EVENT_SCRIPT_PLAY = \"eventScriptPlay\",\n    SVT_COSTUME_RELEASED = \"svtCostumeReleased\",\n    QUEST_NOT_CLEAR_AND = \"questNotClearAnd\",\n    SVT_RECOVERD = \"svtRecoverd\",\n    SHOP_RELEASED = \"shopReleased\",\n    EVENT_POINT = \"eventPoint\",\n    EVENT_REWARD_DISP_COUNT = \"eventRewardDispCount\",\n    EQUIP_WITH_TARGET_COSTUME = \"equipWithTargetCostume\",\n    RAID_GROUP_DEAD = \"raidGroupDead\",\n    NOT_SVT_GROUP = \"notSvtGroup\",\n    NOT_QUEST_RESET_AVAILABLE = \"notQuestResetAvailable\",\n    NOT_QUEST_CLEAR_RAW = \"notQuestClearRaw\",\n    NOT_QUEST_GROUP_CLEAR_RAW = \"notQuestGroupClearRaw\",\n    NOT_EVENT_MISSION_CLEAR = \"notEventMissionClear\",\n    NOT_EVENT_MISSION_ACHIEVE = \"notEventMissionAchieve\",\n    NOT_COSTUME_GET = \"notCostumeGet\",\n    NOT_SVT_COSTUME_RELEASED = \"notSvtCostumeReleased\",\n    NOT_EVENT_RACE_QUEST_OR_NOT_TARGET_RANK_GOAL = \"notEventRaceQuestOrNotTargetRankGoal\",\n    PLAYER_GENDER_TYPE = \"playerGenderType\",\n    SHOP_GROUP_LIMIT_NUM = \"shopGroupLimitNum\",\n    EVENT_GROUP_POINT = \"eventGroupPoint\",\n    EVENT_GROUP_POINT_BELOW = \"eventGroupPointBelow\",\n    EVENT_TOTAL_POINT = \"eventTotalPoint\",\n    EVENT_TOTAL_POINT_BELOW = \"eventTotalPointBelow\",\n    EVENT_VALUE = \"eventValue\",\n    EVENT_VALUE_BELOW = \"eventValueBelow\",\n    EVENT_FLAG = \"eventFlag\",\n    EVENT_STATUS = \"eventStatus\",\n    NOT_EVENT_STATUS = \"notEventStatus\",\n    FORCE_FALSE = \"forceFalse\",\n    SVT_HAVING_LIMIT_MAX = \"svtHavingLimitMax\",\n    EVENT_POINT_BELOW = \"eventPointBelow\",\n    SVT_EQUIP_FRIENDSHIP_HAVING = \"svtEquipFriendshipHaving\",\n    MOVIE_NOT_DOWNLOAD = \"movieNotDownload\",\n    MULTIPLE_DATE = \"multipleDate\",\n    SVT_FRIENDSHIP_ABOVE = \"svtFriendshipAbove\",\n    SVT_FRIENDSHIP_BELOW = \"svtFriendshipBelow\",\n    MOVIE_DOWNLOADED = \"movieDownloaded\",\n    ROUTE_SELECT = \"routeSelect\",\n    NOT_ROUTE_SELECT = \"notRouteSelect\",\n    LIMIT_COUNT = \"limitCount\",\n    LIMIT_COUNT_ABOVE = \"limitCountAbove\",\n    LIMIT_COUNT_BELOW = \"limitCountBelow\",\n    BAD_END_PLAY = \"badEndPlay\",\n    COMMAND_CODE_GET = \"commandCodeGet\",\n    NOT_COMMAND_CODE_GET = \"notCommandCodeGet\",\n    ALL_USERS_BOX_GACHA_COUNT = \"allUsersBoxGachaCount\",\n    TOTAL_TD_LEVEL = \"totalTdLevel\",\n    TOTAL_TD_LEVEL_ABOVE = \"totalTdLevelAbove\",\n    TOTAL_TD_LEVEL_BELOW = \"totalTdLevelBelow\",\n    COMMON_RELEASE = \"commonRelease\",\n    BATTLE_RESULT_WIN = \"battleResultWin\",\n    BATTLE_RESULT_LOSE = \"battleResultLose\",\n    EVENT_VALUE_EQUAL = \"eventValueEqual\",\n    BOARD_GAME_TOKEN_HAVING = \"boardGameTokenHaving\",\n    BOARD_GAME_TOKEN_GROUP_HAVING = \"boardGameTokenGroupHaving\",\n    EVENT_FLAG_ON = \"eventFlagOn\",\n    EVENT_FLAG_OFF = \"eventFlagOff\",\n    QUEST_STATUS_FLAG_ON = \"questStatusFlagOn\",\n    QUEST_STATUS_FLAG_OFF = \"questStatusFlagOff\",\n    EVENT_VALUE_NOT_EQUAL = \"eventValueNotEqual\",\n    LIMIT_COUNT_MAX_EQUAL = \"limitCountMaxEqual\",\n    LIMIT_COUNT_MAX_ABOVE = \"limitCountMaxAbove\",\n    LIMIT_COUNT_MAX_BELOW = \"limitCountMaxBelow\",\n    BOARD_GAME_TOKEN_GET_NUM = \"boardGameTokenGetNum\",\n    BATTLE_LINE_WIN_ABOVE = \"battleLineWinAbove\",\n    BATTLE_LINE_LOSE_ABOVE = \"battleLineLoseAbove\",\n    BATTLE_LINE_CONTINUE_WIN = \"battleLineContinueWin\",\n    BATTLE_LINE_CONTINUE_LOSE = \"battleLineContinueLose\",\n    BATTLE_LINE_CONTINUE_WIN_BELOW = \"battleLineContinueWinBelow\",\n    BATTLE_LINE_CONTINUE_LOSE_BELOW = \"battleLineContinueLoseBelow\",\n    BATTLE_GROUP_WIN_AVOVE = \"battleGroupWinAvove\",\n    BATTLE_GROUP_LOSE_AVOVE = \"battleGroupLoseAvove\",\n}\n\nexport interface ProfileComment {\n    id: number;\n    priority: number;\n    condMessage: string;\n    comment: string;\n    condType: CommentConditionType;\n    condValues: number[];\n    condValue2: number;\n}\n\ninterface Profile {\n    stats: ProfileStats;\n    comments: ProfileComment[];\n}\n\nexport default Profile;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Buff, {BuffType} from \"../Api/Data/Buff\";\nimport Region from \"../Api/Data/Region\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport {joinElements} from \"../Helper/OutputHelper\";\nimport TraitDescriptor from \"./TraitDescriptor\";\n\nconst upDownBuffs: { up?: BuffType, down?: BuffType, description: string }[] = [\n    {up: BuffType.UP_ATK, down: BuffType.DOWN_ATK, description: \"ATK\"},\n    {up: BuffType.UP_CHAGETD, down: undefined, description: \"Overcharge\"},\n    {up: BuffType.UP_COMMANDATK, down: BuffType.DOWN_COMMANDATK, description: \"ATK\"},\n    {up: BuffType.UP_CRITICALDAMAGE, down: BuffType.DOWN_CRITICALDAMAGE, description: \"Critical Damage\"},\n    {up: BuffType.UP_CRITICALPOINT, down: BuffType.DOWN_CRITICALPOINT, description: \"Star Drop Rate\"},\n    {up: BuffType.UP_CRITICALRATE, down: BuffType.DOWN_CRITICALRATE, description: \"Critical Rate\"},\n    {up: BuffType.UP_CRITICAL_RATE_DAMAGE_TAKEN, down: BuffType.DOWN_CRITICAL_RATE_DAMAGE_TAKEN, description: \"Critical Rate Taken\"},\n    {up: BuffType.UP_DAMAGE, down: BuffType.DOWN_DAMAGE, description: \"SP.DMG\"},\n    {up: BuffType.UP_DAMAGEDROPNP, down: BuffType.DOWN_DAMAGEDROPNP, description: \"NP Gain When Damaged\"},\n    {up: BuffType.UP_DEFENCE, down: BuffType.DOWN_DEFENCE, description: \"DEF\"},\n    {up: BuffType.UP_DEFENCECOMMANDALL, down: BuffType.DOWN_DEFENCECOMMANDALL, description: \"Resistance\"},\n    {up: BuffType.UP_DROPNP, down: BuffType.DOWN_DROPNP, description: \"NP Gain\"},\n    {up: BuffType.UP_FUNC_HP_REDUCE, down: BuffType.DOWN_FUNC_HP_REDUCE, description: \"DoT Effectiveness\"},\n    {up: BuffType.UP_GRANT_INSTANTDEATH, down: BuffType.DOWN_GRANT_INSTANTDEATH, description: \"Death Chance\"},\n    {up: BuffType.UP_GRANTSTATE, down: BuffType.DOWN_GRANTSTATE, description: \"Buff Chance\"},\n    {up: undefined, down: BuffType.UP_NONRESIST_INSTANTDEATH, description: \"Death Resist\"},\n    {up: BuffType.UP_NPDAMAGE, down: BuffType.DOWN_NPDAMAGE, description: \"NP Damage\"},\n    {up: BuffType.UP_STARWEIGHT, down: BuffType.DOWN_STARWEIGHT, description: \"Star Weight\"},\n    {up: BuffType.UP_TOLERANCE, down: BuffType.DOWN_TOLERANCE, description: \"Debuff Resist\"},\n    {up: BuffType.UP_TOLERANCE_SUBSTATE, down: BuffType.DOWN_TOLERANCE_SUBSTATE, description: \"Buff Removal Resist\"},\n];\n\nconst traitDescriptions = new Map<number, string>([\n    [3012, 'Charm'],\n    [3015, 'Burn'],\n    [3026, 'Curse'],\n    [3045, 'Stun'],\n]);\n\nconst typeDescriptions = new Map<BuffType, string>([\n    [BuffType.AVOID_INSTANTDEATH, 'Immune to Death'],\n    [BuffType.AVOID_STATE, 'Immunity'],\n    [BuffType.ADD_DAMAGE, 'Damage Plus'],\n    [BuffType.ADD_INDIVIDUALITY, 'Add Trait'],\n    [BuffType.AVOIDANCE, 'Evade'],\n    [BuffType.BREAK_AVOIDANCE, 'Sure Hit'],\n    [BuffType.DELAY_FUNCTION, 'Trigger Skill after Duration'],\n    [BuffType.DONOT_NOBLE, 'NP Seal'],\n    [BuffType.DONOT_NOBLE_COND_MISMATCH, 'NP Block if Condition Failed'],\n    [BuffType.DONOT_RECOVERY, 'Recovery Disabled'],\n    [BuffType.DONOT_SELECT_COMMANDCARD, 'Do Not Shuffle In Cards'],\n    [BuffType.DONOT_SKILL, 'Skill Seal'],\n    [BuffType.FIELD_INDIVIDUALITY, 'Change Field Type'],\n    [BuffType.GUTS, 'Guts'],\n    [BuffType.INVINCIBLE, 'Invincible'],\n    [BuffType.MULTIATTACK, 'Multiple Hits'],\n    [BuffType.PIERCE_INVINCIBLE, 'Ignore Invincible'],\n    [BuffType.REGAIN_HP, 'HP Per Turn'],\n    [BuffType.REGAIN_NP, 'NP Per Turn'],\n    [BuffType.REGAIN_STAR, 'Stars Per Turn'],\n    [BuffType.SELFTURNEND_FUNCTION, 'Trigger Skill after Duration'],\n    [BuffType.SUB_SELFDAMAGE, 'Damage Cut'],\n    [BuffType.TD_TYPE_CHANGE, 'Change Noble Phantasm'],\n    [BuffType.UP_HATE, 'Taunt'],\n]);\n\ninterface IProps {\n    region: Region;\n    buff: Buff;\n}\n\nclass BuffDescriptor extends React.Component<IProps> {\n    private getTraitFilterAppend(): JSX.Element | undefined {\n        if (!this.getTraitFilters())\n            return undefined;\n\n        return <React.Fragment> for {this.getTraitFilters()}</React.Fragment>;\n    }\n\n    private getCommandCardTypes(): string {\n        const cards = [];\n\n        if (this.hasApplicableTrait(4001)) {\n            cards.push('Arts');\n        }\n\n        if (this.hasApplicableTrait(4002)) {\n            cards.push('Buster');\n        }\n\n        if (this.hasApplicableTrait(4003)) {\n            cards.push('Quick');\n        }\n\n        if (this.hasApplicableTrait(4004)) {\n            cards.push('Extra');\n        }\n\n        if (!cards.length) {\n            cards.push('Command Card');\n        }\n\n        return cards.join(' & ');\n    }\n\n    private getEffectiveTargetsDescriptions(): JSX.Element | undefined {\n        const buff = this.props.buff;\n\n        if (!buff.ckOpIndv.length)\n            return undefined;\n\n        return (\n            <React.Fragment>\n                {' vs. '}\n                {joinElements(\n                    buff.ckOpIndv.map(trait => {\n                        return <TraitDescriptor region={this.props.region} trait={trait}/>;\n                    }),\n                    ' & '\n                ).map((element, index) => {\n                    return <React.Fragment key={index}>{element}</React.Fragment>;\n                })}\n            </React.Fragment>\n        );\n    }\n\n    private getTraitDescription(): string {\n        const buff = this.props.buff,\n            traitIds = buff.vals.map(trait => trait.id);\n\n        for (let x in traitIds) {\n            const traitId = traitIds[x],\n                description = traitDescriptions.get(traitId);\n\n            if (description !== undefined)\n                return description;\n        }\n\n        return \"\";\n    }\n\n    private getTraitFilters(): JSX.Element | undefined {\n        if (!this.props.buff.ckSelfIndv.length)\n            return undefined;\n\n        return (\n            <React.Fragment>\n                {joinElements(\n                    this.props.buff.ckSelfIndv.map(\n                        trait => <TraitDescriptor region={this.props.region} trait={trait}/>\n                    ),\n                    ' & '\n                )}\n            </React.Fragment>\n        );\n    }\n\n    private getTypeDescription(): string {\n        const type = this.props.buff.type;\n\n        return typeDescriptions.get(type) ?? \"\";\n    }\n\n    private getUpDownDescription(): string {\n        const type = this.props.buff.type;\n\n        for (let x in upDownBuffs) {\n            if (upDownBuffs[x].up === type)\n                return `${upDownBuffs[x].description} Up`;\n            if (upDownBuffs[x].down === type)\n                return `${upDownBuffs[x].description} Down`;\n        }\n\n        return \"\";\n    }\n\n    private hasApplicableTrait(id: number): boolean {\n        const buff = this.props.buff;\n\n        return buff.ckSelfIndv.filter(trait => trait.id === id).length > 0;\n    }\n\n    private hasTraitDescription(): boolean {\n        const buff = this.props.buff,\n            traitIds = buff.vals.map(trait => trait.id);\n\n        for (let x in traitIds) {\n            const traitId = traitIds[x],\n                description = traitDescriptions.get(traitId);\n\n            if (description !== undefined)\n                return true;\n        }\n\n        return false;\n    }\n\n    private hasTypeDescription(): boolean {\n        const buff = this.props.buff;\n\n        return typeDescriptions.has(buff.type);\n    }\n\n    private isUpDownBuff(): boolean {\n        const type = this.props.buff.type;\n\n        for (let x in upDownBuffs) {\n            if (upDownBuffs[x].up === type || upDownBuffs[x].down === type)\n                return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const buff = this.props.buff;\n\n        let description: JSX.Element | string = buff.name;\n\n        if (this.isUpDownBuff()) {\n            description = <React.Fragment>\n                {this.getUpDownDescription()}\n                {this.getTraitFilterAppend()}\n            </React.Fragment>\n        } else if (buff.type === BuffType.UP_COMMANDALL) {\n            description = <React.Fragment>\n                {this.getCommandCardTypes()} Up\n            </React.Fragment>\n        } else if (buff.type === BuffType.DOWN_COMMANDALL) {\n            description = <React.Fragment>\n                {this.getCommandCardTypes()} Down\n            </React.Fragment>\n        } else if (buff.type === BuffType.ATTACK_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill on {this.getTraitFilters()} attacks\n            </React.Fragment>;\n        } else if (buff.type === BuffType.COMMANDATTACK_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill on {this.getTraitFilters()} cards\n            </React.Fragment>;\n        } else if (buff.type === BuffType.COMMANDATTACK_BEFORE_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill before {this.getTraitFilters()} cards\n            </React.Fragment>;\n        } else if (buff.type === BuffType.DAMAGE_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill on receiving {this.getTraitFilters()} attacks\n            </React.Fragment>;\n        } else if (buff.type === BuffType.NPATTACK_PREV_BUFF) {\n            description = <React.Fragment>\n                Trigger Skill on {this.getTraitFilters()} NP\n            </React.Fragment>;\n        } else if (this.hasTypeDescription()) {\n            description = <React.Fragment>\n                {this.getTypeDescription()}\n                {this.getTraitFilterAppend()}\n            </React.Fragment>;\n        } else if (this.hasTraitDescription()) {\n            description = <React.Fragment>\n                {this.getTraitDescription()}\n                {this.getTraitFilterAppend()}\n            </React.Fragment>;\n        }\n\n        return (\n            <Link to={`/${this.props.region}/buff/${buff.id}`}>\n                [\n                <BuffIcon location={buff.icon}/>\n                {' '}\n                {description}\n                {this.getEffectiveTargetsDescriptions()}\n                ]\n            </Link>\n        );\n    }\n}\n\nexport default BuffDescriptor;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Region from \"../Api/Data/Region\";\nimport Skill from \"../Api/Data/Skill\";\nimport BuffIcon from \"../Component/BuffIcon\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n    iconHeight?: number;\n}\n\nclass SkillDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/skill/${this.props.skill.id}`}>\n                [\n                <BuffIcon location={this.props.skill.icon} height={this.props.iconHeight}/>\n                {' '}\n                {this.props.skill.name ? this.props.skill.name : `Skill: ${this.props.skill.id}`}\n                ]\n            </Link>\n        );\n    }\n}\n\nexport default SkillDescriptor;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport Region from \"../Api/Data/Region\";\nimport Skill from \"../Api/Data/Skill\";\nimport SkillDescriptor from \"./SkillDescriptor\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    skill?: Skill;\n}\n\nclass SkillReferenceDescriptor extends React.Component<IProps, IState> {\n    constructor(props:IProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    async componentDidMount() {\n        try {\n            this.setState({\n                skill: await Connection.skill(this.props.region, this.props.id)\n            });\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    render() {\n        const route = `/${this.props.region}/skill/${this.props.id}`;\n\n        if (this.state.skill === undefined) {\n            return <Link to={route}>[Skill: {this.props.id}]</Link>;\n        }\n\n        return (\n            <SkillDescriptor region={this.props.region} skill={this.state.skill}/>\n        );\n    }\n}\n\nexport default SkillReferenceDescriptor;\n","import Func, {DataVal, FuncTargetType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nconst targetMap = new Map<FuncTargetType, string>([\n    [FuncTargetType.SELF, 'self'],\n    [FuncTargetType.PT_ONE, 'party member'],\n    // PT_ANOTHER\n    [FuncTargetType.PT_ALL, 'party'],\n    [FuncTargetType.ENEMY, 'enemy'],\n    // ENEMY_ANOTHER\n    [FuncTargetType.ENEMY_ALL, 'enemies'],\n    [FuncTargetType.PT_FULL, 'party (including reserve)'],\n    [FuncTargetType.ENEMY_FULL, 'enemies (including reserve)'],\n    [FuncTargetType.PT_OTHER, 'party except self'],\n    [FuncTargetType.PT_ONE_OTHER, 'other party members besides target'],\n    [FuncTargetType.PT_RANDOM, 'random party member'],\n    [FuncTargetType.ENEMY_OTHER, 'other enemies besides target'],\n    [FuncTargetType.ENEMY_RANDOM, 'random enemy'],\n    [FuncTargetType.PT_OTHER_FULL, 'party except self (including reserve)'],\n    [FuncTargetType.ENEMY_OTHER_FULL, 'other enemies (including reserve)'],\n    [FuncTargetType.PTSELECT_ONE_SUB, 'active party member and reserve party member'],\n    [FuncTargetType.PTSELECT_SUB, 'reserve party member'],\n    // PT_ONE_ANOTHER_RANDOM\n    [FuncTargetType.PT_ONE_ANOTHER_RANDOM, 'other random party member'],\n    [FuncTargetType.PT_SELF_ANOTHER_RANDOM, 'other random party member (except self)'],\n    [FuncTargetType.ENEMY_ONE_ANOTHER_RANDOM, 'other random enemy'],\n    [FuncTargetType.PT_SELF_ANOTHER_FIRST, 'first other party member (except self)'],\n    // PT_SELF_BEFORE\n    // PT_SELF_AFTER\n    // PT_SELF_ANOTHER_LAST\n    [FuncTargetType.COMMAND_TYPE_SELF_TREASURE_DEVICE, 'target noble phantasm version'],\n]);\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.target,\n        parts = section.parts;\n\n    if (targetMap.has(func.funcTargetType)) {\n        parts.push(targetMap.get(func.funcTargetType));\n    } else {\n        parts.push(func.funcTargetType);\n    }\n}\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Func from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {getDataValList, getStaticFieldValues} from \"../Helper/FuncHelper\";\nimport {joinElements, Renderable} from \"../Helper/OutputHelper\";\nimport {FuncDescriptorSections} from \"./Func/FuncDescriptorSections\";\nimport handleActionSection from \"./Func/handleActionSection\";\nimport handleAffectsSection from \"./Func/handleAffectsSection\";\nimport handleAmountSection from \"./Func/handleAmountSection\";\nimport handleChanceSection from \"./Func/handleChanceSection\";\nimport handleDurationSection from \"./Func/handleDurationSection\";\nimport handleScalingSection from \"./Func/handleScalingSection\";\nimport handleTargetSection from \"./Func/handleTargetSection\";\nimport handleTeamSection from \"./Func/handleTeamSection\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n}\n\nclass FuncDescriptor extends React.Component<IProps> {\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            dataVals = getDataValList(func),\n            staticValues = getStaticFieldValues(dataVals);\n\n        const sections = new FuncDescriptorSections();\n\n        handleTeamSection(region, sections, func, staticValues);\n        handleChanceSection(region, sections, func, staticValues);\n        handleActionSection(region, sections, func, staticValues);\n        handleAmountSection(region, sections, func, staticValues);\n        handleAffectsSection(region, sections, func, staticValues);\n        handleTargetSection(region, sections, func, staticValues);\n        handleDurationSection(region, sections, func, staticValues);\n        handleScalingSection(region, sections, func, staticValues);\n\n        let parts: Renderable[] = [];\n\n        Object.values(sections).forEach(section => {\n            if (!section.showing)\n                return;\n\n            if (section.preposition)\n                parts.push(section.preposition);\n\n            parts = parts.concat(section.parts);\n        });\n\n        parts.push(\n            <Link to={`/${region}/func/${func.funcId}`}>\n                <FontAwesomeIcon icon={faShare}/>\n            </Link>\n        );\n\n        parts = joinElements(parts, ' ');\n\n        return (\n            <span>\n                {parts.map((element, index) => {\n                    return <React.Fragment key={index}>{element}</React.Fragment>;\n                })}\n            </span>\n        );\n    }\n}\n\nexport default FuncDescriptor;\n","import Func, {DataVal, FuncTargetTeam} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.team,\n        parts = section.parts;\n\n    if (func.funcTargetTeam === FuncTargetTeam.PLAYER)\n        parts.push('[Player]');\n    else if (func.funcTargetTeam === FuncTargetTeam.ENEMY)\n        parts.push('[Enemy]');\n    else\n        section.showing = false;\n}\n","import Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.chance,\n        parts = section.parts;\n\n    if (dataVal.Rate && dataVal.Rate === -1000) {\n        parts.push('Guaranteed to');\n    } else if (typeof dataVal.Rate === \"number\" && dataVal.Rate !== 1000) {\n        parts.push((dataVal.Rate / 10) + '% Chance to');\n    } else if (!dataVal.Rate && func.funcType !== FuncType.NONE) {\n        parts.push('Chance to');\n    } else {\n        section.showing = false;\n    }\n}\n","import React from \"react\";\nimport {BuffType} from \"../../Api/Data/Buff\";\nimport Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {joinElements} from \"../../Helper/OutputHelper\";\nimport BuffDescriptor from \"../BuffDescriptor\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    if (func.funcType === FuncType.ADD_STATE || func.funcType === FuncType.ADD_STATE_SHORT) {\n        parts.push('Apply');\n        func.buffs.forEach((buff, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<BuffDescriptor region={region} buff={buff}/>);\n        });\n\n        if (func.buffs[0]?.type === BuffType.FIELD_INDIVIDUALITY) {\n            sections.amount.preposition = 'to';\n        }\n\n        sections.target.preposition = 'on';\n        if (\n            func.buffs[0]?.type === BuffType.COMMANDATTACK_FUNCTION\n            || func.buffs[0]?.type === BuffType.NPATTACK_PREV_BUFF\n        ) {\n            sections.target.preposition = 'for';\n        }\n    } else if (func.funcType === FuncType.SUB_STATE) {\n        parts.push('Remove effects');\n\n        if (func.traitVals?.length) {\n            parts.push('with');\n\n            func.traitVals.forEach((trait, index) => {\n                if (index > 0)\n                    parts.push('&');\n\n                parts.push(<TraitDescriptor region={region} trait={trait}/>);\n            });\n        }\n\n        sections.target.preposition = 'on';\n    } else if (func.funcType === FuncType.CARD_RESET) {\n        parts.push('Shuffle Cards');\n\n        sections.target.showing = false;\n    } else if (func.funcType === FuncType.DAMAGE_NP) {\n        parts.push('Deal damage');\n\n        sections.amount.preposition = 'for';\n    } else if (\n        func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL\n        || func.funcType === FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX\n    ) {\n        if (typeof dataVal.Target === \"number\") {\n            parts.push(\n                <span>Deal damage (additional to targets with {\n                    <TraitDescriptor region={region} trait={dataVal.Target}/>\n                })</span>\n            );\n        } else {\n            parts.push('Deal damage');\n        }\n\n        sections.amount.preposition = 'for';\n    } else if (func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL_SUM) {\n        let additional = [];\n\n        if (typeof dataVal.TargetList === \"number\") {\n            additional.push('to targets with');\n            additional.push(<TraitDescriptor region={region} trait={dataVal.TargetList}/>);\n        }\n\n        if (dataVal.ParamAddMaxCount) {\n            additional.push(`[Limit ${dataVal.ParamAddMaxCount}]`);\n        }\n\n        parts.push('Deal damage');\n\n        if (additional.length) {\n            parts.push(<React.Fragment>\n                (additional\n                {' '}\n                {joinElements(additional, ' ')\n                    .map((element, index) => {\n                        return <React.Fragment key={index}>{element}</React.Fragment>;\n                    })\n                })\n            </React.Fragment>)\n        }\n    } else if (func.funcType === FuncType.DAMAGE_NP_RARE) {\n        parts.push('Deal damage');\n\n        if (typeof dataVal.TargetRarityList === \"string\") {\n            parts.push('that deals additional to');\n            parts.push(dataVal.TargetRarityList);\n            parts.push(dataVal.TargetRarityList.split('/').length > 1 ? 'rarities' : 'rarity');\n        }\n\n        sections.amount.preposition = 'for';\n    } else if (func.funcType === FuncType.DAMAGE_NP_PIERCE) {\n        parts.push('Deal damage that pierces defence');\n\n        sections.amount.preposition = 'for';\n    } else if (func.funcType === FuncType.DELAY_NPTURN) {\n        parts.push('Drain Charge');\n\n        sections.target.preposition = 'from';\n    } else if (func.funcType === FuncType.FORCE_INSTANT_DEATH) {\n        parts.push('Force Instant Death');\n\n        sections.target.preposition = 'on';\n    } else if (func.funcType === FuncType.GAIN_HP) {\n        parts.push('Restore HP');\n\n        sections.target.preposition = 'for';\n    } else if (func.funcType === FuncType.GAIN_NP) {\n        parts.push('Charge NP');\n\n        sections.target.preposition = 'for';\n    } else if (func.funcType === FuncType.GAIN_NP_FROM_TARGETS) {\n        let drainAmount,\n            drainTargets;\n\n        switch (dataVal.DependFuncId) {\n            case 474:\n                drainAmount = `${dataVal.DependFuncVals?.Value ?? 1} Charge`;\n                drainTargets = \"All Enemies\";\n                break;\n            case 3962:\n                drainAmount = \"NP\";\n                drainTargets = \"All Other Allies\";\n                break;\n        }\n\n        parts.push(\n            `Drain ${drainAmount} from ${drainTargets} and Charge NP`\n        );\n\n        sections.target.preposition = 'for';\n    } else if (func.funcType === FuncType.GAIN_STAR) {\n        parts.push('Gain Critical Stars');\n\n        sections.target.showing = false;\n    } else if (func.funcType === FuncType.HASTEN_NPTURN) {\n        parts.push('Charge NP');\n\n        sections.amount.preposition = 'by';\n        sections.target.preposition = 'for';\n    } else if (func.funcType === FuncType.INSTANT_DEATH) {\n        parts.push('Apply Death');\n    } else if (func.funcType === FuncType.LOSS_HP_SAFE) {\n        parts.push('Drain HP');\n\n        sections.target.preposition = 'from';\n    } else if (func.funcType === FuncType.LOSS_NP) {\n        parts.push('Drain NP');\n\n        sections.target.preposition = 'from';\n    } else if (func.funcType === FuncType.NONE) {\n        parts.push('No Effect');\n\n        sections.target.showing = false;\n    } else {\n        parts.push(func.funcType);\n    }\n}\n","import React from \"react\";\nimport {BuffType} from \"../../Api/Data/Buff\";\nimport Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport BuffValueDescriptor from \"../BuffValueDescriptor\";\nimport FuncValueDescriptor from \"../FuncValueDescriptor\";\nimport SkillReferenceDescriptor from \"../SkillReferenceDescriptor\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.amount,\n        parts = section.parts;\n\n    if (func.buffs[0]?.type === BuffType.ADD_INDIVIDUALITY && typeof dataVal.Value === \"number\") {\n        parts.push(\n            <TraitDescriptor region={region} trait={dataVal.Value}/>\n        );\n    } else if (\n        (\n            func.buffs[0]?.type === BuffType.ATTACK_FUNCTION\n            || func.buffs[0]?.type === BuffType.COMMANDATTACK_FUNCTION\n            || func.buffs[0]?.type === BuffType.COMMANDATTACK_BEFORE_FUNCTION\n            || func.buffs[0]?.type === BuffType.DAMAGE_FUNCTION\n            || func.buffs[0]?.type === BuffType.DELAY_FUNCTION\n            || func.buffs[0]?.type === BuffType.SELFTURNEND_FUNCTION\n        )\n        && typeof dataVal.Value === \"number\"\n    ) {\n        section.preposition = undefined;\n        parts.push('that triggers');\n        parts.push(\n            <SkillReferenceDescriptor region={region} id={dataVal.Value}/>\n        );\n    } else if (func.funcType === FuncType.CARD_RESET && dataVal.Value) {\n        section.preposition = undefined;\n        parts.push(`${dataVal.Value} time${dataVal.Value > 1 ? 's' : ''}`);\n    } else if (func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL_SUM) {\n        const prunedValues = {...dataVal};\n        if (prunedValues.Rate === 1000)\n            prunedValues.Rate = undefined;\n\n        parts.push(<FuncValueDescriptor region={region} func={func} dataVal={prunedValues}/>);\n    } else if (func.funcType === FuncType.GAIN_NP_FROM_TARGETS) {\n        const chargeAmount = dataVal.DependFuncVals?.Value2;\n\n        if (chargeAmount !== undefined) {\n            parts.push(<FuncValueDescriptor region={region} func={func} dataVal={dataVal}/>);\n        } else {\n            section.showing = false;\n        }\n    } else if (func.buffs[0]?.type === BuffType.NPATTACK_PREV_BUFF) {\n        if (typeof dataVal.SkillID !== \"number\") {\n            section.showing = false;\n            return;\n        }\n\n        section.preposition = undefined;\n        parts.push('that triggers');\n        parts.push(\n            <SkillReferenceDescriptor region={region} id={dataVal.SkillID}/>\n        );\n    } else if (func.buffs[0] && dataVal.Value) {\n        parts.push(<BuffValueDescriptor region={region} buff={func.buffs[0]} dataVal={dataVal}/>);\n    } else if (dataVal.Value) {\n        // there are some properties that we don't want back as the description\n        const prunedValues = {...dataVal};\n        prunedValues.Rate = undefined;\n\n        parts.push(<FuncValueDescriptor region={region} func={func} dataVal={prunedValues}/>);\n    } else {\n        section.showing = false;\n    }\n}\n","import React from \"react\";\nimport Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {mergeElements} from \"../../Helper/OutputHelper\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.affects,\n        parts = section.parts;\n\n    if (func.funcquestTvals.length) {\n        parts.push('if on field');\n        parts.push(\n            mergeElements(\n                func.funcquestTvals.map(trait => <TraitDescriptor region={region} trait={trait}/>),\n                ' & '\n            )\n        );\n    }\n\n    if (func.functvals.length) {\n        parts.push('for');\n\n        if (func.functvals.length > 1) {\n            parts.push('all');\n        }\n\n        func.functvals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<TraitDescriptor region={region} trait={trait}/>);\n        });\n    }\n\n    if (!parts.length) {\n        section.showing = false;\n    }\n\n}\n","import Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.duration,\n        parts = section.parts;\n\n    if (dataVal.Count && dataVal.Count > 0 && dataVal.Turn && dataVal.Turn > 0) {\n        const countDesc = dataVal.Count === 1 ? '1 Time' : `${dataVal.Count} Times`,\n            turnDesc = dataVal.Turn === 1 ? '1 Turn' : `${dataVal.Turn} Turns`;\n\n        parts.push(`(${turnDesc}, ${countDesc})`);\n    } else if (dataVal.Turn && dataVal.Turn > 0) {\n        parts.push(dataVal.Turn === 1 ? '(1 Turn)' : `(${dataVal.Turn} Turns)`);\n    } else if (dataVal.Count && dataVal.Count > 0) {\n        parts.push(dataVal.Count === 1 ? '(1 Time)' : `(${dataVal.Count} Times)`);\n    } else {\n        section.showing = false;\n    }\n}\n","import Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {funcUpdatesByLevel, funcUpdatesByOvercharge} from \"../../Helper/FuncHelper\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.scaling,\n        parts = section.parts,\n        isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func);\n\n    if (!isLevel && !isOvercharge) {\n        section.showing = false;\n        return;\n    }\n\n    if (isLevel) {\n        parts.push('<LEVEL>');\n    }\n\n    if (isOvercharge) {\n        parts.push('<OVERCHARGE>');\n    }\n}\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Buff from \"../Api/Data/Buff\";\nimport Region from \"../Api/Data/Region\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport DataTable from \"../Component/DataTable\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\nimport FuncDescriptor from \"../Descriptor/FuncDescriptor\";\nimport {joinElements} from \"../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    buff?: Buff;\n}\n\nclass BuffPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.loadBuff();\n    }\n\n    async loadBuff() {\n        try {\n            const buff = await Connection.buff(this.props.region, this.props.id);\n\n            this.setState({\n                loading: false,\n                buff: buff,\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading || !this.state.buff)\n            return <Loading/>;\n\n        const buff = this.state.buff;\n\n        return (\n            <div>\n                <h1>\n                    <BuffIcon location={buff.icon} height={48}/>\n                    &nbsp;\n                    {buff.name}\n                </h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={buff}/>,\n                    \"ID\": buff.id,\n                    \"Name\": buff.name,\n                    \"Detail\": buff.detail,\n                    \"Type\": buff.type,\n                    \"Gained Traits\": (\n                        <div>\n                            {joinElements(buff.vals.map(trait => trait.name), ', ')}\n                        </div>\n                    ),\n                }}/>\n\n                <h3>Related Functions</h3>\n                {buff.reverseFunctions.map((func, index) => {\n                    return (\n                        <p key={index}>\n                            <FuncDescriptor region={this.props.region} func={func}/>\n                        </p>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default BuffPage;\n","import React from \"react\";\n\nconst assetMap = new Map<number, string>([\n    [1, './assets/star1.png'],\n    [2, './assets/star2.png'],\n    [3, './assets/star3.png'],\n    [4, './assets/star4.png'],\n    [5, './assets/star5.png'],\n]);\n\ninterface IProps {\n    rarity: number;\n    height?: number;\n}\n\nclass RarityDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <span>\n                {assetMap.has(this.props.rarity) ? (\n                    <img alt={`${this.props.rarity} star(s)`}\n                         src={assetMap.get(this.props.rarity)}\n                         style={{height: this.props.height ?? 18}}/>\n                ) : null}\n            </span>\n        );\n    }\n}\n\nexport default RarityDescriptor;\n","import React from \"react\";\nimport CraftEssence from \"../../Api/Data/CraftEssence\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\nimport RarityDescriptor from \"../../Descriptor/RarityDescriptor\";\n\ninterface IProps {\n    craftEssence: CraftEssence;\n}\n\nclass CraftEssenceMainData extends React.Component<IProps> {\n    render() {\n        const craftEssence = this.props.craftEssence;\n\n        return (\n            <div>\n                <h1>\n                    {craftEssence.name}\n                </h1>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={craftEssence}/>,\n                    \"ID\": craftEssence.id,\n                    \"Collection\": craftEssence.collectionNo,\n                    \"Name\": craftEssence.name,\n                    \"Rarity\": <RarityDescriptor rarity={craftEssence.rarity}/>,\n                    \"Cost\": craftEssence.cost,\n                    \"Max Lv.\": craftEssence.lvMax,\n                    \"Base Hp\": craftEssence.hpBase,\n                    \"Base Atk\": craftEssence.atkBase,\n                    \"Max Hp\": craftEssence.hpMax,\n                    \"Max Atk\": craftEssence.atkMax,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssenceMainData;\n","import React from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport Region from \"../../Api/Data/Region\";\nimport BasicListEntity from \"../../Api/Data/BasicListEntity\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps extends RouteComponentProps {\n    region: Region;\n    id: number;\n    craftEssences: BasicListEntity[];\n}\n\nclass CraftEssencePicker extends React.Component<IProps> {\n    private changeCraftEssence(id: number) {\n        this.props.history.push(`/${this.props.region}/craft-essence/${id}`);\n    }\n\n    render() {\n        return (\n            <div>\n                Jump to:\n                <FormControl as={\"select\"} custom\n                             onChange={(ev: Event) => {\n                                 this.changeCraftEssence(parseInt(ev.target.value));\n                             }}\n                             value={this.props.id}>\n                    {this.props.craftEssences\n                        .slice()\n                        .reverse()\n                        .map((craftEssence, index) => {\n                            return (\n                                <option key={index} value={craftEssence.collectionNo}>\n                                    {craftEssence.name}\n                                </option>\n                            );\n                        })\n                    }\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(CraftEssencePicker);\n","import React from \"react\";\nimport {AssetMap} from \"../../Api/Data/AssetCollection\";\nimport CraftEssence from \"../../Api/Data/CraftEssence\";\n\nimport \"./CraftEssencePortrait.css\";\n\ninterface IProps {\n    craftEssence: CraftEssence;\n}\n\ninterface IState {\n    assetMap?: AssetMap;\n    assetKey?: string;\n}\n\nclass CraftEssencePortrait extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        const assetMap = (\n                props.craftEssence.extraAssets.charaGraph.ascension\n                ?? Object.values(props.craftEssence.extraAssets.charaGraph).shift()\n            ),\n            assetKey = assetMap === undefined ? undefined : Object.keys(assetMap).shift();\n\n        this.state = {assetMap, assetKey};\n    }\n\n    render() {\n        return (\n            <div>\n                <img alt={this.props.craftEssence.name}\n                     id={'craft-essence-portrait'}\n                     src={(\n                         this.state.assetMap && this.state.assetKey\n                             ? this.state.assetMap[this.state.assetKey]\n                             : undefined\n                     )}/>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssencePortrait;\n","enum EntityType {\n    NORMAL = \"normal\",\n    HEROINE = \"heroine\",\n    COMBINE_MATERIAL = \"combineMaterial\",\n    ENEMY = \"enemy\",\n    ENEMY_COLLECTION = \"enemyCollection\",\n    SERVANT_EQUIP = \"servantEquip\",\n    STATUS_UP = \"statusUp\",\n    SVT_EQUIP_MATERIAL = \"svtEquipMaterial\",\n    ENEMY_COLLECTION_DETAIL = \"enemyCollectionDetail\",\n    ALL = \"all\",\n    COMMAND_CODE = \"commandCode\",\n}\n\nexport default EntityType;\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Region from \"../Api/Data/Region\";\n\ninterface IProps {\n    region: Region;\n    questId: number;\n    questPhase: number;\n}\n\nclass QuestDescriptor extends React.Component<IProps>{\n    render() {\n        const prefix = Math.floor(this.props.questId / 1000000);\n        let type = \"\";\n\n        switch (prefix) {\n            case 91:\n                type = 'Interlude';\n                break;\n            case 94:\n                type = 'Strengthening';\n                break;\n            default:\n                type = 'Main';\n                break;\n        }\n\n        return (\n            <Link to={`/${this.props.region}/quest/${this.props.questId}/${this.props.questPhase}`}>\n                {type} Quest <FontAwesomeIcon icon={faShare} />\n            </Link>\n        );\n    }\n}\n\nexport default QuestDescriptor;\n","import React from \"react\";\nimport {CommentConditionType, ProfileComment} from \"../Api/Data/Profile\";\nimport Region from \"../Api/Data/Region\";\nimport QuestDescriptor from \"./QuestDescriptor\";\n\ninterface IProps {\n    region: Region;\n    comment: ProfileComment;\n}\n\nclass ProfileConditionDescriptor extends React.Component<IProps> {\n    render() {\n        const comment = this.props.comment;\n\n        let condition: JSX.Element | string = this.props.comment.condMessage;\n\n        if (!condition) {\n            if (comment.condType === CommentConditionType.NONE) {\n                condition = \"None\";\n            } else if (\n                comment.condType === CommentConditionType.QUEST_CLEAR\n                && comment.condValues.length > 0\n            ) {\n                condition = <React.Fragment>\n                    <QuestDescriptor region={this.props.region}\n                                     questId={comment.condValues[0]}\n                                     questPhase={comment.condValue2}/>\n                    &nbsp;Cleared\n                </React.Fragment>;\n            } else if (\n                comment.condType === CommentConditionType.SVT_FRIENDSHIP\n                && comment.condValues.length > 0\n            ) {\n                condition = `Bond Level ${comment.condValues[0]}`;\n            }\n        }\n\n        return (\n            <span>{condition}</span>\n        );\n    }\n}\n\nexport default ProfileConditionDescriptor;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport {ProfileComment} from \"../../Api/Data/Profile\";\nimport Region from \"../../Api/Data/Region\";\nimport ProfileConditionDescriptor from \"../../Descriptor/ProfileConditionDescriptor\";\nimport {handleNewLine} from \"../../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    comments: ProfileComment[];\n}\n\nclass ServantProfileComments extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                <h3>Profile</h3>\n\n                <Table>\n                    <thead>\n                    <tr>\n                        <th>Condition</th>\n                        <th>Message</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.props.comments.map((comment, index) => {\n                        return (\n                            <tr key={index}>\n                                <td>\n                                    <ProfileConditionDescriptor region={this.props.region} comment={comment}/>\n                                </td>\n                                <td>{handleNewLine(comment.comment)}</td>\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default ServantProfileComments;\n","import ServantProfileComments from \"../Servant/ServantProfileComments\";\n\nclass CraftEssenceProfileComments extends ServantProfileComments {\n}\n\nexport default CraftEssenceProfileComments;\n","import React from \"react\";\nimport {Alert, Table} from \"react-bootstrap\";\nimport Region from \"../../Api/Data/Region\";\nimport Skill from \"../../Api/Data/Skill\";\nimport FuncDescriptor from \"../../Descriptor/FuncDescriptor\";\nimport QuestDescriptor from \"../../Descriptor/QuestDescriptor\";\nimport SkillDescriptor from \"../../Descriptor/SkillDescriptor\";\nimport {handleNewLine} from \"../../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n}\n\nclass CraftEssenceSkill extends React.Component<IProps, any> {\n    render() {\n        const skill = this.props.skill;\n        return (\n            <div>\n                <h3>\n                    <SkillDescriptor region={this.props.region} skill={skill} iconHeight={33}/>\n                </h3>\n\n                {skill.condQuestId && skill.condQuestPhase ? (\n                    <Alert variant={'primary'}>\n                        Available after <QuestDescriptor region={this.props.region}\n                                                         questId={skill.condQuestId}\n                                                         questPhase={skill.condQuestPhase}/>\n                    </Alert>\n                ) : null}\n\n                <p>{handleNewLine(skill.detail)}</p>\n\n                <Table responsive>\n                    <thead>\n                    <tr>\n                        <th>Effect</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {skill.functions.map((func, index) => {\n                        return (\n                            <tr key={index}>\n                                <td>\n                                    <FuncDescriptor region={this.props.region} func={func}/>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssenceSkill;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Col, Row, Tab, Tabs} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport BasicListEntity from \"../Api/Data/BasicListEntity\";\nimport CraftEssence from \"../Api/Data/CraftEssence\";\nimport Region from \"../Api/Data/Region\";\nimport TraitMap from \"../Api/Data/TraitMap\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport CraftEssenceMainData from \"./CraftEssence/CraftEssenceMainData\";\nimport CraftEssencePicker from \"./CraftEssence/CraftEssencePicker\";\nimport CraftEssencePortrait from \"./CraftEssence/CraftEssencePortrait\";\nimport CraftEssenceProfileComments from \"./CraftEssence/CraftEssenceProfileComments\";\nimport CraftEssenceSkill from \"./CraftEssence/CraftEssenceSkill\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    id: number;\n    craftEssences: BasicListEntity[];\n    craftEssence?: CraftEssence;\n}\n\nclass CraftEssencePage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            id: this.props.id,\n            craftEssences: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadCraftEssence();\n    }\n\n    async loadCraftEssence() {\n        try {\n            let [craftEssences, craftEssence] = await Promise.all<BasicListEntity[], CraftEssence, TraitMap>([\n                Connection.craftEssenceList(this.props.region),\n                Connection.craftEssence(this.props.region, this.state.id),\n                Connection.traitMap(this.props.region)\n            ]);\n\n            this.setState({\n                loading: false,\n                craftEssences,\n                craftEssence\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading || !this.state.craftEssence)\n            return <Loading/>;\n\n        const craftEssence = this.state.craftEssence;\n\n        return (\n            <div>\n                <CraftEssencePicker region={this.props.region}\n                                    craftEssences={this.state.craftEssences}\n                                    id={this.state.craftEssence.collectionNo}/>\n                <hr/>\n\n                <Row>\n                    <Col xs={{span: 12, order: 2}} lg={{span: 6, order: 1}}>\n                        <CraftEssenceMainData craftEssence={this.state.craftEssence}/>\n                    </Col>\n                    <Col xs={{span: 12, order: 1}} lg={{span: 6, order: 2}}>\n                        <CraftEssencePortrait craftEssence={this.state.craftEssence}/>\n                    </Col>\n                </Row>\n\n                <Tabs id={'ce-tabs'} defaultActiveKey={'effects'} transition={false}>\n                    <Tab eventKey={'effects'} title={'Effects'}>\n                        <br/>\n                        <Row>\n                            {this.state.craftEssence.skills\n                                .filter(skill => skill.num === 1)\n                                .map((skill, index) => {\n                                    return (\n                                        <Col key={index} xs={12} lg={craftEssence.skills.length > 1 ? 6 : 12}>\n                                            <CraftEssenceSkill region={this.props.region} skill={skill}/>\n                                        </Col>\n                                    );\n                                })}\n                        </Row>\n                    </Tab>\n                    <Tab eventKey={'profile'} title={'Profile'}>\n                        <br/>\n                        <CraftEssenceProfileComments region={this.props.region}\n                                                     comments={craftEssence.profile.comments}/>\n                    </Tab>\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssencePage;\n","import React from \"react\";\nimport EntityType from \"../Api/Data/EntityType\";\n\ninterface IProps {\n    type: EntityType;\n    rarity: number;\n    location: string;\n    height?: number;\n}\n\nclass FaceIcon extends React.Component<IProps> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location}\n                 style={this.props.height ? {height: this.props.height} : undefined}/>\n        );\n    }\n\n}\n\nexport default FaceIcon;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport BasicListEntity from \"../Api/Data/BasicListEntity\";\nimport Region from \"../Api/Data/Region\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport FaceIcon from \"../Component/FaceIcon\";\nimport Loading from \"../Component/Loading\";\nimport RarityDescriptor from \"../Descriptor/RarityDescriptor\";\n\nimport \"./CraftEssencesPage.css\";\n\ninterface Event extends React.MouseEvent<HTMLInputElement> {\n\n}\n\ninterface IProps {\n    region: Region;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    craftEssences: BasicListEntity[];\n    activeRarityFilters: number[];\n}\n\nclass CraftEssencesPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            craftEssences: [],\n            activeRarityFilters: [1, 2, 3, 4, 5],\n        };\n    }\n\n    componentDidMount() {\n        try {\n            Connection.craftEssenceList(this.props.region).then(list => {\n                this.setState({\n                    loading: false,\n                    craftEssences: list\n                });\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    private toggleRarityFilter(rarity: number): void {\n        const exists = this.state.activeRarityFilters.indexOf(rarity) !== -1;\n\n        if (exists) {\n            this.setState({\n                activeRarityFilters: this.state.activeRarityFilters.filter(activeRarity => activeRarity !== rarity)\n            });\n        } else {\n            this.setState({\n                activeRarityFilters: [\n                    ...this.state.activeRarityFilters,\n                    rarity\n                ]\n            });\n        }\n    }\n\n    private craftEssences(): BasicListEntity[] {\n        let list = this.state.craftEssences.slice().reverse();\n\n        if (this.state.activeRarityFilters.length !== 5) {\n            list = list.filter(entity => {\n                return this.state.activeRarityFilters.indexOf(entity.rarity) !== -1;\n            });\n        }\n\n        return list;\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading)\n            return <Loading/>;\n\n        return (\n            <div id={'craft-essences'}>\n                <p className={'text-center'}>\n                    {[1, 2, 3, 4, 5].map(rarity => {\n                        const active = this.state.activeRarityFilters.indexOf(rarity) !== -1;\n\n                        return (\n                            <span key={rarity}\n                                  className={'filter'}\n                                  style={{opacity: active ? 1 : 0.5}}\n                                  onClick={(ev: Event) => {\n                                      this.toggleRarityFilter(rarity);\n                                  }}>\n                                <RarityDescriptor rarity={rarity} height={20}/>\n                            </span>\n                        );\n                    })}\n                </p>\n\n                <hr/>\n\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th style={{textAlign: \"center\", width: '1px'}}>#</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Thumbnail</th>\n                        <th>Name</th>\n                        <th>Rarity</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.craftEssences()\n                        .map((craftEssence, index) => {\n                            const route = `/${this.props.region}/craft-essence/${craftEssence.collectionNo}`;\n\n                            return <tr key={index}>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        {craftEssence.collectionNo}\n                                    </Link>\n                                </td>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        <FaceIcon type={craftEssence.type}\n                                                  rarity={craftEssence.rarity}\n                                                  location={craftEssence.face}\n                                                  height={50}/>\n                                    </Link>\n                                </td>\n                                <td>\n                                    <Link to={route}>\n                                        {craftEssence.name}\n                                    </Link>\n                                </td>\n                                <td>\n                                    <RarityDescriptor rarity={craftEssence.rarity}/>\n                                </td>\n                            </tr>\n                        })\n                    }\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssencesPage;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport NoblePhantasm from \"../Api/Data/NoblePhantasm\";\nimport Region from \"../Api/Data/Region\";\n\ninterface IProps {\n    region: Region;\n    noblePhantasm: NoblePhantasm;\n}\n\nclass NoblePhantasmDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/noble-phantasm/${this.props.noblePhantasm.id}`}>\n                [{this.props.noblePhantasm.name}]\n            </Link>\n        );\n    }\n}\n\nexport default NoblePhantasmDescriptor;\n","import React from \"react\";\nimport Func from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport BuffDescriptor from \"../../Descriptor/BuffDescriptor\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\nimport TraitDescriptor from \"../../Descriptor/TraitDescriptor\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n}\n\nclass FuncMainData extends React.Component<IProps> {\n    render() {\n        const func = this.props.func;\n\n        return (\n            <DataTable data={{\n                \"Raw\": <RawDataViewer data={func}/>,\n                \"ID\": func.funcId,\n                \"Type\": func.funcType,\n                \"Target\": func.funcTargetType,\n                \"Affects Players/Enemies\": func.funcTargetTeam,\n                \"Popup Text\": func.funcPopupText,\n                \"Target Traits\": (\n                    <div>\n                        {func.functvals.map((trait, index) => {\n                            return <TraitDescriptor key={index} region={this.props.region} trait={trait}/>;\n                        })}\n                    </div>\n                ),\n                \"Affects Traits\": (\n                    <div>\n                        {func.traitVals?.map((trait, index) => {\n                            return <TraitDescriptor key={index} region={this.props.region} trait={trait}/>;\n                        })}\n                    </div>\n                ),\n                \"Buffs\": (\n                    <div>\n                        {func.buffs.map((buff, index) => {\n                            return <BuffDescriptor key={index} region={this.props.region} buff={buff}/>;\n                        })}\n                    </div>\n                )\n            }}/>\n        );\n    }\n}\n\nexport default FuncMainData;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport Func from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport NoblePhantasmDescriptor from \"../Descriptor/NoblePhantasmDescriptor\";\nimport SkillDescriptor from \"../Descriptor/SkillDescriptor\";\nimport FuncMainData from \"./Func/FuncMainData\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    func?: Func;\n}\n\nclass FuncPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.loadFunc();\n    }\n\n    async loadFunc() {\n        try {\n            const func = await Connection.func(this.props.region, this.props.id);\n\n            this.setState({\n                loading: false,\n                func: func,\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error} />;\n\n        if (this.state.loading || !this.state.func)\n            return <Loading/>;\n\n        const func = this.state.func;\n\n        return (\n            <div>\n                <h1>\n                    {func.funcPopupIcon ? (\n                        <span>\n                            <BuffIcon location={func.funcPopupIcon} height={48}/>\n                            &nbsp;\n                        </span>\n                    ) : null}\n                    Function: {this.props.id}\n                </h1>\n                <br/>\n\n                <FuncMainData region={this.props.region} func={func}/>\n\n                <Row>\n                    <Col xs={12} lg={6}>\n                        <h3>Related Skills</h3>\n                        {func.reverseSkills.map((skill, index) => {\n                            return (\n                                <p key={index}>\n                                    <SkillDescriptor region={this.props.region} skill={skill}/>\n                                </p>\n                            )\n                        })}\n                    </Col>\n                    <Col xs={12} lg={6}>\n                        <h3>Related Noble Phantasms</h3>\n                        {func.reverseTds.map((noblePhantasm, index) => {\n                            return (\n                                <p key={index}>\n                                    <NoblePhantasmDescriptor region={this.props.region} noblePhantasm={noblePhantasm}/>\n                                </p>\n                            )\n                        })}\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default FuncPage;\n","enum ClassName {\n    SABER = \"saber\",\n    ARCHER = \"archer\",\n    LANCER = \"lancer\",\n    RIDER = \"rider\",\n    CASTER = \"caster\",\n    ASSASSIN = \"assassin\",\n    BERSERKER = \"berserker\",\n    SHIELDER = \"shielder\",\n    RULER = \"ruler\",\n    ALTER_EGO = \"alterEgo\",\n    AVENGER = \"avenger\",\n    GRAND_CASTER = \"grandCaster\",\n    BEAST_II = \"beastII\",\n    BEAST_I = \"beastI\",\n    MOON_CANCER = \"moonCancer\",\n    BEAST_IIIR = \"beastIIIR\",\n    FOREIGNER = \"foreigner\",\n    BEAST_IIIL = \"beastIIIL\",\n    BEAST_UNKNOWN = \"beastUnknown\",\n    ALL = \"ALL\",\n    EXTRA = \"EXTRA\",\n}\n\nexport default ClassName;\n","import React from \"react\";\nimport ClassName from \"../Api/Data/ClassName\";\n\nconst classTypes = new Map<number, number>([\n    [1, 1],\n    [2, 1],\n    [3, 2],\n    [4, 3],\n    [5, 3],\n]);\nconst unknownClassType = 3;\nconst classIds = new Map<ClassName, number>([\n    [ClassName.SABER, 1],\n    [ClassName.ARCHER, 2],\n    [ClassName.LANCER, 3],\n    [ClassName.RIDER, 4],\n    [ClassName.CASTER, 5],\n    [ClassName.ASSASSIN, 6],\n    [ClassName.BERSERKER, 7],\n    [ClassName.SHIELDER, 8],\n    [ClassName.RULER, 9],\n    [ClassName.ALTER_EGO, 10],\n    [ClassName.AVENGER, 11],\n    [ClassName.MOON_CANCER, 23],\n    [ClassName.FOREIGNER, 25],\n    [ClassName.GRAND_CASTER, 5],\n    [ClassName.BEAST_I, 20],\n    [ClassName.BEAST_II, 20],\n    [ClassName.BEAST_IIIL, 20],\n    [ClassName.BEAST_IIIR, 20],\n    [ClassName.BEAST_UNKNOWN, 20],\n\n    [ClassName.ALL, 1001],\n    [ClassName.EXTRA, 1002],\n]);\nconst unknownClassId = 12;\n\ninterface IProps {\n    className: ClassName;\n    rarity?: number;\n    height?: number;\n}\n\nclass ClassIcon extends React.Component<IProps> {\n    render() {\n        return (\n            <img alt={''} src={this.location()}\n                 style={{height: this.props.height ?? 24}}/>\n        );\n    }\n\n    private location(): string {\n        let classId = classIds.has(this.props.className) ? classIds.get(this.props.className) : unknownClassId,\n            rarity = this.props.rarity ?? 5,\n            type = classTypes.has(rarity) ? classTypes.get(rarity) : unknownClassType;\n\n        return `https://assets.atlasacademy.io/GameData/NA/ClassIcons/class${type}_${classId}.png`;\n    }\n}\n\nexport default ClassIcon;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Region from \"../Api/Data/Region\";\nimport Servant from \"../Api/Data/Servant\";\nimport ClassIcon from \"../Component/ClassIcon\";\n\ninterface IProps {\n    region: Region;\n    servant: Servant;\n    iconHeight?: number;\n}\n\nclass ServantDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/servant/${this.props.servant.id}`}>\n                <ClassIcon className={this.props.servant.className}\n                           rarity={this.props.servant.rarity}\n                           height={this.props.iconHeight}/>\n                {' '}\n                {this.props.servant.name}\n            </Link>\n        );\n    }\n}\n\nexport default ServantDescriptor;\n","import React from \"react\";\nimport {DataVal} from \"../../Api/Data/Func\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\n\ninterface IProps {\n    dataVal: DataVal;\n}\n\nclass DataValMainData extends React.Component<IProps> {\n    render() {\n        return (\n            <DataTable data={{\n                \"Raw\": <RawDataViewer data={this.props.dataVal}/>,\n                ...this.props.dataVal\n            }}/>\n        );\n    }\n}\n\nexport default DataValMainData;\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport NoblePhantasm from \"../../Api/Data/NoblePhantasm\";\nimport Region from \"../../Api/Data/Region\";\nimport FuncDescriptor from \"../../Descriptor/FuncDescriptor\";\nimport {getTargetVersionValues} from \"../../Helper/FuncHelper\";\nimport DataValMainData from \"../Func/DataValMainData\";\nimport FuncMainData from \"../Func/FuncMainData\";\n\ninterface IProps {\n    region: Region;\n    noblePhantasm: NoblePhantasm;\n    level: number;\n    overcharge: number;\n}\n\nclass NoblePhantasmVersion extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {this.props.noblePhantasm.functions.map((func, index) => {\n                    const dataVal = getTargetVersionValues(func, this.props.level, this.props.overcharge);\n\n                    return (\n                        <div key={index}>\n                            <h3>Effect #{index + 1}</h3>\n                            <p>\n                                <FuncDescriptor region={this.props.region} func={func}/>\n                            </p>\n\n                            <Row>\n                                <Col xs={12} md={6}>\n                                    <h5>Function</h5>\n                                    <FuncMainData region={this.props.region} func={func}/>\n                                </Col>\n                                <Col xs={12} md={6}>\n                                    <h5>Values</h5>\n                                    <DataValMainData dataVal={dataVal ?? {}}/>\n                                </Col>\n                            </Row>\n\n                            <hr/>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default NoblePhantasmVersion;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport EntityType from \"../Api/Data/EntityType\";\nimport NoblePhantasm from \"../Api/Data/NoblePhantasm\";\nimport Region from \"../Api/Data/Region\";\nimport DataTable from \"../Component/DataTable\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\nimport ServantDescriptor from \"../Descriptor/ServantDescriptor\";\nimport NoblePhantasmVersion from \"./NoblePhantasm/NoblePhantasmVersion\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    noblePhantasm?: NoblePhantasm;\n    level: number;\n    overcharge: number;\n}\n\nclass NoblePhantasmPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            level: 1,\n            overcharge: 1,\n        };\n    }\n\n    componentDidMount() {\n        this.loadNp();\n    }\n\n    async loadNp() {\n        try {\n            const noblePhantasm = await Connection.noblePhantasm(this.props.region, this.props.id);\n\n            this.setState({\n                loading: false,\n                noblePhantasm: noblePhantasm,\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    private changeLevel(level: number) {\n        this.setState({\n            level: level\n        });\n    }\n\n    private changeOvercharge(level: number) {\n        this.setState({\n            overcharge: level\n        });\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error} />;\n\n        if (this.state.loading || !this.state.noblePhantasm)\n            return <Loading/>;\n\n        const noblePhantasm = this.state.noblePhantasm;\n\n        return (\n            <div>\n                <h1>{noblePhantasm.name}</h1>\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={noblePhantasm}/>,\n                    \"ID\": noblePhantasm.id,\n                    \"Name\": noblePhantasm.name,\n                    \"Type\": noblePhantasm.type,\n                    \"Rank\": noblePhantasm.rank,\n                    \"Detail\": noblePhantasm.detail,\n                    \"Card Type\": noblePhantasm.card,\n                    \"Owner\": (\n                        <div>\n                            {noblePhantasm.reverseServants\n                                .filter(servant => {\n                                    return servant.type === EntityType.NORMAL\n                                        || servant.type === EntityType.HEROINE\n                                })\n                                .map((servant, index) => {\n                                    return (\n                                        <div>\n                                            <ServantDescriptor region={this.props.region}\n                                                               servant={servant}\n                                                               iconHeight={24}/>\n                                        </div>\n                                    );\n                                })\n                            }\n                        </div>\n                    )\n                }}/>\n\n                <br/>\n                <Row>\n                    <Col>\n                        <Form inline style={{justifyContent: 'flex-end'}}>\n                            <Form.Control as={'select'} value={this.state.level}\n                                          onChange={(ev: Event) => this.changeLevel(parseInt(ev.target.value))}>\n                                {[1, 2, 3, 4, 5].map(level => (\n                                    <option key={level} value={level}>NP LEVEL {level}</option>\n                                ))}\n                            </Form.Control>\n                        </Form>\n                    </Col>\n                    <Col>\n                        <Form inline>\n                            <Form.Control as={'select'} value={this.state.overcharge}\n                                          onChange={(ev: Event) => this.changeOvercharge(parseInt(ev.target.value))}>\n                                {[1, 2, 3, 4, 5].map(level => (\n                                    <option key={level} value={level}>OVERCHARGE {level}</option>\n                                ))}\n                            </Form.Control>\n                        </Form>\n                    </Col>\n                </Row>\n\n                <br/>\n                <NoblePhantasmVersion region={this.props.region}\n                                      noblePhantasm={noblePhantasm}\n                                      level={this.state.level}\n                                      overcharge={this.state.overcharge}/>\n            </div>\n        );\n    }\n}\n\nexport default NoblePhantasmPage;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Quest from \"../Api/Data/Quest\";\nimport Region from \"../Api/Data/Region\";\nimport DataTable from \"../Component/DataTable\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n    phase: number;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    quest?: Quest;\n}\n\nclass QuestPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.loadQuest();\n    }\n\n    async loadQuest() {\n        try {\n            const quest = await Connection.quest(this.props.region, this.props.id, this.props.phase);\n\n            this.setState({\n                loading: false,\n                quest: quest,\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error} />;\n\n        if (this.state.loading || !this.state.quest)\n            return <Loading/>;\n\n        const quest = this.state.quest;\n\n        return (\n            <div>\n                <h1>{quest.name}</h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={quest}/>,\n                    \"ID\": quest.id,\n                    \"Phase\": quest.phase,\n                    \"Name\": quest.name,\n                    \"Type\": quest.type,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default QuestPage;\n","import React from \"react\";\nimport Servant from \"../../Api/Data/Servant\";\nimport ClassIcon from \"../../Component/ClassIcon\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\nimport RarityDescriptor from \"../../Descriptor/RarityDescriptor\";\n\ninterface IProps {\n    servant: Servant;\n}\n\nclass ServantMainData extends React.Component<IProps> {\n    render() {\n        const servant = this.props.servant;\n\n        return (\n            <div>\n                <h1>\n                    <ClassIcon className={servant.className} rarity={servant.rarity} height={50}/>\n                    &nbsp;\n                    {servant.name}\n                </h1>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={servant}/>,\n                    \"ID\": servant.id,\n                    \"Collection\": servant.collectionNo,\n                    \"Name\": servant.name,\n                    \"Class\": servant.className,\n                    \"Rarity\": <RarityDescriptor rarity={servant.rarity}/>,\n                    \"Cost\": servant.cost,\n                    \"Gender\": servant.gender,\n                    \"Attribute\": servant.attribute,\n                    \"Max Lv.\": servant.lvMax,\n                    \"Base Hp\": servant.hpBase,\n                    \"Base Atk\": servant.atkBase,\n                    \"Max Hp\": servant.hpMax,\n                    \"Max Atk\": servant.atkMax,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantMainData;\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Servant from \"../../Api/Data/Servant\";\nimport BuffIcon from \"../../Component/BuffIcon\";\nimport DataTable from \"../../Component/DataTable\";\nimport {asPercent} from \"../../Helper/OutputHelper\";\n\nconst buffIconPath = 'https://assets.atlasacademy.io/GameData/JP/BuffIcons',\n    deathChanceIcon = `${buffIconPath}/bufficon_337.png`,\n    hitCountIcon = `${buffIconPath}/bufficon_349.png`,\n    starGenIcon = `${buffIconPath}/bufficon_310.png`,\n    showHits = function (hits: number[] | undefined): JSX.Element | string {\n        if (hits === undefined)\n            return '';\n\n        return <span>\n            {hits.map((hit, index) => {\n                return (index > 0 ? ', ' : '') + asPercent(hit, 0);\n            })}\n            &nbsp;-&nbsp;\n            {hits.length} Hits\n        </span>\n    };\n\ninterface IProps {\n    servant: Servant;\n}\n\nclass ServantMiscData extends React.Component<IProps> {\n    private hitsColumn() {\n        return (\n            <Col xs={12} md={12} lg={6}>\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={hitCountIcon}/>\n                            &nbsp;\n                            Hit Count\n                        </div>\n                    )}\n                    data={{\n                        \"Buster\": showHits(this.props.servant.hitsDistribution.buster),\n                        \"Arts\": showHits(this.props.servant.hitsDistribution.arts),\n                        \"Quick\": showHits(this.props.servant.hitsDistribution.quick),\n                        \"Extra\": showHits(this.props.servant.hitsDistribution.extra),\n                    }}/>\n            </Col>\n        );\n    }\n\n    private miscColumn() {\n        return (\n            <Col xs={12} md={12} lg={6}>\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={starGenIcon}/>&nbsp;Crit Stars\n                        </div>\n                    )}\n                    data={{\n                        \"Star Absorb\": this.props.servant.starAbsorb,\n                        \"Star Gen\": asPercent(this.props.servant.starGen, 1),\n                    }}/>\n\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={deathChanceIcon}/>&nbsp;Instant Death\n                        </div>\n                    )}\n                    data={{\n                        \"Death Chance\": asPercent(this.props.servant.instantDeathChance, 1),\n                    }}/>\n            </Col>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    {this.hitsColumn()}\n                    {this.miscColumn()}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default ServantMiscData;\n","import React from \"react\";\nimport Connection from \"../../Api/Connection\";\nimport Region from \"../../Api/Data/Region\";\nimport Skill from \"../../Api/Data/Skill\";\nimport ServantEffectBreakdownContent from \"./ServantEffectBreakdownContent\";\n\ninterface IProps {\n    region: Region;\n    levels: number;\n    skillId: number;\n}\n\ninterface IState {\n    skill?: Skill;\n}\n\nclass ServantAdditionalEffectBreakdown extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    async componentDidMount() {\n        try {\n            this.setState({\n                skill: await Connection.skill(this.props.region, this.props.skillId)\n            });\n        } catch (e) {\n            // do nothing on failure\n        }\n    }\n\n    render() {\n        if (this.state.skill === undefined) {\n            return null;\n        }\n\n        return (\n            <ServantEffectBreakdownContent region={this.props.region}\n                                           funcs={this.state.skill.functions}\n                                           levels={this.props.levels}\n                                           relatedSkillId={this.state.skill.id}/>\n        );\n    }\n}\n\nexport default ServantAdditionalEffectBreakdown;\n","import React from \"react\";\nimport Func from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport FuncDescriptor from \"../../Descriptor/FuncDescriptor\";\nimport SkillReferenceDescriptor from \"../../Descriptor/SkillReferenceDescriptor\";\nimport {describeMutators, getRelatedSkillIds} from \"../../Helper/FuncHelper\";\nimport ServantAdditionalEffectBreakdown from \"./ServantAdditionalEffectBreakdown\";\n\ninterface IProps {\n    region: Region;\n    cooldowns?: number[];\n    funcs: Func[];\n    levels: number;\n    relatedSkillId?: number;\n}\n\nclass ServantEffectBreakdownContent extends React.Component<IProps> {\n    render() {\n        return (\n            <React.Fragment>\n                {this.props.cooldowns ? (\n                    <tr>\n                        <td className={'effect'}>Cooldown</td>\n                        {this.props.cooldowns.map((cooldown, index) => {\n                            return <td key={index}>{cooldown}</td>;\n                        })}\n                    </tr>\n                ) : null}\n                {this.props.funcs.map((func, index) => {\n                    let mutatingDescriptions = describeMutators(this.props.region, func),\n                        relatedSkillIds = getRelatedSkillIds(func);\n\n                    for (let i = 0; i < this.props.levels; i++) {\n                        if (!mutatingDescriptions[i])\n                            mutatingDescriptions.push('-');\n                    }\n\n                    return (\n                        <React.Fragment key={index}>\n                            <tr>\n                                <td className={'effect'}>\n                                    {\n                                        this.props.relatedSkillId\n                                            ? <SkillReferenceDescriptor region={this.props.region}\n                                                                        id={this.props.relatedSkillId}/>\n                                            : null\n                                    }\n                                    {this.props.relatedSkillId ? ' ' : ''}\n                                    <FuncDescriptor region={this.props.region} func={func}/>\n                                </td>\n                                {mutatingDescriptions.map((description, index) => {\n                                    return (\n                                        <td key={index}>{description}</td>\n                                    );\n                                })}\n                            </tr>\n                            {relatedSkillIds.map((skillId, index) => {\n                                return <ServantAdditionalEffectBreakdown key={skillId}\n                                                                         region={this.props.region}\n                                                                         skillId={skillId}\n                                                                         levels={this.props.levels}/>\n                            })}\n                        </React.Fragment>\n                    );\n                })}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ServantEffectBreakdownContent;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport Func from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\n\nimport \"./ServantEffectBreakdown.css\";\nimport ServantEffectBreakdownContent from \"./ServantEffectBreakdownContent\";\n\ninterface IProps {\n    region: Region;\n    cooldowns?: number[];\n    funcs: Func[];\n    levels: number;\n}\n\nclass ServantEffectBreakdown extends React.Component<IProps> {\n    render() {\n        return (\n            <Table responsive className={'effect-breakdown'}>\n                <thead>\n                <tr>\n                    <th>Effect</th>\n                    {Array.from(Array(this.props.levels).keys()).map(level => {\n                        return <td key={level}>{level + 1}</td>;\n                    })}\n                </tr>\n                </thead>\n                <tbody>\n                <ServantEffectBreakdownContent region={this.props.region}\n                                               cooldowns={this.props.cooldowns}\n                                               funcs={this.props.funcs}\n                                               levels={this.props.levels}/>\n                </tbody>\n            </Table>\n        );\n    }\n}\n\nexport default ServantEffectBreakdown;\n","import React from \"react\";\nimport {Alert} from \"react-bootstrap\";\nimport {default as ServantNoblePhantasmData} from \"../../Api/Data/NoblePhantasm\";\nimport Region from \"../../Api/Data/Region\";\nimport NoblePhantasmDescriptor from \"../../Descriptor/NoblePhantasmDescriptor\";\nimport QuestDescriptor from \"../../Descriptor/QuestDescriptor\";\nimport {asPercent, handleNewLine, mergeElements} from \"../../Helper/OutputHelper\";\nimport ServantEffectBreakdown from \"./ServantEffectBreakdown\";\n\ninterface IProps {\n    region: Region;\n    noblePhantasm: ServantNoblePhantasmData;\n}\n\nclass ServantNoblePhantasm extends React.Component<IProps> {\n    render() {\n        const np = this.props.noblePhantasm;\n\n        return (\n            <div>\n                <h3>\n                    <NoblePhantasmDescriptor region={this.props.region} noblePhantasm={np}/>\n                </h3>\n\n                {np.condQuestId && np.condQuestPhase ? (\n                    <Alert variant={'primary'}>\n                        Available after <QuestDescriptor region={this.props.region}\n                                                         questId={np.condQuestId}\n                                                         questPhase={np.condQuestPhase}/>\n                    </Alert>\n                ) : null}\n\n                <p>{handleNewLine(np.detail)}</p>\n\n                <p>\n                    Card: {np.card}<br/>\n                    Hits: {np.npDistribution.length} Hits\n                    - {mergeElements(np.npDistribution.map(hit => asPercent(hit, 0)), ', ')}\n                </p>\n\n                <ServantEffectBreakdown region={this.props.region}\n                                        funcs={np.functions}\n                                        levels={5}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantNoblePhantasm;\n","import React from \"react\";\nimport {Alert, Table} from \"react-bootstrap\";\nimport Region from \"../../Api/Data/Region\";\nimport Skill from \"../../Api/Data/Skill\";\nimport FuncDescriptor from \"../../Descriptor/FuncDescriptor\";\nimport QuestDescriptor from \"../../Descriptor/QuestDescriptor\";\nimport SkillDescriptor from \"../../Descriptor/SkillDescriptor\";\nimport {handleNewLine} from \"../../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n}\n\nclass ServantPassive extends React.Component<IProps> {\n    render() {\n        const skill = this.props.skill;\n        return (\n            <div>\n                <h3>\n                    <SkillDescriptor region={this.props.region} skill={skill} iconHeight={33}/>\n                </h3>\n\n                {skill.condQuestId && skill.condQuestPhase ? (\n                    <Alert variant={'primary'}>\n                        Available after <QuestDescriptor region={this.props.region}\n                                                         questId={skill.condQuestId}\n                                                         questPhase={skill.condQuestPhase}/>\n                    </Alert>\n                ) : null}\n\n                <p>{handleNewLine(skill.detail)}</p>\n\n                <Table responsive>\n                    <thead>\n                    <tr>\n                        <th>Effect</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {skill.functions.map((func, index) => {\n                        return (\n                            <tr key={index}>\n                                <td>\n                                    <FuncDescriptor region={this.props.region} func={func}/>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default ServantPassive;\n","import React from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport Region from \"../../Api/Data/Region\";\nimport BasicListEntity from \"../../Api/Data/BasicListEntity\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps extends RouteComponentProps {\n    region: Region;\n    id: number;\n    servants: BasicListEntity[];\n}\n\nclass ServantPicker extends React.Component<IProps> {\n    private changeServant(id: number) {\n        this.props.history.push(`/${this.props.region}/servant/${id}`);\n    }\n\n    render() {\n        return (\n            <div>\n                Jump to:\n                <FormControl as={\"select\"} custom\n                             onChange={(ev: Event) => {\n                                 this.changeServant(parseInt(ev.target.value));\n                             }}\n                             value={this.props.id}>\n                    {this.props.servants\n                        .slice()\n                        .reverse()\n                        .map((servant, index) => {\n                            return (\n                                <option key={index} value={servant.collectionNo}>\n                                    {servant.name}\n                                </option>\n                            );\n                        })\n                    }\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ServantPicker);\n","import React from \"react\";\nimport {AssetMap} from \"../../Api/Data/AssetCollection\";\nimport Servant from \"../../Api/Data/Servant\";\n\nimport \"./ServantPortrait.css\";\n\ninterface IProps {\n    servant: Servant;\n}\n\ninterface IState {\n    assetMap?: AssetMap;\n    assetKey?: string;\n}\n\nclass ServantPortrait extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        const assetMap = (\n                props.servant.extraAssets.charaGraph.ascension\n                ?? Object.values(props.servant.extraAssets.charaGraph).shift()\n            ),\n            assetKey = assetMap === undefined ? undefined : Object.keys(assetMap).shift();\n\n        this.state = {assetMap, assetKey};\n    }\n\n    render() {\n        return (\n            <div>\n                <img alt={this.props.servant.name}\n                     id={'servant-portrait'}\n                     src={(\n                         this.state.assetMap && this.state.assetKey\n                             ? this.state.assetMap[this.state.assetKey]\n                             : undefined\n                     )}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantPortrait;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport {ProfileStats} from \"../../Api/Data/Profile\";\nimport Region from \"../../Api/Data/Region\";\n\ninterface IProps {\n    region: Region;\n    stats: ProfileStats;\n}\n\nclass ServantProfileStats extends React.Component<IProps> {\n    render() {\n        const stats = this.props.stats;\n\n        return (\n            <div>\n                <h3>Stats</h3>\n\n                <Table responsive>\n                    <thead>\n                    <tr>\n                        <th>Strength</th>\n                        <th>Endurance</th>\n                        <th>Agility</th>\n                        <th>Magic</th>\n                        <th>Luck</th>\n                        <th>NP</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>{stats.strength}</td>\n                        <td>{stats.endurance}</td>\n                        <td>{stats.agility}</td>\n                        <td>{stats.magic}</td>\n                        <td>{stats.luck}</td>\n                        <td>{stats.np}</td>\n                    </tr>\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default ServantProfileStats;\n","import React from \"react\";\nimport {Alert} from \"react-bootstrap\";\nimport Region from \"../../Api/Data/Region\";\nimport Skill from \"../../Api/Data/Skill\";\nimport QuestDescriptor from \"../../Descriptor/QuestDescriptor\";\nimport SkillDescriptor from \"../../Descriptor/SkillDescriptor\";\nimport {handleNewLine} from \"../../Helper/OutputHelper\";\nimport ServantEffectBreakdown from \"./ServantEffectBreakdown\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n}\n\nclass ServantSkill extends React.Component<IProps, any> {\n    render() {\n        const skill = this.props.skill;\n        return (\n            <div>\n                <h3>\n                    <SkillDescriptor region={this.props.region} skill={skill} iconHeight={33}/>\n                </h3>\n\n                {skill.condQuestId && skill.condQuestPhase ? (\n                    <Alert variant={'primary'}>\n                        Available after <QuestDescriptor region={this.props.region}\n                                                         questId={skill.condQuestId}\n                                                         questPhase={skill.condQuestPhase}/>\n                    </Alert>\n                ) : null}\n\n                <p>{handleNewLine(skill.detail)}</p>\n\n                <ServantEffectBreakdown region={this.props.region}\n                                        cooldowns={skill.coolDown}\n                                        funcs={this.props.skill.functions}\n                                        levels={10}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantSkill;\n","import React from \"react\";\nimport Region from \"../../Api/Data/Region\";\nimport Trait from \"../../Api/Data/Trait\";\nimport TraitDescriptor from \"../../Descriptor/TraitDescriptor\";\nimport {joinElements} from \"../../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    traits: Trait[];\n}\n\nclass ServantTraits extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {joinElements(\n                    this.props.traits.map(trait => <TraitDescriptor region={this.props.region} trait={trait}/>),\n                    ', '\n                ).map(\n                    (element, index) => <span key={index}>{element}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ServantTraits;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Col, Row, Tab, Tabs} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport BasicListEntity from \"../Api/Data/BasicListEntity\";\nimport Region from \"../Api/Data/Region\";\nimport Servant from \"../Api/Data/Servant\";\nimport TraitMap from \"../Api/Data/TraitMap\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport ServantMainData from \"./Servant/ServantMainData\";\nimport ServantMiscData from \"./Servant/ServantMiscData\";\nimport ServantNoblePhantasm from \"./Servant/ServantNoblePhantasm\";\nimport ServantPassive from \"./Servant/ServantPassive\";\nimport ServantPicker from \"./Servant/ServantPicker\";\nimport ServantPortrait from \"./Servant/ServantPortrait\";\nimport ServantProfileComments from \"./Servant/ServantProfileComments\";\nimport ServantProfileStats from \"./Servant/ServantProfileStats\";\nimport ServantSkill from \"./Servant/ServantSkill\";\nimport ServantTraits from \"./Servant/ServantTraits\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    id: number;\n    servants: BasicListEntity[];\n    servant?: Servant;\n}\n\nclass ServantPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            id: this.props.id,\n            servants: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadServant();\n    }\n\n    async loadServant() {\n        try {\n            let [servants, servant] = await Promise.all<BasicListEntity[], Servant, TraitMap>([\n                Connection.servantList(this.props.region),\n                Connection.servant(this.props.region, this.state.id),\n                Connection.traitMap(this.props.region)\n            ]);\n\n            this.setState({\n                loading: false,\n                servants,\n                servant\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading || !this.state.servant)\n            return <Loading/>;\n\n        const servant = this.state.servant;\n\n        return (\n            <div id={'servant'}>\n                <ServantPicker region={this.props.region}\n                               servants={this.state.servants}\n                               id={this.state.servant.collectionNo}/>\n                <hr/>\n\n                <Row>\n                    <Col xs={{span: 12, order: 2}} lg={{span: 6, order: 1}}>\n                        <ServantMainData servant={this.state.servant}/>\n                    </Col>\n                    <Col xs={{span: 12, order: 1}} lg={{span: 6, order: 2}}>\n                        <ServantPortrait servant={this.state.servant}/>\n                    </Col>\n                </Row>\n\n                <Tabs id={'servant-tabs'} defaultActiveKey={'skill-1'} transition={false}>\n                    <Tab eventKey={'skill-1'} title={'Skill 1'}>\n                        <br/>\n                        {this.state.servant.skills\n                            .filter(skill => skill.num === 1)\n                            .map((skill, index) => {\n                                return <ServantSkill region={this.props.region} key={index} skill={skill}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'skill-2'} title={'Skill 2'}>\n                        <br/>\n                        {this.state.servant.skills\n                            .filter(skill => skill.num === 2)\n                            .map((skill, index) => {\n                                return <ServantSkill region={this.props.region} key={index} skill={skill}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'skill-3'} title={'Skill 3'}>\n                        <br/>\n                        {this.state.servant.skills\n                            .filter(skill => skill.num === 3)\n                            .map((skill, index) => {\n                                return <ServantSkill region={this.props.region} key={index} skill={skill}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'nps'} title={'Noble Phantasms'}>\n                        <br/>\n                        {this.state.servant.noblePhantasms\n                            .filter(noblePhantasm => noblePhantasm.functions.length > 0)\n                            .map((noblePhantasm, index) => {\n                                return <ServantNoblePhantasm region={this.props.region} key={index}\n                                                             noblePhantasm={noblePhantasm}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'passives'} title={'Passives'}>\n                        <br/>\n                        <Row>\n                            {servant.classPassive.map((skill, index) => {\n                                return (\n                                    <Col xs={12}\n                                         lg={(servant.classPassive.length ?? 1) > 1 ? 6 : 12}\n                                         key={index}>\n                                        <ServantPassive region={this.props.region} skill={skill}/>\n                                    </Col>\n                                );\n                            })}\n                        </Row>\n                    </Tab>\n                    <Tab eventKey={'traits'} title={'Traits'}>\n                        <br/>\n                        <ServantTraits region={this.props.region} traits={this.state.servant.traits}/>\n                    </Tab>\n                    <Tab eventKey={'misc'} title={'Misc'}>\n                        <br/>\n                        <ServantMiscData servant={this.state.servant}/>\n                    </Tab>\n                    <Tab eventKey={'lore'} title={'Profile'}>\n                        <br/>\n                        <ServantProfileStats region={this.props.region} stats={servant.profile.stats}/>\n                        <hr/>\n                        <ServantProfileComments region={this.props.region} comments={servant.profile.comments}/>\n                    </Tab>\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default ServantPage;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport BasicListEntity from \"../Api/Data/BasicListEntity\";\nimport ClassName from \"../Api/Data/ClassName\";\nimport Region from \"../Api/Data/Region\";\nimport ClassIcon from \"../Component/ClassIcon\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport FaceIcon from \"../Component/FaceIcon\";\nimport Loading from \"../Component/Loading\";\nimport RarityDescriptor from \"../Descriptor/RarityDescriptor\";\n\nimport './ServantsPage.css';\n\nconst classFilters: ClassName[] = [\n    ClassName.ALL,\n    ClassName.SABER,\n    ClassName.ARCHER,\n    ClassName.LANCER,\n    ClassName.RIDER,\n    ClassName.CASTER,\n    ClassName.ASSASSIN,\n    ClassName.BERSERKER,\n    ClassName.EXTRA,\n];\n\ninterface Event extends React.MouseEvent<HTMLInputElement> {\n\n}\n\ninterface IProps {\n    region: Region,\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    servants: BasicListEntity[];\n    activeClassFilters: ClassName[];\n    activeRarityFilters: number[];\n}\n\nclass ServantsPage extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            servants: [],\n            activeClassFilters: classFilters.slice(),\n            activeRarityFilters: [1, 2, 3, 4, 5],\n        };\n    }\n\n    componentDidMount() {\n        try {\n            Connection.servantList(this.props.region).then(servantList => {\n                this.setState({\n                    loading: false,\n                    servants: servantList\n                });\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    private isClassFilterActive(className: ClassName): boolean {\n        return this.state.activeClassFilters.indexOf(className) !== -1;\n    }\n\n    private isExtra(className: ClassName): boolean {\n        return !(className === ClassName.SABER\n            || className === ClassName.ARCHER\n            || className === ClassName.LANCER\n            || className === ClassName.RIDER\n            || className === ClassName.CASTER\n            || className === ClassName.ASSASSIN\n            || className === ClassName.BERSERKER);\n    }\n\n    private toggleClassFilter(className: ClassName): void {\n        if (className === ClassName.ALL) {\n            if (this.isClassFilterActive(className)) {\n                this.setState({\n                    activeClassFilters: [],\n                    activeRarityFilters: [],\n                });\n            } else {\n                this.setState({\n                    activeClassFilters: classFilters.slice(),\n                    activeRarityFilters: [1, 2, 3, 4, 5],\n                });\n            }\n        } else {\n            let exists = false,\n                activeFilters = this.state.activeClassFilters.filter(activeClassName => {\n                    if (activeClassName === ClassName.ALL)\n                        return false;\n\n                    if (activeClassName === className) {\n                        exists = true;\n                        return false;\n                    }\n\n                    return true;\n                });\n\n            if (!exists)\n                activeFilters.push(className);\n\n            this.setState({activeClassFilters: activeFilters});\n        }\n    }\n\n    private toggleRarityFilter(rarity: number): void {\n        const exists = this.state.activeRarityFilters.indexOf(rarity) !== -1;\n\n        if (exists) {\n            this.setState({\n                activeClassFilters: this.state.activeClassFilters.filter(activeClass => activeClass !== ClassName.ALL),\n                activeRarityFilters: this.state.activeRarityFilters.filter(activeRarity => activeRarity !== rarity)\n            });\n        } else {\n            this.setState({\n                activeClassFilters: this.state.activeClassFilters.filter(activeClass => activeClass !== ClassName.ALL),\n                activeRarityFilters: [\n                    ...this.state.activeRarityFilters,\n                    rarity\n                ]\n            });\n        }\n    }\n\n    private servants(): BasicListEntity[] {\n        let list = this.state.servants.slice().reverse();\n\n        if (this.state.activeRarityFilters.length !== 5) {\n            list = list.filter(entity => {\n                return this.state.activeRarityFilters.indexOf(entity.rarity) !== -1;\n            });\n        }\n\n        if (!this.isClassFilterActive(ClassName.ALL)) {\n            list = list.filter(entity => {\n                for (let x in this.state.activeClassFilters) {\n                    const className = this.state.activeClassFilters[x];\n\n                    if (className === ClassName.EXTRA && this.isExtra(entity.className)) {\n                        return true;\n                    } else if (entity.className === className) {\n                        return true;\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        return list;\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading)\n            return <Loading/>;\n\n        return (\n            <div id=\"servants\">\n                <p className={'text-center'}>\n                    {classFilters.map(className => {\n                        const active = this.isClassFilterActive(className);\n                        return (\n                            <span key={className}\n                                  className={'filter'}\n                                  style={{opacity: active ? 1 : 0.5}}\n                                  onClick={(ev: Event) => {\n                                      this.toggleClassFilter(className);\n                                  }}>\n                                <ClassIcon height={50} rarity={active ? 5 : 3} className={className}/>\n                            </span>\n                        );\n                    })}\n                </p>\n\n                <p className={'text-center'}>\n                    {[1, 2, 3, 4, 5].map(rarity => {\n                        const active = this.state.activeRarityFilters.indexOf(rarity) !== -1;\n\n                        return (\n                            <span key={rarity}\n                                  className={'filter'}\n                                  style={{opacity: active ? 1 : 0.5}}\n                                  onClick={(ev: Event) => {\n                                      this.toggleRarityFilter(rarity);\n                                  }}>\n                                <RarityDescriptor rarity={rarity} height={20}/>\n                            </span>\n                        );\n                    })}\n                </p>\n\n                <hr/>\n\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th style={{textAlign: \"center\", width: '1px'}}>#</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Class</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Thumbnail</th>\n                        <th>Name</th>\n                        <th>Rarity</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this\n                        .servants()\n                        .map((servant, index) => {\n                            const route = `/${this.props.region}/servant/${servant.collectionNo}`;\n\n                            return <tr key={index}>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        {servant.collectionNo}\n                                    </Link>\n                                </td>\n                                <td align={\"center\"}>\n                                    <ClassIcon className={servant.className} rarity={servant.rarity} height={50}/>\n                                </td>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        <FaceIcon type={servant.type}\n                                                  rarity={servant.rarity}\n                                                  location={servant.face}\n                                                  height={50}/>\n                                    </Link>\n                                </td>\n                                <td>\n                                    <Link to={route}>\n                                        {servant.name}\n                                    </Link>\n                                </td>\n                                <td>\n                                    <RarityDescriptor rarity={servant.rarity}/>\n                                </td>\n                            </tr>\n                        })\n                    }\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n\n}\n\nexport default ServantsPage;\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport CraftEssence from \"../Api/Data/CraftEssence\";\nimport Region from \"../Api/Data/Region\";\n\ninterface IProps {\n    region: Region;\n    craftEssence: CraftEssence;\n}\n\nclass CraftEssenceDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/craft-essence/${this.props.craftEssence.id}`}>\n                {this.props.craftEssence.name}\n                {' '}\n                <FontAwesomeIcon icon={faShare} />\n            </Link>\n        );\n    }\n}\n\nexport default CraftEssenceDescriptor;\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Region from \"../../Api/Data/Region\";\nimport Skill from \"../../Api/Data/Skill\";\nimport FuncDescriptor from \"../../Descriptor/FuncDescriptor\";\nimport {getTargetVersionValues} from \"../../Helper/FuncHelper\";\nimport DataValMainData from \"../Func/DataValMainData\";\nimport FuncMainData from \"../Func/FuncMainData\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n    level: number;\n}\n\nclass SkillVersion extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {this.props.skill.functions.map((func, index) => {\n                    const dataVal = getTargetVersionValues(func, this.props.level);\n\n                    return (\n                        <div key={index}>\n                            <h3>Effect #{index + 1}</h3>\n                            <p>\n                                <FuncDescriptor region={this.props.region} func={func}/>\n                            </p>\n\n                            <Row>\n                                <Col xs={12} md={6}>\n                                    <h5>Function</h5>\n                                    <FuncMainData region={this.props.region} func={func}/>\n                                </Col>\n                                <Col xs={12} md={6}>\n                                    <h5>Values</h5>\n                                    <DataValMainData dataVal={dataVal ?? {}}/>\n                                </Col>\n                            </Row>\n\n                            <hr/>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default SkillVersion;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport CraftEssence from \"../Api/Data/CraftEssence\";\nimport EntityType from \"../Api/Data/EntityType\";\nimport Region from \"../Api/Data/Region\";\nimport Servant from \"../Api/Data/Servant\";\nimport Skill from \"../Api/Data/Skill\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport DataTable from \"../Component/DataTable\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\nimport CraftEssenceDescriptor from \"../Descriptor/CraftEssenceDescriptor\";\nimport ServantDescriptor from \"../Descriptor/ServantDescriptor\";\nimport SkillVersion from \"./Skill/SkillVersion\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    skill?: Skill;\n    levels: number;\n    level: number;\n}\n\nclass SkillPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            levels: 1,\n            level: 1\n        };\n    }\n\n    componentDidMount() {\n        this.loadSkill();\n    }\n\n    async loadSkill() {\n        try {\n            const skill = await Connection.skill(this.props.region, this.props.id);\n\n            this.setState({\n                loading: false,\n                skill: skill,\n                levels: skill.functions[0].svals?.length ?? 1,\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    private changeLevel(level: number) {\n        this.setState({\n            level: level\n        });\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading || !this.state.skill)\n            return <Loading/>;\n\n        const skill = this.state.skill;\n\n        return (\n            <div>\n                <h1>\n                    <BuffIcon location={skill.icon} height={48}/>\n                    &nbsp;\n                    {skill.name}\n                </h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={skill}/>,\n                    \"ID\": skill.id,\n                    \"Name\": skill.name,\n                    \"Detail\": skill.detail,\n                    \"Owner\": (\n                        <div>\n                            {skill.reverseServants\n                                .filter(entity => {\n                                    return entity.type === EntityType.NORMAL\n                                        || entity.type === EntityType.HEROINE\n                                        || entity.type === EntityType.SERVANT_EQUIP;\n                                })\n                                .map((entity, index) => {\n                                    if (entity.type === EntityType.SERVANT_EQUIP) {\n                                        return (\n                                            <div key={index}>\n                                                <CraftEssenceDescriptor region={this.props.region}\n                                                                        craftEssence={entity as CraftEssence}/>\n                                            </div>\n                                        );\n                                    } else {\n                                        return (\n                                            <div key={index}>\n                                                <ServantDescriptor region={this.props.region}\n                                                                   servant={entity as Servant}\n                                                                   iconHeight={24}/>\n                                            </div>\n                                        );\n                                    }\n                                })\n                            }\n                        </div>\n                    )\n                }}/>\n\n                <br/>\n                <Form inline style={{justifyContent: 'center'}}>\n                    <Form.Control as={'select'} value={this.state.level}\n                                  onChange={(ev: Event) => this.changeLevel(parseInt(ev.target.value))}>\n                        {Array.from(Array(this.state.levels).keys()).map(i => i + 1).map(level => (\n                            <option key={level} value={level}>LEVEL {level}</option>\n                        ))}\n                    </Form.Control>\n                </Form>\n\n                <br/>\n                <SkillVersion region={this.props.region}\n                              skill={skill}\n                              level={this.state.level}/>\n            </div>\n        );\n    }\n}\n\nexport default SkillPage;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport {Container} from \"react-bootstrap\";\nimport {HashRouter as Router, Route, Switch,} from \"react-router-dom\";\nimport ErrorStatus from \"./Component/ErrorStatus\";\nimport Navigation from \"./Component/Navigation\";\nimport BuffPage from \"./Page/BuffPage\";\nimport CraftEssencePage from \"./Page/CraftEssencePage\";\nimport CraftEssencesPage from \"./Page/CraftEssencesPage\";\nimport FuncPage from './Page/FuncPage';\nimport NoblePhantasmPage from \"./Page/NoblePhantasmPage\";\nimport QuestPage from \"./Page/QuestPage\";\nimport ServantPage from \"./Page/ServantPage\";\nimport ServantsPage from \"./Page/ServantsPage\";\nimport SkillPage from \"./Page/SkillPage\";\nimport Manager from \"./Setting/Manager\";\nimport {LanguageOption} from \"./Setting/Option\";\n\ninterface IState {\n    language: LanguageOption,\n}\n\nclass App extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            language: Manager.language(),\n        };\n\n        Manager.onUpdate(() => this.updateSettings());\n    }\n\n    private updateSettings() {\n        this.setState({\n            language: Manager.language(),\n        });\n    }\n\n    render() {\n        return (\n            <Router>\n                <Navigation/>\n                <br/>\n\n                <Container key={`${this.state.language}`}>\n                    <Switch>\n                        <Route exact={true} path=\"/:region(JP|NA)/buff/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <BuffPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/craft-essence/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <CraftEssencePage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/func/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <FuncPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/noble-phantasm/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <NoblePhantasmPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/quest/:id([0-9]+)/:phase([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                phase = props.match.params.phase,\n                                key = `${region}-${id}-${phase}`;\n                            return <QuestPage key={key} region={region} id={id} phase={phase}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/servant/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <ServantPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/skill/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <SkillPage key={key} region={region} id={id}/>\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/craft-essences\" render={props => {\n                            const region = props.match.params.region;\n                            return <CraftEssencesPage key={region} region={region}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/servants\" render={props => {\n                            const region = props.match.params.region;\n                            return <ServantsPage key={region} region={region}/>;\n                        }}/>\n                        <Route path=\"/\" exact={true} render={props => {\n                            return \"\";\n                        }}/>\n                        <Route path=\"*\" exact={true} render={props => {\n                            return <ErrorStatus/>;\n                        }}/>\n                    </Switch>\n                </Container>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}