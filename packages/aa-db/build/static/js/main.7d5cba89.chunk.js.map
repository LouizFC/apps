{"version":3,"sources":["Setting/Option.tsx","Component/ErrorStatus.tsx","Setting/Manager.tsx","Api/Data/Region.tsx","Setting/SettingForm.tsx","Component/Navigation.tsx","Api/ResultCache.tsx","Api/Connection.tsx","Component/BuffIcon.tsx","Component/DataTable.tsx","Component/Loading.tsx","Api/Data/Buff.tsx","Api/Data/Func.tsx","Component/RawDataViewer.tsx","Helper/OutputHelper.tsx","Descriptor/BuffValueDescriptor.tsx","Descriptor/FuncValueDescriptor.tsx","Helper/FuncHelper.tsx","Descriptor/Func/FuncDescriptorSections.tsx","Api/Data/EntityType.tsx","Descriptor/TraitDescriptor.tsx","Descriptor/BuffDescriptor.tsx","Descriptor/SkillDescriptor.tsx","Descriptor/SkillReferenceDescriptor.tsx","Descriptor/Func/handleTargetSection.tsx","Descriptor/FuncDescriptor.tsx","Descriptor/Func/handleChanceSection.tsx","Descriptor/Func/handleActionSection.tsx","Descriptor/Func/handleAmountSection.tsx","Descriptor/Func/handleAffectsSection.tsx","Descriptor/Func/handleDurationSection.tsx","Descriptor/Func/handleScalingSection.tsx","Page/BuffPage.tsx","Descriptor/RarityDescriptor.tsx","Page/CraftEssence/CraftEssenceMainData.tsx","Page/CraftEssence/CraftEssencePicker.tsx","Page/CraftEssence/CraftEssencePortrait.tsx","Descriptor/QuestDescriptor.tsx","Page/CraftEssence/CraftEssenceSkill.tsx","Page/CraftEssencePage.tsx","Component/FaceIcon.tsx","Page/CraftEssencesPage.tsx","Descriptor/NoblePhantasmDescriptor.tsx","Page/Func/FuncMainData.tsx","Page/FuncPage.tsx","Api/Data/ClassName.tsx","Component/ClassIcon.tsx","Descriptor/ServantDescriptor.tsx","Page/Func/DataValMainData.tsx","Page/NoblePhantasm/NoblePhantasmVersion.tsx","Page/NoblePhantasmPage.tsx","Page/QuestPage.tsx","Page/Servant/ServantMainData.tsx","Page/Servant/ServantMiscData.tsx","Page/Servant/ServantAdditionalEffectBreakdown.tsx","Page/Servant/ServantEffectBreakdownContent.tsx","Page/Servant/ServantEffectBreakdown.tsx","Page/Servant/ServantNoblePhantasm.tsx","Page/Servant/ServantPicker.tsx","Page/Servant/ServantPortrait.tsx","Page/Servant/ServantSkill.tsx","Page/Servant/ServantTraits.tsx","Page/ServantPage.tsx","Page/ServantsPage.tsx","Descriptor/CraftEssenceDescriptor.tsx","Page/Skill/SkillVersion.tsx","Page/SkillPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LanguageOption","images","ErrorStatus","message","undefined","this","props","error","response","status","data","detail","random","Math","floor","length","image","id","alt","src","style","display","height","margin","className","React","Component","Region","callbacks","Manager","value","window","localStorage","getItem","language","Object","values","find","v","DEFAULT","setItem","triggerCallbacks","callback","push","forEach","call","SettingForm","state","onUpdate","syncSettings","setState","setLanguage","Form","Group","Label","Control","as","onChange","ev","updateLanguage","target","map","Navigation","showSettings","Navbar","bg","variant","expand","Container","to","Toggle","Collapse","Nav","NavItem","Link","href","icon","faDiscord","faGithub","Button","onClick","faCog","Modal","show","onHide","hideSettings","Header","closeButton","Title","Body","ResultCache","cache","Map","pending","pendingCatches","key","fetcher","duration","get","Promise","resolve","reject","set","then","delete","setTimeout","catch","host","fetch","endpoint","a","axios","buff","craftEssence","craftEssenceList","func","noblePhantasm","quest","servant","servantList","skill","traitMap","Connection","region","query","ENGLISH","NA","getCacheableCraftEssenceList","JP","jp","na","names","entity","name","phase","getCacheableServantList","BuffIcon","location","verticalAlign","DataTable","header","Table","bordered","hover","keys","index","Loading","BuffType","FuncType","FuncTargetType","FuncTargetTeam","DataValField","RawDataViewer","showing","cursor","faSearchPlus","size","hide","collapsed","asPercent","pow","decimal","handleNewLine","text","joinElements","split","elements","separator","parts","pushElement","element","previous","toString","BuffValueDescriptor","type","UP_ATK","DOWN_ATK","UP_COMMANDALL","DOWN_COMMANDALL","UP_CRITICALDAMAGE","DOWN_CRITICALDAMAGE","UP_DEFENCE","DOWN_DEFENCE","UP_DROPNP","DOWN_DROPNP","UP_HATE","UP_TOLERANCE","DOWN_TOLERANCE","dataVal","Value","COMMANDATTACK_FUNCTION","Value2","NPATTACK_PREV_BUFF","SkillLV","FuncValueDescriptor","Rate","funcType","ADD_STATE","ADD_STATE_SHORT","buffs","DAMAGE_NP","DAMAGE_NP_INDIVIDUAL","DAMAGE_NP_STATE_INDIVIDUAL_FIX","DAMAGE_NP_PIERCE","GAIN_NP","LOSS_NP","Correction","Fragment","hasChangingDataVals","vals","i","JSON","stringify","hasUniqueValues","Set","describeMutators","fields","filter","field","val","getMutatingFieldNames","mutatingVals","x","getMutatingFieldValues","getDataValList","mutatingVal","funcUpdatesByLevel","getLevelDataValList","funcUpdatesByOvercharge","getOverchargeDataValList","isLevel","isOvercharge","dataVals","getTargetVersionValues","getMixedDataValList","svals","getStaticFieldValues","getStaticFieldNames","staticVals","level","overcharge","svals2","svals3","svals4","svals5","EntityType","FuncDescriptorSection","preposition","FuncDescriptorSections","chance","action","amount","affects","scaling","traitDescriptions","TraitDescriptor","trait","getDescription","upDownBuffs","up","UP_CHAGETD","down","description","UP_COMMANDATK","DOWN_COMMANDATK","UP_DAMAGE","DOWN_DAMAGE","UP_GRANT_INSTANTDEATH","DOWN_GRANT_INSTANTDEATH","UP_STARWEIGHT","DOWN_STARWEIGHT","typeDescriptions","AVOID_INSTANTDEATH","ADD_DAMAGE","AVOIDANCE","BREAK_AVOIDANCE","INVINCIBLE","REGAIN_HP","SUB_SELFDAMAGE","BuffDescriptor","cards","hasApplicableTrait","join","ckOpIndv","traitIds","traitId","ckSelfIndv","has","isUpDownBuff","getUpDownDescription","getCommandCardTypes","getTraitFilters","hasTypeDescription","getTypeDescription","hasTraitDescription","getTraitDescription","getEffectiveTargetsDescriptions","SkillDescriptor","iconHeight","SkillReferenceDescriptor","route","targetMap","SELF","PT_ONE","PT_ALL","ENEMY","ENEMY_ALL","PT_FULL","ENEMY_FULL","PT_OTHER","PT_ONE_OTHER","PT_RANDOM","ENEMY_OTHER","ENEMY_RANDOM","PT_OTHER_FULL","ENEMY_OTHER_FULL","PTSELECT_ONE_SUB","PTSELECT_SUB","PT_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_RANDOM","ENEMY_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_FIRST","COMMAND_TYPE_SELF_TREASURE_DEVICE","FuncDescriptor","staticValues","sections","section","NONE","handleChanceSection","SUB_STATE","traitVals","Target","DELAY_NPTURN","GAIN_HP","GAIN_STAR","INSTANT_DEATH","LOSS_HP_SAFE","handleActionSection","SkillID","handleAmountSection","functvals","handleAffectsSection","funcTargetType","handleTargetSection","Count","Turn","countDesc","turnDesc","handleDurationSection","handleScalingSection","concat","funcId","faShare","BuffPage","loading","loadBuff","reverseFunctions","assetMap","RarityDescriptor","rarity","CraftEssenceMainData","collectionNo","cost","lvMax","hpBase","atkBase","hpMax","atkMax","CraftEssencePicker","history","FormControl","custom","changeCraftEssence","parseInt","craftEssences","slice","reverse","withRouter","CraftEssencePortrait","extraAssets","charaGraph","ascension","shift","assetKey","QuestDescriptor","questId","questPhase","CraftEssenceSkill","condQuestId","condQuestPhase","Alert","responsive","functions","CraftEssencePage","loadCraftEssence","all","Row","Col","xs","span","order","lg","skills","num","FaceIcon","CraftEssencesPage","activeRarityFilters","list","e","indexOf","activeRarity","active","opacity","toggleRarityFilter","striped","textAlign","width","align","face","NoblePhantasmDescriptor","FuncMainData","funcTargetTeam","funcPopupText","FuncPage","loadFunc","funcPopupIcon","reverseSkills","reverseTds","ClassName","classTypes","classIds","SABER","ARCHER","LANCER","RIDER","CASTER","ASSASSIN","BERSERKER","SHIELDER","RULER","ALTER_EGO","AVENGER","MOON_CANCER","FOREIGNER","GRAND_CASTER","BEAST_I","BEAST_II","BEAST_IIIL","BEAST_IIIR","BEAST_UNKNOWN","ALL","EXTRA","ClassIcon","classId","ServantDescriptor","DataValMainData","NoblePhantasmVersion","md","NoblePhantasmPage","loadNp","rank","card","reverseServants","NORMAL","HEROINE","inline","justifyContent","changeLevel","changeOvercharge","QuestPage","loadQuest","ServantMainData","gender","attribute","buffIconPath","deathChanceIcon","hitCountIcon","starGenIcon","showHits","hits","hit","ServantMiscData","hitsDistribution","buster","arts","quick","extra","starAbsorb","starGen","instantDeathChance","hitsColumn","miscColumn","ServantAdditionalEffectBreakdown","skillId","funcs","levels","relatedSkillId","ServantEffectBreakdownContent","cooldowns","cooldown","mutatingDescriptions","relatedSkillIds","getRelatedSkillIds","ServantEffectBreakdown","Array","from","ServantNoblePhantasm","np","ServantPicker","changeServant","servants","ServantPortrait","ServantSkill","coolDown","ServantTraits","traits","ServantPage","loadServant","Tabs","defaultActiveKey","transition","Tab","eventKey","title","noblePhantasms","classFilters","ServantsPage","activeClassFilters","isClassFilterActive","exists","activeFilters","activeClassName","activeClass","isExtra","toggleClassFilter","CraftEssenceDescriptor","SkillVersion","SkillPage","loadSkill","SERVANT_EQUIP","App","updateSettings","exact","path","render","match","params","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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DAAAA,E,uBAAAA,E,iCAAAA,E,2CAAAA,E,+CAAAA,E,6CAAAA,E,sDAAAA,E,sDAAAA,E,gDAAAA,E,oDAAAA,E,qEAAAA,E,yEAAAA,E,2BAAAA,E,+BAAAA,E,0BAAAA,E,sBAAAA,E,0BAAAA,E,qDAAAA,E,yDAAAA,E,+BAAAA,E,sBAAAA,E,0BAAAA,E,8BAAAA,E,kCAAAA,E,mCAAAA,E,uCAAAA,E,gDAAAA,E,oDAAAA,E,sCAAAA,E,iCAAAA,E,2BAAAA,E,yCAAAA,E,4CAAAA,E,4CAAAA,M,cCEAC,K,YAAAA,E,qBAAAA,E,qBAAAA,E,gBAAAA,E,qBAAAA,E,qBAAAA,E,iBAAAA,E,iBAAAA,E,iBAAAA,E,6BAAAA,E,2BAAAA,E,6BAAAA,E,iBAAAA,E,6BAAAA,E,kCAAAA,E,0CAAAA,E,gCAAAA,E,wBAAAA,E,qDAAAA,E,6BAAAA,E,2BAAAA,E,6CAAAA,E,2CAAAA,E,uBAAAA,E,+BAAAA,E,0BAAAA,E,oCAAAA,E,4DAAAA,E,8BAAAA,E,2BAAAA,E,uBAAAA,E,qBAAAA,E,+BAAAA,E,qBAAAA,E,2BAAAA,E,oBAAAA,E,iCAAAA,E,mCAAAA,E,iCAAAA,E,qCAAAA,E,mCAAAA,E,uBAAAA,E,uCAAAA,E,eAAAA,E,aAAAA,E,iBAAAA,E,gCAAAA,E,4BAAAA,E,qCAAAA,E,8BAAAA,E,uCAAAA,E,qCAAAA,E,sBAAAA,E,4CAAAA,E,mCAAAA,E,4BAAAA,E,oDAAAA,E,2CAAAA,E,iCAAAA,M,cA8DAC,K,YAAAA,E,eAAAA,E,uBAAAA,E,eAAAA,E,cAAAA,E,6BAAAA,E,qBAAAA,E,iBAAAA,E,uBAAAA,E,mBAAAA,E,0BAAAA,E,qBAAAA,E,yBAAAA,E,2BAAAA,E,4BAAAA,E,kCAAAA,E,kCAAAA,E,2BAAAA,E,2CAAAA,E,6CAAAA,E,iDAAAA,E,2CAAAA,E,8BAAAA,E,4BAAAA,E,yCAAAA,E,mEAAAA,M,cA6BAC,K,gBAAAA,E,cAAAA,E,mCAAAA,M,cAMAC,K,YAAAA,E,YAAAA,E,cAAAA,E,cAAAA,E,gBAAAA,E,mBAAAA,E,gBAAAA,E,wBAAAA,E,qBAAAA,E,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","file":"static/js/main.7d5cba89.chunk.js","sourcesContent":["export enum LanguageOption {\n    DEFAULT = 'Default',\n    ENGLISH = 'English',\n}\n\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\n\nconst images = [\n    './assets/figure_016.png',\n    './assets/figure_074.png',\n    './assets/figure_127.png',\n    './assets/figure_145.png',\n    './assets/figure_150.png',\n    './assets/figure_174.png',\n    './assets/figure_189.png',\n    './assets/figure_198.png',\n    './assets/figure_241.png',\n    './assets/figure_253.png',\n];\n\ninterface IProps {\n    error?: AxiosError;\n}\n\nclass ErrorStatus extends React.Component<IProps> {\n    render() {\n        let message: string;\n\n        if (this.props.error === undefined) {\n            message = 'Not Found';\n        } else if (this.props.error.response?.status === 500) {\n            message = 'Server Error';\n        } else if (this.props.error.response?.status === 404) {\n            message = 'Not Found';\n        } else {\n            message = 'Code: ' + this.props.error.response?.status;\n        }\n\n        if (\n            typeof this.props.error?.response?.data === \"object\"\n            && this.props.error.response.data.detail !== undefined\n        ) {\n            message = this.props.error.response.data.detail;\n        }\n\n        const random = Math.floor(Math.random() * images.length),\n            image = images[random];\n\n        return (\n            <div id={'error-status'}>\n                <img alt={'Error'} src={image} style={{\n                    display: \"block\",\n                    height: 300,\n                    margin: '0 auto',\n                }}/>\n\n                <p className={'text-center'} style={{margin: 50}}>\n                    <strong>ERROR: {message}</strong>\n                </p>\n            </div>\n        );\n    }\n\n}\n\nexport default ErrorStatus;\n","import {LanguageOption} from \"./Option\";\n\nconst languageKey = 'language';\n\nconst callbacks: Function[] = [];\n\nclass Manager {\n    static language(): LanguageOption {\n        const value = window.localStorage.getItem(languageKey),\n            language = Object.values(LanguageOption).find(v => v === value);\n\n        return language ?? LanguageOption.DEFAULT;\n    }\n\n    static setLanguage(value: string) {\n        const language = Object.values(LanguageOption).find(v => v === value);\n        if (language === undefined)\n            return;\n\n        window.localStorage.setItem(languageKey, language);\n        Manager.triggerCallbacks();\n    }\n\n    static onUpdate(callback: Function) {\n        callbacks.push(callback);\n    }\n\n    private static triggerCallbacks() {\n        callbacks.forEach(callback => {\n            callback.call(null);\n        });\n    }\n}\n\nexport default Manager;\n","enum Region {\n    JP = 'JP',\n    NA = 'NA'\n}\n\nexport default Region;\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport Manager from \"./Manager\";\nimport {LanguageOption} from \"./Option\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IState {\n    language: LanguageOption\n}\n\nclass SettingForm extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            language: Manager.language(),\n        }\n\n        Manager.onUpdate(() => this.syncSettings());\n    }\n\n    private syncSettings() {\n        this.setState({\n            language: Manager.language(),\n        });\n    }\n\n    updateLanguage(value: string) {\n        Manager.setLanguage(value);\n    }\n\n    render() {\n        return (\n            <div>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Language</Form.Label>\n                        <Form.Control as={'select'} value={this.state.language}\n                                      onChange={(ev: Event) => this.updateLanguage(ev.target.value)}>\n                            {Object.values(LanguageOption).map(v => (\n                                <option value={v}>{v}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default SettingForm;\n","import {faDiscord, faGithub} from \"@fortawesome/free-brands-svg-icons\";\nimport {faCog} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Button, Container, Modal, Nav, Navbar, NavItem} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport SettingForm from \"../Setting/SettingForm\";\n\ninterface IState {\n    showSettings: boolean;\n}\n\nclass Navigation extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            showSettings: false,\n        };\n    }\n\n    hideSettings() {\n        this.setState({showSettings: false});\n    }\n\n    showSettings() {\n        this.setState({showSettings: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar bg={\"dark\"} variant={'dark'} expand={\"lg\"}>\n                    <Container>\n                        <Link to=\"/\" className={'navbar-brand'}>AA-DB</Link>\n                        <Navbar.Toggle/>\n\n                        <Navbar.Collapse>\n                            <Nav>\n                                <Link to=\"/JP/servants\" className={'nav-link'}>\n                                    <NavItem>JP Servants</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav>\n                                <Link to=\"/NA/servants\" className={'nav-link'}>\n                                    <NavItem>NA Servants</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav>\n                                <Link to=\"/JP/craft-essences\" className={'nav-link'}>\n                                    <NavItem>JP CE</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav>\n                                <Link to=\"/NA/craft-essences\" className={'nav-link'}>\n                                    <NavItem>NA CE</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav className={'ml-auto'}>\n                                <Nav.Link href={'https://discord.gg/TKJmuCR'} target={'_blank'}>\n                                    <FontAwesomeIcon icon={faDiscord}/>\n                                </Nav.Link>\n                                <Nav.Link href={'https://github.com/atlasacademy/aa-db'} target={'_blank'}>\n                                    <FontAwesomeIcon icon={faGithub}/>\n                                </Nav.Link>\n                                <Button variant={\"primary\"} onClick={() => this.showSettings()}>\n                                    <FontAwesomeIcon icon={faCog}/>\n                                </Button>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Container>\n                </Navbar>\n\n                <Modal show={this.state.showSettings} onHide={() => this.hideSettings()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Settings</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <SettingForm/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n\n}\n\nexport default Navigation;\n","class ResultCache<K, V> {\n    private cache = new Map<K, V>();\n    private pending = new Map<K, Function[]>();\n    private pendingCatches = new Map<K, Function[]>();\n\n    get(key: K, fetcher: Function, duration: number | null): Promise<V> {\n        const value = this.cache.get(key);\n        if (value !== undefined) {\n            return new Promise<V>(resolve => {\n                resolve(value);\n            });\n        }\n\n        const callbacks = this.pending.get(key);\n        if (callbacks !== undefined) {\n            return new Promise<V>((resolve, reject) => {\n                callbacks.push(resolve);\n\n                const catches = this.pendingCatches.get(key) ?? [];\n                catches.push(reject);\n            });\n        }\n\n        this.pending.set(key, []);\n        this.pendingCatches.set(key, []);\n        return new Promise<V>((resolve, reject) => {\n            fetcher\n                .call(null)\n                .then((value: V) => {\n                    const callbacks = this.pending.get(key) ?? [];\n\n                    callbacks.forEach(callback => {\n                        callback.call(null, value);\n                    });\n\n                    this.cache.set(key, value);\n                    this.pending.delete(key);\n                    this.pendingCatches.delete(key);\n\n                    if (duration !== null) {\n                        window.setTimeout(() => {\n                            this.cache.delete(key);\n                        }, duration);\n                    }\n\n                    resolve(value);\n                })\n                .catch((error: any) => {\n                    const callbacks = this.pendingCatches.get(key) ?? [];\n\n                    callbacks.forEach(callback => {\n                        callback.call(null, error);\n                    });\n\n                    this.pending.delete(key);\n                    this.pendingCatches.delete(key);\n\n                    reject(error);\n                });\n        });\n    }\n}\n\nexport default ResultCache;\n","import axios from \"axios\";\nimport Manager from \"../Setting/Manager\";\nimport {LanguageOption} from \"../Setting/Option\";\nimport BasicListEntity from \"./Data/BasicListEntity\";\nimport Buff from \"./Data/Buff\";\nimport CraftEssence from \"./Data/CraftEssence\";\nimport Func from \"./Data/Func\";\nimport NoblePhantasm from \"./Data/NoblePhantasm\";\nimport Quest from \"./Data/Quest\";\nimport Region from \"./Data/Region\";\nimport Servant from \"./Data/Servant\";\nimport Skill from \"./Data/Skill\";\nimport TraitMap from \"./Data/TraitMap\";\nimport ResultCache from \"./ResultCache\";\n\nconst host = 'https://api.atlasacademy.io',\n    cacheDuration = 20 * 1000,\n    fetch = async function <T>(endpoint: string): Promise<T> {\n        const response = await axios.get<T>(endpoint);\n\n        return response.data;\n    },\n    cache = {\n        buff: new ResultCache<string, Buff>(),\n        craftEssence: new ResultCache<string, CraftEssence>(),\n        craftEssenceList: new ResultCache<Region, BasicListEntity[]>(),\n        func: new ResultCache<string, Func>(),\n        noblePhantasm: new ResultCache<string, NoblePhantasm>(),\n        quest: new ResultCache<string, Quest>(),\n        servant: new ResultCache<string, Servant>(),\n        servantList: new ResultCache<Region, BasicListEntity[]>(),\n        skill: new ResultCache<string, Skill>(),\n        traitMap: new ResultCache<Region, TraitMap>(),\n    };\n\nclass Connection {\n    static buff(region: Region, id: number): Promise<Buff> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.buff.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Buff>(`${host}/nice/${region}/buff/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static craftEssence(region: Region, id: number): Promise<CraftEssence> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.craftEssence.get(\n            key,\n            () => {\n                let query = '?lore=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Servant>(`${host}/nice/${region}/equip/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async craftEssenceList(region: Region): Promise<BasicListEntity[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableCraftEssenceList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableCraftEssenceList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableCraftEssenceList(Region.JP),\n            na = await Connection.getCacheableCraftEssenceList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<BasicListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static func(region: Region, id: number): Promise<Func> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.func.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Func>(`${host}/nice/${region}/function/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static noblePhantasm(region: Region, id: number): Promise<NoblePhantasm> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.noblePhantasm.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<NoblePhantasm>(`${host}/nice/${region}/NP/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static quest(region: Region, id: number, phase: number): Promise<Quest> {\n        const key = `${region}-${id}-${phase}`;\n\n        return cache.quest.get(\n            key,\n            () => {\n                return fetch<Quest>(`${host}/nice/${region}/quest/${id}/${phase}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static servant(region: Region, id: number): Promise<Servant> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.servant.get(\n            key,\n            () => {\n                let query = '?lore=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Servant>(`${host}/nice/${region}/servant/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async servantList(region: Region): Promise<BasicListEntity[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableServantList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableServantList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableServantList(Region.JP),\n            na = await Connection.getCacheableServantList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<BasicListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static skill(region: Region, id: number): Promise<Skill> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.skill.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Skill>(`${host}/nice/${region}/skill/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static traitMap(region: Region): Promise<TraitMap> {\n        return cache.traitMap.get(\n            region,\n            () => {\n                return fetch<TraitMap>(`${host}/export/${region}/nice_trait.json`);\n            },\n            null\n        );\n    }\n\n    private static async getCacheableCraftEssenceList(region: Region): Promise<BasicListEntity[]> {\n        return cache.craftEssenceList.get(\n            region,\n            () => {\n                return fetch<BasicListEntity[]>(`${host}/export/${region}/basic_equip.json`);\n            },\n            null\n        );\n    }\n\n    private static async getCacheableServantList(region: Region): Promise<BasicListEntity[]> {\n        return cache.servantList.get(\n            region,\n            () => {\n                return fetch<BasicListEntity[]>(`${host}/export/${region}/basic_servant.json`);\n            },\n            null\n        );\n    }\n}\n\nexport default Connection;\n","import React from \"react\";\n\ninterface IProp {\n    location: string;\n    height?: number;\n}\n\nclass BuffIcon extends React.Component<IProp> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location} style={{\n                height: this.props.height ?? 25,\n                verticalAlign: \"bottom\",\n            }}/>\n        );\n    }\n\n}\n\nexport default BuffIcon;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\n\nimport \"./DataTable.css\";\nimport {Renderable} from \"../Helper/OutputHelper\";\n\ninterface IProp {\n    header?: JSX.Element | string,\n    data: {\n        [key: string]: Renderable;\n    }\n}\n\nclass DataTable extends React.Component<IProp> {\n    render() {\n        return (\n            <div>\n                {this.props.header ? (\n                    <div className={'data-header'}>\n                        {this.props.header}\n                    </div>\n                ) : null}\n\n                <Table bordered hover className={'data-table'}>\n                    <tbody>\n                    {Object.keys(this.props.data).map((key, index) => {\n                        return (\n                            <tr key={index}>\n                                <th>{key}</th>\n                                <td>{this.props.data[key]}</td>\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default DataTable;\n","import React from \"react\";\n\nimport \"./Loading.css\";\n\nfunction Loading() {\n    return (\n        <div id={'loading'}>\n            <img alt={''} className={'fou f1'} src={'./assets/load_icon_A01.png'} />\n            <img alt={''} className={'fou f2'} src={'./assets/load_icon_A02.png'} />\n            <img alt={''} className={'fou f3'} src={'./assets/load_icon_A03.png'} />\n            <img alt={''} className={'fou f4'} src={'./assets/load_icon_A04.png'} />\n        </div>\n    );\n}\n\nexport default Loading;\n","import Func from \"./Func\";\nimport Trait from \"./Trait\";\n\nexport enum BuffType {\n    NONE = \"none\",\n    UP_COMMANDATK = \"upCommandatk\",\n    UP_STARWEIGHT = \"upStarweight\",\n    UP_CRITICALPOINT = \"upCriticalpoint\",\n    DOWN_CRITICALPOINT = \"downCriticalpoint\",\n    REGAIN_NP = \"regainNp\",\n    REGAIN_STAR = \"regainStar\",\n    REGAIN_HP = \"regainHp\",\n    REDUCE_HP = \"reduceHp\",\n    UP_ATK = \"upAtk\",\n    DOWN_ATK = \"downAtk\",\n    UP_DAMAGE = \"upDamage\",\n    DOWN_DAMAGE = \"downDamage\",\n    ADD_DAMAGE = \"addDamage\",\n    SUB_DAMAGE = \"subDamage\",\n    UP_NPDAMAGE = \"upNpdamage\",\n    DOWN_NPDAMAGE = \"downNpdamage\",\n    UP_DROPNP = \"upDropnp\",\n    UP_CRITICALDAMAGE = \"upCriticaldamage\",\n    DOWN_CRITICALDAMAGE = \"downCriticaldamage\",\n    UP_SELFDAMAGE = \"upSelfdamage\",\n    DOWN_SELFDAMAGE = \"downSelfdamage\",\n    ADD_SELFDAMAGE = \"addSelfdamage\",\n    SUB_SELFDAMAGE = \"subSelfdamage\",\n    AVOIDANCE = \"avoidance\",\n    BREAK_AVOIDANCE = \"breakAvoidance\",\n    INVINCIBLE = \"invincible\",\n    UP_GRANTSTATE = \"upGrantstate\",\n    DOWN_GRANTSTATE = \"downGrantstate\",\n    UP_TOLERANCE = \"upTolerance\",\n    DOWN_TOLERANCE = \"downTolerance\",\n    AVOID_STATE = \"avoidState\",\n    DONOT_ACT = \"donotAct\",\n    DONOT_SKILL = \"donotSkill\",\n    DONOT_NOBLE = \"donotNoble\",\n    DONOT_RECOVERY = \"donotRecovery\",\n    DISABLE_GENDER = \"disableGender\",\n    GUTS = \"guts\",\n    UP_HATE = \"upHate\",\n    ADD_INDIVIDUALITY = \"addIndividuality\",\n    SUB_INDIVIDUALITY = \"subIndividuality\",\n    UP_DEFENCE = \"upDefence\",\n    DOWN_DEFENCE = \"downDefence\",\n    UP_COMMANDSTAR = \"upCommandstar\",\n    UP_COMMANDNP = \"upCommandnp\",\n    UP_COMMANDALL = \"upCommandall\",\n    DOWN_COMMANDALL = \"downCommandall\",\n    DOWN_STARWEIGHT = \"downStarweight\",\n    REDUCE_NP = \"reduceNp\",\n    DOWN_DROPNP = \"downDropnp\",\n    UP_GAIN_HP = \"upGainHp\",\n    DOWN_GAIN_HP = \"downGainHp\",\n    DOWN_COMMANDATK = \"downCommandatk\",\n    DOWN_COMMANSTAR = \"downCommanstar\",\n    DOWN_COMMANDNP = \"downCommandnp\",\n    UP_CRITICALRATE = \"upCriticalrate\",\n    DOWN_CRITICALRATE = \"downCriticalrate\",\n    PIERCE_INVINCIBLE = \"pierceInvincible\",\n    AVOID_INSTANTDEATH = \"avoidInstantdeath\",\n    UP_RESIST_INSTANTDEATH = \"upResistInstantdeath\",\n    UP_NONRESIST_INSTANTDEATH = \"upNonresistInstantdeath\",\n    DELAY_FUNCTION = \"delayFunction\",\n    REGAIN_NP_USED_NOBLE = \"regainNpUsedNoble\",\n    DEAD_FUNCTION = \"deadFunction\",\n    UP_MAXHP = \"upMaxhp\",\n    DOWN_MAXHP = \"downMaxhp\",\n    ADD_MAXHP = \"addMaxhp\",\n    SUB_MAXHP = \"subMaxhp\",\n    BATTLESTART_FUNCTION = \"battlestartFunction\",\n    WAVESTART_FUNCTION = \"wavestartFunction\",\n    SELFTURNEND_FUNCTION = \"selfturnendFunction\",\n    UP_GIVEGAIN_HP = \"upGivegainHp\",\n    DOWN_GIVEGAIN_HP = \"downGivegainHp\",\n    COMMANDATTACK_FUNCTION = \"commandattackFunction\",\n    DEADATTACK_FUNCTION = \"deadattackFunction\",\n    UP_SPECIALDEFENCE = \"upSpecialdefence\",\n    DOWN_SPECIALDEFENCE = \"downSpecialdefence\",\n    UP_DAMAGEDROPNP = \"upDamagedropnp\",\n    DOWN_DAMAGEDROPNP = \"downDamagedropnp\",\n    ENTRY_FUNCTION = \"entryFunction\",\n    UP_CHAGETD = \"upChagetd\",\n    REFLECTION_FUNCTION = \"reflectionFunction\",\n    UP_GRANT_SUBSTATE = \"upGrantSubstate\",\n    DOWN_GRANT_SUBSTATE = \"downGrantSubstate\",\n    UP_TOLERANCE_SUBSTATE = \"upToleranceSubstate\",\n    DOWN_TOLERANCE_SUBSTATE = \"downToleranceSubstate\",\n    UP_GRANT_INSTANTDEATH = \"upGrantInstantdeath\",\n    DOWN_GRANT_INSTANTDEATH = \"downGrantInstantdeath\",\n    GUTS_RATIO = \"gutsRatio\",\n    DAMAGE_FUNCTION = \"damageFunction\",\n    UP_DEFENCECOMMANDALL = \"upDefencecommandall\",\n    DOWN_DEFENCECOMMANDALL = \"downDefencecommandall\",\n    OVERWRITE_BATTLECLASS = \"overwriteBattleclass\",\n    OVERWRITE_CLASSRELATIO_ATK = \"overwriteClassrelatioAtk\",\n    OVERWRITE_CLASSRELATIO_DEF = \"overwriteClassrelatioDef\",\n    UP_DAMAGE_INDIVIDUALITY = \"upDamageIndividuality\",\n    DOWN_DAMAGE_INDIVIDUALITY = \"downDamageIndividuality\",\n    UP_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"upDamageIndividualityActiveonly\",\n    DOWN_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"downDamageIndividualityActiveonly\",\n    UP_NPTURNVAL = \"upNpturnval\",\n    DOWN_NPTURNVAL = \"downNpturnval\",\n    MULTIATTACK = \"multiattack\",\n    UP_GIVE_NP = \"upGiveNp\",\n    DOWN_GIVE_NP = \"downGiveNp\",\n    UP_RESISTANCE_DELAY_NPTURN = \"upResistanceDelayNpturn\",\n    DOWN_RESISTANCE_DELAY_NPTURN = \"downResistanceDelayNpturn\",\n    PIERCE_DEFENCE = \"pierceDefence\",\n    UP_GUTS_HP = \"upGutsHp\",\n    DOWN_GUTS_HP = \"downGutsHp\",\n    UP_FUNCGAIN_NP = \"upFuncgainNp\",\n    DOWN_FUNCGAIN_NP = \"downFuncgainNp\",\n    UP_FUNC_HP_REDUCE = \"upFuncHpReduce\",\n    DOWN_FUNC_HP_REDUCE = \"downFuncHpReduce\",\n    UP_DEFENCECOMMAN_DAMAGE = \"upDefencecommanDamage\",\n    DOWN_DEFENCECOMMAN_DAMAGE = \"downDefencecommanDamage\",\n    NPATTACK_PREV_BUFF = \"npattackPrevBuff\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    DONOT_GAINNP = \"donotGainnp\",\n    FIELD_INDIVIDUALITY = \"fieldIndividuality\",\n    DONOT_ACT_COMMANDTYPE = \"donotActCommandtype\",\n    UP_DAMAGE_EVENT_POINT = \"upDamageEventPoint\",\n}\n\nexport default interface Buff {\n    id: number;\n    name: string;\n    detail: string;\n    icon: string;\n    type: BuffType;\n    vals: Trait[];\n    tvals: Trait[];\n    ckSelfIndv: Trait[];\n    ckOpIndv: Trait[];\n    maxRate: number;\n    reverseFunctions: Func[];\n}\n","import Buff from \"./Buff\";\nimport NoblePhantasm from \"./NoblePhantasm\";\nimport Skill from \"./Skill\";\nimport Trait from \"./Trait\";\n\nexport enum FuncType {\n    NONE = \"none\",\n    ADD_STATE = \"addState\",\n    SUB_STATE = \"subState\",\n    DAMAGE = \"damage\",\n    DAMAGE_NP = \"damageNp\",\n    GAIN_STAR = \"gainStar\",\n    GAIN_HP = \"gainHp\",\n    GAIN_NP = \"gainNp\",\n    LOSS_NP = \"lossNp\",\n    SHORTEN_SKILL = \"shortenSkill\",\n    EXTEND_SKILL = \"extendSkill\",\n    RELEASE_STATE = \"releaseState\",\n    LOSS_HP = \"lossHp\",\n    INSTANT_DEATH = \"instantDeath\",\n    DAMAGE_NP_PIERCE = \"damageNpPierce\",\n    DAMAGE_NP_INDIVIDUAL = \"damageNpIndividual\",\n    ADD_STATE_SHORT = \"addStateShort\",\n    GAIN_HP_PER = \"gainHpPer\",\n    DAMAGE_NP_STATE_INDIVIDUAL = \"damageNpStateIndividual\",\n    HASTEN_NPTURN = \"hastenNpturn\",\n    DELAY_NPTURN = \"delayNpturn\",\n    DAMAGE_NP_HPRATIO_HIGH = \"damageNpHpratioHigh\",\n    DAMAGE_NP_HPRATIO_LOW = \"damageNpHpratioLow\",\n    CARD_RESET = \"cardReset\",\n    REPLACE_MEMBER = \"replaceMember\",\n    LOSS_HP_SAFE = \"lossHpSafe\",\n    DAMAGE_NP_COUNTER = \"damageNpCounter\",\n    DAMAGE_NP_STATE_INDIVIDUAL_FIX = \"damageNpStateIndividualFix\",\n    DAMAGE_NP_SAFE = \"damageNpSafe\",\n    CALL_SERVANT = \"callServant\",\n    PT_SHUFFLE = \"ptShuffle\",\n    LOSS_STAR = \"lossStar\",\n    CHANGE_SERVANT = \"changeServant\",\n    CHANGE_BG = \"changeBg\",\n    DAMAGE_VALUE = \"damageValue\",\n    WITHDRAW = \"withdraw\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    SHORTEN_BUFFTURN = \"shortenBuffturn\",\n    EXTEND_BUFFTURN = \"extendBuffturn\",\n    SHORTEN_BUFFCOUNT = \"shortenBuffcount\",\n    EXTEND_BUFFCOUNT = \"extendBuffcount\",\n    CHANGE_BGM = \"changeBgm\",\n    DISPLAY_BUFFSTRING = \"displayBuffstring\",\n    EXP_UP = \"expUp\",\n    QP_UP = \"qpUp\",\n    DROP_UP = \"dropUp\",\n    FRIEND_POINT_UP = \"friendPointUp\",\n    EVENT_DROP_UP = \"eventDropUp\",\n    EVENT_DROP_RATE_UP = \"eventDropRateUp\",\n    EVENT_POINT_UP = \"eventPointUp\",\n    EVENT_POINT_RATE_UP = \"eventPointRateUp\",\n    TRANSFORM_SERVANT = \"transformServant\",\n    QP_DROP_UP = \"qpDropUp\",\n    SERVANT_FRIENDSHIP_UP = \"servantFriendshipUp\",\n    USER_EQUIP_EXP_UP = \"userEquipExpUp\",\n    CLASS_DROP_UP = \"classDropUp\",\n    ENEMY_ENCOUNT_COPY_RATE_UP = \"enemyEncountCopyRateUp\",\n    ENEMY_ENCOUNT_RATE_UP = \"enemyEncountRateUp\",\n    ENEMY_PROB_DOWN = \"enemyProbDown\",\n}\n\nexport enum FuncTargetType {\n    SELF = \"self\",\n    PT_ONE = \"ptOne\",\n    PT_ANOTHER = \"ptAnother\",\n    PT_ALL = \"ptAll\",\n    ENEMY = \"enemy\",\n    ENEMY_ANOTHER = \"enemyAnother\",\n    ENEMY_ALL = \"enemyAll\",\n    PT_FULL = \"ptFull\",\n    ENEMY_FULL = \"enemyFull\",\n    PT_OTHER = \"ptOther\",\n    PT_ONE_OTHER = \"ptOneOther\",\n    PT_RANDOM = \"ptRandom\",\n    ENEMY_OTHER = \"enemyOther\",\n    ENEMY_RANDOM = \"enemyRandom\",\n    PT_OTHER_FULL = \"ptOtherFull\",\n    ENEMY_OTHER_FULL = \"enemyOtherFull\",\n    PTSELECT_ONE_SUB = \"ptselectOneSub\",\n    PTSELECT_SUB = \"ptselectSub\",\n    PT_ONE_ANOTHER_RANDOM = \"ptOneAnotherRandom\",\n    PT_SELF_ANOTHER_RANDOM = \"ptSelfAnotherRandom\",\n    ENEMY_ONE_ANOTHER_RANDOM = \"enemyOneAnotherRandom\",\n    PT_SELF_ANOTHER_FIRST = \"ptSelfAnotherFirst\",\n    PT_SELF_BEFORE = \"ptSelfBefore\",\n    PT_SELF_AFTER = \"ptSelfAfter\",\n    PT_SELF_ANOTHER_LAST = \"ptSelfAnotherLast\",\n    COMMAND_TYPE_SELF_TREASURE_DEVICE = \"commandTypeSelfTreasureDevice\",\n}\n\nexport enum FuncTargetTeam {\n    PLAYER = \"player\",\n    ENEMY = \"enemy\",\n    PLAYER_AND_ENEMY = \"playerAndEnemy\",\n}\n\nexport enum DataValField {\n    RATE = \"Rate\",\n    TURN = \"Turn\",\n    COUNT = \"Count\",\n    VALUE = \"Value\",\n    VALUE2 = \"Value2\",\n    USE_RATE = \"UseRate\",\n    TARGET = \"Target\",\n    CORRECTION = \"Correction\",\n    PARAM_ADD = \"ParamAdd\",\n    PARAM_MAX = \"ParamMax\",\n    HIDE_MISS = \"HideMiss\",\n    ON_FIELD = \"OnField\",\n    HIDE_NO_EFFECT = \"HideNoEffect\",\n    UNAFFECTED = \"Unaffected\",\n    SHOW_STATE = \"ShowState\",\n    AURA_EFFECT_ID = \"AuraEffectId\",\n    ACT_SET = \"ActSet\",\n    ACT_SET_WEIGHT = \"ActSetWeight\",\n    SHOW_QUEST_NO_EFFECT = \"ShowQuestNoEffect\",\n    CHECK_DEAD = \"CheckDead\",\n    RATIO_HP_HIGH = \"RatioHPHigh\",\n    RATIO_HP_LOW = \"RatioHPLow\",\n    SET_PASSIVE_FRAME = \"SetPassiveFrame\",\n    PROC_PASSIVE = \"ProcPassive\",\n    PROC_ACTIVE = \"ProcActive\",\n    HIDE_PARAM = \"HideParam\",\n    SKILL_ID = \"SkillID\",\n    SKILL_LV = \"SkillLV\",\n    SHOW_CARD_ONLY = \"ShowCardOnly\",\n    EFFECT_SUMMON = \"EffectSummon\",\n    RATIO_HP_RANGE_HIGH = \"RatioHPRangeHigh\",\n    RATIO_HP_RANGE_LOW = \"RatioHPRangeLow\",\n    TARGET_LIST = \"TargetList\",\n    OPPONENT_ONLY = \"OpponentOnly\",\n    TARGET_RARITY_LIST = \"TargetRarityList\",\n}\n\nexport type DataVal = {\n    [key in DataValField]?: number;\n}\n\nexport default interface Func {\n    funcId: number;\n    funcType: FuncType;\n    funcTargetType: FuncTargetType;\n    funcTargetTeam: FuncTargetTeam;\n    funcPopupText: string;\n    funcPopupIcon?: string;\n    functvals: Trait[];\n    funcquestTvals: number[];\n    traitVals?: Trait[];\n    buffs: Buff[];\n    svals?: DataVal[];\n    svals2?: DataVal[];\n    svals3?: DataVal[];\n    svals4?: DataVal[];\n    svals5?: DataVal[];\n    reverseSkills: Skill[];\n    reverseTds: NoblePhantasm[];\n}\n","import {faSearchPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Modal} from \"react-bootstrap\";\nimport ReactJson from \"react-json-view\";\n\ninterface IProps {\n    data: object;\n}\n\ninterface IState {\n    showing: boolean;\n}\n\nclass RawDataViewer extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            showing: false\n        };\n    }\n\n    hide() {\n        this.setState({showing: false});\n    }\n\n    show() {\n        this.setState({showing: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <span className={'text-primary'}\n                      style={{cursor: \"pointer\"}}\n                      onClick={() => {\n                          this.show();\n                      }}>\n                    View Raw\n                    &nbsp;\n                    <FontAwesomeIcon icon={faSearchPlus}/>\n                </span>\n\n                <Modal size={\"lg\"} show={this.state.showing} onHide={() => this.hide()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Raw Data Viewer</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ReactJson src={this.props.data} collapsed={1}/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default RawDataViewer;\n","import React from \"react\";\n\nexport type Renderable = (\n    JSX.Element\n    | string\n    | number\n    | undefined\n    )\n\nexport function asPercent(value: number | undefined, pow: number): string {\n    const decimal = (value ?? 0) / Math.pow(10, pow);\n\n    return `${decimal}%`;\n}\n\nexport function handleNewLine(text?: string): Renderable {\n    if (!text)\n        return \"\";\n\n    return (\n        <span>\n            {joinElements(text.split(\"\\n\"), <br/>)}\n        </span>\n    );\n}\n\nexport function joinElements(elements: Renderable[], separator: Renderable): Renderable[] {\n    const parts: Renderable[] = [],\n        pushElement = function (element: Renderable) {\n            if (element === undefined)\n                return;\n\n            if (typeof element === 'object') {\n                parts.push(element);\n                return;\n            }\n\n            if (parts.length === 0) {\n                parts.push(element.toString());\n                return;\n            }\n\n            const previous = parts[parts.length - 1];\n            if (typeof previous !== 'string') {\n                parts.push(element.toString());\n                return;\n            }\n\n            parts[parts.length - 1] = previous + element.toString();\n        };\n\n    elements.forEach((element, index) => {\n        if (index > 0)\n            pushElement(separator);\n\n        pushElement(element);\n    });\n\n    return parts;\n}\n","import React from \"react\";\nimport Buff, {BuffType} from \"../Api/Data/Buff\";\nimport {DataVal} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {asPercent} from \"../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    buff: Buff;\n    dataVal: DataVal;\n}\n\nclass BuffValueDescriptor extends React.Component<IProps>{\n    render() {\n        let value = \"\";\n\n        switch (this.props.buff.type) {\n            case BuffType.UP_ATK:\n            case BuffType.DOWN_ATK:\n            case BuffType.UP_COMMANDALL:\n            case BuffType.DOWN_COMMANDALL:\n            case BuffType.UP_CRITICALDAMAGE:\n            case BuffType.DOWN_CRITICALDAMAGE:\n            case BuffType.UP_DEFENCE:\n            case BuffType.DOWN_DEFENCE:\n            case BuffType.UP_DROPNP:\n            case BuffType.DOWN_DROPNP:\n            case BuffType.UP_HATE:\n            case BuffType.UP_TOLERANCE:\n            case BuffType.DOWN_TOLERANCE:\n                value = asPercent(this.props.dataVal.Value, 1);\n                break;\n            case BuffType.COMMANDATTACK_FUNCTION:\n                if (this.props.dataVal.Value2)\n                    value = 'Lv. ' + this.props.dataVal.Value2;\n                break;\n            case BuffType.NPATTACK_PREV_BUFF:\n                if (this.props.dataVal.SkillLV)\n                    value = 'Lv. ' + this.props.dataVal.SkillLV;\n                break;\n            default:\n                value = this.props.dataVal.Value?.toString() ?? \"\";\n        }\n\n        return value;\n    }\n}\n\nexport default BuffValueDescriptor;\n","import React from \"react\";\nimport Func, {DataVal, FuncType} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {asPercent, joinElements, Renderable} from \"../Helper/OutputHelper\";\nimport BuffValueDescriptor from \"./BuffValueDescriptor\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n    dataVal: DataVal;\n}\n\nclass FuncValueDescriptor extends React.Component<IProps> {\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            dataVal = this.props.dataVal,\n            parts: Renderable[] = [];\n\n        if (dataVal.Rate !== undefined) {\n            parts.push(asPercent(dataVal.Rate, 1));\n        }\n\n        if (dataVal.Value !== undefined) {\n            switch (func.funcType) {\n                case FuncType.ADD_STATE:\n                case FuncType.ADD_STATE_SHORT:\n                    parts.push(<BuffValueDescriptor region={region} buff={func.buffs[0]} dataVal={dataVal}/>);\n                    break;\n                case FuncType.DAMAGE_NP:\n                case FuncType.DAMAGE_NP_INDIVIDUAL:\n                case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                case FuncType.DAMAGE_NP_PIERCE:\n                    parts.push(asPercent(dataVal.Value, 1));\n                    break;\n                case FuncType.GAIN_NP:\n                case FuncType.LOSS_NP:\n                    parts.push(asPercent(dataVal.Value, 2));\n                    break;\n                default:\n                    parts.push(dataVal.Value.toString());\n            }\n        }\n\n        if (dataVal.Value2 !== undefined || dataVal.SkillLV !== undefined) {\n            switch (func.funcType) {\n                case FuncType.ADD_STATE:\n                case FuncType.ADD_STATE_SHORT:\n                    parts.push(<BuffValueDescriptor region={region} buff={func.buffs[0]} dataVal={dataVal}/>);\n                    break;\n            }\n        }\n\n        if (dataVal.Correction !== undefined) {\n            switch (func.funcType) {\n                case FuncType.DAMAGE_NP_INDIVIDUAL:\n                case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                    parts.push(asPercent(dataVal.Correction, 1));\n                    break;\n                default:\n                    parts.push(dataVal.Correction.toString());\n            }\n        }\n\n        if (!parts.length)\n            return <span>-</span>;\n\n        return <span>\n            {joinElements(parts, ' + ')\n                .map((element, index) => {\n                    return <React.Fragment key={index}>{element}</React.Fragment>;\n                })}\n        </span>;\n    }\n}\n\nexport default FuncValueDescriptor;\n","import React from \"react\";\nimport {BuffType} from \"../Api/Data/Buff\";\nimport Func, {DataVal, DataValField, FuncType} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport FuncValueDescriptor from \"../Descriptor/FuncValueDescriptor\";\nimport {Renderable} from \"./OutputHelper\";\n\nconst hasChangingDataVals = function (vals: DataVal[]): boolean {\n    if (!vals.length)\n        return false;\n\n    let previous = vals[0];\n    for (let i = 1; i < vals.length; i++) {\n        if (JSON.stringify(previous) !== JSON.stringify(vals[i]))\n            return true;\n\n        previous = vals[i];\n    }\n\n    return false;\n};\n\nconst hasUniqueValues = function (values: (number | undefined)[]): boolean {\n    return new Set(values).size > 1;\n};\n\nexport function describeMutators(region: Region, func: Func): Renderable[] {\n    const dataVals = getDataValList(func),\n        mutatingVals = getMutatingFieldValues(dataVals);\n\n    return mutatingVals\n        .map(mutatingVal => <FuncValueDescriptor region={region} func={func} dataVal={mutatingVal}/>);\n}\n\nexport function funcUpdatesByLevel(func: Func): boolean {\n    return hasChangingDataVals(getLevelDataValList(func));\n}\n\nexport function funcUpdatesByOvercharge(func: Func): boolean {\n    return hasChangingDataVals(getOverchargeDataValList(func));\n}\n\nexport function getDataValList(func: Func): DataVal[] {\n    const isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func);\n\n    return isLevel && isOvercharge\n        ? getMixedDataValList(func)\n        : (isOvercharge ? getOverchargeDataValList(func) : getLevelDataValList(func));\n}\n\nexport function getLevelDataValList(func: Func): DataVal[] {\n    return func.svals ?? [];\n}\n\nexport function getMixedDataValList(func: Func): DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, i, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getMutatingFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return hasUniqueValues(values);\n    });\n}\n\nexport function getMutatingFieldValues(vals: DataVal[]): DataVal[] {\n    if (!vals.length)\n        return [];\n\n    const fields = getMutatingFieldNames(vals);\n\n    return vals.map(val => {\n        const mutatingVals: DataVal = {};\n\n        for (let x in fields) {\n            mutatingVals[fields[x]] = val[fields[x]];\n        }\n\n        return mutatingVals;\n    });\n}\n\nexport function getOverchargeDataValList(func: Func): DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, 1, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getRelatedSkillIds(func: Func): number[] {\n    if (func.funcType !== FuncType.ADD_STATE && func.funcType !== FuncType.ADD_STATE_SHORT)\n        return [];\n\n    const buff = func.buffs[0];\n    if (buff.type === BuffType.COMMANDATTACK_FUNCTION) {\n        const dataVals = getDataValList(func),\n            dataVal = dataVals[0];\n\n        return dataVal.Value ? [dataVal.Value] : [];\n    }\n\n    if (buff.type === BuffType.NPATTACK_PREV_BUFF) {\n        const dataVals = getDataValList(func),\n            dataVal = dataVals[0];\n\n        return dataVal.SkillID ? [dataVal.SkillID] : [];\n    }\n\n    return [];\n}\n\nexport function getRelatedSkillLevels(func: Func): number[][] {\n    if (func.funcType !== FuncType.ADD_STATE && func.funcType !== FuncType.ADD_STATE_SHORT)\n        return [];\n\n    const buff = func.buffs[0];\n    if (buff.type === BuffType.COMMANDATTACK_FUNCTION) {\n        const dataVals = getDataValList(func);\n\n        return [\n            dataVals.map(dataVal => dataVal.Value2 ?? 1)\n        ];\n    }\n\n    if (buff.type === BuffType.NPATTACK_PREV_BUFF) {\n        const dataVals = getDataValList(func);\n\n        return [\n            dataVals.map(dataVal => dataVal.SkillLV ?? 1)\n        ]\n    }\n\n    return [];\n}\n\nexport function getStaticFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return !hasUniqueValues(values);\n    });\n}\n\nexport function getStaticFieldValues(vals: DataVal[]): DataVal {\n    if (!vals.length)\n        return {};\n\n    const fields = getStaticFieldNames(vals),\n        staticVals: DataVal = {};\n\n    for (let x in fields) {\n        staticVals[fields[x]] = vals[0][fields[x]];\n    }\n\n    return staticVals;\n}\n\nexport function getTargetVersionValues(func: Func, level: number, overcharge: number = 1): DataVal | undefined {\n    if (func.svals === undefined)\n        return undefined;\n\n    let dataVals;\n\n    if (overcharge === 2 && func.svals2)\n        dataVals = func.svals2;\n    else if (overcharge === 3 && func.svals3)\n        dataVals = func.svals3;\n    else if (overcharge === 4 && func.svals4)\n        dataVals = func.svals4;\n    else if (overcharge === 5 && func.svals5)\n        dataVals = func.svals5;\n    else\n        dataVals = func.svals;\n\n    return dataVals[level - 1];\n}\n","import {Renderable} from \"../../Helper/OutputHelper\";\n\nexport class FuncDescriptorSection {\n    public showing: boolean = true;\n    public parts: Renderable[] = [];\n    public preposition?: string;\n\n    constructor(preposition?: string) {\n        this.preposition = preposition;\n    }\n}\n\nexport class FuncDescriptorSections {\n    public chance = new FuncDescriptorSection();\n    public action = new FuncDescriptorSection();\n    public amount = new FuncDescriptorSection('of');\n    public affects = new FuncDescriptorSection();\n    public target = new FuncDescriptorSection('to');\n    public duration = new FuncDescriptorSection();\n    public scaling = new FuncDescriptorSection();\n}\n","enum EntityType {\n    NORMAL = \"normal\",\n    HEROINE = \"heroine\",\n    COMBINE_MATERIAL = \"combineMaterial\",\n    ENEMY = \"enemy\",\n    ENEMY_COLLECTION = \"enemyCollection\",\n    SERVANT_EQUIP = \"servantEquip\",\n    STATUS_UP = \"statusUp\",\n    SVT_EQUIP_MATERIAL = \"svtEquipMaterial\",\n    ENEMY_COLLECTION_DETAIL = \"enemyCollectionDetail\",\n    ALL = \"all\",\n    COMMAND_CODE = \"commandCode\",\n}\n\nexport default EntityType;\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Region from \"../Api/Data/Region\";\nimport Trait from \"../Api/Data/Trait\";\n\nconst traitDescriptions = new Map<number, string>([\n    [202, \"Human Attribute\"],\n    [1000, \"Servant\"],\n    [2019, \"Demonic\"],\n    [3005, \"Debuff\"],\n    [3007, \"Buff:Defensive\"],\n    [3015, \"Burn\"],\n    [4001, \"Arts Card\"],\n]);\n\ninterface IProps {\n    region: Region;\n    trait: Trait | number;\n}\n\ninterface IState {\n    id: number;\n    trait?: Trait;\n}\n\nclass TraitDescriptor extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            id: typeof props.trait === \"number\" ? props.trait : props.trait.id,\n            trait: typeof props.trait === \"number\" ? undefined : props.trait,\n        };\n    }\n\n    async componentDidMount() {\n        if (this.state.trait)\n            return;\n\n        const traitMap = await Connection.traitMap(this.props.region);\n        if (traitMap[this.state.id] !== undefined)\n            this.setState({\n                trait: {\n                    id: this.state.id,\n                    name: traitMap[this.state.id]\n                }\n            });\n    }\n\n    private getDescription() : string {\n        let description;\n\n        description = traitDescriptions.get(this.state.id);\n        if (description) {\n            return description;\n        }\n\n        if (this.state.trait && this.state.trait.name !== 'unknown')\n            return this.state.trait.name;\n\n        return `unknown(${this.state.id})`;\n    }\n\n    render() {\n        return (\n            <span>\n                [{this.getDescription()}]\n            </span>\n        );\n    }\n}\n\nexport default TraitDescriptor;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Buff, {BuffType} from \"../Api/Data/Buff\";\nimport Region from \"../Api/Data/Region\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport {joinElements} from \"../Helper/OutputHelper\";\nimport TraitDescriptor from \"./TraitDescriptor\";\n\nconst upDownBuffs: { up?: BuffType, down?: BuffType, description: string }[] = [\n    {up: BuffType.UP_CHAGETD, down: undefined, description: \"Overcharge\"},\n    {up: BuffType.UP_COMMANDATK, down: BuffType.DOWN_COMMANDATK, description: \"ATK\"},\n    {up: BuffType.UP_CRITICALDAMAGE, down: BuffType.DOWN_CRITICALDAMAGE, description: \"Critical\"},\n    {up: BuffType.UP_DAMAGE, down: BuffType.DOWN_DAMAGE, description: \"SP.DMG\"},\n    {up: BuffType.UP_DEFENCE, down: BuffType.DOWN_DEFENCE, description: \"DEF\"},\n    {up: BuffType.UP_DROPNP, down: BuffType.DOWN_DROPNP, description: \"NP Gain\"},\n    {up: BuffType.UP_GRANT_INSTANTDEATH, down: BuffType.DOWN_GRANT_INSTANTDEATH, description: \"Death Chance\"},\n    {up: BuffType.UP_STARWEIGHT, down: BuffType.DOWN_STARWEIGHT, description: \"Star Weight\"},\n];\n\nconst traitDescriptions = new Map<number, string>([\n    [3012, 'Charm'],\n    [3015, 'Burn'],\n    [3045, 'Stun'],\n]);\n\nconst typeDescriptions = new Map<BuffType, string>([\n    [BuffType.AVOID_INSTANTDEATH, 'Immune to Death'],\n    [BuffType.ADD_DAMAGE, 'Damage Plus'],\n    [BuffType.AVOIDANCE, 'Evade'],\n    [BuffType.BREAK_AVOIDANCE, 'Sure Hit'],\n    [BuffType.INVINCIBLE, 'Invincible'],\n    [BuffType.REGAIN_HP, 'HP Per Turn'],\n    [BuffType.SUB_SELFDAMAGE, 'Damage Cut'],\n    [BuffType.UP_HATE, 'Taunt'],\n]);\n\ninterface IProps {\n    region: Region;\n    buff: Buff;\n}\n\nclass BuffDescriptor extends React.Component<IProps> {\n    private getCommandCardTypes(): string {\n        const cards = [];\n\n        if (this.hasApplicableTrait(4001)) {\n            cards.push('Arts');\n        }\n\n        if (this.hasApplicableTrait(4002)) {\n            cards.push('Buster');\n        }\n\n        if (this.hasApplicableTrait(4003)) {\n            cards.push('Quick');\n        }\n\n        if (this.hasApplicableTrait(4004)) {\n            cards.push('Extra');\n        }\n\n        if (!cards.length) {\n            cards.push('Command Card');\n        }\n\n        return cards.join(' & ');\n    }\n\n    private getEffectiveTargetsDescriptions(): JSX.Element | undefined {\n        const buff = this.props.buff;\n\n        if (!buff.ckOpIndv.length)\n            return undefined;\n\n        return (\n            <React.Fragment>\n                {' vs. '}\n                {joinElements(\n                    buff.ckOpIndv.map(trait => {\n                        return <TraitDescriptor region={this.props.region} trait={trait}/>;\n                    }),\n                    ' & '\n                ).map((element, index) => {\n                    return <React.Fragment key={index}>{element}</React.Fragment>;\n                })}\n            </React.Fragment>\n        );\n    }\n\n    private getTraitDescription(): string {\n        const buff = this.props.buff,\n            traitIds = buff.vals.map(trait => trait.id);\n\n        for (let x in traitIds) {\n            const traitId = traitIds[x],\n                description = traitDescriptions.get(traitId);\n\n            if (description !== undefined)\n                return description;\n        }\n\n        return \"\";\n    }\n\n    private getTraitFilters(): JSX.Element | undefined {\n        if (!this.props.buff.ckSelfIndv.length)\n            return undefined;\n\n        return (\n            <React.Fragment>\n                {joinElements(\n                    this.props.buff.ckSelfIndv.map(\n                        trait => <TraitDescriptor region={this.props.region} trait={trait}/>\n                    ),\n                    ' & '\n                )}\n            </React.Fragment>\n        );\n    }\n\n    private getTypeDescription(): string {\n        const type = this.props.buff.type;\n\n        return typeDescriptions.get(type) ?? \"\";\n    }\n\n    private getUpDownDescription(): string {\n        const type = this.props.buff.type;\n\n        for (let x in upDownBuffs) {\n            if (upDownBuffs[x].up === type)\n                return `${upDownBuffs[x].description} Up`;\n            if (upDownBuffs[x].down === type)\n                return `${upDownBuffs[x].description} Down`;\n        }\n\n        return \"\";\n    }\n\n    private hasApplicableTrait(id: number): boolean {\n        const buff = this.props.buff;\n\n        return buff.ckSelfIndv.filter(trait => trait.id === id).length > 0;\n    }\n\n    private hasTraitDescription(): boolean {\n        const buff = this.props.buff,\n            traitIds = buff.vals.map(trait => trait.id);\n\n        for (let x in traitIds) {\n            const traitId = traitIds[x],\n                description = traitDescriptions.get(traitId);\n\n            if (description !== undefined)\n                return true;\n        }\n\n        return false;\n    }\n\n    private hasTypeDescription(): boolean {\n        const buff = this.props.buff;\n\n        return typeDescriptions.has(buff.type);\n    }\n\n    private isUpDownBuff(): boolean {\n        const type = this.props.buff.type;\n\n        for (let x in upDownBuffs) {\n            if (upDownBuffs[x].up === type || upDownBuffs[x].down === type)\n                return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const buff = this.props.buff;\n\n        let description: JSX.Element | string = buff.name;\n\n        if (this.isUpDownBuff()) {\n            description = this.getUpDownDescription();\n        } else if (buff.type === BuffType.UP_COMMANDALL) {\n            description = this.getCommandCardTypes() + ' Up';\n        } else if (buff.type === BuffType.DOWN_COMMANDALL) {\n            description = this.getCommandCardTypes() + ' Down';\n        } else if (buff.type === BuffType.COMMANDATTACK_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill on {this.getTraitFilters()} attacks\n            </React.Fragment>;\n        } else if (buff.type === BuffType.NPATTACK_PREV_BUFF) {\n            description = <React.Fragment>\n                Trigger Skill on {this.getTraitFilters()} NP\n            </React.Fragment>;\n        } else if (this.hasTypeDescription()) {\n            description = this.getTypeDescription();\n        } else if (this.hasTraitDescription()) {\n            description = this.getTraitDescription();\n        }\n\n        return (\n            <Link to={`/${this.props.region}/buff/${buff.id}`}>\n                [\n                <BuffIcon location={buff.icon}/>\n                {' '}\n                {description}\n                {this.getEffectiveTargetsDescriptions()}\n                ]\n            </Link>\n        );\n    }\n}\n\nexport default BuffDescriptor;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Region from \"../Api/Data/Region\";\nimport Skill from \"../Api/Data/Skill\";\nimport BuffIcon from \"../Component/BuffIcon\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n    iconHeight?: number;\n}\n\nclass SkillDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/skill/${this.props.skill.id}`}>\n                [\n                <BuffIcon location={this.props.skill.icon} height={this.props.iconHeight}/>\n                {' '}\n                {this.props.skill.name ? this.props.skill.name : `Skill: ${this.props.skill.id}`}\n                ]\n            </Link>\n        );\n    }\n}\n\nexport default SkillDescriptor;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport Region from \"../Api/Data/Region\";\nimport Skill from \"../Api/Data/Skill\";\nimport SkillDescriptor from \"./SkillDescriptor\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    skill?: Skill;\n}\n\nclass SkillReferenceDescriptor extends React.Component<IProps, IState> {\n    constructor(props:IProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    async componentDidMount() {\n        try {\n            this.setState({\n                skill: await Connection.skill(this.props.region, this.props.id)\n            });\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    render() {\n        const route = `/${this.props.region}/skill/${this.props.id}`;\n\n        if (this.state.skill === undefined) {\n            return <Link to={route}>[Skill: {this.props.id}]</Link>;\n        }\n\n        return (\n            <SkillDescriptor region={this.props.region} skill={this.state.skill}/>\n        );\n    }\n}\n\nexport default SkillReferenceDescriptor;\n","import Func, {DataVal, FuncTargetType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nconst targetMap = new Map<FuncTargetType, string>([\n    [FuncTargetType.SELF, 'self'],\n    [FuncTargetType.PT_ONE, 'party member'],\n    // PT_ANOTHER\n    [FuncTargetType.PT_ALL, 'party'],\n    [FuncTargetType.ENEMY, 'enemy'],\n    // ENEMY_ANOTHER\n    [FuncTargetType.ENEMY_ALL, 'enemies'],\n    [FuncTargetType.PT_FULL, 'party (including reserve)'],\n    [FuncTargetType.ENEMY_FULL, 'enemies (including reserve)'],\n    [FuncTargetType.PT_OTHER, 'party except self'],\n    [FuncTargetType.PT_ONE_OTHER, 'other party member'],\n    [FuncTargetType.PT_RANDOM, 'random party member'],\n    [FuncTargetType.ENEMY_OTHER, 'other enemies'],\n    [FuncTargetType.ENEMY_RANDOM, 'random enemy'],\n    [FuncTargetType.PT_OTHER_FULL, 'party except self (including reserve)'],\n    [FuncTargetType.ENEMY_OTHER_FULL, 'other enemies (including reserve)'],\n    [FuncTargetType.PTSELECT_ONE_SUB, 'active party member and reserve party member'],\n    [FuncTargetType.PTSELECT_SUB, 'reserve party member'],\n    // PT_ONE_ANOTHER_RANDOM\n    [FuncTargetType.PT_ONE_ANOTHER_RANDOM, 'other random party member'],\n    [FuncTargetType.PT_SELF_ANOTHER_RANDOM, 'other random party member (or self)'],\n    [FuncTargetType.ENEMY_ONE_ANOTHER_RANDOM, 'other random enemy'],\n    [FuncTargetType.PT_SELF_ANOTHER_FIRST, 'first other party member (or self)'],\n    // PT_SELF_BEFORE\n    // PT_SELF_AFTER\n    // PT_SELF_ANOTHER_LAST\n    [FuncTargetType.COMMAND_TYPE_SELF_TREASURE_DEVICE, 'target noble phantasm version'],\n]);\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.target,\n        parts = section.parts;\n\n    if (targetMap.has(func.funcTargetType)) {\n        parts.push(targetMap.get(func.funcTargetType));\n    } else {\n        parts.push(func.funcTargetType);\n    }\n}\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Func from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {getDataValList, getStaticFieldValues} from \"../Helper/FuncHelper\";\nimport {joinElements, Renderable} from \"../Helper/OutputHelper\";\nimport {FuncDescriptorSections} from \"./Func/FuncDescriptorSections\";\nimport handleActionSection from \"./Func/handleActionSection\";\nimport handleAffectsSection from \"./Func/handleAffectsSection\";\nimport handleAmountSection from \"./Func/handleAmountSection\";\nimport handleChanceSection from \"./Func/handleChanceSection\";\nimport handleDurationSection from \"./Func/handleDurationSection\";\nimport handleScalingSection from \"./Func/handleScalingSection\";\nimport handleTargetSection from \"./Func/handleTargetSection\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n}\n\nclass FuncDescriptor extends React.Component<IProps> {\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            dataVals = getDataValList(func),\n            staticValues = getStaticFieldValues(dataVals);\n\n        const sections = new FuncDescriptorSections();\n\n        handleChanceSection(region, sections, func, staticValues);\n        handleActionSection(region, sections, func, staticValues);\n        handleAmountSection(region, sections, func, staticValues);\n        handleAffectsSection(region, sections, func, staticValues);\n        handleTargetSection(region, sections, func, staticValues);\n        handleDurationSection(region, sections, func, staticValues);\n        handleScalingSection(region, sections, func, staticValues);\n\n        let parts: Renderable[] = [];\n\n        Object.values(sections).forEach(section => {\n            if (!section.showing)\n                return;\n\n            if (section.preposition)\n                parts.push(section.preposition);\n\n            parts = parts.concat(section.parts);\n        });\n\n        parts.push(\n            <Link to={`/${region}/func/${func.funcId}`}>\n                <FontAwesomeIcon icon={faShare}/>\n            </Link>\n        );\n\n        parts = joinElements(parts, ' ');\n\n        return (\n            <span>\n                {parts.map((element, index) => {\n                    return <React.Fragment key={index}>{element}</React.Fragment>;\n                })}\n            </span>\n        );\n    }\n}\n\nexport default FuncDescriptor;\n","import Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.chance,\n        parts = section.parts;\n\n    if (dataVal.Rate && dataVal.Rate !== 1000) {\n        parts.push((dataVal.Rate / 10) + '% Chance to');\n    } else if (!dataVal.Rate && func.funcType !== FuncType.NONE) {\n        parts.push('Chance to');\n    } else {\n        section.showing = false;\n    }\n}\n","import React from \"react\";\nimport {BuffType} from \"../../Api/Data/Buff\";\nimport Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport BuffDescriptor from \"../BuffDescriptor\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    if (func.funcType === FuncType.ADD_STATE || func.funcType === FuncType.ADD_STATE_SHORT) {\n        parts.push('Apply');\n        func.buffs.forEach((buff, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<BuffDescriptor region={region} buff={buff}/>);\n        });\n\n        sections.target.preposition = 'on';\n        if (\n            func.buffs[0]?.type === BuffType.COMMANDATTACK_FUNCTION\n            || func.buffs[0]?.type === BuffType.NPATTACK_PREV_BUFF\n        ) {\n            sections.target.preposition = 'for';\n        }\n    } else if (func.funcType === FuncType.SUB_STATE) {\n        parts.push('Remove effects');\n\n        if (func.traitVals?.length) {\n            parts.push('with');\n\n            func.traitVals.forEach((trait, index) => {\n                if (index > 0)\n                    parts.push('&');\n\n                parts.push(<TraitDescriptor region={region} trait={trait}/>);\n            });\n        }\n\n        sections.target.preposition = 'on';\n    } else if (func.funcType === FuncType.DAMAGE_NP) {\n        parts.push('Deal damage');\n\n        sections.amount.preposition = 'for';\n    } else if (\n        func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL\n        || func.funcType === FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX\n    ) {\n        if (dataVal.Target) {\n            parts.push(\n                <span>Deal damage (additional to targets with {\n                    <TraitDescriptor region={region} trait={dataVal.Target}/>\n                })</span>\n            );\n        } else {\n            parts.push('Deal damage');\n        }\n\n        sections.amount.preposition = 'for';\n    } else if (func.funcType === FuncType.DAMAGE_NP_PIERCE) {\n        parts.push('Deal damage that pierces defence');\n\n        sections.amount.preposition = 'for';\n    } else if (func.funcType === FuncType.DELAY_NPTURN) {\n        parts.push('Drain Charge');\n\n        sections.target.preposition = 'from';\n    } else if (func.funcType === FuncType.GAIN_HP) {\n        parts.push('Restore HP');\n\n        sections.target.preposition = 'for';\n    } else if (func.funcType === FuncType.GAIN_NP) {\n        parts.push('Charge NP');\n\n        sections.target.preposition = 'for';\n    } else if (func.funcType === FuncType.GAIN_STAR) {\n        parts.push('Gain Critical Stars');\n\n        sections.target.showing = false;\n    } else if (func.funcType === FuncType.INSTANT_DEATH) {\n        parts.push('Apply Death');\n    } else if (func.funcType === FuncType.LOSS_HP_SAFE) {\n        parts.push('Lose HP');\n\n        sections.target.showing = false;\n    } else if (func.funcType === FuncType.NONE) {\n        parts.push('No Effect');\n\n        sections.target.showing = false;\n    } else {\n        parts.push(func.funcType);\n    }\n}\n","import React from \"react\";\nimport {BuffType} from \"../../Api/Data/Buff\";\nimport Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport BuffValueDescriptor from \"../BuffValueDescriptor\";\nimport FuncValueDescriptor from \"../FuncValueDescriptor\";\nimport SkillReferenceDescriptor from \"../SkillReferenceDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.amount,\n        parts = section.parts;\n\n    if (!dataVal.Value) {\n        section.showing = false;\n        return;\n    }\n\n    if (func.buffs[0]?.type === BuffType.COMMANDATTACK_FUNCTION) {\n        section.preposition = undefined;\n        parts.push('that triggers');\n        parts.push(\n            <SkillReferenceDescriptor region={region} id={dataVal.Value}/>\n        );\n    } else if (func.buffs[0]?.type === BuffType.NPATTACK_PREV_BUFF) {\n        if (dataVal.SkillID === undefined) {\n            section.showing = false;\n            return;\n        }\n\n        section.preposition = undefined;\n        parts.push('that triggers');\n        parts.push(\n            <SkillReferenceDescriptor region={region} id={dataVal.SkillID}/>\n        );\n    } else if (func.buffs[0]) {\n        parts.push(<BuffValueDescriptor region={region} buff={func.buffs[0]} dataVal={dataVal}/>);\n    } else {\n        // there are some properties that we don't want back as the description\n        const prunedValues = {...dataVal};\n        prunedValues.Rate = undefined;\n\n        parts.push(<FuncValueDescriptor region={region} func={func} dataVal={dataVal}/>);\n    }\n}\n","import React from \"react\";\nimport Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.affects,\n        parts = section.parts;\n\n    if (func.functvals.length) {\n        parts.push('for');\n\n        if (func.functvals.length > 1) {\n            parts.push('all');\n        }\n\n        func.functvals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<TraitDescriptor region={region} trait={trait}/>);\n        });\n    } else {\n        section.showing = false;\n    }\n\n}\n","import Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.duration,\n        parts = section.parts;\n\n    if (dataVal.Count && dataVal.Count > 0 && dataVal.Turn && dataVal.Turn > 0) {\n        const countDesc = dataVal.Count === 1 ? '1 Time' : `${dataVal.Count} Times`,\n            turnDesc = dataVal.Turn === 1 ? '1 Turn' : `${dataVal.Turn} Turns`;\n\n        parts.push(`(${turnDesc}, ${countDesc})`);\n    } else if (dataVal.Turn && dataVal.Turn > 0) {\n        parts.push(dataVal.Turn === 1 ? '(1 Turn)' : `(${dataVal.Turn} Turns)`);\n    } else if (dataVal.Count && dataVal.Count > 0) {\n        parts.push(dataVal.Count === 1 ? '(1 Time)' : `(${dataVal.Count} Times)`);\n    } else {\n        section.showing = false;\n    }\n}\n","import Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {funcUpdatesByLevel, funcUpdatesByOvercharge} from \"../../Helper/FuncHelper\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.scaling,\n        parts = section.parts,\n        isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func);\n\n    if (!isLevel && !isOvercharge) {\n        section.showing = false;\n        return;\n    }\n\n    if (isLevel) {\n        parts.push('<LEVEL>');\n    }\n\n    if (isOvercharge) {\n        parts.push('<OVERCHARGE>');\n    }\n}\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Buff from \"../Api/Data/Buff\";\nimport Region from \"../Api/Data/Region\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport DataTable from \"../Component/DataTable\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\nimport FuncDescriptor from \"../Descriptor/FuncDescriptor\";\nimport {joinElements} from \"../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    buff?: Buff;\n}\n\nclass BuffPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.loadBuff();\n    }\n\n    async loadBuff() {\n        try {\n            const buff = await Connection.buff(this.props.region, this.props.id);\n\n            this.setState({\n                loading: false,\n                buff: buff,\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading || !this.state.buff)\n            return <Loading/>;\n\n        const buff = this.state.buff;\n\n        return (\n            <div>\n                <h1>\n                    <BuffIcon location={buff.icon} height={48}/>\n                    &nbsp;\n                    {buff.name}\n                </h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={buff}/>,\n                    \"ID\": buff.id,\n                    \"Name\": buff.name,\n                    \"Detail\": buff.detail,\n                    \"Type\": buff.type,\n                    \"Gained Traits\": (\n                        <div>\n                            {joinElements(buff.vals.map(trait => trait.name), ', ')}\n                        </div>\n                    ),\n                }}/>\n\n                <h3>Related Functions</h3>\n                {buff.reverseFunctions.map((func, index) => {\n                    return (\n                        <p key={index}>\n                            <FuncDescriptor region={this.props.region} func={func}/>\n                        </p>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default BuffPage;\n","import React from \"react\";\n\nconst assetMap = new Map<number, string>([\n    [1, './assets/star1.png'],\n    [2, './assets/star2.png'],\n    [3, './assets/star3.png'],\n    [4, './assets/star4.png'],\n    [5, './assets/star5.png'],\n]);\n\ninterface IProps {\n    rarity: number;\n    height?: number;\n}\n\nclass RarityDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <span>\n                {assetMap.has(this.props.rarity) ? (\n                    <img alt={`${this.props.rarity} star(s)`}\n                         src={assetMap.get(this.props.rarity)}\n                         style={{height: this.props.height ?? 18}}/>\n                ) : null}\n            </span>\n        );\n    }\n}\n\nexport default RarityDescriptor;\n","import React from \"react\";\nimport CraftEssence from \"../../Api/Data/CraftEssence\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\nimport RarityDescriptor from \"../../Descriptor/RarityDescriptor\";\n\ninterface IProps {\n    craftEssence: CraftEssence;\n}\n\nclass CraftEssenceMainData extends React.Component<IProps> {\n    render() {\n        const craftEssence = this.props.craftEssence;\n\n        return (\n            <div>\n                <h1>\n                    {craftEssence.name}\n                </h1>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={craftEssence}/>,\n                    \"ID\": craftEssence.id,\n                    \"Collection\": craftEssence.collectionNo,\n                    \"Name\": craftEssence.name,\n                    \"Rarity\": <RarityDescriptor rarity={craftEssence.rarity}/>,\n                    \"Cost\": craftEssence.cost,\n                    \"Max Lv.\": craftEssence.lvMax,\n                    \"Base Hp\": craftEssence.hpBase,\n                    \"Base Atk\": craftEssence.atkBase,\n                    \"Max Hp\": craftEssence.hpMax,\n                    \"Max Atk\": craftEssence.atkMax,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssenceMainData;\n","import React from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport Region from \"../../Api/Data/Region\";\nimport BasicListEntity from \"../../Api/Data/BasicListEntity\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps extends RouteComponentProps {\n    region: Region;\n    id: number;\n    craftEssences: BasicListEntity[];\n}\n\nclass CraftEssencePicker extends React.Component<IProps> {\n    private changeCraftEssence(id: number) {\n        this.props.history.push(`/${this.props.region}/craft-essence/${id}`);\n    }\n\n    render() {\n        return (\n            <div>\n                Jump to:\n                <FormControl as={\"select\"} custom\n                             onChange={(ev: Event) => {\n                                 this.changeCraftEssence(parseInt(ev.target.value));\n                             }}\n                             value={this.props.id}>\n                    {this.props.craftEssences\n                        .slice()\n                        .reverse()\n                        .map((craftEssence, index) => {\n                            return (\n                                <option key={index} value={craftEssence.collectionNo}>\n                                    {craftEssence.name}\n                                </option>\n                            );\n                        })\n                    }\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(CraftEssencePicker);\n","import React from \"react\";\nimport {AssetMap} from \"../../Api/Data/AssetCollection\";\nimport CraftEssence from \"../../Api/Data/CraftEssence\";\n\nimport \"./CraftEssencePortrait.css\";\n\ninterface IProps {\n    craftEssence: CraftEssence;\n}\n\ninterface IState {\n    assetMap?: AssetMap;\n    assetKey?: string;\n}\n\nclass CraftEssencePortrait extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        const assetMap = (\n                props.craftEssence.extraAssets.charaGraph.ascension\n                ?? Object.values(props.craftEssence.extraAssets.charaGraph).shift()\n            ),\n            assetKey = assetMap === undefined ? undefined : Object.keys(assetMap).shift();\n\n        this.state = {assetMap, assetKey};\n    }\n\n    render() {\n        return (\n            <div>\n                <img alt={this.props.craftEssence.name}\n                     id={'craft-essence-portrait'}\n                     src={(\n                         this.state.assetMap && this.state.assetKey\n                             ? this.state.assetMap[this.state.assetKey]\n                             : undefined\n                     )}/>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssencePortrait;\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Region from \"../Api/Data/Region\";\n\ninterface IProps {\n    region: Region;\n    questId: number;\n    questPhase: number;\n}\n\nclass QuestDescriptor extends React.Component<IProps>{\n    render() {\n        const prefix = Math.floor(this.props.questId / 1000000);\n        let type = \"\";\n\n        switch (prefix) {\n            case 91:\n                type = 'Interlude';\n                break;\n            case 94:\n                type = 'Strengthening';\n                break;\n            default:\n                type = 'Main Quest';\n                break;\n        }\n\n        return (\n            <Link to={`/${this.props.region}/quest/${this.props.questId}/${this.props.questPhase}`}>\n                {type} Quest <FontAwesomeIcon icon={faShare} />\n            </Link>\n        );\n    }\n}\n\nexport default QuestDescriptor;\n","import React from \"react\";\nimport {Alert, Table} from \"react-bootstrap\";\nimport Region from \"../../Api/Data/Region\";\nimport Skill from \"../../Api/Data/Skill\";\nimport FuncDescriptor from \"../../Descriptor/FuncDescriptor\";\nimport QuestDescriptor from \"../../Descriptor/QuestDescriptor\";\nimport SkillDescriptor from \"../../Descriptor/SkillDescriptor\";\nimport {handleNewLine} from \"../../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n}\n\nclass CraftEssenceSkill extends React.Component<IProps, any> {\n    render() {\n        const skill = this.props.skill;\n        return (\n            <div>\n                <h3>\n                    <SkillDescriptor region={this.props.region} skill={skill} iconHeight={33}/>\n                </h3>\n\n                {skill.condQuestId && skill.condQuestPhase ? (\n                    <Alert variant={'primary'}>\n                        Available after <QuestDescriptor region={this.props.region}\n                                                         questId={skill.condQuestId}\n                                                         questPhase={skill.condQuestPhase}/>\n                    </Alert>\n                ) : null}\n\n                <p>{handleNewLine(skill.detail)}</p>\n\n                <Table responsive>\n                    <thead>\n                    <tr>\n                        <th>Effect</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {skill.functions.map((func, index) => {\n                        return (\n                            <tr key={index}>\n                                <td>\n                                    <FuncDescriptor region={this.props.region} func={func}/>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssenceSkill;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport BasicListEntity from \"../Api/Data/BasicListEntity\";\nimport CraftEssence from \"../Api/Data/CraftEssence\";\nimport Region from \"../Api/Data/Region\";\nimport TraitMap from \"../Api/Data/TraitMap\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport CraftEssenceMainData from \"./CraftEssence/CraftEssenceMainData\";\nimport CraftEssencePicker from \"./CraftEssence/CraftEssencePicker\";\nimport CraftEssencePortrait from \"./CraftEssence/CraftEssencePortrait\";\nimport CraftEssenceSkill from \"./CraftEssence/CraftEssenceSkill\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    id: number;\n    craftEssences: BasicListEntity[];\n    craftEssence?: CraftEssence;\n}\n\nclass CraftEssencePage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            id: this.props.id,\n            craftEssences: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadCraftEssence();\n    }\n\n    async loadCraftEssence() {\n        try {\n            let [craftEssences, craftEssence] = await Promise.all<BasicListEntity[], CraftEssence, TraitMap>([\n                Connection.craftEssenceList(this.props.region),\n                Connection.craftEssence(this.props.region, this.state.id),\n                Connection.traitMap(this.props.region)\n            ]);\n\n            this.setState({\n                loading: false,\n                craftEssences,\n                craftEssence\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading || !this.state.craftEssence)\n            return <Loading/>;\n\n        return (\n            <div>\n                <CraftEssencePicker region={this.props.region}\n                                    craftEssences={this.state.craftEssences}\n                                    id={this.state.craftEssence.collectionNo}/>\n                <hr/>\n\n                <Row>\n                    <Col xs={{span: 12, order: 2}} lg={{span: 6, order: 1}}>\n                        <CraftEssenceMainData craftEssence={this.state.craftEssence}/>\n                    </Col>\n                    <Col xs={{span: 12, order: 1}} lg={{span: 6, order: 2}}>\n                        <CraftEssencePortrait craftEssence={this.state.craftEssence}/>\n                    </Col>\n                </Row>\n\n                <br/>\n                <Row>\n                    {this.state.craftEssence.skills\n                        .filter(skill => skill.num === 1)\n                        .map((skill, index) => {\n                            return (\n                                <Col key={index} xs={12} lg={6}>\n                                    <CraftEssenceSkill region={this.props.region} skill={skill}/>\n                                </Col>\n                            );\n                        })}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssencePage;\n","import React from \"react\";\nimport EntityType from \"../Api/Data/EntityType\";\n\ninterface IProps {\n    type: EntityType;\n    rarity: number;\n    location: string;\n    height?: number;\n}\n\nclass FaceIcon extends React.Component<IProps> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location}\n                 style={this.props.height ? {height: this.props.height} : undefined}/>\n        );\n    }\n\n}\n\nexport default FaceIcon;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport BasicListEntity from \"../Api/Data/BasicListEntity\";\nimport Region from \"../Api/Data/Region\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport FaceIcon from \"../Component/FaceIcon\";\nimport Loading from \"../Component/Loading\";\nimport RarityDescriptor from \"../Descriptor/RarityDescriptor\";\n\nimport \"./CraftEssencesPage.css\";\n\ninterface Event extends React.MouseEvent<HTMLInputElement> {\n\n}\n\ninterface IProps {\n    region: Region;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    craftEssences: BasicListEntity[];\n    activeRarityFilters: number[];\n}\n\nclass CraftEssencesPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            craftEssences: [],\n            activeRarityFilters: [1, 2, 3, 4, 5],\n        };\n    }\n\n    componentDidMount() {\n        try {\n            Connection.craftEssenceList(this.props.region).then(list => {\n                this.setState({\n                    loading: false,\n                    craftEssences: list\n                });\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    private toggleRarityFilter(rarity: number): void {\n        const exists = this.state.activeRarityFilters.indexOf(rarity) !== -1;\n\n        if (exists) {\n            this.setState({\n                activeRarityFilters: this.state.activeRarityFilters.filter(activeRarity => activeRarity !== rarity)\n            });\n        } else {\n            this.setState({\n                activeRarityFilters: [\n                    ...this.state.activeRarityFilters,\n                    rarity\n                ]\n            });\n        }\n    }\n\n    private craftEssences(): BasicListEntity[] {\n        let list = this.state.craftEssences.slice().reverse();\n\n        if (this.state.activeRarityFilters.length !== 5) {\n            list = list.filter(entity => {\n                return this.state.activeRarityFilters.indexOf(entity.rarity) !== -1;\n            });\n        }\n\n        return list;\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading)\n            return <Loading/>;\n\n        return (\n            <div id={'craft-essences'}>\n                <p className={'text-center'}>\n                    {[1, 2, 3, 4, 5].map(rarity => {\n                        const active = this.state.activeRarityFilters.indexOf(rarity) !== -1;\n\n                        return (\n                            <span key={rarity}\n                                  className={'filter'}\n                                  style={{opacity: active ? 1 : 0.5}}\n                                  onClick={(ev: Event) => {\n                                      this.toggleRarityFilter(rarity);\n                                  }}>\n                                <RarityDescriptor rarity={rarity} height={20}/>\n                            </span>\n                        );\n                    })}\n                </p>\n\n                <hr/>\n\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th style={{textAlign: \"center\", width: '1px'}}>#</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Thumbnail</th>\n                        <th>Name</th>\n                        <th>Rarity</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.craftEssences()\n                        .map((craftEssence, index) => {\n                            const route = `/${this.props.region}/craft-essence/${craftEssence.collectionNo}`;\n\n                            return <tr key={index}>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        {craftEssence.collectionNo}\n                                    </Link>\n                                </td>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        <FaceIcon type={craftEssence.type}\n                                                  rarity={craftEssence.rarity}\n                                                  location={craftEssence.face}\n                                                  height={50}/>\n                                    </Link>\n                                </td>\n                                <td>\n                                    <Link to={route}>\n                                        {craftEssence.name}\n                                    </Link>\n                                </td>\n                                <td>\n                                    <RarityDescriptor rarity={craftEssence.rarity}/>\n                                </td>\n                            </tr>\n                        })\n                    }\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssencesPage;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport NoblePhantasm from \"../Api/Data/NoblePhantasm\";\nimport Region from \"../Api/Data/Region\";\n\ninterface IProps {\n    region: Region;\n    noblePhantasm: NoblePhantasm;\n}\n\nclass NoblePhantasmDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/noble-phantasm/${this.props.noblePhantasm.id}`}>\n                [{this.props.noblePhantasm.name}]\n            </Link>\n        );\n    }\n}\n\nexport default NoblePhantasmDescriptor;\n","import React from \"react\";\nimport Func from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport BuffDescriptor from \"../../Descriptor/BuffDescriptor\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\nimport TraitDescriptor from \"../../Descriptor/TraitDescriptor\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n}\n\nclass FuncMainData extends React.Component<IProps> {\n    render() {\n        const func = this.props.func;\n\n        return (\n            <DataTable data={{\n                \"Raw\": <RawDataViewer data={func}/>,\n                \"ID\": func.funcId,\n                \"Type\": func.funcType,\n                \"Target\": func.funcTargetType,\n                \"Affects Players/Enemies\": func.funcTargetTeam,\n                \"Popup Text\": func.funcPopupText,\n                \"Affects Traits\": (\n                    <div>\n                        {func.traitVals?.map((trait, index) => {\n                            return <TraitDescriptor key={index} region={this.props.region} trait={trait}/>;\n                        })}\n                    </div>\n                ),\n                \"Buffs\": (\n                    <div>\n                        {func.buffs.map((buff, index) => {\n                            return <BuffDescriptor key={index} region={this.props.region} buff={buff}/>;\n                        })}\n                    </div>\n                )\n            }}/>\n        );\n    }\n}\n\nexport default FuncMainData;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport Func from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport NoblePhantasmDescriptor from \"../Descriptor/NoblePhantasmDescriptor\";\nimport SkillDescriptor from \"../Descriptor/SkillDescriptor\";\nimport FuncMainData from \"./Func/FuncMainData\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    func?: Func;\n}\n\nclass FuncPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.loadFunc();\n    }\n\n    async loadFunc() {\n        try {\n            const func = await Connection.func(this.props.region, this.props.id);\n\n            this.setState({\n                loading: false,\n                func: func,\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error} />;\n\n        if (this.state.loading || !this.state.func)\n            return <Loading/>;\n\n        const func = this.state.func;\n\n        return (\n            <div>\n                <h1>\n                    {func.funcPopupIcon ? (\n                        <span>\n                            <BuffIcon location={func.funcPopupIcon} height={48}/>\n                            &nbsp;\n                        </span>\n                    ) : null}\n                    Function: {this.props.id}\n                </h1>\n                <br/>\n\n                <FuncMainData region={this.props.region} func={func}/>\n\n                <Row>\n                    <Col xs={12} lg={6}>\n                        <h3>Related Skills</h3>\n                        {func.reverseSkills.map((skill, index) => {\n                            return (\n                                <p key={index}>\n                                    <SkillDescriptor region={this.props.region} skill={skill}/>\n                                </p>\n                            )\n                        })}\n                    </Col>\n                    <Col xs={12} lg={6}>\n                        <h3>Related Noble Phantasms</h3>\n                        {func.reverseTds.map((noblePhantasm, index) => {\n                            return (\n                                <p key={index}>\n                                    <NoblePhantasmDescriptor region={this.props.region} noblePhantasm={noblePhantasm}/>\n                                </p>\n                            )\n                        })}\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default FuncPage;\n","enum ClassName {\n    SABER = \"saber\",\n    ARCHER = \"archer\",\n    LANCER = \"lancer\",\n    RIDER = \"rider\",\n    CASTER = \"caster\",\n    ASSASSIN = \"assassin\",\n    BERSERKER = \"berserker\",\n    SHIELDER = \"shielder\",\n    RULER = \"ruler\",\n    ALTER_EGO = \"alterEgo\",\n    AVENGER = \"avenger\",\n    GRAND_CASTER = \"grandCaster\",\n    BEAST_II = \"beastII\",\n    BEAST_I = \"beastI\",\n    MOON_CANCER = \"moonCancer\",\n    BEAST_IIIR = \"beastIIIR\",\n    FOREIGNER = \"foreigner\",\n    BEAST_IIIL = \"beastIIIL\",\n    BEAST_UNKNOWN = \"beastUnknown\",\n    ALL = \"ALL\",\n    EXTRA = \"EXTRA\",\n}\n\nexport default ClassName;\n","import React from \"react\";\nimport ClassName from \"../Api/Data/ClassName\";\n\nconst classTypes = new Map<number, number>([\n    [1, 1],\n    [2, 1],\n    [3, 2],\n    [4, 3],\n    [5, 3],\n]);\nconst unknownClassType = 3;\nconst classIds = new Map<ClassName, number>([\n    [ClassName.SABER, 1],\n    [ClassName.ARCHER, 2],\n    [ClassName.LANCER, 3],\n    [ClassName.RIDER, 4],\n    [ClassName.CASTER, 5],\n    [ClassName.ASSASSIN, 6],\n    [ClassName.BERSERKER, 7],\n    [ClassName.SHIELDER, 8],\n    [ClassName.RULER, 9],\n    [ClassName.ALTER_EGO, 10],\n    [ClassName.AVENGER, 11],\n    [ClassName.MOON_CANCER, 23],\n    [ClassName.FOREIGNER, 25],\n    [ClassName.GRAND_CASTER, 5],\n    [ClassName.BEAST_I, 20],\n    [ClassName.BEAST_II, 20],\n    [ClassName.BEAST_IIIL, 20],\n    [ClassName.BEAST_IIIR, 20],\n    [ClassName.BEAST_UNKNOWN, 20],\n\n    [ClassName.ALL, 1001],\n    [ClassName.EXTRA, 1002],\n]);\nconst unknownClassId = 12;\n\ninterface IProps {\n    className: ClassName;\n    rarity?: number;\n    height?: number;\n}\n\nclass ClassIcon extends React.Component<IProps> {\n    render() {\n        return (\n            <img alt={''} src={this.location()}\n                 style={{height: this.props.height ?? 24}}/>\n        );\n    }\n\n    private location(): string {\n        let classId = classIds.has(this.props.className) ? classIds.get(this.props.className) : unknownClassId,\n            rarity = this.props.rarity ?? 5,\n            type = classTypes.has(rarity) ? classTypes.get(rarity) : unknownClassType;\n\n        return `https://assets.atlasacademy.io/GameData/NA/ClassIcons/class${type}_${classId}.png`;\n    }\n}\n\nexport default ClassIcon;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Region from \"../Api/Data/Region\";\nimport Servant from \"../Api/Data/Servant\";\nimport ClassIcon from \"../Component/ClassIcon\";\n\ninterface IProps {\n    region: Region;\n    servant: Servant;\n    iconHeight?: number;\n}\n\nclass ServantDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/servant/${this.props.servant.id}`}>\n                <ClassIcon className={this.props.servant.className}\n                           rarity={this.props.servant.rarity}\n                           height={this.props.iconHeight}/>\n                {' '}\n                {this.props.servant.name}\n            </Link>\n        );\n    }\n}\n\nexport default ServantDescriptor;\n","import React from \"react\";\nimport {DataVal} from \"../../Api/Data/Func\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\n\ninterface IProps {\n    dataVal: DataVal;\n}\n\nclass DataValMainData extends React.Component<IProps> {\n    render() {\n        return (\n            <DataTable data={{\n                \"Raw\": <RawDataViewer data={this.props.dataVal}/>,\n                ...this.props.dataVal\n            }}/>\n        );\n    }\n}\n\nexport default DataValMainData;\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport NoblePhantasm from \"../../Api/Data/NoblePhantasm\";\nimport Region from \"../../Api/Data/Region\";\nimport FuncDescriptor from \"../../Descriptor/FuncDescriptor\";\nimport {getTargetVersionValues} from \"../../Helper/FuncHelper\";\nimport DataValMainData from \"../Func/DataValMainData\";\nimport FuncMainData from \"../Func/FuncMainData\";\n\ninterface IProps {\n    region: Region;\n    noblePhantasm: NoblePhantasm;\n    level: number;\n    overcharge: number;\n}\n\nclass NoblePhantasmVersion extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {this.props.noblePhantasm.functions.map((func, index) => {\n                    const dataVal = getTargetVersionValues(func, this.props.level, this.props.overcharge);\n\n                    return (\n                        <div key={index}>\n                            <h3>Effect #{index + 1}</h3>\n                            <p>\n                                <FuncDescriptor region={this.props.region} func={func}/>\n                            </p>\n\n                            <Row>\n                                <Col xs={12} md={6}>\n                                    <h5>Function</h5>\n                                    <FuncMainData region={this.props.region} func={func}/>\n                                </Col>\n                                <Col xs={12} md={6}>\n                                    <h5>Values</h5>\n                                    <DataValMainData dataVal={dataVal ?? {}}/>\n                                </Col>\n                            </Row>\n\n                            <hr/>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default NoblePhantasmVersion;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport EntityType from \"../Api/Data/EntityType\";\nimport NoblePhantasm from \"../Api/Data/NoblePhantasm\";\nimport Region from \"../Api/Data/Region\";\nimport DataTable from \"../Component/DataTable\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\nimport ServantDescriptor from \"../Descriptor/ServantDescriptor\";\nimport NoblePhantasmVersion from \"./NoblePhantasm/NoblePhantasmVersion\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    noblePhantasm?: NoblePhantasm;\n    level: number;\n    overcharge: number;\n}\n\nclass NoblePhantasmPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            level: 1,\n            overcharge: 1,\n        };\n    }\n\n    componentDidMount() {\n        this.loadNp();\n    }\n\n    async loadNp() {\n        try {\n            const noblePhantasm = await Connection.noblePhantasm(this.props.region, this.props.id);\n\n            this.setState({\n                loading: false,\n                noblePhantasm: noblePhantasm,\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    private changeLevel(level: number) {\n        this.setState({\n            level: level\n        });\n    }\n\n    private changeOvercharge(level: number) {\n        this.setState({\n            overcharge: level\n        });\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error} />;\n\n        if (this.state.loading || !this.state.noblePhantasm)\n            return <Loading/>;\n\n        const noblePhantasm = this.state.noblePhantasm;\n\n        return (\n            <div>\n                <h1>{noblePhantasm.name}</h1>\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={noblePhantasm}/>,\n                    \"ID\": noblePhantasm.id,\n                    \"Name\": noblePhantasm.name,\n                    \"Type\": noblePhantasm.type,\n                    \"Rank\": noblePhantasm.rank,\n                    \"Detail\": noblePhantasm.detail,\n                    \"Card Type\": noblePhantasm.card,\n                    \"Owner\": (\n                        <div>\n                            {noblePhantasm.reverseServants\n                                .filter(servant => {\n                                    return servant.type === EntityType.NORMAL\n                                        || servant.type === EntityType.HEROINE\n                                })\n                                .map((servant, index) => {\n                                    return (\n                                        <div>\n                                            <ServantDescriptor region={this.props.region}\n                                                               servant={servant}\n                                                               iconHeight={24}/>\n                                        </div>\n                                    );\n                                })\n                            }\n                        </div>\n                    )\n                }}/>\n\n                <br/>\n                <Row>\n                    <Col>\n                        <Form inline style={{justifyContent: 'flex-end'}}>\n                            <Form.Control as={'select'} value={this.state.level}\n                                          onChange={(ev: Event) => this.changeLevel(parseInt(ev.target.value))}>\n                                {[1, 2, 3, 4, 5].map(level => (\n                                    <option key={level} value={level}>NP LEVEL {level}</option>\n                                ))}\n                            </Form.Control>\n                        </Form>\n                    </Col>\n                    <Col>\n                        <Form inline>\n                            <Form.Control as={'select'} value={this.state.overcharge}\n                                          onChange={(ev: Event) => this.changeOvercharge(parseInt(ev.target.value))}>\n                                {[1, 2, 3, 4, 5].map(level => (\n                                    <option key={level} value={level}>OVERCHARGE {level}</option>\n                                ))}\n                            </Form.Control>\n                        </Form>\n                    </Col>\n                </Row>\n\n                <br/>\n                <NoblePhantasmVersion region={this.props.region}\n                                      noblePhantasm={noblePhantasm}\n                                      level={this.state.level}\n                                      overcharge={this.state.overcharge}/>\n            </div>\n        );\n    }\n}\n\nexport default NoblePhantasmPage;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Quest from \"../Api/Data/Quest\";\nimport Region from \"../Api/Data/Region\";\nimport DataTable from \"../Component/DataTable\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n    phase: number;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    quest?: Quest;\n}\n\nclass QuestPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.loadQuest();\n    }\n\n    async loadQuest() {\n        try {\n            const quest = await Connection.quest(this.props.region, this.props.id, this.props.phase);\n\n            this.setState({\n                loading: false,\n                quest: quest,\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error} />;\n\n        if (this.state.loading || !this.state.quest)\n            return <Loading/>;\n\n        const quest = this.state.quest;\n\n        return (\n            <div>\n                <h1>{quest.name}</h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={quest}/>,\n                    \"ID\": quest.id,\n                    \"Phase\": quest.phase,\n                    \"Name\": quest.name,\n                    \"Type\": quest.type,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default QuestPage;\n","import React from \"react\";\nimport Servant from \"../../Api/Data/Servant\";\nimport ClassIcon from \"../../Component/ClassIcon\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\nimport RarityDescriptor from \"../../Descriptor/RarityDescriptor\";\n\ninterface IProps {\n    servant: Servant;\n}\n\nclass ServantMainData extends React.Component<IProps> {\n    render() {\n        const servant = this.props.servant;\n\n        return (\n            <div>\n                <h1>\n                    <ClassIcon className={servant.className} rarity={servant.rarity} height={50}/>\n                    &nbsp;\n                    {servant.name}\n                </h1>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={servant}/>,\n                    \"ID\": servant.id,\n                    \"Collection\": servant.collectionNo,\n                    \"Name\": servant.name,\n                    \"Class\": servant.className,\n                    \"Rarity\": <RarityDescriptor rarity={servant.rarity}/>,\n                    \"Cost\": servant.cost,\n                    \"Gender\": servant.gender,\n                    \"Attribute\": servant.attribute,\n                    \"Max Lv.\": servant.lvMax,\n                    \"Base Hp\": servant.hpBase,\n                    \"Base Atk\": servant.atkBase,\n                    \"Max Hp\": servant.hpMax,\n                    \"Max Atk\": servant.atkMax,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantMainData;\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Servant from \"../../Api/Data/Servant\";\nimport BuffIcon from \"../../Component/BuffIcon\";\nimport DataTable from \"../../Component/DataTable\";\nimport {asPercent} from \"../../Helper/OutputHelper\";\n\nconst buffIconPath = 'https://assets.atlasacademy.io/GameData/JP/BuffIcons',\n    deathChanceIcon = `${buffIconPath}/bufficon_337.png`,\n    hitCountIcon = `${buffIconPath}/bufficon_349.png`,\n    starGenIcon = `${buffIconPath}/bufficon_310.png`,\n    showHits = function (hits: number[] | undefined): JSX.Element | string {\n        if (hits === undefined)\n            return '';\n\n        return <span>\n            {hits.map((hit, index) => {\n                return (index > 0 ? ', ' : '') + asPercent(hit, 0);\n            })}\n            &nbsp;-&nbsp;\n            {hits.length} Hits\n        </span>\n    };\n\ninterface IProps {\n    servant: Servant;\n}\n\nclass ServantMiscData extends React.Component<IProps> {\n    private hitsColumn() {\n        return (\n            <Col xs={12} md={12} lg={6}>\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={hitCountIcon}/>\n                            &nbsp;\n                            Hit Count\n                        </div>\n                    )}\n                    data={{\n                        \"Buster\": showHits(this.props.servant.hitsDistribution.buster),\n                        \"Arts\": showHits(this.props.servant.hitsDistribution.arts),\n                        \"Quick\": showHits(this.props.servant.hitsDistribution.quick),\n                        \"Extra\": showHits(this.props.servant.hitsDistribution.extra),\n                    }}/>\n            </Col>\n        );\n    }\n\n    private miscColumn() {\n        return (\n            <Col xs={12} md={12} lg={6}>\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={starGenIcon}/>&nbsp;Crit Stars\n                        </div>\n                    )}\n                    data={{\n                        \"Star Absorb\": this.props.servant.starAbsorb,\n                        \"Star Gen\": asPercent(this.props.servant.starGen, 1),\n                    }}/>\n\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={deathChanceIcon}/>&nbsp;Instant Death\n                        </div>\n                    )}\n                    data={{\n                        \"Death Chance\": asPercent(this.props.servant.instantDeathChance, 1),\n                    }}/>\n            </Col>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    {this.hitsColumn()}\n                    {this.miscColumn()}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default ServantMiscData;\n","import React from \"react\";\nimport Connection from \"../../Api/Connection\";\nimport Region from \"../../Api/Data/Region\";\nimport Skill from \"../../Api/Data/Skill\";\nimport ServantEffectBreakdownContent from \"./ServantEffectBreakdownContent\";\n\ninterface IProps {\n    region: Region;\n    levels: number;\n    skillId: number;\n}\n\ninterface IState {\n    skill?: Skill;\n}\n\nclass ServantAdditionalEffectBreakdown extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    async componentDidMount() {\n        try {\n            this.setState({\n                skill: await Connection.skill(this.props.region, this.props.skillId)\n            });\n        } catch (e) {\n            // do nothing on failure\n        }\n    }\n\n    render() {\n        if (this.state.skill === undefined) {\n            return null;\n        }\n\n        return (\n            <ServantEffectBreakdownContent region={this.props.region}\n                                           funcs={this.state.skill.functions}\n                                           levels={this.props.levels}\n                                           relatedSkillId={this.state.skill.id}/>\n        );\n    }\n}\n\nexport default ServantAdditionalEffectBreakdown;\n","import React from \"react\";\nimport Func from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport FuncDescriptor from \"../../Descriptor/FuncDescriptor\";\nimport SkillReferenceDescriptor from \"../../Descriptor/SkillReferenceDescriptor\";\nimport {describeMutators, getRelatedSkillIds} from \"../../Helper/FuncHelper\";\nimport ServantAdditionalEffectBreakdown from \"./ServantAdditionalEffectBreakdown\";\n\ninterface IProps {\n    region: Region;\n    cooldowns?: number[];\n    funcs: Func[];\n    levels: number;\n    relatedSkillId?: number;\n}\n\nclass ServantEffectBreakdownContent extends React.Component<IProps> {\n    render() {\n        return (\n            <React.Fragment>\n                {this.props.cooldowns ? (\n                    <tr>\n                        <td className={'effect'}>Cooldown</td>\n                        {this.props.cooldowns.map((cooldown, index) => {\n                            return <td key={index}>{cooldown}</td>;\n                        })}\n                    </tr>\n                ) : null}\n                {this.props.funcs.map((func, index) => {\n                    let mutatingDescriptions = describeMutators(this.props.region, func),\n                        relatedSkillIds = getRelatedSkillIds(func);\n\n                    for (let i = 0; i < this.props.levels; i++) {\n                        if (!mutatingDescriptions[i])\n                            mutatingDescriptions.push('-');\n                    }\n\n                    return (\n                        <React.Fragment key={index}>\n                            <tr>\n                                <td className={'effect'}>\n                                    {\n                                        this.props.relatedSkillId\n                                            ? <SkillReferenceDescriptor region={this.props.region}\n                                                                        id={this.props.relatedSkillId}/>\n                                            : null\n                                    }\n                                    {this.props.relatedSkillId ? ' ' : ''}\n                                    <FuncDescriptor region={this.props.region} func={func}/>\n                                </td>\n                                {mutatingDescriptions.map((description, index) => {\n                                    return (\n                                        <td key={index}>{description}</td>\n                                    );\n                                })}\n                            </tr>\n                            {relatedSkillIds.map((skillId, index) => {\n                                return <ServantAdditionalEffectBreakdown key={skillId}\n                                                                         region={this.props.region}\n                                                                         skillId={skillId}\n                                                                         levels={this.props.levels}/>\n                            })}\n                        </React.Fragment>\n                    );\n                })}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ServantEffectBreakdownContent;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport Func from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\n\nimport \"./ServantEffectBreakdown.css\";\nimport ServantEffectBreakdownContent from \"./ServantEffectBreakdownContent\";\n\ninterface IProps {\n    region: Region;\n    cooldowns?: number[];\n    funcs: Func[];\n    levels: number;\n}\n\nclass ServantEffectBreakdown extends React.Component<IProps> {\n    render() {\n        return (\n            <Table responsive className={'effect-breakdown'}>\n                <thead>\n                <tr>\n                    <th>Effect</th>\n                    {Array.from(Array(this.props.levels).keys()).map(level => {\n                        return <td key={level}>{level + 1}</td>;\n                    })}\n                </tr>\n                </thead>\n                <tbody>\n                <ServantEffectBreakdownContent region={this.props.region}\n                                               funcs={this.props.funcs}\n                                               levels={this.props.levels}/>\n                </tbody>\n            </Table>\n        );\n    }\n}\n\nexport default ServantEffectBreakdown;\n","import React from \"react\";\nimport {Alert} from \"react-bootstrap\";\nimport {default as ServantNoblePhantasmData} from \"../../Api/Data/NoblePhantasm\";\nimport Region from \"../../Api/Data/Region\";\nimport NoblePhantasmDescriptor from \"../../Descriptor/NoblePhantasmDescriptor\";\nimport QuestDescriptor from \"../../Descriptor/QuestDescriptor\";\nimport {handleNewLine} from \"../../Helper/OutputHelper\";\nimport ServantEffectBreakdown from \"./ServantEffectBreakdown\";\n\ninterface IProps {\n    region: Region;\n    noblePhantasm: ServantNoblePhantasmData;\n}\n\nclass ServantNoblePhantasm extends React.Component<IProps> {\n    render() {\n        const np = this.props.noblePhantasm;\n\n        return (\n            <div>\n                <h3>\n                    <NoblePhantasmDescriptor region={this.props.region} noblePhantasm={np}/>\n                </h3>\n\n                {np.condQuestId && np.condQuestPhase ? (\n                    <Alert variant={'primary'}>\n                        Available after <QuestDescriptor region={this.props.region}\n                                                         questId={np.condQuestId}\n                                                         questPhase={np.condQuestPhase}/>\n                    </Alert>\n                ) : null}\n\n                <p>{handleNewLine(np.detail)}</p>\n\n                <ServantEffectBreakdown region={this.props.region}\n                                        funcs={np.functions}\n                                        levels={5}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantNoblePhantasm;\n","import React from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport Region from \"../../Api/Data/Region\";\nimport BasicListEntity from \"../../Api/Data/BasicListEntity\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps extends RouteComponentProps {\n    region: Region;\n    id: number;\n    servants: BasicListEntity[];\n}\n\nclass ServantPicker extends React.Component<IProps> {\n    private changeServant(id: number) {\n        this.props.history.push(`/${this.props.region}/servant/${id}`);\n    }\n\n    render() {\n        return (\n            <div>\n                Jump to:\n                <FormControl as={\"select\"} custom\n                             onChange={(ev: Event) => {\n                                 this.changeServant(parseInt(ev.target.value));\n                             }}\n                             value={this.props.id}>\n                    {this.props.servants\n                        .slice()\n                        .reverse()\n                        .map((servant, index) => {\n                            return (\n                                <option key={index} value={servant.collectionNo}>\n                                    {servant.name}\n                                </option>\n                            );\n                        })\n                    }\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ServantPicker);\n","import React from \"react\";\nimport {AssetMap} from \"../../Api/Data/AssetCollection\";\nimport Servant from \"../../Api/Data/Servant\";\n\nimport \"./ServantPortrait.css\";\n\ninterface IProps {\n    servant: Servant;\n}\n\ninterface IState {\n    assetMap?: AssetMap;\n    assetKey?: string;\n}\n\nclass ServantPortrait extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        const assetMap = (\n                props.servant.extraAssets.charaGraph.ascension\n                ?? Object.values(props.servant.extraAssets.charaGraph).shift()\n            ),\n            assetKey = assetMap === undefined ? undefined : Object.keys(assetMap).shift();\n\n        this.state = {assetMap, assetKey};\n    }\n\n    render() {\n        return (\n            <div>\n                <img alt={this.props.servant.name}\n                     id={'servant-portrait'}\n                     src={(\n                         this.state.assetMap && this.state.assetKey\n                             ? this.state.assetMap[this.state.assetKey]\n                             : undefined\n                     )}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantPortrait;\n","import React from \"react\";\nimport {Alert} from \"react-bootstrap\";\nimport Region from \"../../Api/Data/Region\";\nimport Skill from \"../../Api/Data/Skill\";\nimport QuestDescriptor from \"../../Descriptor/QuestDescriptor\";\nimport SkillDescriptor from \"../../Descriptor/SkillDescriptor\";\nimport {handleNewLine} from \"../../Helper/OutputHelper\";\nimport ServantEffectBreakdown from \"./ServantEffectBreakdown\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n}\n\nclass ServantSkill extends React.Component<IProps, any> {\n    render() {\n        const skill = this.props.skill;\n        return (\n            <div>\n                <h3>\n                    <SkillDescriptor region={this.props.region} skill={skill} iconHeight={33}/>\n                </h3>\n\n                {skill.condQuestId && skill.condQuestPhase ? (\n                    <Alert variant={'primary'}>\n                        Available after <QuestDescriptor region={this.props.region}\n                                                         questId={skill.condQuestId}\n                                                         questPhase={skill.condQuestPhase}/>\n                    </Alert>\n                ) : null}\n\n                <p>{handleNewLine(skill.detail)}</p>\n\n                <ServantEffectBreakdown region={this.props.region}\n                                        cooldowns={skill.coolDown}\n                                        funcs={this.props.skill.functions}\n                                        levels={10}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantSkill;\n","import React from \"react\";\nimport Region from \"../../Api/Data/Region\";\nimport Trait from \"../../Api/Data/Trait\";\nimport TraitDescriptor from \"../../Descriptor/TraitDescriptor\";\nimport {joinElements} from \"../../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    traits: Trait[];\n}\n\nclass ServantTraits extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {joinElements(\n                    this.props.traits.map(trait => <TraitDescriptor region={this.props.region} trait={trait}/>),\n                    ', '\n                ).map(\n                    (element, index) => <span key={index}>{element}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ServantTraits;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Col, Row, Tab, Tabs} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport BasicListEntity from \"../Api/Data/BasicListEntity\";\nimport Region from \"../Api/Data/Region\";\nimport Servant from \"../Api/Data/Servant\";\nimport TraitMap from \"../Api/Data/TraitMap\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport ServantMainData from \"./Servant/ServantMainData\";\nimport ServantMiscData from \"./Servant/ServantMiscData\";\nimport ServantNoblePhantasm from \"./Servant/ServantNoblePhantasm\";\nimport ServantPicker from \"./Servant/ServantPicker\";\nimport ServantPortrait from \"./Servant/ServantPortrait\";\nimport ServantSkill from \"./Servant/ServantSkill\";\nimport ServantTraits from \"./Servant/ServantTraits\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    id: number;\n    servants: BasicListEntity[];\n    servant?: Servant;\n}\n\nclass ServantPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            id: this.props.id,\n            servants: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadServant();\n    }\n\n    async loadServant() {\n        try {\n            let [servants, servant] = await Promise.all<BasicListEntity[], Servant, TraitMap>([\n                Connection.servantList(this.props.region),\n                Connection.servant(this.props.region, this.state.id),\n                Connection.traitMap(this.props.region)\n            ]);\n\n            this.setState({\n                loading: false,\n                servants,\n                servant\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading || !this.state.servant)\n            return <Loading/>;\n\n        return (\n            <div id={'servant'}>\n                <ServantPicker region={this.props.region}\n                               servants={this.state.servants}\n                               id={this.state.servant.collectionNo}/>\n                <hr/>\n\n                <Row>\n                    <Col xs={{span: 12, order: 2}} lg={{span: 6, order: 1}}>\n                        <ServantMainData servant={this.state.servant}/>\n                    </Col>\n                    <Col xs={{span: 12, order: 1}} lg={{span: 6, order: 2}}>\n                        <ServantPortrait servant={this.state.servant}/>\n                    </Col>\n                </Row>\n\n                <Tabs id={'servant-tabs'} defaultActiveKey={'skill-1'} transition={false}>\n                    <Tab eventKey={'skill-1'} title={'Skill 1'}>\n                        <br/>\n                        {this.state.servant.skills\n                            .filter(skill => skill.num === 1)\n                            .map((skill, index) => {\n                                return <ServantSkill region={this.props.region} key={index} skill={skill}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'skill-2'} title={'Skill 2'}>\n                        <br/>\n                        {this.state.servant.skills\n                            .filter(skill => skill.num === 2)\n                            .map((skill, index) => {\n                                return <ServantSkill region={this.props.region} key={index} skill={skill}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'skill-3'} title={'Skill 3'}>\n                        <br/>\n                        {this.state.servant.skills\n                            .filter(skill => skill.num === 3)\n                            .map((skill, index) => {\n                                return <ServantSkill region={this.props.region} key={index} skill={skill}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'nps'} title={'Noble Phantasms'}>\n                        <br/>\n                        {this.state.servant.noblePhantasms\n                            .filter(noblePhantasm => noblePhantasm.functions.length > 0)\n                            .map((noblePhantasm, index) => {\n                                return <ServantNoblePhantasm region={this.props.region} key={index}\n                                                             noblePhantasm={noblePhantasm}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'traits'} title={'Traits'}>\n                        <br/>\n                        <ServantTraits region={this.props.region} traits={this.state.servant.traits}/>\n                    </Tab>\n                    <Tab eventKey={'misc'} title={'Misc'}>\n                        <br/>\n                        <ServantMiscData servant={this.state.servant}/>\n                    </Tab>\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default ServantPage;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport BasicListEntity from \"../Api/Data/BasicListEntity\";\nimport ClassName from \"../Api/Data/ClassName\";\nimport Region from \"../Api/Data/Region\";\nimport ClassIcon from \"../Component/ClassIcon\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport FaceIcon from \"../Component/FaceIcon\";\nimport Loading from \"../Component/Loading\";\nimport RarityDescriptor from \"../Descriptor/RarityDescriptor\";\n\nimport './ServantsPage.css';\n\nconst classFilters: ClassName[] = [\n    ClassName.ALL,\n    ClassName.SABER,\n    ClassName.ARCHER,\n    ClassName.LANCER,\n    ClassName.RIDER,\n    ClassName.CASTER,\n    ClassName.ASSASSIN,\n    ClassName.BERSERKER,\n    ClassName.EXTRA,\n];\n\ninterface Event extends React.MouseEvent<HTMLInputElement> {\n\n}\n\ninterface IProps {\n    region: Region,\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    servants: BasicListEntity[];\n    activeClassFilters: ClassName[];\n    activeRarityFilters: number[];\n}\n\nclass ServantsPage extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            servants: [],\n            activeClassFilters: classFilters.slice(),\n            activeRarityFilters: [1, 2, 3, 4, 5],\n        };\n    }\n\n    componentDidMount() {\n        try {\n            Connection.servantList(this.props.region).then(servantList => {\n                this.setState({\n                    loading: false,\n                    servants: servantList\n                });\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    private isClassFilterActive(className: ClassName): boolean {\n        return this.state.activeClassFilters.indexOf(className) !== -1;\n    }\n\n    private isExtra(className: ClassName): boolean {\n        return !(className === ClassName.SABER\n            || className === ClassName.ARCHER\n            || className === ClassName.LANCER\n            || className === ClassName.RIDER\n            || className === ClassName.CASTER\n            || className === ClassName.ASSASSIN\n            || className === ClassName.BERSERKER);\n    }\n\n    private toggleClassFilter(className: ClassName): void {\n        if (className === ClassName.ALL) {\n            if (this.isClassFilterActive(className)) {\n                this.setState({\n                    activeClassFilters: [],\n                    activeRarityFilters: [],\n                });\n            } else {\n                this.setState({\n                    activeClassFilters: classFilters.slice(),\n                    activeRarityFilters: [1, 2, 3, 4, 5],\n                });\n            }\n        } else {\n            let exists = false,\n                activeFilters = this.state.activeClassFilters.filter(activeClassName => {\n                    if (activeClassName === ClassName.ALL)\n                        return false;\n\n                    if (activeClassName === className) {\n                        exists = true;\n                        return false;\n                    }\n\n                    return true;\n                });\n\n            if (!exists)\n                activeFilters.push(className);\n\n            this.setState({activeClassFilters: activeFilters});\n        }\n    }\n\n    private toggleRarityFilter(rarity: number): void {\n        const exists = this.state.activeRarityFilters.indexOf(rarity) !== -1;\n\n        if (exists) {\n            this.setState({\n                activeClassFilters: this.state.activeClassFilters.filter(activeClass => activeClass !== ClassName.ALL),\n                activeRarityFilters: this.state.activeRarityFilters.filter(activeRarity => activeRarity !== rarity)\n            });\n        } else {\n            this.setState({\n                activeClassFilters: this.state.activeClassFilters.filter(activeClass => activeClass !== ClassName.ALL),\n                activeRarityFilters: [\n                    ...this.state.activeRarityFilters,\n                    rarity\n                ]\n            });\n        }\n    }\n\n    private servants(): BasicListEntity[] {\n        let list = this.state.servants.slice().reverse();\n\n        if (this.state.activeRarityFilters.length !== 5) {\n            list = list.filter(entity => {\n                return this.state.activeRarityFilters.indexOf(entity.rarity) !== -1;\n            });\n        }\n\n        if (!this.isClassFilterActive(ClassName.ALL)) {\n            list = list.filter(entity => {\n                for (let x in this.state.activeClassFilters) {\n                    const className = this.state.activeClassFilters[x];\n\n                    if (className === ClassName.EXTRA && this.isExtra(entity.className)) {\n                        return true;\n                    } else if (entity.className === className) {\n                        return true;\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        return list;\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading)\n            return <Loading/>;\n\n        return (\n            <div id=\"servants\">\n                <p className={'text-center'}>\n                    {classFilters.map(className => {\n                        const active = this.isClassFilterActive(className);\n                        return (\n                            <span key={className}\n                                  className={'filter'}\n                                  style={{opacity: active ? 1 : 0.5}}\n                                  onClick={(ev: Event) => {\n                                      this.toggleClassFilter(className);\n                                  }}>\n                                <ClassIcon height={50} rarity={active ? 5 : 3} className={className}/>\n                            </span>\n                        );\n                    })}\n                </p>\n\n                <p className={'text-center'}>\n                    {[1, 2, 3, 4, 5].map(rarity => {\n                        const active = this.state.activeRarityFilters.indexOf(rarity) !== -1;\n\n                        return (\n                            <span key={rarity}\n                                  className={'filter'}\n                                  style={{opacity: active ? 1 : 0.5}}\n                                  onClick={(ev: Event) => {\n                                      this.toggleRarityFilter(rarity);\n                                  }}>\n                                <RarityDescriptor rarity={rarity} height={20}/>\n                            </span>\n                        );\n                    })}\n                </p>\n\n                <hr/>\n\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th style={{textAlign: \"center\", width: '1px'}}>#</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Class</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Thumbnail</th>\n                        <th>Name</th>\n                        <th>Rarity</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this\n                        .servants()\n                        .map((servant, index) => {\n                            const route = `/${this.props.region}/servant/${servant.collectionNo}`;\n\n                            return <tr key={index}>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        {servant.collectionNo}\n                                    </Link>\n                                </td>\n                                <td align={\"center\"}>\n                                    <ClassIcon className={servant.className} rarity={servant.rarity} height={50}/>\n                                </td>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        <FaceIcon type={servant.type}\n                                                  rarity={servant.rarity}\n                                                  location={servant.face}\n                                                  height={50}/>\n                                    </Link>\n                                </td>\n                                <td>\n                                    <Link to={route}>\n                                        {servant.name}\n                                    </Link>\n                                </td>\n                                <td>\n                                    <RarityDescriptor rarity={servant.rarity}/>\n                                </td>\n                            </tr>\n                        })\n                    }\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n\n}\n\nexport default ServantsPage;\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport CraftEssence from \"../Api/Data/CraftEssence\";\nimport Region from \"../Api/Data/Region\";\n\ninterface IProps {\n    region: Region;\n    craftEssence: CraftEssence;\n}\n\nclass CraftEssenceDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/craft-essence/${this.props.craftEssence.id}`}>\n                {this.props.craftEssence.name}\n                {' '}\n                <FontAwesomeIcon icon={faShare} />\n            </Link>\n        );\n    }\n}\n\nexport default CraftEssenceDescriptor;\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Region from \"../../Api/Data/Region\";\nimport Skill from \"../../Api/Data/Skill\";\nimport FuncDescriptor from \"../../Descriptor/FuncDescriptor\";\nimport {getTargetVersionValues} from \"../../Helper/FuncHelper\";\nimport DataValMainData from \"../Func/DataValMainData\";\nimport FuncMainData from \"../Func/FuncMainData\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n    level: number;\n}\n\nclass SkillVersion extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {this.props.skill.functions.map((func, index) => {\n                    const dataVal = getTargetVersionValues(func, this.props.level);\n\n                    return (\n                        <div key={index}>\n                            <h3>Effect #{index + 1}</h3>\n                            <p>\n                                <FuncDescriptor region={this.props.region} func={func}/>\n                            </p>\n\n                            <Row>\n                                <Col xs={12} md={6}>\n                                    <h5>Function</h5>\n                                    <FuncMainData region={this.props.region} func={func}/>\n                                </Col>\n                                <Col xs={12} md={6}>\n                                    <h5>Values</h5>\n                                    <DataValMainData dataVal={dataVal ?? {}}/>\n                                </Col>\n                            </Row>\n\n                            <hr/>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default SkillVersion;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport CraftEssence from \"../Api/Data/CraftEssence\";\nimport EntityType from \"../Api/Data/EntityType\";\nimport Region from \"../Api/Data/Region\";\nimport Servant from \"../Api/Data/Servant\";\nimport Skill from \"../Api/Data/Skill\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport DataTable from \"../Component/DataTable\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\nimport CraftEssenceDescriptor from \"../Descriptor/CraftEssenceDescriptor\";\nimport ServantDescriptor from \"../Descriptor/ServantDescriptor\";\nimport SkillVersion from \"./Skill/SkillVersion\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    skill?: Skill;\n    levels: number;\n    level: number;\n}\n\nclass SkillPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            levels: 1,\n            level: 1\n        };\n    }\n\n    componentDidMount() {\n        this.loadSkill();\n    }\n\n    async loadSkill() {\n        try {\n            const skill = await Connection.skill(this.props.region, this.props.id);\n\n            this.setState({\n                loading: false,\n                skill: skill,\n                levels: skill.functions[0].svals?.length ?? 1,\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    private changeLevel(level: number) {\n        this.setState({\n            level: level\n        });\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading || !this.state.skill)\n            return <Loading/>;\n\n        const skill = this.state.skill;\n\n        return (\n            <div>\n                <h1>\n                    <BuffIcon location={skill.icon} height={48}/>\n                    &nbsp;\n                    {skill.name}\n                </h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={skill}/>,\n                    \"ID\": skill.id,\n                    \"Name\": skill.name,\n                    \"Detail\": skill.detail,\n                    \"Owner\": (\n                        <div>\n                            {skill.reverseServants\n                                .filter(entity => {\n                                    return entity.type === EntityType.NORMAL\n                                        || entity.type === EntityType.HEROINE\n                                        || entity.type === EntityType.SERVANT_EQUIP;\n                                })\n                                .map((entity, index) => {\n                                    if (entity.type === EntityType.SERVANT_EQUIP) {\n                                        return (\n                                            <div key={index}>\n                                                <CraftEssenceDescriptor region={this.props.region}\n                                                                        craftEssence={entity as CraftEssence}/>\n                                            </div>\n                                        );\n                                    } else {\n                                        return (\n                                            <div key={index}>\n                                                <ServantDescriptor region={this.props.region}\n                                                                   servant={entity as Servant}\n                                                                   iconHeight={24}/>\n                                            </div>\n                                        );\n                                    }\n                                })\n                            }\n                        </div>\n                    )\n                }}/>\n\n                <br/>\n                <Form inline style={{justifyContent: 'center'}}>\n                    <Form.Control as={'select'} value={this.state.level}\n                                  onChange={(ev: Event) => this.changeLevel(parseInt(ev.target.value))}>\n                        {Array.from(Array(this.state.levels).keys()).map(i => i + 1).map(level => (\n                            <option key={level} value={level}>LEVEL {level}</option>\n                        ))}\n                    </Form.Control>\n                </Form>\n\n                <br/>\n                <SkillVersion region={this.props.region}\n                              skill={skill}\n                              level={this.state.level}/>\n            </div>\n        );\n    }\n}\n\nexport default SkillPage;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport {Container} from \"react-bootstrap\";\nimport {HashRouter as Router, Route, Switch,} from \"react-router-dom\";\nimport ErrorStatus from \"./Component/ErrorStatus\";\nimport Navigation from \"./Component/Navigation\";\nimport BuffPage from \"./Page/BuffPage\";\nimport CraftEssencePage from \"./Page/CraftEssencePage\";\nimport CraftEssencesPage from \"./Page/CraftEssencesPage\";\nimport FuncPage from './Page/FuncPage';\nimport NoblePhantasmPage from \"./Page/NoblePhantasmPage\";\nimport QuestPage from \"./Page/QuestPage\";\nimport ServantPage from \"./Page/ServantPage\";\nimport ServantsPage from \"./Page/ServantsPage\";\nimport SkillPage from \"./Page/SkillPage\";\nimport Manager from \"./Setting/Manager\";\nimport {LanguageOption} from \"./Setting/Option\";\n\ninterface IState {\n    language: LanguageOption,\n}\n\nclass App extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            language: Manager.language(),\n        };\n\n        Manager.onUpdate(() => this.updateSettings());\n    }\n\n    private updateSettings() {\n        this.setState({\n            language: Manager.language(),\n        });\n    }\n\n    render() {\n        return (\n            <Router>\n                <Navigation/>\n                <br/>\n\n                <Container key={`${this.state.language}`}>\n                    <Switch>\n                        <Route exact={true} path=\"/:region(JP|NA)/buff/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <BuffPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/craft-essence/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <CraftEssencePage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/func/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <FuncPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/noble-phantasm/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <NoblePhantasmPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/quest/:id([0-9]+)/:phase([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                phase = props.match.params.phase,\n                                key = `${region}-${id}-${phase}`;\n                            return <QuestPage key={key} region={region} id={id} phase={phase}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/servant/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <ServantPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/skill/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <SkillPage key={key} region={region} id={id}/>\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/craft-essences\" render={props => {\n                            const region = props.match.params.region;\n                            return <CraftEssencesPage key={region} region={region}/>;\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/servants\" render={props => {\n                            const region = props.match.params.region;\n                            return <ServantsPage key={region} region={region}/>;\n                        }}/>\n                        <Route path=\"/\" exact={true} render={props => {\n                            return \"\";\n                        }}/>\n                        <Route path=\"*\" exact={true} render={props => {\n                            return <ErrorStatus/>;\n                        }}/>\n                    </Switch>\n                </Container>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}