{"version":3,"sources":["Api/Data/Func.tsx","Helper/FuncHelper.tsx","Descriptor/Func/FuncDescriptorSections.tsx","Descriptor/Func/handleTargetSection.tsx","Descriptor/FuncDescriptor.tsx","Descriptor/Func/handleTeamSection.tsx","Descriptor/Func/handleChanceSection.tsx","Descriptor/Func/handleAffectsSection.tsx","Descriptor/Func/handleAmountSection.tsx","Descriptor/Func/handleDurationSection.tsx","Descriptor/Func/handleScalingSection.tsx","Descriptor/SkillDescriptor.tsx","Descriptor/SkillReferenceDescriptor.tsx","Descriptor/FuncValueDescriptor.tsx","Descriptor/BuffValueDescriptor.tsx","Descriptor/Func/handleActionSection.tsx"],"names":["FuncType","FuncTargetType","FuncTargetTeam","DataValField","hasChangingDataVals","vals","length","previous","i","JSON","stringify","hasUniqueValues","values","Set","size","describeMutators","region","func","getMutatingFieldValues","fields","Object","filter","field","map","val","getMutatingFieldNames","dependingVals","undefined","DependFuncVals","dependingMutatingValues","staticValues","getStaticFieldValues","index","mutatingVals","x","DependFuncId","getDataValList","mutatingVal","dataVal","funcUpdatesByLevel","getLevelDataValList","funcUpdatesByOvercharge","getOverchargeDataValList","isLevel","isOvercharge","dataVals","getTargetVersionValues","push","getMixedDataValList","svals","getRelatedSkillIds","funcType","ADD_STATE","ADD_STATE_SHORT","buff","buffs","type","BuffType","ATTACK_FUNCTION","COMMANDATTACK_FUNCTION","COMMANDATTACK_BEFORE_FUNCTION","COMMANDCODEATTACK_FUNCTION","DAMAGE_FUNCTION","DEAD_FUNCTION","DELAY_FUNCTION","SELFTURNEND_FUNCTION","Value","NPATTACK_PREV_BUFF","SkillID","getStaticFieldNames","staticVals","hasDependingVals","dependingStaticValues","level","overcharge","svals2","svals3","svals4","svals5","FuncDescriptorSection","preposition","showing","parts","this","FuncDescriptorSections","team","chance","action","affects","amount","target","duration","scaling","targetMap","Map","SELF","PT_ONE","PT_ALL","ENEMY","ENEMY_ALL","PT_FULL","ENEMY_FULL","PT_OTHER","PT_ONE_OTHER","PT_RANDOM","ENEMY_OTHER","ENEMY_RANDOM","PT_OTHER_FULL","ENEMY_OTHER_FULL","PTSELECT_ONE_SUB","PTSELECT_SUB","PT_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_RANDOM","ENEMY_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_FIRST","COMMAND_TYPE_SELF_TREASURE_DEVICE","FuncDescriptor","props","getDataVal","sections","section","funcTargetTeam","PLAYER","handleTeamSection","Rate","NONE","handleChanceSection","handleActionSection","Target","DAMAGE_NP_INDIVIDUAL","DAMAGE_NP_STATE_INDIVIDUAL_FIX","TargetList","DAMAGE_NP_INDIVIDUAL_SUM","TraitDescriptor","trait","ParamAddMaxCount","TargetRarityList","DAMAGE_NP_RARE","split","DAMAGE_NP_PIERCE","funcquestTvals","mergeElements","functvals","forEach","handleAffectsSection","ADD_INDIVIDUALITY","CARD_RESET","FuncValueDescriptor","hideRate","GAIN_HP_FROM_TARGETS","GAIN_NP_FROM_TARGETS","Value2","SkillReferenceDescriptor","id","BuffValueDescriptor","handleAmountSection","targetType","funcTargetType","get","handleTargetSection","Count","Turn","countDesc","turnDesc","handleDurationSection","handleScalingSection","concat","to","funcId","icon","faShare","joinElements","element","Fragment","key","React","Component","SkillDescriptor","skill","location","height","iconHeight","name","state","Connection","setState","route","asPercent","DAMAGE_NP","GAIN_NP","LOSS_NP","toString","Correction","chargeAmount","value","UP_ATK","DOWN_ATK","UP_COMMANDALL","DOWN_COMMANDALL","UP_CRITICALDAMAGE","DOWN_CRITICALDAMAGE","UP_CRITICALPOINT","DOWN_CRITICALPOINT","UP_CRITICALRATE","DOWN_CRITICALRATE","UP_CRITICAL_RATE_DAMAGE_TAKEN","DOWN_CRITICAL_RATE_DAMAGE_TAKEN","UP_DAMAGE","DOWN_DAMAGE","UP_DAMAGEDROPNP","DOWN_DAMAGEDROPNP","UP_DEFENCE","DOWN_DEFENCE","UP_DEFENCECOMMANDALL","DOWN_DEFENCECOMMANDALL","UP_DROPNP","DOWN_DROPNP","UP_FUNC_HP_REDUCE","DOWN_FUNC_HP_REDUCE","UP_HATE","UP_NONRESIST_INSTANTDEATH","UP_NPDAMAGE","DOWN_NPDAMAGE","UP_SPECIALDEFENCE","DOWN_SPECIALDEFENCE","UP_STARWEIGHT","DOWN_STARWEIGHT","UP_TOLERANCE","DOWN_TOLERANCE","UP_TOLERANCE_SUBSTATE","DOWN_TOLERANCE_SUBSTATE","REGAIN_NP","SkillLV","FIELD_INDIVIDUALITY","funcDescriptions","DELAY_NPTURN","EXP_UP","FORCE_INSTANT_DEATH","GAIN_HP","GAIN_STAR","SUB_STATE","handleBuffActionSection","traitVals","handleCleanseActionSection","drainAmount","drainTargets","HASTEN_NPTURN","INSTANT_DEATH","LOSS_HP_SAFE"],"mappings":"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","file":"static/js/3.07865ea3.chunk.js","sourcesContent":["import Buff from \"./Buff\";\nimport NoblePhantasm from \"./NoblePhantasm\";\nimport Skill from \"./Skill\";\nimport Trait from \"./Trait\";\n\nexport enum FuncType {\n    NONE = \"none\",\n    ADD_STATE = \"addState\",\n    SUB_STATE = \"subState\",\n    DAMAGE = \"damage\",\n    DAMAGE_NP = \"damageNp\",\n    GAIN_STAR = \"gainStar\",\n    GAIN_HP = \"gainHp\",\n    GAIN_NP = \"gainNp\",\n    LOSS_NP = \"lossNp\",\n    SHORTEN_SKILL = \"shortenSkill\",\n    EXTEND_SKILL = \"extendSkill\",\n    RELEASE_STATE = \"releaseState\",\n    LOSS_HP = \"lossHp\",\n    INSTANT_DEATH = \"instantDeath\",\n    DAMAGE_NP_PIERCE = \"damageNpPierce\",\n    DAMAGE_NP_INDIVIDUAL = \"damageNpIndividual\",\n    ADD_STATE_SHORT = \"addStateShort\",\n    GAIN_HP_PER = \"gainHpPer\",\n    DAMAGE_NP_STATE_INDIVIDUAL = \"damageNpStateIndividual\",\n    HASTEN_NPTURN = \"hastenNpturn\",\n    DELAY_NPTURN = \"delayNpturn\",\n    DAMAGE_NP_HPRATIO_HIGH = \"damageNpHpratioHigh\",\n    DAMAGE_NP_HPRATIO_LOW = \"damageNpHpratioLow\",\n    CARD_RESET = \"cardReset\",\n    REPLACE_MEMBER = \"replaceMember\",\n    LOSS_HP_SAFE = \"lossHpSafe\",\n    DAMAGE_NP_COUNTER = \"damageNpCounter\",\n    DAMAGE_NP_STATE_INDIVIDUAL_FIX = \"damageNpStateIndividualFix\",\n    DAMAGE_NP_SAFE = \"damageNpSafe\",\n    CALL_SERVANT = \"callServant\",\n    PT_SHUFFLE = \"ptShuffle\",\n    LOSS_STAR = \"lossStar\",\n    CHANGE_SERVANT = \"changeServant\",\n    CHANGE_BG = \"changeBg\",\n    DAMAGE_VALUE = \"damageValue\",\n    WITHDRAW = \"withdraw\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    SHORTEN_BUFFTURN = \"shortenBuffturn\",\n    EXTEND_BUFFTURN = \"extendBuffturn\",\n    SHORTEN_BUFFCOUNT = \"shortenBuffcount\",\n    EXTEND_BUFFCOUNT = \"extendBuffcount\",\n    CHANGE_BGM = \"changeBgm\",\n    DISPLAY_BUFFSTRING = \"displayBuffstring\",\n    RESURRECTION = \"resurrection\",\n    GAIN_NP_BUFF_INDIVIDUAL_SUM = \"gainNpBuffIndividualSum\",\n    SET_SYSTEM_ALIVE_FLAG = \"setSystemAliveFlag\",\n    FORCE_INSTANT_DEATH = \"forceInstantDeath\",\n    DAMAGE_NP_RARE = \"damageNpRare\",\n    GAIN_NP_FROM_TARGETS = \"gainNpFromTargets\",\n    GAIN_HP_FROM_TARGETS = \"gainHpFromTargets\",\n    LOSS_HP_PER = \"lossHpPer\",\n    LOSS_HP_PER_SAFE = \"lossHpPerSafe\",\n    SHORTEN_USER_EQUIP_SKILL = \"shortenUserEquipSkill\",\n    QUICK_CHANGE_BG = \"quickChangeBg\",\n    SHIFT_SERVANT = \"shiftServant\",\n    DAMAGE_NP_AND_CHECK_INDIVIDUALITY = \"damageNpAndCheckIndividuality\",\n    ABSORB_NPTURN = \"absorbNpturn\",\n    OVERWRITE_DEAD_TYPE = \"overwriteDeadType\",\n    FORCE_ALL_BUFF_NOACT = \"forceAllBuffNoact\",\n    BREAK_GAUGE_UP = \"breakGaugeUp\",\n    BREAK_GAUGE_DOWN = \"breakGaugeDown\",\n    EXP_UP = \"expUp\",\n    QP_UP = \"qpUp\",\n    DROP_UP = \"dropUp\",\n    FRIEND_POINT_UP = \"friendPointUp\",\n    EVENT_DROP_UP = \"eventDropUp\",\n    EVENT_DROP_RATE_UP = \"eventDropRateUp\",\n    EVENT_POINT_UP = \"eventPointUp\",\n    EVENT_POINT_RATE_UP = \"eventPointRateUp\",\n    TRANSFORM_SERVANT = \"transformServant\",\n    QP_DROP_UP = \"qpDropUp\",\n    SERVANT_FRIENDSHIP_UP = \"servantFriendshipUp\",\n    USER_EQUIP_EXP_UP = \"userEquipExpUp\",\n    CLASS_DROP_UP = \"classDropUp\",\n    ENEMY_ENCOUNT_COPY_RATE_UP = \"enemyEncountCopyRateUp\",\n    ENEMY_ENCOUNT_RATE_UP = \"enemyEncountRateUp\",\n    ENEMY_PROB_DOWN = \"enemyProbDown\",\n    GET_REWARD_GIFT = \"getRewardGift\",\n    SEND_SUPPORT_FRIEND_POINT = \"sendSupportFriendPoint\",\n    MOVE_POSITION = \"movePosition\",\n    REVIVAL = \"revival\",\n    DAMAGE_NP_INDIVIDUAL_SUM = \"damageNpIndividualSum\",\n}\n\nexport enum FuncTargetType {\n    SELF = \"self\",\n    PT_ONE = \"ptOne\",\n    PT_ANOTHER = \"ptAnother\",\n    PT_ALL = \"ptAll\",\n    ENEMY = \"enemy\",\n    ENEMY_ANOTHER = \"enemyAnother\",\n    ENEMY_ALL = \"enemyAll\",\n    PT_FULL = \"ptFull\",\n    ENEMY_FULL = \"enemyFull\",\n    PT_OTHER = \"ptOther\",\n    PT_ONE_OTHER = \"ptOneOther\",\n    PT_RANDOM = \"ptRandom\",\n    ENEMY_OTHER = \"enemyOther\",\n    ENEMY_RANDOM = \"enemyRandom\",\n    PT_OTHER_FULL = \"ptOtherFull\",\n    ENEMY_OTHER_FULL = \"enemyOtherFull\",\n    PTSELECT_ONE_SUB = \"ptselectOneSub\",\n    PTSELECT_SUB = \"ptselectSub\",\n    PT_ONE_ANOTHER_RANDOM = \"ptOneAnotherRandom\",\n    PT_SELF_ANOTHER_RANDOM = \"ptSelfAnotherRandom\",\n    ENEMY_ONE_ANOTHER_RANDOM = \"enemyOneAnotherRandom\",\n    PT_SELF_ANOTHER_FIRST = \"ptSelfAnotherFirst\",\n    PT_SELF_BEFORE = \"ptSelfBefore\",\n    PT_SELF_AFTER = \"ptSelfAfter\",\n    PT_SELF_ANOTHER_LAST = \"ptSelfAnotherLast\",\n    COMMAND_TYPE_SELF_TREASURE_DEVICE = \"commandTypeSelfTreasureDevice\",\n}\n\nexport enum FuncTargetTeam {\n    PLAYER = \"player\",\n    ENEMY = \"enemy\",\n    PLAYER_AND_ENEMY = \"playerAndEnemy\",\n}\n\nexport enum DataValField {\n    RATE = \"Rate\",\n    TURN = \"Turn\",\n    COUNT = \"Count\",\n    VALUE = \"Value\",\n    VALUE2 = \"Value2\",\n    USE_RATE = \"UseRate\",\n    TARGET = \"Target\",\n    CORRECTION = \"Correction\",\n    PARAM_ADD = \"ParamAdd\",\n    PARAM_MAX = \"ParamMax\",\n    HIDE_MISS = \"HideMiss\",\n    ON_FIELD = \"OnField\",\n    HIDE_NO_EFFECT = \"HideNoEffect\",\n    UNAFFECTED = \"Unaffected\",\n    SHOW_STATE = \"ShowState\",\n    AURA_EFFECT_ID = \"AuraEffectId\",\n    ACT_SET = \"ActSet\",\n    ACT_SET_WEIGHT = \"ActSetWeight\",\n    SHOW_QUEST_NO_EFFECT = \"ShowQuestNoEffect\",\n    CHECK_DEAD = \"CheckDead\",\n    RATIO_HP_HIGH = \"RatioHPHigh\",\n    RATIO_HP_LOW = \"RatioHPLow\",\n    SET_PASSIVE_FRAME = \"SetPassiveFrame\",\n    PROC_PASSIVE = \"ProcPassive\",\n    PROC_ACTIVE = \"ProcActive\",\n    HIDE_PARAM = \"HideParam\",\n    SKILL_ID = \"SkillID\",\n    SKILL_LV = \"SkillLV\",\n    SHOW_CARD_ONLY = \"ShowCardOnly\",\n    EFFECT_SUMMON = \"EffectSummon\",\n    RATIO_HP_RANGE_HIGH = \"RatioHPRangeHigh\",\n    RATIO_HP_RANGE_LOW = \"RatioHPRangeLow\",\n    TARGET_LIST = \"TargetList\",\n    OPPONENT_ONLY = \"OpponentOnly\",\n    STATUS_EFFECT_ID = \"StatusEffectId\",\n    END_BATTLE = \"EndBattle\",\n    LOSE_BATTLE = \"LoseBattle\",\n    ADD_INDIVIDUALTY = \"AddIndividualty\",\n    ADD_LINKAGE_TARGET_INDIVIDUALTY = \"AddLinkageTargetIndividualty\",\n    SAME_BUFF_LIMIT_TARGET_INDIVIDUALITY = \"SameBuffLimitTargetIndividuality\",\n    SAME_BUFF_LIMIT_NUM = \"SameBuffLimitNum\",\n    CHECK_DUPLICATE = \"CheckDuplicate\",\n    ON_FIELD_COUNT = \"OnFieldCount\",\n    TARGET_RARITY_LIST = \"TargetRarityList\",\n    DEPEND_FUNC_ID = \"DependFuncId\",\n    INVALID_HIDE = \"InvalidHide\",\n    OUT_ENEMY_NPC_ID = \"OutEnemyNpcId\",\n    IN_ENEMY_NPC_ID = \"InEnemyNpcId\",\n    OUT_ENEMY_POSITION = \"OutEnemyPosition\",\n    IGNORE_INDIVIDUALITY = \"IgnoreIndividuality\",\n    STAR_HIGHER = \"StarHigher\",\n    CHANGE_TD_COMMAND_TYPE = \"ChangeTDCommandType\",\n    SHIFT_NPC_ID = \"ShiftNpcId\",\n    DISPLAY_LAST_FUNC_INVALID_TYPE = \"DisplayLastFuncInvalidType\",\n    AND_CHECK_INDIVIDUALITY_LIST = \"AndCheckIndividualityList\",\n    WIN_BATTLE_NOT_RELATED_SURVIVAL_STATUS = \"WinBattleNotRelatedSurvivalStatus\",\n    FORCE_SELF_INSTANT_DEATH = \"ForceSelfInstantDeath\",\n    CHANGE_MAX_BREAK_GAUGE = \"ChangeMaxBreakGauge\",\n    PARAM_ADD_MAX_VALUE = \"ParamAddMaxValue\",\n    PARAM_ADD_MAX_COUNT = \"ParamAddMaxCount\",\n    LOSS_HP_NO_CHANGE_DAMAGE = \"LossHpNoChangeDamage\",\n    INCLUDE_PASSIVE_INDIVIDUALITY = \"IncludePassiveIndividuality\",\n}\n\ntype BaseDataVal = { [key in DataValField]?: number | string; };\n\nexport type DataVal = (\n    BaseDataVal\n    & { DependFuncVals?: BaseDataVal; }\n    );\n\nexport default interface Func {\n    funcId: number;\n    funcType: FuncType;\n    funcTargetType: FuncTargetType;\n    funcTargetTeam: FuncTargetTeam;\n    funcPopupText: string;\n    funcPopupIcon?: string;\n    functvals: Trait[];\n    funcquestTvals: number[];\n    traitVals?: Trait[];\n    buffs: Buff[];\n    svals?: DataVal[];\n    svals2?: DataVal[];\n    svals3?: DataVal[];\n    svals4?: DataVal[];\n    svals5?: DataVal[];\n    reverseSkills: Skill[];\n    reverseTds: NoblePhantasm[];\n}\n","import React from \"react\";\nimport {BuffType} from \"../Api/Data/Buff\";\nimport Func, {DataVal, DataValField, FuncType} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport FuncValueDescriptor from \"../Descriptor/FuncValueDescriptor\";\nimport {Renderable} from \"./OutputHelper\";\n\nconst hasChangingDataVals = function (vals: DataVal[]): boolean {\n    if (!vals.length)\n        return false;\n\n    let previous = vals[0];\n    for (let i = 1; i < vals.length; i++) {\n        if (JSON.stringify(previous) !== JSON.stringify(vals[i]))\n            return true;\n\n        previous = vals[i];\n    }\n\n    return false;\n};\n\nconst hasUniqueValues = function (values: (number | string | undefined)[]): boolean {\n    return new Set(values).size > 1;\n};\n\nexport function describeMutators(region: Region, func: Func): Renderable[] {\n    const dataVals = getDataValList(func),\n        mutatingVals = getMutatingFieldValues(dataVals);\n\n    return mutatingVals\n        .map(mutatingVal => <FuncValueDescriptor region={region} func={func} dataVal={mutatingVal}/>);\n}\n\nexport function funcUpdatesByLevel(func: Func): boolean {\n    return hasChangingDataVals(getLevelDataValList(func));\n}\n\nexport function funcUpdatesByOvercharge(func: Func): boolean {\n    return hasChangingDataVals(getOverchargeDataValList(func));\n}\n\nexport function getDataValList(func: Func): DataVal[] {\n    const isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func);\n\n    return isLevel && isOvercharge\n        ? getMixedDataValList(func)\n        : (isOvercharge ? getOverchargeDataValList(func) : getLevelDataValList(func));\n}\n\nexport function getLevelDataValList(func: Func): DataVal[] {\n    return func.svals ?? [];\n}\n\nexport function getMixedDataValList(func: Func): DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, i, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getMutatingFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return hasUniqueValues(values);\n    });\n}\n\nexport function getMutatingFieldValues(vals: DataVal[]): DataVal[] {\n    if (!vals.length)\n        return [];\n\n    const fields = getMutatingFieldNames(vals),\n        hasDependingVals = vals.filter(val => val.DependFuncVals !== undefined).length > 0,\n        dependingVals: (DataVal[] | undefined) = (\n            hasDependingVals\n                ? vals.map(val => (val.DependFuncVals ?? {}) as DataVal)\n                : undefined\n        ),\n        dependingMutatingValues = dependingVals ? getMutatingFieldValues(dependingVals) : [],\n        staticValues = getStaticFieldValues(vals);\n\n    return vals.map((val, index) => {\n        const mutatingVals: DataVal = {};\n\n        for (let x in fields) {\n            mutatingVals[fields[x]] = val[fields[x]];\n        }\n\n        if (staticValues.DependFuncId && dependingMutatingValues[index]) {\n            mutatingVals.DependFuncId = staticValues.DependFuncId;\n            mutatingVals.DependFuncVals = dependingMutatingValues[index];\n        }\n\n        return mutatingVals;\n    });\n}\n\nexport function getOverchargeDataValList(func: Func): DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, 1, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getRelatedSkillIds(func: Func): number[] {\n    if (func.funcType !== FuncType.ADD_STATE && func.funcType !== FuncType.ADD_STATE_SHORT)\n        return [];\n\n    const buff = func.buffs[0];\n    if (\n        buff.type === BuffType.ATTACK_FUNCTION\n        || buff.type === BuffType.COMMANDATTACK_FUNCTION\n        || buff.type === BuffType.COMMANDATTACK_BEFORE_FUNCTION\n        || buff.type === BuffType.COMMANDCODEATTACK_FUNCTION\n        || buff.type === BuffType.DAMAGE_FUNCTION\n        || buff.type === BuffType.DEAD_FUNCTION\n        || buff.type === BuffType.DELAY_FUNCTION\n        || buff.type === BuffType.SELFTURNEND_FUNCTION\n    ) {\n        const dataVals = getDataValList(func),\n            dataVal = dataVals[0];\n\n        return typeof dataVal.Value === \"number\" ? [dataVal.Value] : [];\n    }\n\n    if (buff.type === BuffType.NPATTACK_PREV_BUFF) {\n        const dataVals = getDataValList(func),\n            dataVal = dataVals[0];\n\n        return typeof dataVal.SkillID === \"number\" ? [dataVal.SkillID] : [];\n    }\n\n    return [];\n}\n\nexport function getStaticFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return !hasUniqueValues(values);\n    });\n}\n\nexport function getStaticFieldValues(vals: DataVal[]): DataVal {\n    if (!vals.length)\n        return {};\n\n    const fields = getStaticFieldNames(vals),\n        staticVals: DataVal = {},\n        hasDependingVals = vals.filter(val => val.DependFuncVals !== undefined).length > 0,\n        dependingVals: (DataVal[] | undefined) = (\n            hasDependingVals\n                ? vals.map(val => (val.DependFuncVals ?? {}) as DataVal)\n                : undefined\n        ),\n        dependingStaticValues = dependingVals ? getStaticFieldValues(dependingVals) : undefined;\n\n    for (let x in fields) {\n        staticVals[fields[x]] = vals[0][fields[x]];\n    }\n\n    if (hasDependingVals)\n        staticVals.DependFuncVals = dependingStaticValues;\n\n    return staticVals;\n}\n\nexport function getTargetVersionValues(func: Func, level: number, overcharge: number = 1): DataVal | undefined {\n    if (func.svals === undefined)\n        return undefined;\n\n    let dataVals;\n\n    if (overcharge === 2 && func.svals2)\n        dataVals = func.svals2;\n    else if (overcharge === 3 && func.svals3)\n        dataVals = func.svals3;\n    else if (overcharge === 4 && func.svals4)\n        dataVals = func.svals4;\n    else if (overcharge === 5 && func.svals5)\n        dataVals = func.svals5;\n    else\n        dataVals = func.svals;\n\n    return dataVals[level - 1];\n}\n","import {Renderable} from \"../../Helper/OutputHelper\";\n\nexport class FuncDescriptorSection {\n    public showing: boolean = true;\n    public parts: Renderable[] = [];\n    public preposition?: string;\n\n    constructor(preposition?: string) {\n        this.preposition = preposition;\n    }\n}\n\nexport class FuncDescriptorSections {\n    public team = new FuncDescriptorSection();\n    public chance = new FuncDescriptorSection();\n    public action = new FuncDescriptorSection();\n    public affects = new FuncDescriptorSection();\n    public amount = new FuncDescriptorSection('of');\n    public target = new FuncDescriptorSection('to');\n    public duration = new FuncDescriptorSection();\n    public scaling = new FuncDescriptorSection();\n}\n","import Func, {DataVal, FuncTargetType, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nconst targetMap = new Map<FuncTargetType, string>([\n    [FuncTargetType.SELF, 'self'],\n    [FuncTargetType.PT_ONE, 'party member'],\n    // PT_ANOTHER\n    [FuncTargetType.PT_ALL, 'party'],\n    [FuncTargetType.ENEMY, 'enemy'],\n    // ENEMY_ANOTHER\n    [FuncTargetType.ENEMY_ALL, 'enemies'],\n    [FuncTargetType.PT_FULL, 'party (including reserve)'],\n    [FuncTargetType.ENEMY_FULL, 'enemies (including reserve)'],\n    [FuncTargetType.PT_OTHER, 'party except self'],\n    [FuncTargetType.PT_ONE_OTHER, 'other party members besides target'],\n    [FuncTargetType.PT_RANDOM, 'random party member'],\n    [FuncTargetType.ENEMY_OTHER, 'other enemies besides target'],\n    [FuncTargetType.ENEMY_RANDOM, 'random enemy'],\n    [FuncTargetType.PT_OTHER_FULL, 'party except self (including reserve)'],\n    [FuncTargetType.ENEMY_OTHER_FULL, 'other enemies (including reserve)'],\n    [FuncTargetType.PTSELECT_ONE_SUB, 'active party member and reserve party member'],\n    [FuncTargetType.PTSELECT_SUB, 'reserve party member'],\n    // PT_ONE_ANOTHER_RANDOM\n    [FuncTargetType.PT_ONE_ANOTHER_RANDOM, 'other random party member'],\n    [FuncTargetType.PT_SELF_ANOTHER_RANDOM, 'other random party member (except self)'],\n    [FuncTargetType.ENEMY_ONE_ANOTHER_RANDOM, 'other random enemy'],\n    [FuncTargetType.PT_SELF_ANOTHER_FIRST, 'first other party member (except self)'],\n    // PT_SELF_BEFORE\n    // PT_SELF_AFTER\n    // PT_SELF_ANOTHER_LAST\n    [FuncTargetType.COMMAND_TYPE_SELF_TREASURE_DEVICE, 'target noble phantasm version'],\n]);\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.target,\n        parts = section.parts;\n\n    let targetType: FuncTargetType | undefined = func.funcTargetType;\n\n    if (func.funcType === FuncType.GAIN_HP_FROM_TARGETS) {\n        switch (dataVal.DependFuncId) {\n            case 711:\n                targetType = FuncTargetType.ENEMY_ALL;\n                break;\n            default:\n                targetType = undefined;\n                section.showing = false;\n                break;\n        }\n    }\n\n    if (targetType) {\n        parts.push(targetMap.get(targetType) ?? targetType);\n    }\n}\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Func, {DataVal} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {getDataValList, getStaticFieldValues, getTargetVersionValues} from \"../Helper/FuncHelper\";\nimport {joinElements, Renderable} from \"../Helper/OutputHelper\";\nimport {FuncDescriptorSections} from \"./Func/FuncDescriptorSections\";\nimport handleActionSection from \"./Func/handleActionSection\";\nimport handleAffectsSection from \"./Func/handleAffectsSection\";\nimport handleAmountSection from \"./Func/handleAmountSection\";\nimport handleChanceSection from \"./Func/handleChanceSection\";\nimport handleDurationSection from \"./Func/handleDurationSection\";\nimport handleScalingSection from \"./Func/handleScalingSection\";\nimport handleTargetSection from \"./Func/handleTargetSection\";\nimport handleTeamSection from \"./Func/handleTeamSection\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n    level?: number;\n    overcharge?: number;\n}\n\nclass FuncDescriptor extends React.Component<IProps> {\n    getDataVal(): DataVal {\n        const func = this.props.func;\n\n        if (this.props.level) {\n            return getTargetVersionValues(func, this.props.level, this.props.overcharge ?? 1) ?? {};\n        } else {\n            const dataVals = getDataValList(func);\n\n            return getStaticFieldValues(dataVals);\n        }\n    }\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            dataVal = this.getDataVal();\n\n        const sections = new FuncDescriptorSections();\n\n        handleTeamSection(region, sections, func, dataVal);\n        handleChanceSection(region, sections, func, dataVal);\n        handleActionSection(region, sections, func, dataVal);\n        handleAffectsSection(region, sections, func, dataVal);\n        handleAmountSection(region, sections, func, dataVal);\n        handleTargetSection(region, sections, func, dataVal);\n        handleDurationSection(region, sections, func, dataVal);\n        handleScalingSection(region, sections, func, dataVal);\n\n        let parts: Renderable[] = [];\n\n        Object.values(sections).forEach(section => {\n            if (!section.showing)\n                return;\n\n            if (section.preposition)\n                parts.push(section.preposition);\n\n            parts = parts.concat(section.parts);\n        });\n\n        parts.push(\n            <Link to={`/${region}/func/${func.funcId}`}>\n                <FontAwesomeIcon icon={faShare}/>\n            </Link>\n        );\n\n        parts = joinElements(parts, ' ');\n\n        return (\n            <span>\n                {parts.map((element, index) => {\n                    return <React.Fragment key={index}>{element}</React.Fragment>;\n                })}\n            </span>\n        );\n    }\n}\n\nexport default FuncDescriptor;\n","import Func, {DataVal, FuncTargetTeam} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.team,\n        parts = section.parts;\n\n    if (func.funcTargetTeam === FuncTargetTeam.PLAYER)\n        parts.push('[Player]');\n    else if (func.funcTargetTeam === FuncTargetTeam.ENEMY)\n        parts.push('[Enemy]');\n    else\n        section.showing = false;\n}\n","import Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.chance,\n        parts = section.parts;\n\n    if (dataVal.Rate && dataVal.Rate < 0) {\n        parts.push('Guaranteed to');\n    } else if (typeof dataVal.Rate === \"number\" && dataVal.Rate !== 1000) {\n        parts.push((dataVal.Rate / 10) + '% Chance to');\n    } else if (!dataVal.Rate && func.funcType !== FuncType.NONE) {\n        parts.push('Chance to');\n    } else {\n        section.showing = false;\n    }\n}\n","import React from \"react\";\nimport Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {mergeElements} from \"../../Helper/OutputHelper\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.affects,\n        parts = section.parts;\n\n    if (typeof dataVal.Target === \"number\"\n        && (\n            func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL\n            || func.funcType === FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX\n        )\n    ) {\n        parts.push(\n            <span>(additional to targets with {\n                <TraitDescriptor region={region} trait={dataVal.Target}/>\n            })</span>\n        );\n    } else if (typeof dataVal.TargetList === \"number\" && func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL_SUM) {\n        parts.push(\n            <span>(bonus per trait of {\n                <TraitDescriptor region={region} trait={dataVal.TargetList}/>\n            }{\n                dataVal.ParamAddMaxCount ? `[Limit ${dataVal.ParamAddMaxCount}]` : null\n            })</span>\n        );\n    } else if (typeof dataVal.TargetRarityList === \"string\" && func.funcType === FuncType.DAMAGE_NP_RARE) {\n        parts.push(\n            <span>(bonus to {dataVal.TargetRarityList} {\n                dataVal.TargetRarityList.split('/').length > 1 ? 'rarities' : 'rarity'\n            })</span>\n        )\n    } else if (func.funcType === FuncType.DAMAGE_NP_PIERCE) {\n        parts.push('(that pierces defense)');\n    }\n\n    if (func.funcquestTvals.length) {\n        parts.push('if on field');\n        parts.push(\n            mergeElements(\n                func.funcquestTvals.map(trait => <TraitDescriptor region={region} trait={trait}/>),\n                ' & '\n            )\n        );\n    }\n\n    if (func.functvals.length) {\n        parts.push('for');\n\n        if (func.functvals.length > 1) {\n            parts.push('all');\n        }\n\n        func.functvals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<TraitDescriptor region={region} trait={trait}/>);\n        });\n    }\n\n    if (!parts.length) {\n        section.showing = false;\n    }\n\n}\n","import React from \"react\";\nimport {BuffType} from \"../../Api/Data/Buff\";\nimport Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport BuffValueDescriptor from \"../BuffValueDescriptor\";\nimport FuncValueDescriptor from \"../FuncValueDescriptor\";\nimport SkillReferenceDescriptor from \"../SkillReferenceDescriptor\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.amount,\n        parts = section.parts;\n\n    if (func.buffs[0]?.type === BuffType.ADD_INDIVIDUALITY && typeof dataVal.Value === \"number\") {\n        parts.push(\n            <TraitDescriptor region={region} trait={dataVal.Value}/>\n        );\n    } else if (\n        (\n            func.buffs[0]?.type === BuffType.ATTACK_FUNCTION\n            || func.buffs[0]?.type === BuffType.COMMANDATTACK_FUNCTION\n            || func.buffs[0]?.type === BuffType.COMMANDATTACK_BEFORE_FUNCTION\n            || func.buffs[0]?.type === BuffType.COMMANDCODEATTACK_FUNCTION\n            || func.buffs[0]?.type === BuffType.DAMAGE_FUNCTION\n            || func.buffs[0]?.type === BuffType.DEAD_FUNCTION\n            || func.buffs[0]?.type === BuffType.DELAY_FUNCTION\n            || func.buffs[0]?.type === BuffType.SELFTURNEND_FUNCTION\n        )\n        && typeof dataVal.Value === \"number\"\n    ) {\n        section.preposition = undefined;\n        parts.push('that triggers');\n        parts.push(\n            <SkillReferenceDescriptor region={region} id={dataVal.Value}/>\n        );\n    } else if (func.funcType === FuncType.CARD_RESET && dataVal.Value) {\n        section.preposition = undefined;\n        parts.push(`${dataVal.Value} time${dataVal.Value > 1 ? 's' : ''}`);\n    } else if (func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL_SUM) {\n        parts.push(<FuncValueDescriptor region={region} func={func} dataVal={dataVal} hideRate={true}/>);\n    } else if (func.funcType === FuncType.GAIN_HP_FROM_TARGETS && dataVal.DependFuncId) {\n        if (dataVal.DependFuncVals?.Value) {\n            section.parts.push(<FuncValueDescriptor region={region} func={func} dataVal={dataVal} hideRate={true}/>);\n        } else {\n            section.showing = false;\n        }\n    } else if (func.funcType === FuncType.GAIN_NP_FROM_TARGETS) {\n        const chargeAmount = dataVal.DependFuncVals?.Value2;\n\n        if (chargeAmount !== undefined) {\n            parts.push(<FuncValueDescriptor region={region} func={func} dataVal={dataVal} hideRate={true}/>);\n        } else {\n            section.showing = false;\n        }\n    } else if (func.buffs[0]?.type === BuffType.NPATTACK_PREV_BUFF) {\n        if (typeof dataVal.SkillID !== \"number\") {\n            section.showing = false;\n            return;\n        }\n\n        section.preposition = undefined;\n        parts.push('that triggers');\n        parts.push(\n            <SkillReferenceDescriptor region={region} id={dataVal.SkillID}/>\n        );\n    } else if (func.buffs[0] && dataVal.Value) {\n        parts.push(<BuffValueDescriptor region={region} buff={func.buffs[0]} dataVal={dataVal}/>);\n    } else if (dataVal.Value) {\n        parts.push(<FuncValueDescriptor region={region} func={func} dataVal={dataVal} hideRate={true}/>);\n    } else {\n        section.showing = false;\n    }\n}\n","import Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.duration,\n        parts = section.parts;\n\n    if (dataVal.Count && dataVal.Count > 0 && dataVal.Turn && dataVal.Turn > 0) {\n        const countDesc = dataVal.Count === 1 ? '1 Time' : `${dataVal.Count} Times`,\n            turnDesc = dataVal.Turn === 1 ? '1 Turn' : `${dataVal.Turn} Turns`;\n\n        parts.push(`(${turnDesc}, ${countDesc})`);\n    } else if (dataVal.Turn && dataVal.Turn > 0) {\n        parts.push(dataVal.Turn === 1 ? '(1 Turn)' : `(${dataVal.Turn} Turns)`);\n    } else if (dataVal.Count && dataVal.Count > 0) {\n        parts.push(dataVal.Count === 1 ? '(1 Time)' : `(${dataVal.Count} Times)`);\n    } else {\n        section.showing = false;\n    }\n}\n","import Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {funcUpdatesByLevel, funcUpdatesByOvercharge} from \"../../Helper/FuncHelper\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.scaling,\n        parts = section.parts,\n        isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func);\n\n    if (!isLevel && !isOvercharge) {\n        section.showing = false;\n        return;\n    }\n\n    if (isLevel) {\n        parts.push('<LEVEL>');\n    }\n\n    if (isOvercharge) {\n        parts.push('<OVERCHARGE>');\n    }\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Region from \"../Api/Data/Region\";\nimport Skill from \"../Api/Data/Skill\";\nimport BuffIcon from \"../Component/BuffIcon\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n    iconHeight?: number;\n}\n\nclass SkillDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/skill/${this.props.skill.id}`}>\n                [\n                <BuffIcon location={this.props.skill.icon} height={this.props.iconHeight}/>\n                {' '}\n                {this.props.skill.name ? this.props.skill.name : `Skill: ${this.props.skill.id}`}\n                ]\n            </Link>\n        );\n    }\n}\n\nexport default SkillDescriptor;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport Region from \"../Api/Data/Region\";\nimport Skill from \"../Api/Data/Skill\";\nimport SkillDescriptor from \"./SkillDescriptor\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    skill?: Skill;\n}\n\nclass SkillReferenceDescriptor extends React.Component<IProps, IState> {\n    constructor(props:IProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    async componentDidMount() {\n        try {\n            this.setState({\n                skill: await Connection.skill(this.props.region, this.props.id)\n            });\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    render() {\n        const route = `/${this.props.region}/skill/${this.props.id}`;\n\n        if (this.state.skill === undefined) {\n            return <Link to={route}>[Skill: {this.props.id}]</Link>;\n        }\n\n        return (\n            <SkillDescriptor region={this.props.region} skill={this.state.skill}/>\n        );\n    }\n}\n\nexport default SkillReferenceDescriptor;\n","import React from \"react\";\nimport {BuffType} from \"../Api/Data/Buff\";\nimport Func, {DataVal, FuncType} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {asPercent, mergeElements, Renderable} from \"../Helper/OutputHelper\";\nimport BuffValueDescriptor from \"./BuffValueDescriptor\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n    dataVal: DataVal;\n    hideRate?: boolean;\n}\n\nclass FuncValueDescriptor extends React.Component<IProps> {\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            dataVal = this.props.dataVal,\n            parts: Renderable[] = [];\n\n        if (\n            (func.funcType === FuncType.ADD_STATE || func.funcType === FuncType.ADD_STATE_SHORT)\n            && func.buffs[0]\n            && (\n                dataVal.Value\n                || (func.buffs[0].type === BuffType.DAMAGE_FUNCTION && dataVal.Value2)\n                || (func.buffs[0].type === BuffType.DEAD_FUNCTION && dataVal.Value2)\n                || (func.buffs[0].type === BuffType.DELAY_FUNCTION && dataVal.Value2)\n                || (func.buffs[0].type === BuffType.NPATTACK_PREV_BUFF && dataVal.SkillID)\n                || (func.buffs[0].type === BuffType.SELFTURNEND_FUNCTION && dataVal.Value2)\n            )\n        ) {\n            return <BuffValueDescriptor region={region} buff={func.buffs[0]} dataVal={dataVal}/>;\n        }\n\n        if (!this.props.hideRate && dataVal.Rate !== undefined) {\n            parts.push(asPercent(dataVal.Rate, 1));\n        }\n\n        if (dataVal.Value !== undefined) {\n            switch (func.funcType) {\n                case FuncType.DAMAGE_NP:\n                case FuncType.DAMAGE_NP_INDIVIDUAL:\n                case FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                case FuncType.DAMAGE_NP_PIERCE:\n                case FuncType.DAMAGE_NP_RARE:\n                case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                    parts.push(asPercent(dataVal.Value, 1));\n                    break;\n                case FuncType.GAIN_NP:\n                case FuncType.LOSS_NP:\n                    parts.push(asPercent(dataVal.Value, 2));\n                    break;\n                default:\n                    parts.push(dataVal.Value.toString());\n            }\n        }\n\n        if (dataVal.Value2 !== undefined) {\n            switch (func.funcType) {\n                case FuncType.GAIN_NP_FROM_TARGETS:\n                    parts.push(asPercent(dataVal.Value2, 2));\n                    break;\n                case FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                    parts.push(\"additional \" + asPercent(dataVal.Value2, 1));\n            }\n        }\n\n        if (dataVal.Correction !== undefined) {\n            switch (func.funcType) {\n                case FuncType.DAMAGE_NP_INDIVIDUAL:\n                case FuncType.DAMAGE_NP_RARE:\n                case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                    parts.push(asPercent(dataVal.Correction, 1));\n                    break;\n                case FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                    parts.push(\"(\" + asPercent(dataVal.Correction, 1) + \" x count)\");\n                    break;\n                default:\n                    parts.push(dataVal.Correction.toString());\n            }\n        }\n\n        if (dataVal.DependFuncId !== undefined && dataVal.DependFuncVals !== undefined) {\n            switch (func.funcType) {\n                case FuncType.GAIN_HP_FROM_TARGETS:\n                    let amount;\n\n                    switch (dataVal.DependFuncId) {\n                        case 711:\n                            amount = dataVal.DependFuncVals.Value;\n                            break;\n                    }\n\n                    if (amount !== undefined) {\n                        parts.push(amount);\n                    }\n\n                    break;\n                case FuncType.GAIN_NP_FROM_TARGETS:\n                    let chargeAmount;\n\n                    switch (dataVal.DependFuncId) {\n                        case 474:\n                            chargeAmount = dataVal.DependFuncVals.Value2;\n                            break;\n                        case 3962:\n                            chargeAmount = dataVal.DependFuncVals.Value;\n                            break;\n                    }\n\n                    if (chargeAmount !== undefined) {\n                        parts.push(asPercent(chargeAmount, 2));\n                    }\n                    break;\n            }\n        }\n\n        if (!parts.length)\n            return <span>-</span>;\n\n        return <span>{mergeElements(parts, ' + ')}</span>;\n    }\n}\n\nexport default FuncValueDescriptor;\n","import React from \"react\";\nimport Buff, {BuffType} from \"../Api/Data/Buff\";\nimport {DataVal} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {asPercent} from \"../Helper/OutputHelper\";\nimport TraitDescriptor from \"./TraitDescriptor\";\n\ninterface IProps {\n    region: Region;\n    buff: Buff;\n    dataVal: DataVal;\n}\n\nclass BuffValueDescriptor extends React.Component<IProps> {\n    render() {\n        let value: JSX.Element | string | null = null;\n\n        switch (this.props.buff.type) {\n            case BuffType.UP_ATK:\n            case BuffType.DOWN_ATK:\n            case BuffType.UP_COMMANDALL:\n            case BuffType.DOWN_COMMANDALL:\n            case BuffType.UP_CRITICALDAMAGE:\n            case BuffType.DOWN_CRITICALDAMAGE:\n            case BuffType.UP_CRITICALPOINT:\n            case BuffType.DOWN_CRITICALPOINT:\n            case BuffType.UP_CRITICALRATE:\n            case BuffType.DOWN_CRITICALRATE:\n            case BuffType.UP_CRITICAL_RATE_DAMAGE_TAKEN:\n            case BuffType.DOWN_CRITICAL_RATE_DAMAGE_TAKEN:\n            case BuffType.UP_DAMAGE:\n            case BuffType.DOWN_DAMAGE:\n            case BuffType.UP_DAMAGEDROPNP:\n            case BuffType.DOWN_DAMAGEDROPNP:\n            case BuffType.UP_DEFENCE:\n            case BuffType.DOWN_DEFENCE:\n            case BuffType.UP_DEFENCECOMMANDALL:\n            case BuffType.DOWN_DEFENCECOMMANDALL:\n            case BuffType.UP_DROPNP:\n            case BuffType.DOWN_DROPNP:\n            case BuffType.UP_FUNC_HP_REDUCE:\n            case BuffType.DOWN_FUNC_HP_REDUCE:\n            case BuffType.UP_HATE:\n            case BuffType.UP_NONRESIST_INSTANTDEATH:\n            case BuffType.UP_NPDAMAGE:\n            case BuffType.DOWN_NPDAMAGE:\n            case BuffType.UP_SPECIALDEFENCE:\n            case BuffType.DOWN_SPECIALDEFENCE:\n            case BuffType.UP_STARWEIGHT:\n            case BuffType.DOWN_STARWEIGHT:\n            case BuffType.UP_TOLERANCE:\n            case BuffType.DOWN_TOLERANCE:\n            case BuffType.UP_TOLERANCE_SUBSTATE:\n            case BuffType.DOWN_TOLERANCE_SUBSTATE:\n                value = asPercent(this.props.dataVal.Value, 1);\n                break;\n            case BuffType.REGAIN_NP:\n                value = asPercent(this.props.dataVal.Value, 2);\n                break;\n            case BuffType.ATTACK_FUNCTION:\n            case BuffType.COMMANDATTACK_FUNCTION:\n            case BuffType.COMMANDATTACK_BEFORE_FUNCTION:\n            case BuffType.DAMAGE_FUNCTION:\n            case BuffType.DEAD_FUNCTION:\n            case BuffType.DELAY_FUNCTION:\n            case BuffType.SELFTURNEND_FUNCTION:\n                if (this.props.dataVal.Value2)\n                    value = 'Lv. ' + this.props.dataVal.Value2;\n                break;\n            case BuffType.NPATTACK_PREV_BUFF:\n                if (this.props.dataVal.SkillLV)\n                    value = 'Lv. ' + this.props.dataVal.SkillLV;\n                break;\n            case BuffType.FIELD_INDIVIDUALITY:\n                if (typeof this.props.dataVal.Value === \"number\")\n                    value = <TraitDescriptor region={this.props.region} trait={this.props.dataVal.Value}/>;\n                break;\n            default:\n                value = this.props.dataVal.Value?.toString() ?? \"\";\n        }\n\n        return value;\n    }\n}\n\nexport default BuffValueDescriptor;\n","import React from \"react\";\nimport {BuffType} from \"../../Api/Data/Buff\";\nimport Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport BuffDescriptor from \"../BuffDescriptor\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport const funcDescriptions = new Map<FuncType, string>([\n    [FuncType.ADD_STATE, 'Apply Buff'],\n    [FuncType.ADD_STATE_SHORT, 'Apply Buff'],\n    [FuncType.CARD_RESET, 'Shuffle Cards'],\n    [FuncType.DAMAGE_NP, 'Deal Damage'],\n    [FuncType.DAMAGE_NP_INDIVIDUAL, 'Deal Damage with Bonus to Trait'],\n    [FuncType.DAMAGE_NP_INDIVIDUAL_SUM, 'Deal Damage with Bonus per Trait'],\n    [FuncType.DAMAGE_NP_PIERCE, 'Deal Damage that pierces defense'],\n    [FuncType.DAMAGE_NP_RARE, 'Deal Damage with Bonus to Rarity'],\n    [FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX, 'Deal Damage with Bonus to Trait'],\n    [FuncType.DELAY_NPTURN, 'Drain Charge'],\n    [FuncType.EXP_UP, 'Increase Master Exp'],\n    [FuncType.FORCE_INSTANT_DEATH, 'Force Instant Death'],\n    [FuncType.GAIN_HP, 'Restore HP'],\n    [FuncType.GAIN_HP_FROM_TARGETS, 'Absorb HP'],\n    [FuncType.GAIN_NP, 'Charge NP'],\n    [FuncType.GAIN_STAR, 'Gain Critical Stars'],\n    [FuncType.NONE, 'No Effect'],\n    [FuncType.SUB_STATE, 'Remove Effects'],\n]);\n\nfunction handleBuffActionSection(region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    parts.push('Apply');\n    func.buffs.forEach((buff, index) => {\n        if (index > 0)\n            parts.push('&');\n\n        parts.push(<BuffDescriptor region={region} buff={buff}/>);\n    });\n\n    if (func.buffs[0]?.type === BuffType.FIELD_INDIVIDUALITY) {\n        sections.amount.preposition = 'to';\n    }\n\n    sections.target.preposition = 'on';\n    if (\n        func.buffs[0]?.type === BuffType.COMMANDATTACK_FUNCTION\n        || func.buffs[0]?.type === BuffType.NPATTACK_PREV_BUFF\n    ) {\n        sections.target.preposition = 'for';\n    }\n}\n\nfunction handleCleanseActionSection(region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n\n    if (func.traitVals?.length) {\n        parts.push('with');\n\n        func.traitVals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<TraitDescriptor region={region} trait={trait}/>);\n        });\n    }\n\n    sections.target.preposition = 'on';\n}\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    if (func.funcType === FuncType.ADD_STATE || func.funcType === FuncType.ADD_STATE_SHORT) {\n        handleBuffActionSection(region, sections, func, dataVal);\n    } else if (func.funcType === FuncType.SUB_STATE) {\n        handleCleanseActionSection(region, sections, func, dataVal);\n    } else if (\n        func.funcType === FuncType.DAMAGE_NP\n        || func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL\n        || func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL_SUM\n        || func.funcType === FuncType.DAMAGE_NP_PIERCE\n        || func.funcType === FuncType.DAMAGE_NP_RARE\n        || func.funcType === FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX\n    ) {\n        parts.push('Deal damage');\n\n        sections.amount.preposition = 'of';\n    } else if (\n        func.funcType === FuncType.CARD_RESET\n        || func.funcType === FuncType.GAIN_STAR\n        || func.funcType === FuncType.NONE\n    ) {\n        parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n\n        sections.target.showing = false;\n    } else if (func.funcType === FuncType.DELAY_NPTURN) {\n        parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n\n        sections.target.preposition = 'from';\n    } else if (func.funcType === FuncType.EXP_UP) {\n        parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n\n        sections.chance.showing = false;\n        sections.amount.preposition = 'by';\n        sections.target.showing = false;\n    } else if (func.funcType === FuncType.FORCE_INSTANT_DEATH) {\n        parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n\n        sections.target.preposition = 'on';\n    } else if (\n        func.funcType === FuncType.GAIN_HP\n        || func.funcType === FuncType.GAIN_NP\n    ) {\n        parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n\n        sections.amount.preposition = 'by';\n        sections.target.preposition = 'for';\n    } else if (func.funcType === FuncType.GAIN_HP_FROM_TARGETS) {\n        parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n\n        sections.amount.preposition = 'of';\n        sections.target.preposition = 'from';\n    } else if (func.funcType === FuncType.GAIN_NP_FROM_TARGETS) {\n        let drainAmount,\n            drainTargets;\n\n        switch (dataVal.DependFuncId) {\n            case 474:\n                drainAmount = `${dataVal.DependFuncVals?.Value ?? 1} Charge`;\n                drainTargets = \"All Enemies\";\n                break;\n            case 3962:\n                drainAmount = \"NP\";\n                drainTargets = \"All Other Allies\";\n                break;\n        }\n\n        parts.push(\n            `Drain ${drainAmount} from ${drainTargets} and Charge NP`\n        );\n\n        sections.target.preposition = 'for';\n    } else if (func.funcType === FuncType.HASTEN_NPTURN) {\n        parts.push('Charge NP');\n\n        sections.amount.preposition = 'by';\n        sections.target.preposition = 'for';\n    } else if (func.funcType === FuncType.INSTANT_DEATH) {\n        parts.push('Apply Death');\n    } else if (func.funcType === FuncType.LOSS_HP_SAFE) {\n        parts.push('Drain HP');\n\n        sections.target.preposition = 'from';\n    } else if (func.funcType === FuncType.LOSS_NP) {\n        parts.push('Drain NP');\n\n        sections.target.preposition = 'from';\n    } else {\n        parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n    }\n}\n"],"sourceRoot":""}