{"version":3,"sources":["Setting/Option.tsx","Setting/Manager.tsx","Api/Data/Region.tsx","Setting/SettingForm.tsx","Component/Navigation.tsx","Api/Connection.tsx","Component/BuffIcon.tsx","Component/DataTable.tsx","Component/Loading.tsx","Api/Data/Func.tsx","Api/Data/Buff.tsx","Component/RawDataViewer.tsx","Helper/OutputHelper.tsx","Descriptor/BuffValueDescriptor.tsx","Descriptor/FuncValueDescriptor.tsx","Helper/FuncHelper.tsx","Api/Data/EntityType.tsx","Descriptor/BuffDescriptor.tsx","Descriptor/TraitDescriptor.tsx","Descriptor/FuncDescriptor.tsx","Page/BuffPage.tsx","Page/CraftEssence/CraftEssenceMainData.tsx","Page/CraftEssence/CraftEssencePicker.tsx","Page/CraftEssence/CraftEssencePortrait.tsx","Descriptor/QuestDescriptor.tsx","Descriptor/SkillDescriptor.tsx","Page/CraftEssence/CraftEssenceSkill.tsx","Page/CraftEssencePage.tsx","Component/FaceIcon.tsx","Component/RarityStars.tsx","Page/CraftEssencesPage.tsx","Descriptor/NoblePhantasmDescriptor.tsx","Page/Func/FuncMainData.tsx","Page/FuncPage.tsx","Api/Data/ClassName.tsx","Component/ClassIcon.tsx","Descriptor/ServantDescriptor.tsx","Page/Func/DataValMainData.tsx","Page/NoblePhantasm/NoblePhantasmVersion.tsx","Page/NoblePhantasmPage.tsx","Page/QuestPage.tsx","Page/Servant/ServantMainData.tsx","Page/Servant/ServantMiscData.tsx","Page/Servant/ServantNoblePhantasm.tsx","Page/Servant/ServantPicker.tsx","Page/Servant/ServantPortrait.tsx","Page/Servant/ServantSkill.tsx","Page/Servant/ServantTraits.tsx","Page/ServantPage.tsx","Page/ServantsPage.tsx","Descriptor/CraftEssenceDescriptor.tsx","Page/Skill/SkillVersion.tsx","Page/SkillPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LanguageOption","Region","callbacks","Manager","value","window","localStorage","getItem","language","Object","values","find","v","DEFAULT","undefined","setItem","triggerCallbacks","callback","push","forEach","call","SettingForm","props","state","onUpdate","syncSettings","this","setState","setLanguage","Form","Group","Label","Control","as","onChange","ev","updateLanguage","target","map","React","Component","Navigation","showSettings","Navbar","bg","variant","expand","Container","to","className","Toggle","Collapse","Nav","NavItem","Link","href","icon","faDiscord","faGithub","Button","onClick","faCog","Modal","show","onHide","hideSettings","Header","closeButton","Title","Body","host","fetch","endpoint","a","axios","get","response","data","craftEssenceListCache","Map","servantListCache","traitMapCache","Connection","region","id","query","ENGLISH","phase","NA","getCacheableCraftEssenceList","JP","jp","na","names","entity","name","getCacheableServantList","getCacheableTraitMap","list","set","BuffIcon","alt","src","location","style","height","verticalAlign","DataTable","header","Table","bordered","hover","keys","key","index","Loading","FuncType","FuncTargetType","FuncTargetTeam","DataValField","BuffType","RawDataViewer","showing","cursor","faSearchPlus","size","hide","collapsed","asPercent","pow","decimal","Math","handleNewLine","text","joinElements","split","elements","separator","parts","pushElement","element","length","previous","toString","BuffValueDescriptor","buff","type","UP_ATK","DOWN_ATK","UP_COMMANDALL","DOWN_COMMANDALL","UP_CRITICALDAMAGE","DOWN_CRITICALDAMAGE","UP_DEFENCE","DOWN_DEFENCE","UP_DROPNP","DOWN_DROPNP","UP_HATE","UP_TOLERANCE","DOWN_TOLERANCE","dataVal","Value","FuncValueDescriptor","func","Rate","funcType","ADD_STATE","ADD_STATE_SHORT","buffs","DAMAGE_NP","DAMAGE_NP_INDIVIDUAL","DAMAGE_NP_STATE_INDIVIDUAL_FIX","DAMAGE_NP_PIERCE","GAIN_NP","LOSS_NP","Correction","hasChangingDataVals","vals","i","JSON","stringify","hasUniqueValues","Set","describeMutators","isLevel","funcUpdatesByLevel","isOvercharge","funcUpdatesByOvercharge","fields","filter","field","val","getMutatingFieldNames","mutatingVals","x","getMutatingFieldValues","getMixedDataValList","getOverchargeDataValList","getLevelDataValList","mutatingVal","svals","dataVals","getTargetVersionValues","getStaticFieldValues","getStaticFieldNames","staticVals","level","overcharge","svals2","svals3","svals4","svals5","EntityType","BuffDescriptor","description","DONOT_ACT","trait","TraitDescriptor","traitMap","FuncDescriptor","staticValues","sectionFlags","chance","action","amountPreposition","amount","affects","targetPreposition","duration","scaling","NONE","SUB_STATE","traitVals","Target","DELAY_NPTURN","GAIN_HP","GAIN_STAR","INSTANT_DEATH","LOSS_HP_SAFE","functvals","funcTargetType","ENEMY","ENEMY_ALL","PT_ALL","PT_ONE","PT_OTHER","SELF","Count","Turn","countDesc","turnDesc","Fragment","funcId","faShare","BuffPage","loading","loadBuff","detail","reverseFunctions","CraftEssenceMainData","craftEssence","collectionNo","rarity","cost","lvMax","hpBase","atkBase","hpMax","atkMax","CraftEssencePicker","history","FormControl","custom","changeCraftEssence","parseInt","craftEssences","slice","reverse","withRouter","CraftEssencePortrait","assetMap","extraAssets","charaGraph","ascension","shift","assetKey","QuestDescriptor","floor","questId","questPhase","SkillDescriptor","skill","iconHeight","CraftEssenceSkill","condQuestId","condQuestPhase","Alert","responsive","functions","CraftEssencePage","loadServant","Promise","all","craftEssenceList","Row","Col","xs","span","order","lg","skills","num","FaceIcon","fillChars","count","character","Array","fill","join","RarityStars","CraftEssencesPage","then","striped","textAlign","width","route","align","face","NoblePhantasmDescriptor","noblePhantasm","FuncMainData","funcTargetTeam","funcPopupText","FuncPage","loadFunc","funcPopupIcon","reverseSkills","reverseTds","ClassName","classTypes","classIds","SABER","ARCHER","LANCER","RIDER","CASTER","ASSASSIN","BERSERKER","SHIELDER","RULER","ALTER_EGO","AVENGER","MOON_CANCER","FOREIGNER","BEAST_I","BEAST_II","BEAST_IIIL","BEAST_IIIR","BEAST_UNKNOWN","ClassIcon","classId","has","ServantDescriptor","servant","DataValMainData","NoblePhantasmVersion","md","NoblePhantasmPage","loadNp","rank","card","reverseServants","NORMAL","HEROINE","inline","justifyContent","changeLevel","changeOvercharge","QuestPage","loadQuest","quest","ServantMainData","gender","attribute","buffIconPath","deathChanceIcon","hitCountIcon","npGainIcon","starGenIcon","showHits","hits","hit","ServantMiscData","hitsDistribution","buster","arts","quick","extra","starAbsorb","starGen","instantDeathChance","npGain","defence","hitsColumn","npGainColumn","miscColumn","ServantNoblePhantasm","np","mutatingDescriptions","ServantPicker","changeServant","servants","ServantPortrait","ServantSkill","coolDown","cooldown","ServantTraits","traits","ServantPage","servantList","Tabs","defaultActiveKey","transition","Tab","eventKey","title","noblePhantasms","ServantsPage","CraftEssenceDescriptor","SkillVersion","SkillPage","levels","loadSkill","SERVANT_EQUIP","from","App","updateSettings","path","render","match","params","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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,E,8BAAAA,E,iBAAAA,E,8BAAAA,E,yCAAAA,E,uBAAAA,E,4BAAAA,E,0BAAAA,E,oCAAAA,E,2BAAAA,E,yBAAAA,E,uBAAAA,E,mBAAAA,E,mBAAAA,E,8BAAAA,E,6BAAAA,E,uCAAAA,E,qCAAAA,E,yBAAAA,E,6BAAAA,E,uCAAAA,M,cC5FAC,K,YAAAA,E,6BAAAA,E,6BAAAA,E,mCAAAA,E,uCAAAA,E,qBAAAA,E,yBAAAA,E,qBAAAA,E,qBAAAA,E,eAAAA,E,mBAAAA,E,qBAAAA,E,yBAAAA,E,uBAAAA,E,uBAAAA,E,yBAAAA,E,6BAAAA,E,qBAAAA,E,qCAAAA,E,yCAAAA,E,6BAAAA,E,iCAAAA,E,+BAAAA,E,+BAAAA,E,sBAAAA,E,iCAAAA,E,wBAAAA,E,6BAAAA,E,iCAAAA,E,2BAAAA,E,+BAAAA,E,yBAAAA,E,qBAAAA,E,yBAAAA,E,yBAAAA,E,+BAAAA,E,+BAAAA,E,YAAAA,E,iBAAAA,E,qCAAAA,E,qCAAAA,E,uBAAAA,E,2BAAAA,E,+BAAAA,E,2BAAAA,E,6BAAAA,E,iCAAAA,E,iCAAAA,E,qBAAAA,E,yBAAAA,E,sBAAAA,E,0BAAAA,E,iCAAAA,E,iCAAAA,E,+BAAAA,E,iCAAAA,E,qCAAAA,E,qCAAAA,E,uCAAAA,E,8CAAAA,E,oDAAAA,E,+BAAAA,E,yCAAAA,E,6BAAAA,E,mBAAAA,E,uBAAAA,E,qBAAAA,E,qBAAAA,E,2CAAAA,E,uCAAAA,E,2CAAAA,E,8BAAAA,E,kCAAAA,E,+CAAAA,E,yCAAAA,E,qCAAAA,E,yCAAAA,E,iCAAAA,E,qCAAAA,E,+BAAAA,E,uBAAAA,E,yCAAAA,E,oCAAAA,E,wCAAAA,E,4CAAAA,E,gDAAAA,E,4CAAAA,E,gDAAAA,E,uBAAAA,E,iCAAAA,E,2CAAAA,E,+CAAAA,E,6CAAAA,E,sDAAAA,E,sDAAAA,E,gDAAAA,E,oDAAAA,E,qEAAAA,E,yEAAAA,E,2BAAAA,E,+BAAAA,E,0BAAAA,E,sBAAAA,E,0BAAAA,E,qDAAAA,E,yDAAAA,E,+BAAAA,E,sBAAAA,E,0BAAAA,E,8BAAAA,E,kCAAAA,E,mCAAAA,E,uCA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","file":"static/js/main.526e13de.chunk.js","sourcesContent":["export enum LanguageOption {\n    DEFAULT = 'Default',\n    ENGLISH = 'English',\n}\n\n","import {LanguageOption} from \"./Option\";\n\nconst languageKey = 'language';\n\nconst callbacks: Function[] = [];\n\nclass Manager {\n    static language(): LanguageOption {\n        const value = window.localStorage.getItem(languageKey),\n            language = Object.values(LanguageOption).find(v => v === value);\n\n        return language ?? LanguageOption.DEFAULT;\n    }\n\n    static setLanguage(value: string) {\n        const language = Object.values(LanguageOption).find(v => v === value);\n        if (language === undefined)\n            return;\n\n        window.localStorage.setItem(languageKey, language);\n        Manager.triggerCallbacks();\n    }\n\n    static onUpdate(callback: Function) {\n        callbacks.push(callback);\n    }\n\n    private static triggerCallbacks() {\n        callbacks.forEach(callback => {\n            callback.call(null);\n        });\n    }\n}\n\nexport default Manager;\n","enum Region {\n    JP = 'JP',\n    NA = 'NA'\n}\n\nexport default Region;\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport Manager from \"./Manager\";\nimport {LanguageOption} from \"./Option\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IState {\n    language: LanguageOption\n}\n\nclass SettingForm extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            language: Manager.language(),\n        }\n\n        Manager.onUpdate(() => this.syncSettings());\n    }\n\n    private syncSettings() {\n        this.setState({\n            language: Manager.language(),\n        });\n    }\n\n    updateLanguage(value: string) {\n        Manager.setLanguage(value);\n    }\n\n    render() {\n        return (\n            <div>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Language</Form.Label>\n                        <Form.Control as={'select'} value={this.state.language}\n                                      onChange={(ev: Event) => this.updateLanguage(ev.target.value)}>\n                            {Object.values(LanguageOption).map(v => (\n                                <option value={v}>{v}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default SettingForm;\n","import {faDiscord, faGithub} from \"@fortawesome/free-brands-svg-icons\";\nimport {faCog} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Button, Container, Modal, Nav, Navbar, NavItem} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport SettingForm from \"../Setting/SettingForm\";\n\ninterface IState {\n    showSettings: boolean;\n}\n\nclass Navigation extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            showSettings: false,\n        };\n    }\n\n    hideSettings() {\n        this.setState({showSettings: false});\n    }\n\n    showSettings() {\n        this.setState({showSettings: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar bg={\"dark\"} variant={'dark'} expand={\"lg\"}>\n                    <Container>\n                        <Link to=\"/\" className={'navbar-brand'}>AA-DB</Link>\n                        <Navbar.Toggle/>\n\n                        <Navbar.Collapse>\n                            <Nav>\n                                <Link to=\"/JP/servants\" className={'nav-link'}>\n                                    <NavItem>JP Servants</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav>\n                                <Link to=\"/NA/servants\" className={'nav-link'}>\n                                    <NavItem>NA Servants</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav>\n                                <Link to=\"/JP/craft-essences\" className={'nav-link'}>\n                                    <NavItem>JP CE</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav>\n                                <Link to=\"/NA/craft-essences\" className={'nav-link'}>\n                                    <NavItem>NA CE</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav className={'ml-auto'}>\n                                <Nav.Link href={'https://discord.gg/TKJmuCR'} target={'_blank'}>\n                                    <FontAwesomeIcon icon={faDiscord}/>\n                                </Nav.Link>\n                                <Nav.Link href={'https://github.com/atlasacademy/aa-db'} target={'_blank'}>\n                                    <FontAwesomeIcon icon={faGithub}/>\n                                </Nav.Link>\n                                <Button variant={\"primary\"} onClick={() => this.showSettings()}>\n                                    <FontAwesomeIcon icon={faCog}/>\n                                </Button>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Container>\n                </Navbar>\n\n                <Modal show={this.state.showSettings} onHide={() => this.hideSettings()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Settings</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <SettingForm/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n\n}\n\nexport default Navigation;\n","import axios from \"axios\";\nimport Manager from \"../Setting/Manager\";\nimport {LanguageOption} from \"../Setting/Option\";\nimport BasicListEntity from \"./Data/BasicListEntity\";\nimport Buff from \"./Data/Buff\";\nimport CraftEssence from \"./Data/CraftEssence\";\nimport Func from \"./Data/Func\";\nimport NoblePhantasm from \"./Data/NoblePhantasm\";\nimport Quest from \"./Data/Quest\";\nimport Region from \"./Data/Region\";\nimport Servant from \"./Data/Servant\";\nimport Skill from \"./Data/Skill\";\nimport TraitMap from \"./Data/TraitMap\";\n\nconst host = 'https://api.atlasacademy.io';\nconst fetch = async function <T>(endpoint: string): Promise<T> {\n    const response = await axios.get<T>(endpoint);\n\n    return response.data;\n}\nconst craftEssenceListCache = new Map<Region, BasicListEntity[]>(),\n    servantListCache = new Map<Region, BasicListEntity[]>(),\n    traitMapCache = new Map<Region, TraitMap>();\n\nclass Connection {\n    static buff(region: Region, id: number): Promise<Buff> {\n        let query = '?reverse=true' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<Buff>(`${host}/nice/${region}/buff/${id}${query}`);\n    }\n\n    static craftEssence(region: Region, id: number): Promise<CraftEssence> {\n        let query = '?lore=true' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<Servant>(`${host}/nice/${region}/equip/${id}${query}`);\n    }\n\n    static func(region: Region, id: number): Promise<Func> {\n        let query = '?reverse=true' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<Func>(`${host}/nice/${region}/function/${id}${query}`);\n    }\n\n    static noblePhantasm(region: Region, id: number): Promise<NoblePhantasm> {\n        let query = '?reverse=true' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<NoblePhantasm>(`${host}/nice/${region}/NP/${id}${query}`);\n    }\n\n    static quest(region: Region, id: number, phase: number): Promise<Quest> {\n        return fetch<Quest>(`${host}/nice/${region}/quest/${id}/${phase}`);\n    }\n\n    static servant(region: Region, id: number): Promise<Servant> {\n        let query = '?lore=true' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<Servant>(`${host}/nice/${region}/servant/${id}${query}`);\n    }\n\n    static async craftEssenceList(region: Region): Promise<BasicListEntity[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableCraftEssenceList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableCraftEssenceList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableCraftEssenceList(Region.JP),\n            na = await Connection.getCacheableCraftEssenceList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<BasicListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static async servantList(region: Region): Promise<BasicListEntity[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableServantList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableServantList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableServantList(Region.JP),\n            na = await Connection.getCacheableServantList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<BasicListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static skill(region: Region, id: number): Promise<Skill> {\n        let query = '?reverse=true' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<Skill>(`${host}/nice/${region}/skill/${id}${query}`);\n    }\n\n    static traitMap(region: Region): Promise<TraitMap> {\n        return Connection.getCacheableTraitMap(region);\n    }\n\n    private static async getCacheableCraftEssenceList(region: Region): Promise<BasicListEntity[]> {\n        let list = craftEssenceListCache.get(region);\n        if (list !== undefined)\n            return list;\n\n        list = await fetch<BasicListEntity[]>(`${host}/export/${region}/basic_equip.json`);\n        craftEssenceListCache.set(region, list);\n\n        return list;\n    }\n\n    private static async getCacheableServantList(region: Region): Promise<BasicListEntity[]> {\n        let list = servantListCache.get(region);\n        if (list !== undefined)\n            return list;\n\n        list = await fetch<BasicListEntity[]>(`${host}/export/${region}/basic_servant.json`);\n        servantListCache.set(region, list);\n\n        return list;\n    }\n\n    private static async getCacheableTraitMap(region: Region): Promise<TraitMap> {\n        let list = traitMapCache.get(region);\n        if (list !== undefined)\n            return list;\n\n        list = await fetch<TraitMap>(`${host}/export/${region}/nice_trait.json`);\n        traitMapCache.set(region, list);\n\n        return list;\n    }\n}\n\nexport default Connection;\n","import React from \"react\";\n\ninterface IProp {\n    location: string;\n    height?: number;\n}\n\nclass BuffIcon extends React.Component<IProp> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location} style={{\n                height: this.props.height ?? 25,\n                verticalAlign: \"bottom\",\n            }}/>\n        );\n    }\n\n}\n\nexport default BuffIcon;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\n\nimport \"./DataTable.css\";\nimport {Renderable} from \"../Helper/OutputHelper\";\n\ninterface IProp {\n    header?: JSX.Element | string,\n    data: {\n        [key: string]: Renderable;\n    }\n}\n\nclass DataTable extends React.Component<IProp> {\n    render() {\n        return (\n            <div>\n                {this.props.header ? (\n                    <div className={'data-header'}>\n                        {this.props.header}\n                    </div>\n                ) : null}\n\n                <Table bordered hover className={'data-table'}>\n                    <tbody>\n                    {Object.keys(this.props.data).map((key, index) => {\n                        return (\n                            <tr key={index}>\n                                <th>{key}</th>\n                                <td>{this.props.data[key]}</td>\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default DataTable;\n","import React from \"react\";\n\nimport \"./Loading.css\";\n\nfunction Loading() {\n    return (\n        <div id={'loading'}>\n            <img alt={''} className={'fou f1'} src={'./assets/load_icon_A01.png'} />\n            <img alt={''} className={'fou f2'} src={'./assets/load_icon_A02.png'} />\n            <img alt={''} className={'fou f3'} src={'./assets/load_icon_A03.png'} />\n            <img alt={''} className={'fou f4'} src={'./assets/load_icon_A04.png'} />\n        </div>\n    );\n}\n\nexport default Loading;\n","import Buff from \"./Buff\";\nimport NoblePhantasm from \"./NoblePhantasm\";\nimport Skill from \"./Skill\";\nimport Trait from \"./Trait\";\n\nexport enum FuncType {\n    NONE = \"none\",\n    ADD_STATE = \"addState\",\n    SUB_STATE = \"subState\",\n    DAMAGE = \"damage\",\n    DAMAGE_NP = \"damageNp\",\n    GAIN_STAR = \"gainStar\",\n    GAIN_HP = \"gainHp\",\n    GAIN_NP = \"gainNp\",\n    LOSS_NP = \"lossNp\",\n    SHORTEN_SKILL = \"shortenSkill\",\n    EXTEND_SKILL = \"extendSkill\",\n    RELEASE_STATE = \"releaseState\",\n    LOSS_HP = \"lossHp\",\n    INSTANT_DEATH = \"instantDeath\",\n    DAMAGE_NP_PIERCE = \"damageNpPierce\",\n    DAMAGE_NP_INDIVIDUAL = \"damageNpIndividual\",\n    ADD_STATE_SHORT = \"addStateShort\",\n    GAIN_HP_PER = \"gainHpPer\",\n    DAMAGE_NP_STATE_INDIVIDUAL = \"damageNpStateIndividual\",\n    HASTEN_NPTURN = \"hastenNpturn\",\n    DELAY_NPTURN = \"delayNpturn\",\n    DAMAGE_NP_HPRATIO_HIGH = \"damageNpHpratioHigh\",\n    DAMAGE_NP_HPRATIO_LOW = \"damageNpHpratioLow\",\n    CARD_RESET = \"cardReset\",\n    REPLACE_MEMBER = \"replaceMember\",\n    LOSS_HP_SAFE = \"lossHpSafe\",\n    DAMAGE_NP_COUNTER = \"damageNpCounter\",\n    DAMAGE_NP_STATE_INDIVIDUAL_FIX = \"damageNpStateIndividualFix\",\n    DAMAGE_NP_SAFE = \"damageNpSafe\",\n    CALL_SERVANT = \"callServant\",\n    PT_SHUFFLE = \"ptShuffle\",\n    LOSS_STAR = \"lossStar\",\n    CHANGE_SERVANT = \"changeServant\",\n    CHANGE_BG = \"changeBg\",\n    DAMAGE_VALUE = \"damageValue\",\n    WITHDRAW = \"withdraw\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    SHORTEN_BUFFTURN = \"shortenBuffturn\",\n    EXTEND_BUFFTURN = \"extendBuffturn\",\n    SHORTEN_BUFFCOUNT = \"shortenBuffcount\",\n    EXTEND_BUFFCOUNT = \"extendBuffcount\",\n    CHANGE_BGM = \"changeBgm\",\n    DISPLAY_BUFFSTRING = \"displayBuffstring\",\n    EXP_UP = \"expUp\",\n    QP_UP = \"qpUp\",\n    DROP_UP = \"dropUp\",\n    FRIEND_POINT_UP = \"friendPointUp\",\n    EVENT_DROP_UP = \"eventDropUp\",\n    EVENT_DROP_RATE_UP = \"eventDropRateUp\",\n    EVENT_POINT_UP = \"eventPointUp\",\n    EVENT_POINT_RATE_UP = \"eventPointRateUp\",\n    TRANSFORM_SERVANT = \"transformServant\",\n    QP_DROP_UP = \"qpDropUp\",\n    SERVANT_FRIENDSHIP_UP = \"servantFriendshipUp\",\n    USER_EQUIP_EXP_UP = \"userEquipExpUp\",\n    CLASS_DROP_UP = \"classDropUp\",\n    ENEMY_ENCOUNT_COPY_RATE_UP = \"enemyEncountCopyRateUp\",\n    ENEMY_ENCOUNT_RATE_UP = \"enemyEncountRateUp\",\n    ENEMY_PROB_DOWN = \"enemyProbDown\",\n}\n\nexport enum FuncTargetType {\n    SELF = \"self\",\n    PT_ONE = \"ptOne\",\n    PT_ANOTHER = \"ptAnother\",\n    PT_ALL = \"ptAll\",\n    ENEMY = \"enemy\",\n    ENEMY_ANOTHER = \"enemyAnother\",\n    ENEMY_ALL = \"enemyAll\",\n    PT_FULL = \"ptFull\",\n    ENEMY_FULL = \"enemyFull\",\n    PT_OTHER = \"ptOther\",\n    PT_ONE_OTHER = \"ptOneOther\",\n    PT_RANDOM = \"ptRandom\",\n    ENEMY_OTHER = \"enemyOther\",\n    ENEMY_RANDOM = \"enemyRandom\",\n    PT_OTHER_FULL = \"ptOtherFull\",\n    ENEMY_OTHER_FULL = \"enemyOtherFull\",\n    PTSELECT_ONE_SUB = \"ptselectOneSub\",\n    PTSELECT_SUB = \"ptselectSub\",\n    PT_ONE_ANOTHER_RANDOM = \"ptOneAnotherRandom\",\n}\n\nexport enum FuncTargetTeam {\n    PLAYER = \"player\",\n    ENEMY = \"enemy\",\n    PLAYER_AND_ENEMY = \"playerAndEnemy\",\n}\n\nexport enum DataValField {\n    RATE = \"Rate\",\n    TURN = \"Turn\",\n    COUNT = \"Count\",\n    VALUE = \"Value\",\n    VALUE2 = \"Value2\",\n    USE_RATE = \"UseRate\",\n    TARGET = \"Target\",\n    CORRECTION = \"Correction\",\n    PARAM_ADD = \"ParamAdd\",\n    PARAM_MAX = \"ParamMax\",\n    HIDE_MISS = \"HideMiss\",\n    ON_FIELD = \"OnField\",\n    HIDE_NO_EFFECT = \"HideNoEffect\",\n    UNAFFECTED = \"Unaffected\",\n    SHOW_STATE = \"ShowState\",\n    AURA_EFFECT_ID = \"AuraEffectId\",\n    ACT_SET = \"ActSet\",\n    ACT_SET_WEIGHT = \"ActSetWeight\",\n    SHOW_QUEST_NO_EFFECT = \"ShowQuestNoEffect\",\n    CHECK_DEAD = \"CheckDead\",\n    RATIO_HP_HIGH = \"RatioHPHigh\",\n    RATIO_HP_LOW = \"RatioHPLow\",\n    SET_PASSIVE_FRAME = \"SetPassiveFrame\",\n    PROC_PASSIVE = \"ProcPassive\",\n    PROC_ACTIVE = \"ProcActive\",\n    HIDE_PARAM = \"HideParam\",\n    SKILL_ID = \"SkillID\",\n    SKILL_LV = \"SkillLV\",\n    SHOW_CARD_ONLY = \"ShowCardOnly\",\n    EFFECT_SUMMON = \"EffectSummon\",\n    RATIO_HP_RANGE_HIGH = \"RatioHPRangeHigh\",\n    RATIO_HP_RANGE_LOW = \"RatioHPRangeLow\",\n    TARGET_LIST = \"TargetList\",\n    OPPONENT_ONLY = \"OpponentOnly\",\n    TARGET_RARITY_LIST = \"TargetRarityList\",\n}\n\nexport type DataVal = {\n    [key in DataValField]?: number;\n}\n\nexport default interface Func {\n    funcId: number;\n    funcType: FuncType;\n    funcTargetType: FuncTargetType;\n    funcTargetTeam: FuncTargetTeam;\n    funcPopupText: string;\n    funcPopupIcon?: string;\n    functvals: Trait[];\n    funcquestTvals: number[];\n    traitVals?: Trait[];\n    buffs: Buff[];\n    svals?: DataVal[];\n    svals2?: DataVal[];\n    svals3?: DataVal[];\n    svals4?: DataVal[];\n    svals5?: DataVal[];\n    reverseSkills: Skill[];\n    reverseTds: NoblePhantasm[];\n}\n","import Func from \"./Func\";\nimport Trait from \"./Trait\";\n\nexport enum BuffType {\n    NONE = \"none\",\n    UP_COMMANDATK = \"upCommandatk\",\n    UP_STARWEIGHT = \"upStarweight\",\n    UP_CRITICALPOINT = \"upCriticalpoint\",\n    DOWN_CRITICALPOINT = \"downCriticalpoint\",\n    REGAIN_NP = \"regainNp\",\n    REGAIN_STAR = \"regainStar\",\n    REGAIN_HP = \"regainHp\",\n    REDUCE_HP = \"reduceHp\",\n    UP_ATK = \"upAtk\",\n    DOWN_ATK = \"downAtk\",\n    UP_DAMAGE = \"upDamage\",\n    DOWN_DAMAGE = \"downDamage\",\n    ADD_DAMAGE = \"addDamage\",\n    SUB_DAMAGE = \"subDamage\",\n    UP_NPDAMAGE = \"upNpdamage\",\n    DOWN_NPDAMAGE = \"downNpdamage\",\n    UP_DROPNP = \"upDropnp\",\n    UP_CRITICALDAMAGE = \"upCriticaldamage\",\n    DOWN_CRITICALDAMAGE = \"downCriticaldamage\",\n    UP_SELFDAMAGE = \"upSelfdamage\",\n    DOWN_SELFDAMAGE = \"downSelfdamage\",\n    ADD_SELFDAMAGE = \"addSelfdamage\",\n    SUB_SELFDAMAGE = \"subSelfdamage\",\n    AVOIDANCE = \"avoidance\",\n    BREAK_AVOIDANCE = \"breakAvoidance\",\n    INVINCIBLE = \"invincible\",\n    UP_GRANTSTATE = \"upGrantstate\",\n    DOWN_GRANTSTATE = \"downGrantstate\",\n    UP_TOLERANCE = \"upTolerance\",\n    DOWN_TOLERANCE = \"downTolerance\",\n    AVOID_STATE = \"avoidState\",\n    DONOT_ACT = \"donotAct\",\n    DONOT_SKILL = \"donotSkill\",\n    DONOT_NOBLE = \"donotNoble\",\n    DONOT_RECOVERY = \"donotRecovery\",\n    DISABLE_GENDER = \"disableGender\",\n    GUTS = \"guts\",\n    UP_HATE = \"upHate\",\n    ADD_INDIVIDUALITY = \"addIndividuality\",\n    SUB_INDIVIDUALITY = \"subIndividuality\",\n    UP_DEFENCE = \"upDefence\",\n    DOWN_DEFENCE = \"downDefence\",\n    UP_COMMANDSTAR = \"upCommandstar\",\n    UP_COMMANDNP = \"upCommandnp\",\n    UP_COMMANDALL = \"upCommandall\",\n    DOWN_COMMANDALL = \"downCommandall\",\n    DOWN_STARWEIGHT = \"downStarweight\",\n    REDUCE_NP = \"reduceNp\",\n    DOWN_DROPNP = \"downDropnp\",\n    UP_GAIN_HP = \"upGainHp\",\n    DOWN_GAIN_HP = \"downGainHp\",\n    DOWN_COMMANDATK = \"downCommandatk\",\n    DOWN_COMMANSTAR = \"downCommanstar\",\n    DOWN_COMMANDNP = \"downCommandnp\",\n    UP_CRITICALRATE = \"upCriticalrate\",\n    DOWN_CRITICALRATE = \"downCriticalrate\",\n    PIERCE_INVINCIBLE = \"pierceInvincible\",\n    AVOID_INSTANTDEATH = \"avoidInstantdeath\",\n    UP_RESIST_INSTANTDEATH = \"upResistInstantdeath\",\n    UP_NONRESIST_INSTANTDEATH = \"upNonresistInstantdeath\",\n    DELAY_FUNCTION = \"delayFunction\",\n    REGAIN_NP_USED_NOBLE = \"regainNpUsedNoble\",\n    DEAD_FUNCTION = \"deadFunction\",\n    UP_MAXHP = \"upMaxhp\",\n    DOWN_MAXHP = \"downMaxhp\",\n    ADD_MAXHP = \"addMaxhp\",\n    SUB_MAXHP = \"subMaxhp\",\n    BATTLESTART_FUNCTION = \"battlestartFunction\",\n    WAVESTART_FUNCTION = \"wavestartFunction\",\n    SELFTURNEND_FUNCTION = \"selfturnendFunction\",\n    UP_GIVEGAIN_HP = \"upGivegainHp\",\n    DOWN_GIVEGAIN_HP = \"downGivegainHp\",\n    COMMANDATTACK_FUNCTION = \"commandattackFunction\",\n    DEADATTACK_FUNCTION = \"deadattackFunction\",\n    UP_SPECIALDEFENCE = \"upSpecialdefence\",\n    DOWN_SPECIALDEFENCE = \"downSpecialdefence\",\n    UP_DAMAGEDROPNP = \"upDamagedropnp\",\n    DOWN_DAMAGEDROPNP = \"downDamagedropnp\",\n    ENTRY_FUNCTION = \"entryFunction\",\n    UP_CHAGETD = \"upChagetd\",\n    REFLECTION_FUNCTION = \"reflectionFunction\",\n    UP_GRANT_SUBSTATE = \"upGrantSubstate\",\n    DOWN_GRANT_SUBSTATE = \"downGrantSubstate\",\n    UP_TOLERANCE_SUBSTATE = \"upToleranceSubstate\",\n    DOWN_TOLERANCE_SUBSTATE = \"downToleranceSubstate\",\n    UP_GRANT_INSTANTDEATH = \"upGrantInstantdeath\",\n    DOWN_GRANT_INSTANTDEATH = \"downGrantInstantdeath\",\n    GUTS_RATIO = \"gutsRatio\",\n    DAMAGE_FUNCTION = \"damageFunction\",\n    UP_DEFENCECOMMANDALL = \"upDefencecommandall\",\n    DOWN_DEFENCECOMMANDALL = \"downDefencecommandall\",\n    OVERWRITE_BATTLECLASS = \"overwriteBattleclass\",\n    OVERWRITE_CLASSRELATIO_ATK = \"overwriteClassrelatioAtk\",\n    OVERWRITE_CLASSRELATIO_DEF = \"overwriteClassrelatioDef\",\n    UP_DAMAGE_INDIVIDUALITY = \"upDamageIndividuality\",\n    DOWN_DAMAGE_INDIVIDUALITY = \"downDamageIndividuality\",\n    UP_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"upDamageIndividualityActiveonly\",\n    DOWN_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"downDamageIndividualityActiveonly\",\n    UP_NPTURNVAL = \"upNpturnval\",\n    DOWN_NPTURNVAL = \"downNpturnval\",\n    MULTIATTACK = \"multiattack\",\n    UP_GIVE_NP = \"upGiveNp\",\n    DOWN_GIVE_NP = \"downGiveNp\",\n    UP_RESISTANCE_DELAY_NPTURN = \"upResistanceDelayNpturn\",\n    DOWN_RESISTANCE_DELAY_NPTURN = \"downResistanceDelayNpturn\",\n    PIERCE_DEFENCE = \"pierceDefence\",\n    UP_GUTS_HP = \"upGutsHp\",\n    DOWN_GUTS_HP = \"downGutsHp\",\n    UP_FUNCGAIN_NP = \"upFuncgainNp\",\n    DOWN_FUNCGAIN_NP = \"downFuncgainNp\",\n    UP_FUNC_HP_REDUCE = \"upFuncHpReduce\",\n    DOWN_FUNC_HP_REDUCE = \"downFuncHpReduce\",\n    UP_DEFENCECOMMAN_DAMAGE = \"upDefencecommanDamage\",\n    DOWN_DEFENCECOMMAN_DAMAGE = \"downDefencecommanDamage\",\n    NPATTACK_PREV_BUFF = \"npattackPrevBuff\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    DONOT_GAINNP = \"donotGainnp\",\n    FIELD_INDIVIDUALITY = \"fieldIndividuality\",\n    DONOT_ACT_COMMANDTYPE = \"donotActCommandtype\",\n    UP_DAMAGE_EVENT_POINT = \"upDamageEventPoint\",\n}\n\nexport default interface Buff {\n    id: number;\n    name: string;\n    detail: string;\n    icon: string;\n    type: BuffType;\n    vals: Trait[];\n    tvals: Trait[];\n    ckSelfIndv: Trait[];\n    ckOpIndv: Trait[];\n    maxRate: number;\n    reverseFunctions: Func[];\n}\n","import {faSearchPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Modal} from \"react-bootstrap\";\nimport ReactJson from \"react-json-view\";\n\ninterface IProps {\n    data: object;\n}\n\ninterface IState {\n    showing: boolean;\n}\n\nclass RawDataViewer extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            showing: false\n        };\n    }\n\n    hide() {\n        this.setState({showing: false});\n    }\n\n    show() {\n        this.setState({showing: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <span className={'text-primary'}\n                      style={{cursor: \"pointer\"}}\n                      onClick={() => {\n                          this.show();\n                      }}>\n                    View Raw\n                    &nbsp;\n                    <FontAwesomeIcon icon={faSearchPlus}/>\n                </span>\n\n                <Modal size={\"lg\"} show={this.state.showing} onHide={() => this.hide()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Raw Data Viewer</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ReactJson src={this.props.data} collapsed={1}/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default RawDataViewer;\n","import React from \"react\";\n\nexport type Renderable = (\n    JSX.Element\n    | string\n    | number\n    | undefined\n    )\n\nexport function asPercent(value: number | undefined, pow: number): string {\n    const decimal = (value ?? 0) / Math.pow(10, pow);\n\n    return `${decimal}%`;\n}\n\nexport function handleNewLine(text?: string): Renderable {\n    if (!text)\n        return \"\";\n\n    return (\n        <span>\n            {joinElements(text.split(\"\\n\"), <br/>)}\n        </span>\n    );\n}\n\nexport function joinElements(elements: Renderable[], separator: Renderable): Renderable[] {\n    const parts: Renderable[] = [],\n        pushElement = function (element: Renderable) {\n            if (element === undefined)\n                return;\n\n            if (typeof element === 'object') {\n                parts.push(element);\n                return;\n            }\n\n            if (parts.length === 0) {\n                parts.push(element.toString());\n                return;\n            }\n\n            const previous = parts[parts.length - 1];\n            if (typeof previous !== 'string') {\n                parts.push(element.toString());\n                return;\n            }\n\n            parts[parts.length - 1] = previous + element.toString();\n        };\n\n    elements.forEach((element, index) => {\n        if (index > 0)\n            pushElement(separator);\n\n        pushElement(element);\n    });\n\n    return parts;\n}\n","import React from \"react\";\nimport Buff, {BuffType} from \"../Api/Data/Buff\";\nimport {DataVal} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {asPercent} from \"../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    buff: Buff;\n    dataVal: DataVal;\n}\n\nclass BuffValueDescriptor extends React.Component<IProps>{\n    render() {\n        let value = \"\";\n\n        switch (this.props.buff.type) {\n            case BuffType.UP_ATK:\n            case BuffType.DOWN_ATK:\n            case BuffType.UP_COMMANDALL:\n            case BuffType.DOWN_COMMANDALL:\n            case BuffType.UP_CRITICALDAMAGE:\n            case BuffType.DOWN_CRITICALDAMAGE:\n            case BuffType.UP_DEFENCE:\n            case BuffType.DOWN_DEFENCE:\n            case BuffType.UP_DROPNP:\n            case BuffType.DOWN_DROPNP:\n            case BuffType.UP_HATE:\n            case BuffType.UP_TOLERANCE:\n            case BuffType.DOWN_TOLERANCE:\n                value = asPercent(this.props.dataVal.Value, 1);\n                break;\n            default:\n                value = this.props.dataVal.Value?.toString() ?? \"\";\n        }\n\n        return value;\n    }\n}\n\nexport default BuffValueDescriptor;\n","import React from \"react\";\nimport Func, {DataVal, FuncType} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {asPercent, joinElements, Renderable} from \"../Helper/OutputHelper\";\nimport BuffValueDescriptor from \"./BuffValueDescriptor\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n    dataVal: DataVal;\n}\n\nclass FuncValueDescriptor extends React.Component<IProps> {\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            dataVal = this.props.dataVal,\n            parts: Renderable[] = [];\n\n        if (dataVal.Rate !== undefined) {\n            parts.push(asPercent(dataVal.Rate, 1));\n        }\n\n        if (dataVal.Value !== undefined) {\n            switch (func.funcType) {\n                case FuncType.ADD_STATE:\n                case FuncType.ADD_STATE_SHORT:\n                    parts.push(<BuffValueDescriptor region={region} buff={func.buffs[0]} dataVal={dataVal}/>);\n                    break;\n                case FuncType.DAMAGE_NP:\n                case FuncType.DAMAGE_NP_INDIVIDUAL:\n                case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                case FuncType.DAMAGE_NP_PIERCE:\n                    parts.push(asPercent(dataVal.Value, 1));\n                    break;\n                case FuncType.GAIN_NP:\n                case FuncType.LOSS_NP:\n                    parts.push(asPercent(dataVal.Value, 2));\n                    break;\n                default:\n                    parts.push(dataVal.Value.toString());\n            }\n        }\n\n        if (dataVal.Correction !== undefined) {\n            switch (func.funcType) {\n                case FuncType.DAMAGE_NP_INDIVIDUAL:\n                case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                    parts.push(asPercent(dataVal.Correction, 1));\n                    break;\n                default:\n                    parts.push(dataVal.Correction.toString());\n            }\n        }\n\n        if (!parts.length)\n            return <span>-</span>;\n\n        return <span>{joinElements(parts, ' + ')}</span>;\n    }\n}\n\nexport default FuncValueDescriptor;\n","import React from \"react\";\nimport Func, {DataVal, DataValField} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport FuncValueDescriptor from \"../Descriptor/FuncValueDescriptor\";\nimport {Renderable} from \"./OutputHelper\";\n\nconst hasChangingDataVals = function (vals: DataVal[]): boolean {\n    if (!vals.length)\n        return false;\n\n    let previous = vals[0];\n    for (let i = 1; i < vals.length; i++) {\n        if (JSON.stringify(previous) !== JSON.stringify(vals[i]))\n            return true;\n\n        previous = vals[i];\n    }\n\n    return false;\n};\n\nconst hasUniqueValues = function (values: (number | undefined)[]): boolean {\n    return new Set(values).size > 1;\n};\n\nexport function describeMutators(region: Region, func: Func): Renderable[] {\n    const isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func),\n        dataVals = isLevel && isOvercharge\n            ? getMixedDataValList(func)\n            : (isOvercharge ? getOverchargeDataValList(func) : getLevelDataValList(func)),\n        mutatingVals = getMutatingFieldValues(dataVals);\n\n    return mutatingVals\n        .map(mutatingVal => <FuncValueDescriptor region={region} func={func} dataVal={mutatingVal}/>);\n}\n\nexport function funcUpdatesByLevel(func: Func): boolean {\n    return hasChangingDataVals(getLevelDataValList(func));\n}\n\nexport function funcUpdatesByOvercharge(func: Func): boolean {\n    return hasChangingDataVals(getOverchargeDataValList(func));\n}\n\nexport function getLevelDataValList(func: Func): DataVal[] {\n    return func.svals ?? [];\n}\n\nexport function getMixedDataValList(func: Func): DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, i, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getMutatingFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return hasUniqueValues(values);\n    });\n}\n\nexport function getMutatingFieldValues(vals: DataVal[]): DataVal[] {\n    if (!vals.length)\n        return [];\n\n    const fields = getMutatingFieldNames(vals);\n\n    return vals.map(val => {\n        const mutatingVals: DataVal = {};\n\n        for (let x in fields) {\n            mutatingVals[fields[x]] = val[fields[x]];\n        }\n\n        return mutatingVals;\n    });\n}\n\nexport function getOverchargeDataValList(func: Func): DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, 1, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getStaticFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return !hasUniqueValues(values);\n    });\n}\n\nexport function getStaticFieldValues(vals: DataVal[]): DataVal {\n    if (!vals.length)\n        return {};\n\n    const fields = getStaticFieldNames(vals),\n        staticVals: DataVal = {};\n\n    for (let x in fields) {\n        staticVals[fields[x]] = vals[0][fields[x]];\n    }\n\n    return staticVals;\n}\n\nexport function getTargetVersionValues(func: Func, level: number, overcharge: number = 1): DataVal | undefined {\n    if (func.svals === undefined)\n        return undefined;\n\n    let dataVals;\n\n    if (overcharge === 2 && func.svals2)\n        dataVals = func.svals2;\n    else if (overcharge === 3 && func.svals3)\n        dataVals = func.svals3;\n    else if (overcharge === 4 && func.svals4)\n        dataVals = func.svals4;\n    else if (overcharge === 5 && func.svals5)\n        dataVals = func.svals5;\n    else\n        dataVals = func.svals;\n\n    return dataVals[level - 1];\n}\n","enum EntityType {\n    NORMAL = \"normal\",\n    HEROINE = \"heroine\",\n    COMBINE_MATERIAL = \"combineMaterial\",\n    ENEMY = \"enemy\",\n    ENEMY_COLLECTION = \"enemyCollection\",\n    SERVANT_EQUIP = \"servantEquip\",\n    STATUS_UP = \"statusUp\",\n    SVT_EQUIP_MATERIAL = \"svtEquipMaterial\",\n    ENEMY_COLLECTION_DETAIL = \"enemyCollectionDetail\",\n    ALL = \"all\",\n    COMMAND_CODE = \"commandCode\",\n}\n\nexport default EntityType;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Buff, {BuffType} from \"../Api/Data/Buff\";\nimport Region from \"../Api/Data/Region\";\nimport BuffIcon from \"../Component/BuffIcon\";\n\ninterface IProps {\n    region: Region;\n    buff: Buff;\n}\n\nclass BuffDescriptor extends React.Component<IProps>{\n    render() {\n        const buff = this.props.buff;\n\n        let description = buff.name;\n        if (buff.type === BuffType.DONOT_ACT) {\n            if (buff.vals.filter(trait => trait.id === 3012).length > 0) {\n                description = 'Charm';\n            }\n        }\n\n        return (\n            <Link to={`/${this.props.region}/buff/${buff.id}`}>\n                [{description} <BuffIcon location={buff.icon}/>]\n            </Link>\n        );\n    }\n}\n\nexport default BuffDescriptor;\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Region from \"../Api/Data/Region\";\nimport Trait from \"../Api/Data/Trait\";\n\ninterface IProps {\n    region: Region;\n    trait: Trait | number;\n}\n\ninterface IState {\n    id: number;\n    trait?: Trait;\n}\n\nclass TraitDescriptor extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            id: typeof props.trait === \"number\" ? props.trait : props.trait.id,\n            trait: typeof props.trait === \"number\" ? undefined : props.trait,\n        };\n    }\n\n    async componentDidMount() {\n        if (this.state.trait)\n            return;\n\n        const traitMap = await Connection.traitMap(this.props.region);\n        if (traitMap[this.state.id] !== undefined)\n            this.setState({\n                trait: {\n                    id: this.state.id,\n                    name: traitMap[this.state.id]\n                }\n            });\n    }\n\n    render() {\n        return (\n            <span>\n                [\n                {this.state.trait ? this.state.trait.name : 'unknown'}\n                {this.state.trait === undefined || this.state.trait.name === 'unknown' ? `(${this.state.id})` : null}\n                ]\n            </span>\n        );\n    }\n}\n\nexport default TraitDescriptor;\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Func, {FuncTargetType, FuncType} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {\n    funcUpdatesByLevel,\n    funcUpdatesByOvercharge, getLevelDataValList,\n    getMixedDataValList,\n    getOverchargeDataValList, getStaticFieldValues\n} from \"../Helper/FuncHelper\";\nimport {joinElements, Renderable} from \"../Helper/OutputHelper\";\nimport BuffDescriptor from \"./BuffDescriptor\";\nimport BuffValueDescriptor from \"./BuffValueDescriptor\";\nimport FuncValueDescriptor from \"./FuncValueDescriptor\";\nimport TraitDescriptor from \"./TraitDescriptor\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n}\n\nclass FuncDescriptor extends React.Component<IProps> {\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            isLevel = funcUpdatesByLevel(func),\n            isOvercharge = funcUpdatesByOvercharge(func),\n            dataVals = isLevel && isOvercharge\n                ? getMixedDataValList(func)\n                : (isOvercharge ? getOverchargeDataValList(func) : getLevelDataValList(func)),\n            staticValues = getStaticFieldValues(dataVals);\n\n        const parts: Renderable[] = [],\n            sectionFlags = {\n                chance: true,\n                action: true,\n                amountPreposition: 'of',\n                amount: true,\n                affects: true,\n                targetPreposition: 'to',\n                target: true,\n                duration: true,\n                scaling: true,\n            };\n\n        if (sectionFlags.chance && staticValues.Rate && staticValues.Rate !== 1000) {\n            parts.push((staticValues.Rate / 10) + '% Chance to');\n        } else if (!staticValues.Rate && func.funcType !== FuncType.NONE) {\n            parts.push('Chance to');\n        }\n\n        if (sectionFlags.action) {\n            if (func.funcType === FuncType.ADD_STATE || func.funcType === FuncType.ADD_STATE_SHORT) {\n                parts.push('Apply');\n                func.buffs.forEach((buff, index) => {\n                    if (index > 0)\n                        parts.push('&');\n\n                    parts.push(<BuffDescriptor region={region} buff={buff}/>);\n                });\n                sectionFlags.targetPreposition = 'on';\n            } else if (func.funcType === FuncType.SUB_STATE) {\n                parts.push('Remove effects');\n\n                if (func.traitVals?.length) {\n                    parts.push('with');\n\n                    func.traitVals.forEach((trait, index) => {\n                        if (index > 0)\n                            parts.push('&');\n\n                        parts.push(<TraitDescriptor region={region} trait={trait}/>);\n                    });\n                }\n                sectionFlags.targetPreposition = 'for';\n            } else if (func.funcType === FuncType.DAMAGE_NP) {\n                parts.push('Deal damage');\n                sectionFlags.amountPreposition = 'for';\n            } else if (\n                func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL\n                || func.funcType === FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX\n            ) {\n                if (staticValues.Target) {\n                    parts.push(\n                        <span>Deal damage (additional to targets with {\n                            <TraitDescriptor region={region} trait={staticValues.Target}/>\n                        })</span>\n                    );\n                } else {\n                    parts.push('Deal damage');\n                }\n                sectionFlags.amountPreposition = 'for';\n            } else if (func.funcType === FuncType.DAMAGE_NP_PIERCE) {\n                parts.push('Deal damage that pierces defence');\n                sectionFlags.amountPreposition = 'for';\n            } else if (func.funcType === FuncType.DELAY_NPTURN) {\n                parts.push('Drain Charge');\n                sectionFlags.targetPreposition = 'from';\n            } else if (func.funcType === FuncType.GAIN_HP) {\n                parts.push('Gain HP');\n                sectionFlags.targetPreposition = 'on';\n            } else if (func.funcType === FuncType.GAIN_NP) {\n                parts.push('Charge NP');\n                sectionFlags.targetPreposition = 'for';\n            } else if (func.funcType === FuncType.GAIN_STAR) {\n                parts.push('Gain Critical Stars');\n                sectionFlags.target = false;\n            } else if (func.funcType === FuncType.INSTANT_DEATH) {\n                parts.push('Apply Death');\n            } else if (func.funcType === FuncType.LOSS_HP_SAFE) {\n                parts.push('Lose HP')\n                sectionFlags.target = false;\n            } else if (func.funcType === FuncType.NONE) {\n                parts.push('No Effect');\n                sectionFlags.target = false;\n            }\n        }\n\n        if (sectionFlags.amount && staticValues.Value) {\n            if (func.buffs[0]) {\n                parts.push('of');\n                parts.push(<BuffValueDescriptor region={region} buff={func.buffs[0]} dataVal={staticValues}/>);\n            } else {\n                // there are some properties that we don't want back as the description\n                const prunedValues = {...staticValues};\n                prunedValues.Rate = undefined;\n\n                parts.push('of');\n\n                parts.push(<FuncValueDescriptor region={region} func={func} dataVal={staticValues}/>);\n            }\n        }\n\n        if (sectionFlags.affects && func.functvals.length) {\n            parts.push('for all');\n            func.functvals.forEach((trait, index) => {\n                if (index > 0)\n                    parts.push('&');\n\n                parts.push(<TraitDescriptor region={region} trait={trait}/>);\n            });\n        }\n\n        if (sectionFlags.target) {\n            parts.push(sectionFlags.targetPreposition);\n            if (func.funcTargetType === FuncTargetType.ENEMY) {\n                parts.push('enemy');\n            } else if (func.funcTargetType === FuncTargetType.ENEMY_ALL) {\n                parts.push('all enemies');\n            } else if (func.funcTargetType === FuncTargetType.PT_ALL) {\n                parts.push('party');\n            } else if (func.funcTargetType === FuncTargetType.PT_ONE) {\n                parts.push('party member');\n            } else if (func.funcTargetType === FuncTargetType.PT_OTHER) {\n                parts.push('party except self');\n            } else if (func.funcTargetType === FuncTargetType.SELF) {\n                parts.push('self');\n            }\n        }\n\n        if (sectionFlags.duration) {\n            if (staticValues.Count && staticValues.Count > 0 && staticValues.Turn && staticValues.Turn > 0) {\n                const countDesc = staticValues.Count === 1 ? '1 Time' : `${staticValues.Count} Times`,\n                    turnDesc = staticValues.Turn === 1 ? '1 Turn' : `${staticValues.Turn} Turns`;\n\n                parts.push(`(${turnDesc}, ${countDesc})`);\n            } else if (staticValues.Turn && staticValues.Turn > 0) {\n                parts.push(staticValues.Turn === 1 ? '(1 Turn)' : `(${staticValues.Turn} Turns)`);\n            } else if (staticValues.Count && staticValues.Count > 0) {\n                parts.push(staticValues.Count === 1 ? '(1 Time)' : `(${staticValues.Count} Times)`);\n            }\n        }\n\n        if (sectionFlags.scaling) {\n            if (isLevel) {\n                parts.push('<LEVEL>');\n            }\n\n            if (isOvercharge) {\n                parts.push('<OVERCHARGE>');\n            }\n        }\n\n        return (\n            <span>\n                {joinElements(parts, ' ')\n                    .map((element, index) => {\n                        return <React.Fragment key={index}>{element}</React.Fragment>;\n                    })}\n                {' '}\n                <Link to={`/${region}/func/${func.funcId}`}>\n                    <FontAwesomeIcon icon={faShare}/>\n                </Link>\n            </span>\n        );\n    }\n}\n\nexport default FuncDescriptor;\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Buff from \"../Api/Data/Buff\";\nimport Region from \"../Api/Data/Region\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport DataTable from \"../Component/DataTable\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\nimport FuncDescriptor from \"../Descriptor/FuncDescriptor\";\nimport {joinElements} from \"../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    buff?: Buff;\n}\n\nclass BuffPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.loadBuff();\n    }\n\n    async loadBuff() {\n        const buff = await Connection.buff(this.props.region, this.props.id);\n\n        this.setState({\n            loading: false,\n            buff: buff,\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.buff)\n            return <Loading/>;\n\n        const buff = this.state.buff;\n\n        return (\n            <div>\n                <h1>\n                    <BuffIcon location={buff.icon} height={48}/>\n                    &nbsp;\n                    {buff.name}\n                </h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={buff}/>,\n                    \"ID\": buff.id,\n                    \"Name\": buff.name,\n                    \"Detail\": buff.detail,\n                    \"Type\": buff.type,\n                    \"Gained Traits\": (\n                        <div>\n                            {joinElements(buff.vals.map(trait => trait.name), ', ')}\n                        </div>\n                    ),\n                }}/>\n\n                <h3>Related Functions</h3>\n                {buff.reverseFunctions.map((func, index) => {\n                    return (\n                        <p key={index}>\n                            <FuncDescriptor region={this.props.region} func={func}/>\n                        </p>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default BuffPage;\n","import React from \"react\";\nimport CraftEssence from \"../../Api/Data/CraftEssence\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\n\ninterface IProps {\n    craftEssence: CraftEssence;\n}\n\nclass CraftEssenceMainData extends React.Component<IProps> {\n    render() {\n        const craftEssence = this.props.craftEssence;\n\n        return (\n            <div>\n                <h1>\n                    {craftEssence.name}\n                </h1>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={craftEssence}/>,\n                    \"ID\": craftEssence.id,\n                    \"Collection\": craftEssence.collectionNo,\n                    \"Name\": craftEssence.name,\n                    \"Rarity\": craftEssence.rarity,\n                    \"Cost\": craftEssence.cost,\n                    \"Max Lv.\": craftEssence.lvMax,\n                    \"Base Hp\": craftEssence.hpBase,\n                    \"Base Atk\": craftEssence.atkBase,\n                    \"Max Hp\": craftEssence.hpMax,\n                    \"Max Atk\": craftEssence.atkMax,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssenceMainData;\n","import React from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport Region from \"../../Api/Data/Region\";\nimport BasicListEntity from \"../../Api/Data/BasicListEntity\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps extends RouteComponentProps {\n    region: Region;\n    id: number;\n    craftEssences: BasicListEntity[];\n}\n\nclass CraftEssencePicker extends React.Component<IProps> {\n    private changeCraftEssence(id: number) {\n        this.props.history.push(`/${this.props.region}/craft-essence/${id}`);\n    }\n\n    render() {\n        return (\n            <div>\n                Jump to:\n                <FormControl as={\"select\"} custom\n                             onChange={(ev: Event) => {\n                                 this.changeCraftEssence(parseInt(ev.target.value));\n                             }}\n                             value={this.props.id}>\n                    {this.props.craftEssences\n                        .slice()\n                        .reverse()\n                        .map((craftEssence, index) => {\n                            return (\n                                <option key={index} value={craftEssence.collectionNo}>\n                                    {craftEssence.name}\n                                </option>\n                            );\n                        })\n                    }\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(CraftEssencePicker);\n","import React from \"react\";\nimport {AssetMap} from \"../../Api/Data/AssetCollection\";\nimport CraftEssence from \"../../Api/Data/CraftEssence\";\n\nimport \"./CraftEssencePortrait.css\";\n\ninterface IProps {\n    craftEssence: CraftEssence;\n}\n\ninterface IState {\n    assetMap?: AssetMap;\n    assetKey?: string;\n}\n\nclass CraftEssencePortrait extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        const assetMap = (\n                props.craftEssence.extraAssets.charaGraph.ascension\n                ?? Object.values(props.craftEssence.extraAssets.charaGraph).shift()\n            ),\n            assetKey = assetMap === undefined ? undefined : Object.keys(assetMap).shift();\n\n        this.state = {assetMap, assetKey};\n    }\n\n    render() {\n        return (\n            <div>\n                <img alt={this.props.craftEssence.name}\n                     id={'craft-essence-portrait'}\n                     src={(\n                         this.state.assetMap && this.state.assetKey\n                             ? this.state.assetMap[this.state.assetKey]\n                             : undefined\n                     )}/>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssencePortrait;\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Region from \"../Api/Data/Region\";\n\ninterface IProps {\n    region: Region;\n    questId: number;\n    questPhase: number;\n}\n\nclass QuestDescriptor extends React.Component<IProps>{\n    render() {\n        const prefix = Math.floor(this.props.questId / 1000000);\n        let type = \"\";\n\n        switch (prefix) {\n            case 91:\n                type = 'Interlude';\n                break;\n            case 94:\n                type = 'Strengthening';\n                break;\n            default:\n                type = 'Main Quest';\n                break;\n        }\n\n        return (\n            <Link to={`/${this.props.region}/quest/${this.props.questId}/${this.props.questPhase}`}>\n                {type} Quest <FontAwesomeIcon icon={faShare} />\n            </Link>\n        );\n    }\n}\n\nexport default QuestDescriptor;\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Region from \"../Api/Data/Region\";\nimport Skill from \"../Api/Data/Skill\";\nimport BuffIcon from \"../Component/BuffIcon\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n    iconHeight?: number;\n}\n\nclass SkillDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/skill/${this.props.skill.id}`}>\n                <BuffIcon location={this.props.skill.icon} height={this.props.iconHeight}/>\n                {' '}\n                {this.props.skill.name}\n                {' '}\n                <FontAwesomeIcon icon={faShare} />\n            </Link>\n        );\n    }\n}\n\nexport default SkillDescriptor;\n","import React from \"react\";\nimport {Alert, Table} from \"react-bootstrap\";\nimport Region from \"../../Api/Data/Region\";\nimport Skill from \"../../Api/Data/Skill\";\nimport FuncDescriptor from \"../../Descriptor/FuncDescriptor\";\nimport QuestDescriptor from \"../../Descriptor/QuestDescriptor\";\nimport SkillDescriptor from \"../../Descriptor/SkillDescriptor\";\nimport {handleNewLine} from \"../../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n}\n\nclass CraftEssenceSkill extends React.Component<IProps, any> {\n    render() {\n        const skill = this.props.skill;\n        return (\n            <div>\n                <h3>\n                    <SkillDescriptor region={this.props.region} skill={skill} iconHeight={33}/>\n                </h3>\n\n                {skill.condQuestId && skill.condQuestPhase ? (\n                    <Alert variant={'primary'}>\n                        Available after <QuestDescriptor region={this.props.region}\n                                                         questId={skill.condQuestId}\n                                                         questPhase={skill.condQuestPhase}/>\n                    </Alert>\n                ) : null}\n\n                <p>{handleNewLine(skill.detail)}</p>\n\n                <Table responsive>\n                    <thead>\n                    <tr>\n                        <th>Effect</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {skill.functions.map((func, index) => {\n                        return (\n                            <tr key={index}>\n                                <td>\n                                    <FuncDescriptor region={this.props.region} func={func}/>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssenceSkill;\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport BasicListEntity from \"../Api/Data/BasicListEntity\";\nimport CraftEssence from \"../Api/Data/CraftEssence\";\nimport Region from \"../Api/Data/Region\";\nimport TraitMap from \"../Api/Data/TraitMap\";\nimport Loading from \"../Component/Loading\";\nimport CraftEssenceMainData from \"./CraftEssence/CraftEssenceMainData\";\nimport CraftEssencePicker from \"./CraftEssence/CraftEssencePicker\";\nimport CraftEssencePortrait from \"./CraftEssence/CraftEssencePortrait\";\nimport CraftEssenceSkill from \"./CraftEssence/CraftEssenceSkill\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    id: number;\n    craftEssences: BasicListEntity[];\n    craftEssence?: CraftEssence;\n}\n\nclass CraftEssencePage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            id: this.props.id,\n            craftEssences: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadServant();\n    }\n\n    async loadServant() {\n        let [craftEssences, craftEssence] = await Promise.all<BasicListEntity[], CraftEssence, TraitMap>([\n            Connection.craftEssenceList(this.props.region),\n            Connection.craftEssence(this.props.region, this.state.id),\n            Connection.traitMap(this.props.region)\n        ]);\n\n        this.setState({\n            loading: false,\n            craftEssences,\n            craftEssence\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.craftEssence)\n            return <Loading/>;\n\n        return (\n            <div>\n                <CraftEssencePicker region={this.props.region}\n                                    craftEssences={this.state.craftEssences}\n                                    id={this.state.craftEssence.collectionNo}/>\n                <hr/>\n\n                <Row>\n                    <Col xs={{span: 12, order: 2}} lg={{span: 6, order: 1}}>\n                        <CraftEssenceMainData craftEssence={this.state.craftEssence}/>\n                    </Col>\n                    <Col xs={{span: 12, order: 1}} lg={{span: 6, order: 2}}>\n                        <CraftEssencePortrait craftEssence={this.state.craftEssence}/>\n                    </Col>\n                </Row>\n\n                <br/>\n                <Row>\n                    {this.state.craftEssence.skills\n                        .filter(skill => skill.num === 1)\n                        .map((skill, index) => {\n                            return (\n                                <Col key={index} xs={12} lg={6}>\n                                    <CraftEssenceSkill region={this.props.region} skill={skill}/>\n                                </Col>\n                            );\n                        })}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssencePage;\n","import React from \"react\";\nimport EntityType from \"../Api/Data/EntityType\";\n\ninterface IProps {\n    type: EntityType;\n    rarity: number;\n    location: string;\n    height?: number;\n}\n\nclass FaceIcon extends React.Component<IProps> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location}\n                 style={this.props.height ? {height: this.props.height} : undefined}/>\n        );\n    }\n\n}\n\nexport default FaceIcon;\n","import React from \"react\";\n\ninterface IProps {\n    rarity: number;\n}\n\nconst fillChars = function (count: number, character: string): string {\n    return (new Array(count)).fill(null).map(v => character).join('');\n}\n\nclass RarityStars extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {\n                    fillChars(this.props.rarity, '★')\n                    + fillChars(5 - this.props.rarity, '☆')\n                }\n            </div>\n        );\n    }\n}\n\nexport default RarityStars;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport BasicListEntity from \"../Api/Data/BasicListEntity\";\nimport Region from \"../Api/Data/Region\";\nimport FaceIcon from \"../Component/FaceIcon\";\nimport Loading from \"../Component/Loading\";\nimport RarityStars from \"../Component/RarityStars\";\n\nimport \"./CraftEssencesPage.css\";\n\ninterface IProps {\n    region: Region;\n}\n\ninterface IState {\n    loading: boolean;\n    craftEssences: BasicListEntity[];\n}\n\nclass CraftEssencesPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            craftEssences: []\n        };\n    }\n\n    componentDidMount() {\n        Connection.craftEssenceList(this.props.region).then(list => {\n            this.setState({\n                loading: false,\n                craftEssences: list\n            });\n        });\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading/>;\n\n        return (\n            <div id={'craft-essences'}>\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th style={{textAlign: \"center\", width: '1px'}}>#</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Thumbnail</th>\n                        <th>Name</th>\n                        <th>Rarity</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.craftEssences\n                        .slice()\n                        .reverse()\n                        .map((craftEssence, index) => {\n                            const route = `/${this.props.region}/craft-essence/${craftEssence.collectionNo}`;\n\n                            return <tr key={index}>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        {craftEssence.collectionNo}\n                                    </Link>\n                                </td>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        <FaceIcon type={craftEssence.type}\n                                                  rarity={craftEssence.rarity}\n                                                  location={craftEssence.face}\n                                                  height={50}/>\n                                    </Link>\n                                </td>\n                                <td>\n                                    <Link to={route}>\n                                        {craftEssence.name}\n                                    </Link>\n                                </td>\n                                <td>\n                                    <RarityStars rarity={craftEssence.rarity}/>\n                                </td>\n                            </tr>\n                        })\n                    }\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssencesPage;\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport NoblePhantasm from \"../Api/Data/NoblePhantasm\";\nimport Region from \"../Api/Data/Region\";\n\ninterface IProps {\n    region: Region;\n    noblePhantasm: NoblePhantasm;\n}\n\nclass NoblePhantasmDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/noble-phantasm/${this.props.noblePhantasm.id}`}>\n                {this.props.noblePhantasm.name}\n                {' '}\n                <FontAwesomeIcon icon={faShare}/>\n            </Link>\n        );\n    }\n}\n\nexport default NoblePhantasmDescriptor;\n","import React from \"react\";\nimport Func from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport BuffDescriptor from \"../../Descriptor/BuffDescriptor\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\nimport TraitDescriptor from \"../../Descriptor/TraitDescriptor\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n}\n\nclass FuncMainData extends React.Component<IProps> {\n    render() {\n        const func = this.props.func;\n\n        return (\n            <DataTable data={{\n                \"Raw\": <RawDataViewer data={func}/>,\n                \"ID\": func.funcId,\n                \"Type\": func.funcType,\n                \"Target\": func.funcTargetType,\n                \"Affects Players/Enemies\": func.funcTargetTeam,\n                \"Popup Text\": func.funcPopupText,\n                \"Affects Traits\": (\n                    <div>\n                        {func.traitVals?.map((trait, index) => {\n                            return <TraitDescriptor key={index} region={this.props.region} trait={trait}/>;\n                        })}\n                    </div>\n                ),\n                \"Buffs\": (\n                    <div>\n                        {func.buffs.map((buff, index) => {\n                            return <BuffDescriptor key={index} region={this.props.region} buff={buff}/>;\n                        })}\n                    </div>\n                )\n            }}/>\n        );\n    }\n}\n\nexport default FuncMainData;\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport Func from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport Loading from \"../Component/Loading\";\nimport NoblePhantasmDescriptor from \"../Descriptor/NoblePhantasmDescriptor\";\nimport SkillDescriptor from \"../Descriptor/SkillDescriptor\";\nimport FuncMainData from \"./Func/FuncMainData\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    func?: Func;\n}\n\nclass FuncPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.loadFunc();\n    }\n\n    async loadFunc() {\n        const func = await Connection.func(this.props.region, this.props.id);\n\n        this.setState({\n            loading: false,\n            func: func,\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.func)\n            return <Loading/>;\n\n        const func = this.state.func;\n\n        return (\n            <div>\n                <h1>\n                    {func.funcPopupIcon ? (\n                        <span>\n                            <BuffIcon location={func.funcPopupIcon} height={48}/>\n                            &nbsp;\n                        </span>\n                    ) : null}\n                    Function: {this.props.id}\n                </h1>\n                <br/>\n\n                <FuncMainData region={this.props.region} func={func}/>\n\n                <Row>\n                    <Col xs={12} lg={6}>\n                        <h3>Related Skills</h3>\n                        {func.reverseSkills.map((skill, index) => {\n                            return (\n                                <p key={index}>\n                                    <SkillDescriptor region={this.props.region} skill={skill}/>\n                                </p>\n                            )\n                        })}\n                    </Col>\n                    <Col xs={12} lg={6}>\n                        <h3>Related Noble Phantasms</h3>\n                        {func.reverseTds.map((noblePhantasm, index) => {\n                            return (\n                                <p key={index}>\n                                    <NoblePhantasmDescriptor region={this.props.region} noblePhantasm={noblePhantasm}/>\n                                </p>\n                            )\n                        })}\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default FuncPage;\n","enum ClassName {\n    SABER = \"saber\",\n    ARCHER = \"archer\",\n    LANCER = \"lancer\",\n    RIDER = \"rider\",\n    CASTER = \"caster\",\n    ASSASSIN = \"assassin\",\n    BERSERKER = \"berserker\",\n    SHIELDER = \"shielder\",\n    RULER = \"ruler\",\n    ALTER_EGO = \"alterEgo\",\n    AVENGER = \"avenger\",\n    GRAND_CASTER = \"grandCaster\",\n    BEAST_II = \"beastII\",\n    BEAST_I = \"beastI\",\n    MOON_CANCER = \"moonCancer\",\n    BEAST_IIIR = \"beastIIIR\",\n    FOREIGNER = \"foreigner\",\n    BEAST_IIIL = \"beastIIIL\",\n    BEAST_UNKNOWN = \"beastUnknown\",\n    ALL = \"ALL\",\n}\n\nexport default ClassName;\n","import React from \"react\";\nimport ClassName from \"../Api/Data/ClassName\";\n\nconst classTypes = new Map<number, number>([\n    [1, 1],\n    [2, 1],\n    [3, 2],\n    [4, 3],\n    [5, 3],\n]);\nconst unknownClassType = 3;\nconst classIds = new Map<ClassName, number>([\n    [ClassName.SABER, 1],\n    [ClassName.ARCHER, 2],\n    [ClassName.LANCER, 3],\n    [ClassName.RIDER, 4],\n    [ClassName.CASTER, 5],\n    [ClassName.ASSASSIN, 6],\n    [ClassName.BERSERKER, 7],\n    [ClassName.SHIELDER, 8],\n    [ClassName.RULER, 9],\n    [ClassName.ALTER_EGO, 10],\n    [ClassName.AVENGER, 11],\n    [ClassName.MOON_CANCER, 23],\n    [ClassName.FOREIGNER, 25],\n    [ClassName.BEAST_I, 20],\n    [ClassName.BEAST_II, 20],\n    [ClassName.BEAST_IIIL, 20],\n    [ClassName.BEAST_IIIR, 20],\n    [ClassName.BEAST_UNKNOWN, 20],\n]);\nconst unknownClassId = 12;\n\ninterface IProps {\n    className: ClassName;\n    rarity?: number;\n    height?: number;\n}\n\nclass ClassIcon extends React.Component<IProps> {\n    render() {\n        return (\n            <img alt={''} src={this.location()}\n                 style={this.props.height ? {height: this.props.height} : undefined}/>\n        );\n    }\n\n    private location(): string {\n        let classId = classIds.has(this.props.className) ? classIds.get(this.props.className) : unknownClassId,\n            rarity = this.props.rarity ?? 5,\n            type = classTypes.has(rarity) ? classTypes.get(rarity) : unknownClassType;\n\n        return `https://assets.atlasacademy.io/GameData/NA/ClassIcons/class${type}_${classId}.png`;\n    }\n}\n\nexport default ClassIcon;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Region from \"../Api/Data/Region\";\nimport Servant from \"../Api/Data/Servant\";\nimport ClassIcon from \"../Component/ClassIcon\";\n\ninterface IProps {\n    region: Region;\n    servant: Servant;\n    iconHeight?: number;\n}\n\nclass ServantDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/servant/${this.props.servant.id}`}>\n                <ClassIcon className={this.props.servant.className}\n                           rarity={this.props.servant.rarity}\n                           height={this.props.iconHeight}/>\n                {' '}\n                {this.props.servant.name}\n            </Link>\n        );\n    }\n}\n\nexport default ServantDescriptor;\n","import React from \"react\";\nimport {DataVal} from \"../../Api/Data/Func\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\n\ninterface IProps {\n    dataVal: DataVal;\n}\n\nclass DataValMainData extends React.Component<IProps> {\n    render() {\n        return (\n            <DataTable data={{\n                \"Raw\": <RawDataViewer data={this.props.dataVal}/>,\n                ...this.props.dataVal\n            }}/>\n        );\n    }\n}\n\nexport default DataValMainData;\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport NoblePhantasm from \"../../Api/Data/NoblePhantasm\";\nimport Region from \"../../Api/Data/Region\";\nimport {getTargetVersionValues} from \"../../Helper/FuncHelper\";\nimport DataValMainData from \"../Func/DataValMainData\";\nimport FuncMainData from \"../Func/FuncMainData\";\n\ninterface IProps {\n    region: Region;\n    noblePhantasm: NoblePhantasm;\n    level: number;\n    overcharge: number;\n}\n\nclass NoblePhantasmVersion extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {this.props.noblePhantasm.functions.map((func, index) => {\n                    const dataVal = getTargetVersionValues(func, this.props.level, this.props.overcharge);\n\n                    return (\n                        <div key={index}>\n                            <h3>Effect #{index + 1}</h3>\n\n                            <Row>\n                                <Col xs={12} md={6}>\n                                    <h5>Function</h5>\n                                    <FuncMainData region={this.props.region} func={func}/>\n                                </Col>\n                                <Col xs={12} md={6}>\n                                    <h5>Values</h5>\n                                    <DataValMainData dataVal={dataVal ?? {}}/>\n                                </Col>\n                            </Row>\n\n                            <hr/>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default NoblePhantasmVersion;\n","import React from \"react\";\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport EntityType from \"../Api/Data/EntityType\";\nimport NoblePhantasm from \"../Api/Data/NoblePhantasm\";\nimport Region from \"../Api/Data/Region\";\nimport DataTable from \"../Component/DataTable\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\nimport ServantDescriptor from \"../Descriptor/ServantDescriptor\";\nimport NoblePhantasmVersion from \"./NoblePhantasm/NoblePhantasmVersion\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    noblePhantasm?: NoblePhantasm;\n    level: number;\n    overcharge: number;\n}\n\nclass NoblePhantasmPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            level: 1,\n            overcharge: 1,\n        };\n    }\n\n    componentDidMount() {\n        this.loadNp();\n    }\n\n    async loadNp() {\n        const noblePhantasm = await Connection.noblePhantasm(this.props.region, this.props.id);\n\n        this.setState({\n            loading: false,\n            noblePhantasm: noblePhantasm,\n        });\n    }\n\n    private changeLevel(level: number) {\n        this.setState({\n            level: level\n        });\n    }\n\n    private changeOvercharge(level: number) {\n        this.setState({\n            overcharge: level\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.noblePhantasm)\n            return <Loading/>;\n\n        const noblePhantasm = this.state.noblePhantasm;\n\n        return (\n            <div>\n                <h1>{noblePhantasm.name}</h1>\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={noblePhantasm}/>,\n                    \"ID\": noblePhantasm.id,\n                    \"Name\": noblePhantasm.name,\n                    \"Type\": noblePhantasm.type,\n                    \"Rank\": noblePhantasm.rank,\n                    \"Detail\": noblePhantasm.detail,\n                    \"Card Type\": noblePhantasm.card,\n                    \"Owner\": (\n                        <div>\n                            {noblePhantasm.reverseServants\n                                .filter(servant => {\n                                    return servant.type === EntityType.NORMAL\n                                        || servant.type === EntityType.HEROINE\n                                })\n                                .map((servant, index) => {\n                                    return (\n                                        <div>\n                                            <ServantDescriptor region={this.props.region}\n                                                               servant={servant}\n                                                               iconHeight={24}/>\n                                        </div>\n                                    );\n                                })\n                            }\n                        </div>\n                    )\n                }}/>\n\n                <br/>\n                <Row>\n                    <Col>\n                        <Form inline style={{justifyContent: 'flex-end'}}>\n                            <Form.Control as={'select'} value={this.state.level}\n                                          onChange={(ev: Event) => this.changeLevel(parseInt(ev.target.value))}>\n                                {[1, 2, 3, 4, 5].map(level => (\n                                    <option key={level} value={level}>NP LEVEL {level}</option>\n                                ))}\n                            </Form.Control>\n                        </Form>\n                    </Col>\n                    <Col>\n                        <Form inline>\n                            <Form.Control as={'select'} value={this.state.overcharge}\n                                          onChange={(ev: Event) => this.changeOvercharge(parseInt(ev.target.value))}>\n                                {[1, 2, 3, 4, 5].map(level => (\n                                    <option key={level} value={level}>OVERCHARGE {level}</option>\n                                ))}\n                            </Form.Control>\n                        </Form>\n                    </Col>\n                </Row>\n\n                <br/>\n                <NoblePhantasmVersion region={this.props.region}\n                                      noblePhantasm={noblePhantasm}\n                                      level={this.state.level}\n                                      overcharge={this.state.overcharge}/>\n            </div>\n        );\n    }\n}\n\nexport default NoblePhantasmPage;\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Quest from \"../Api/Data/Quest\";\nimport Region from \"../Api/Data/Region\";\nimport DataTable from \"../Component/DataTable\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n    phase: number;\n}\n\ninterface IState {\n    loading: boolean;\n    quest?: Quest;\n}\n\nclass QuestPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.loadQuest();\n    }\n\n    async loadQuest() {\n        const quest = await Connection.quest(this.props.region, this.props.id, this.props.phase);\n\n        this.setState({\n            loading: false,\n            quest: quest,\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.quest)\n            return <Loading/>;\n\n        const quest = this.state.quest;\n\n        return (\n            <div>\n                <h1>{quest.name}</h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={quest}/>,\n                    \"ID\": quest.id,\n                    \"Phase\": quest.phase,\n                    \"Name\": quest.name,\n                    \"Type\": quest.type,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default QuestPage;\n","import React from \"react\";\nimport Servant from \"../../Api/Data/Servant\";\nimport ClassIcon from \"../../Component/ClassIcon\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\n\ninterface IProps {\n    servant: Servant;\n}\n\nclass ServantMainData extends React.Component<IProps> {\n    render() {\n        const servant = this.props.servant;\n\n        return (\n            <div>\n                <h1>\n                    <ClassIcon className={servant.className} rarity={servant.rarity}/>\n                    &nbsp;\n                    {servant.name}\n                </h1>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={servant}/>,\n                    \"ID\": servant.id,\n                    \"Collection\": servant.collectionNo,\n                    \"Name\": servant.name,\n                    \"Class\": servant.className,\n                    \"Rarity\": servant.rarity,\n                    \"Cost\": servant.cost,\n                    \"Gender\": servant.gender,\n                    \"Attribute\": servant.attribute,\n                    \"Max Lv.\": servant.lvMax,\n                    \"Base Hp\": servant.hpBase,\n                    \"Base Atk\": servant.atkBase,\n                    \"Max Hp\": servant.hpMax,\n                    \"Max Atk\": servant.atkMax,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantMainData;\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Servant from \"../../Api/Data/Servant\";\nimport BuffIcon from \"../../Component/BuffIcon\";\nimport DataTable from \"../../Component/DataTable\";\nimport {asPercent} from \"../../Helper/OutputHelper\";\n\nconst buffIconPath = 'https://assets.atlasacademy.io/GameData/JP/BuffIcons',\n    deathChanceIcon = `${buffIconPath}/bufficon_337.png`,\n    hitCountIcon = `${buffIconPath}/bufficon_349.png`,\n    npGainIcon = `${buffIconPath}/bufficon_303.png`,\n    starGenIcon = `${buffIconPath}/bufficon_310.png`,\n    showHits = function (hits: number[] | undefined): JSX.Element | string {\n        if (hits === undefined)\n            return '';\n\n        return <span>\n            {hits.map((hit, index) => {\n                return (index > 0 ? ', ' : '') + asPercent(hit, 0);\n            })}\n            &nbsp;-&nbsp;\n            {hits.length} Hits\n        </span>\n    };\n\ninterface IProps {\n    servant: Servant;\n}\n\nclass ServantMiscData extends React.Component<IProps> {\n    private hitsColumn() {\n        return (\n            <Col xs={12} md={12} lg={4}>\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={hitCountIcon}/>\n                            &nbsp;\n                            Hit Count\n                        </div>\n                    )}\n                    data={{\n                        \"Buster\": showHits(this.props.servant.hitsDistribution.buster),\n                        \"Arts\": showHits(this.props.servant.hitsDistribution.arts),\n                        \"Quick\": showHits(this.props.servant.hitsDistribution.quick),\n                        \"Extra\": showHits(this.props.servant.hitsDistribution.extra),\n                    }}/>\n            </Col>\n        );\n    }\n\n    private miscColumn() {\n        return (\n            <Col xs={12} md={12} lg={4}>\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={starGenIcon}/>&nbsp;Crit Stars\n                        </div>\n                    )}\n                    data={{\n                        \"Star Absorb\": this.props.servant.starAbsorb,\n                        \"Star Gen\": asPercent(this.props.servant.starGen, 1),\n                    }}/>\n\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={deathChanceIcon}/>&nbsp;Instant Death\n                        </div>\n                    )}\n                    data={{\n                        \"Death Chance\": asPercent(this.props.servant.instantDeathChance, 1),\n                    }}/>\n            </Col>\n        );\n    }\n\n    private npGainColumn() {\n        return (\n            <Col xs={12} md={12} lg={4}>\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={npGainIcon}/>&nbsp;NP Gain\n                        </div>\n                    )}\n                    data={{\n                        \"Buster\": asPercent(this.props.servant.npGain.buster, 2),\n                        \"Arts\": asPercent(this.props.servant.npGain.arts, 2),\n                        \"Quick\": asPercent(this.props.servant.npGain.quick, 2),\n                        \"Extra\": asPercent(this.props.servant.npGain.extra, 2),\n                        \"Defense\": asPercent(this.props.servant.npGain.defence, 2),\n                    }}/>\n            </Col>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    {this.hitsColumn()}\n                    {this.npGainColumn()}\n                    {this.miscColumn()}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default ServantMiscData;\n","import React from \"react\";\nimport {Alert, Table} from \"react-bootstrap\";\nimport {default as ServantNoblePhantasmData} from \"../../Api/Data/NoblePhantasm\";\nimport Region from \"../../Api/Data/Region\";\nimport FuncDescriptor from \"../../Descriptor/FuncDescriptor\";\nimport NoblePhantasmDescriptor from \"../../Descriptor/NoblePhantasmDescriptor\";\nimport QuestDescriptor from \"../../Descriptor/QuestDescriptor\";\nimport {describeMutators} from \"../../Helper/FuncHelper\";\nimport {handleNewLine} from \"../../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    noblePhantasm: ServantNoblePhantasmData;\n}\n\nclass ServantNoblePhantasm extends React.Component<IProps> {\n    render() {\n        const np = this.props.noblePhantasm;\n\n        return (\n            <div>\n                <h3>\n                    <NoblePhantasmDescriptor region={this.props.region} noblePhantasm={np}/>\n                </h3>\n\n                {np.condQuestId && np.condQuestPhase ? (\n                    <Alert variant={'primary'}>\n                        Available after <QuestDescriptor region={this.props.region}\n                                                         questId={np.condQuestId}\n                                                         questPhase={np.condQuestPhase}/>\n                    </Alert>\n                ) : null}\n\n                <p>{handleNewLine(np.detail)}</p>\n\n                <Table responsive>\n                    <thead>\n                    <tr>\n                        <th>Effect</th>\n                        <th>1</th>\n                        <th>2</th>\n                        <th>3</th>\n                        <th>4</th>\n                        <th>5</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {np.functions.map((func, index) => {\n                        let mutatingDescriptions = describeMutators(this.props.region, func);\n\n                        for (let i = 0; i < 5; i++) {\n                            if (!mutatingDescriptions[i])\n                                mutatingDescriptions.push('-');\n                        }\n\n                        return (\n                            <tr key={index}>\n                                <td>\n                                    <FuncDescriptor region={this.props.region} func={func}/>\n                                </td>\n                                {mutatingDescriptions.map((description, index) => {\n                                    return (\n                                        <td key={index}>{description}</td>\n                                    );\n                                })}\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default ServantNoblePhantasm;\n","import React from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport Region from \"../../Api/Data/Region\";\nimport BasicListEntity from \"../../Api/Data/BasicListEntity\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps extends RouteComponentProps {\n    region: Region;\n    id: number;\n    servants: BasicListEntity[];\n}\n\nclass ServantPicker extends React.Component<IProps> {\n    private changeServant(id: number) {\n        this.props.history.push(`/${this.props.region}/servant/${id}`);\n    }\n\n    render() {\n        return (\n            <div>\n                Jump to:\n                <FormControl as={\"select\"} custom\n                             onChange={(ev: Event) => {\n                                 this.changeServant(parseInt(ev.target.value));\n                             }}\n                             value={this.props.id}>\n                    {this.props.servants\n                        .slice()\n                        .reverse()\n                        .map((servant, index) => {\n                            return (\n                                <option key={index} value={servant.collectionNo}>\n                                    {servant.name}\n                                </option>\n                            );\n                        })\n                    }\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ServantPicker);\n","import React from \"react\";\nimport {AssetMap} from \"../../Api/Data/AssetCollection\";\nimport Servant from \"../../Api/Data/Servant\";\n\nimport \"./ServantPortrait.css\";\n\ninterface IProps {\n    servant: Servant;\n}\n\ninterface IState {\n    assetMap?: AssetMap;\n    assetKey?: string;\n}\n\nclass ServantPortrait extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        const assetMap = (\n                props.servant.extraAssets.charaGraph.ascension\n                ?? Object.values(props.servant.extraAssets.charaGraph).shift()\n            ),\n            assetKey = assetMap === undefined ? undefined : Object.keys(assetMap).shift();\n\n        this.state = {assetMap, assetKey};\n    }\n\n    render() {\n        return (\n            <div>\n                <img alt={this.props.servant.name}\n                     id={'servant-portrait'}\n                     src={(\n                         this.state.assetMap && this.state.assetKey\n                             ? this.state.assetMap[this.state.assetKey]\n                             : undefined\n                     )}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantPortrait;\n","import React from \"react\";\nimport {Alert, Table} from \"react-bootstrap\";\nimport Region from \"../../Api/Data/Region\";\nimport Skill from \"../../Api/Data/Skill\";\nimport FuncDescriptor from \"../../Descriptor/FuncDescriptor\";\nimport QuestDescriptor from \"../../Descriptor/QuestDescriptor\";\nimport SkillDescriptor from \"../../Descriptor/SkillDescriptor\";\nimport {describeMutators} from \"../../Helper/FuncHelper\";\nimport {handleNewLine} from \"../../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n}\n\nclass ServantSkill extends React.Component<IProps, any> {\n    render() {\n        const skill = this.props.skill;\n        return (\n            <div>\n                <h3>\n                    <SkillDescriptor region={this.props.region} skill={skill} iconHeight={33}/>\n                </h3>\n\n                {skill.condQuestId && skill.condQuestPhase ? (\n                    <Alert variant={'primary'}>\n                        Available after <QuestDescriptor region={this.props.region}\n                                                         questId={skill.condQuestId}\n                                                         questPhase={skill.condQuestPhase}/>\n                    </Alert>\n                ) : null}\n\n                <p>{handleNewLine(skill.detail)}</p>\n\n                <Table responsive>\n                    <thead>\n                    <tr>\n                        <th>Effect</th>\n                        <th>1</th>\n                        <th>2</th>\n                        <th>3</th>\n                        <th>4</th>\n                        <th>5</th>\n                        <th>6</th>\n                        <th>7</th>\n                        <th>8</th>\n                        <th>9</th>\n                        <th>10</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>Cooldown</td>\n                        {skill.coolDown.map((cooldown, index) => {\n                            return <td key={index}>{cooldown}</td>;\n                        })}\n                    </tr>\n                    {skill.functions.map((func, index) => {\n                        let mutatingDescriptions = describeMutators(this.props.region, func);\n\n                        for (let i = 0; i < 10; i++) {\n                            if (!mutatingDescriptions[i])\n                                mutatingDescriptions.push('-');\n                        }\n\n                        return (\n                            <tr key={index}>\n                                <td>\n                                    <FuncDescriptor region={this.props.region} func={func}/>\n                                </td>\n                                {mutatingDescriptions.map((description, index) => {\n                                    return (\n                                        <td key={index}>{description}</td>\n                                    );\n                                })}\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default ServantSkill;\n","import React from \"react\";\nimport Region from \"../../Api/Data/Region\";\nimport Trait from \"../../Api/Data/Trait\";\nimport TraitDescriptor from \"../../Descriptor/TraitDescriptor\";\nimport {joinElements} from \"../../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    traits: Trait[];\n}\n\nclass ServantTraits extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {joinElements(\n                    this.props.traits.map(trait => <TraitDescriptor region={this.props.region} trait={trait}/>),\n                    ', '\n                ).map(\n                    (element, index) => <span key={index}>{element}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ServantTraits;\n","import React from \"react\";\nimport {Col, Row, Tab, Tabs} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport BasicListEntity from \"../Api/Data/BasicListEntity\";\nimport Region from \"../Api/Data/Region\";\nimport Servant from \"../Api/Data/Servant\";\nimport TraitMap from \"../Api/Data/TraitMap\";\nimport Loading from \"../Component/Loading\";\nimport ServantMainData from \"./Servant/ServantMainData\";\nimport ServantMiscData from \"./Servant/ServantMiscData\";\nimport ServantNoblePhantasm from \"./Servant/ServantNoblePhantasm\";\nimport ServantPicker from \"./Servant/ServantPicker\";\nimport ServantPortrait from \"./Servant/ServantPortrait\";\nimport ServantSkill from \"./Servant/ServantSkill\";\nimport ServantTraits from \"./Servant/ServantTraits\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    id: number;\n    servants: BasicListEntity[];\n    servant?: Servant;\n}\n\nclass ServantPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            id: this.props.id,\n            servants: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadServant();\n    }\n\n    async loadServant() {\n        let [servants, servant] = await Promise.all<BasicListEntity[], Servant, TraitMap>([\n            Connection.servantList(this.props.region),\n            Connection.servant(this.props.region, this.state.id),\n            Connection.traitMap(this.props.region)\n        ]);\n\n        this.setState({\n            loading: false,\n            servants,\n            servant\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.servant)\n            return <Loading/>;\n\n        return (\n            <div id={'servant'}>\n                <ServantPicker region={this.props.region}\n                               servants={this.state.servants}\n                               id={this.state.servant.collectionNo}/>\n                <hr/>\n\n                <Row>\n                    <Col xs={{span: 12, order: 2}} lg={{span: 6, order: 1}}>\n                        <ServantMainData servant={this.state.servant}/>\n                    </Col>\n                    <Col xs={{span: 12, order: 1}} lg={{span: 6, order: 2}}>\n                        <ServantPortrait servant={this.state.servant}/>\n                    </Col>\n                </Row>\n\n                <Tabs id={'servant-tabs'} defaultActiveKey={'skill-1'} transition={false}>\n                    <Tab eventKey={'skill-1'} title={'Skill 1'}>\n                        <br/>\n                        {this.state.servant.skills\n                            .filter(skill => skill.num === 1)\n                            .map((skill, index) => {\n                                return <ServantSkill region={this.props.region} key={index} skill={skill}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'skill-2'} title={'Skill 2'}>\n                        <br/>\n                        {this.state.servant.skills\n                            .filter(skill => skill.num === 2)\n                            .map((skill, index) => {\n                                return <ServantSkill region={this.props.region} key={index} skill={skill}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'skill-3'} title={'Skill 3'}>\n                        <br/>\n                        {this.state.servant.skills\n                            .filter(skill => skill.num === 3)\n                            .map((skill, index) => {\n                                return <ServantSkill region={this.props.region} key={index} skill={skill}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'nps'} title={'Noble Phantasms'}>\n                        <br/>\n                        {this.state.servant.noblePhantasms\n                            .filter(noblePhantasm => noblePhantasm.functions.length > 0)\n                            .map((noblePhantasm, index) => {\n                                return <ServantNoblePhantasm region={this.props.region} key={index}\n                                                             noblePhantasm={noblePhantasm}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'traits'} title={'Traits'}>\n                        <br/>\n                        <ServantTraits region={this.props.region} traits={this.state.servant.traits}/>\n                    </Tab>\n                    <Tab eventKey={'misc'} title={'Misc'}>\n                        <br/>\n                        <ServantMiscData servant={this.state.servant}/>\n                    </Tab>\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default ServantPage;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport Region from \"../Api/Data/Region\";\nimport BasicListEntity from \"../Api/Data/BasicListEntity\";\nimport ClassIcon from \"../Component/ClassIcon\";\nimport Loading from \"../Component/Loading\";\nimport RarityStars from \"../Component/RarityStars\";\nimport FaceIcon from \"../Component/FaceIcon\";\n\nimport './ServantsPage.css';\n\ninterface IProps {\n    region: Region,\n}\n\ninterface IState {\n    loading: boolean;\n    servants: BasicListEntity[];\n}\n\nclass ServantsPage extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            servants: [],\n        };\n    }\n\n    componentDidMount() {\n        Connection.servantList(this.props.region).then(servantList => {\n            this.setState({\n                loading: false,\n                servants: servantList\n            });\n        });\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading/>;\n\n        return (\n            <div id=\"servants\">\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th style={{textAlign: \"center\", width: '1px'}}>#</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Class</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Thumbnail</th>\n                        <th>Name</th>\n                        <th>Rarity</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.servants\n                        .slice()\n                        .reverse()\n                        .map((servant, index) => {\n                            const route = `/${this.props.region}/servant/${servant.collectionNo}`;\n\n                            return <tr key={index}>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        {servant.collectionNo}\n                                    </Link>\n                                </td>\n                                <td align={\"center\"}>\n                                    <ClassIcon className={servant.className} rarity={servant.rarity} height={50}/>\n                                </td>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        <FaceIcon type={servant.type}\n                                                  rarity={servant.rarity}\n                                                  location={servant.face}\n                                                  height={50}/>\n                                    </Link>\n                                </td>\n                                <td>\n                                    <Link to={route}>\n                                        {servant.name}\n                                    </Link>\n                                </td>\n                                <td>\n                                    <RarityStars rarity={servant.rarity}/>\n                                </td>\n                            </tr>\n                        })\n                    }\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n\n}\n\nexport default ServantsPage;\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport CraftEssence from \"../Api/Data/CraftEssence\";\nimport Region from \"../Api/Data/Region\";\n\ninterface IProps {\n    region: Region;\n    craftEssence: CraftEssence;\n}\n\nclass CraftEssenceDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/craft-essence/${this.props.craftEssence.id}`}>\n                {this.props.craftEssence.name}\n                {' '}\n                <FontAwesomeIcon icon={faShare} />\n            </Link>\n        );\n    }\n}\n\nexport default CraftEssenceDescriptor;\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Region from \"../../Api/Data/Region\";\nimport Skill from \"../../Api/Data/Skill\";\nimport {getTargetVersionValues} from \"../../Helper/FuncHelper\";\nimport DataValMainData from \"../Func/DataValMainData\";\nimport FuncMainData from \"../Func/FuncMainData\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n    level: number;\n}\n\nclass SkillVersion extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {this.props.skill.functions.map((func, index) => {\n                    const dataVal = getTargetVersionValues(func, this.props.level);\n\n                    return (\n                        <div key={index}>\n                            <h3>Effect #{index + 1}</h3>\n\n                            <Row>\n                                <Col xs={12} md={6}>\n                                    <h5>Function</h5>\n                                    <FuncMainData region={this.props.region} func={func}/>\n                                </Col>\n                                <Col xs={12} md={6}>\n                                    <h5>Values</h5>\n                                    <DataValMainData dataVal={dataVal ?? {}}/>\n                                </Col>\n                            </Row>\n\n                            <hr/>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default SkillVersion;\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport CraftEssence from \"../Api/Data/CraftEssence\";\nimport EntityType from \"../Api/Data/EntityType\";\nimport Region from \"../Api/Data/Region\";\nimport Servant from \"../Api/Data/Servant\";\nimport Skill from \"../Api/Data/Skill\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport DataTable from \"../Component/DataTable\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\nimport CraftEssenceDescriptor from \"../Descriptor/CraftEssenceDescriptor\";\nimport ServantDescriptor from \"../Descriptor/ServantDescriptor\";\nimport SkillVersion from \"./Skill/SkillVersion\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    skill?: Skill;\n    levels: number;\n    level: number;\n}\n\nclass SkillPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            levels: 1,\n            level: 1\n        };\n    }\n\n    componentDidMount() {\n        this.loadSkill();\n    }\n\n    async loadSkill() {\n        const skill = await Connection.skill(this.props.region, this.props.id);\n\n        this.setState({\n            loading: false,\n            skill: skill,\n            levels: skill.functions[0].svals?.length ?? 1,\n        });\n    }\n\n    private changeLevel(level: number) {\n        this.setState({\n            level: level\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.skill)\n            return <Loading/>;\n\n        const skill = this.state.skill;\n\n        return (\n            <div>\n                <h1>\n                    <BuffIcon location={skill.icon} height={48}/>\n                    &nbsp;\n                    {skill.name}\n                </h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={skill}/>,\n                    \"ID\": skill.id,\n                    \"Name\": skill.name,\n                    \"Detail\": skill.detail,\n                    \"Owner\": (\n                        <div>\n                            {skill.reverseServants\n                                .filter(entity => {\n                                    return entity.type === EntityType.NORMAL\n                                        || entity.type === EntityType.HEROINE\n                                        || entity.type === EntityType.SERVANT_EQUIP;\n                                })\n                                .map((entity, index) => {\n                                    if (entity.type === EntityType.SERVANT_EQUIP) {\n                                        return (\n                                            <div key={index}>\n                                                <CraftEssenceDescriptor region={this.props.region}\n                                                                        craftEssence={entity as CraftEssence}/>\n                                            </div>\n                                        );\n                                    } else {\n                                        return (\n                                            <div key={index}>\n                                                <ServantDescriptor region={this.props.region}\n                                                                   servant={entity as Servant}\n                                                                   iconHeight={24}/>\n                                            </div>\n                                        );\n                                    }\n                                })\n                            }\n                        </div>\n                    )\n                }}/>\n\n                <br/>\n                <Form inline style={{justifyContent: 'center'}}>\n                    <Form.Control as={'select'} value={this.state.level}\n                                  onChange={(ev: Event) => this.changeLevel(parseInt(ev.target.value))}>\n                        {Array.from(Array(this.state.levels).keys()).map(i => i + 1).map(level => (\n                            <option key={level} value={level}>LEVEL {level}</option>\n                        ))}\n                    </Form.Control>\n                </Form>\n\n                <br/>\n                <SkillVersion region={this.props.region}\n                              skill={skill}\n                              level={this.state.level}/>\n            </div>\n        );\n    }\n}\n\nexport default SkillPage;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport {Container} from \"react-bootstrap\";\nimport {HashRouter as Router, Route, Switch,} from \"react-router-dom\";\nimport Navigation from \"./Component/Navigation\";\nimport BuffPage from \"./Page/BuffPage\";\nimport CraftEssencePage from \"./Page/CraftEssencePage\";\nimport CraftEssencesPage from \"./Page/CraftEssencesPage\";\nimport FuncPage from './Page/FuncPage';\nimport NoblePhantasmPage from \"./Page/NoblePhantasmPage\";\nimport QuestPage from \"./Page/QuestPage\";\nimport ServantPage from \"./Page/ServantPage\";\nimport ServantsPage from \"./Page/ServantsPage\";\nimport SkillPage from \"./Page/SkillPage\";\nimport Manager from \"./Setting/Manager\";\nimport {LanguageOption} from \"./Setting/Option\";\n\ninterface IState {\n    language: LanguageOption,\n}\n\nclass App extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            language: Manager.language(),\n        };\n\n        Manager.onUpdate(() => this.updateSettings());\n    }\n\n    private updateSettings() {\n        this.setState({\n            language: Manager.language(),\n        });\n    }\n\n    render() {\n        return (\n            <Router>\n                <Navigation/>\n                <br/>\n\n                <Container key={`${this.state.language}`}>\n                    <Switch>\n                        <Route path=\"/:region(JP|NA)/buff/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <BuffPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route path=\"/:region(JP|NA)/craft-essence/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <CraftEssencePage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route path=\"/:region(JP|NA)/func/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <FuncPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route path=\"/:region(JP|NA)/noble-phantasm/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <NoblePhantasmPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route path=\"/:region(JP|NA)/quest/:id([0-9]+)/:phase([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                phase = props.match.params.phase,\n                                key = `${region}-${id}-${phase}`;\n                            return <QuestPage key={key} region={region} id={id} phase={phase}/>;\n                        }}/>\n                        <Route path=\"/:region(JP|NA)/servant/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <ServantPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route path=\"/:region(JP|NA)/skill/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <SkillPage key={key} region={region} id={id}/>\n                        }}/>\n                        <Route path=\"/:region(JP|NA)/craft-essences\" render={props => {\n                            const region = props.match.params.region;\n                            return <CraftEssencesPage key={region} region={region}/>;\n                        }}/>\n                        <Route path=\"/:region(JP|NA)/servants\" render={props => {\n                            const region = props.match.params.region;\n                            return <ServantsPage key={region} region={region}/>;\n                        }}/>\n                        {/*<Route exact path=\"/\" component={ServantsPage}/>*/}\n                    </Switch>\n                </Container>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}