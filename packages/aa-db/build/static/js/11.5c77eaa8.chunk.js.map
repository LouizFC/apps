{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Descriptor/RarityDescriptor.tsx","Component/FaceIcon.tsx","Page/CraftEssencesPage.tsx","Api/Data/Region.tsx","Api/ResultCache.tsx","Api/Connection.tsx"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError","assetMap","Map","RarityDescriptor","has","this","props","rarity","alt","src","get","style","height","React","Component","FaceIcon","location","undefined","CraftEssencesPage","state","loading","craftEssences","activeRarityFilters","Connection","craftEssenceList","region","then","list","setState","e","error","indexOf","filter","activeRarity","reverse","entity","id","className","map","active","key","opacity","onClick","ev","toggleRarityFilter","striped","bordered","hover","textAlign","width","craftEssence","index","route","collectionNo","align","to","type","face","Region","ResultCache","cache","pending","pendingCatches","fetcher","duration","value","Promise","resolve","callbacks","reject","push","set","forEach","callback","delete","window","setTimeout","catch","host","fetch","endpoint","a","axios","response","data","buff","func","mysticCode","mysticCodeList","noblePhantasm","quest","servant","servantList","skill","traitMap","language","Manager","query","LanguageOption","ENGLISH","NA","getCacheableCraftEssenceList","JP","DEFAULT","jp","na","names","getCacheableMysticCodeList","phase","getCacheableServantList"],"mappings":"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","file":"static/js/11.5c77eaa8.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\n\nconst assetMap = new Map<number, string>([\n    [1, './assets/star1.png'],\n    [2, './assets/star2.png'],\n    [3, './assets/star3.png'],\n    [4, './assets/star4.png'],\n    [5, './assets/star5.png'],\n]);\n\ninterface IProps {\n    rarity: number;\n    height?: number;\n}\n\nclass RarityDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <span>\n                {assetMap.has(this.props.rarity) ? (\n                    <img alt={`${this.props.rarity} star(s)`}\n                         src={assetMap.get(this.props.rarity)}\n                         style={{height: this.props.height ?? 18}}/>\n                ) : null}\n            </span>\n        );\n    }\n}\n\nexport default RarityDescriptor;\n","import React from \"react\";\nimport EntityType from \"../Api/Data/EntityType\";\n\ninterface IProps {\n    type?: EntityType;\n    rarity?: number;\n    location: string;\n    height?: number;\n}\n\nclass FaceIcon extends React.Component<IProps> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location}\n                 style={this.props.height ? {height: this.props.height} : undefined}/>\n        );\n    }\n\n}\n\nexport default FaceIcon;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport BasicListEntity from \"../Api/Data/BasicListEntity\";\nimport Region from \"../Api/Data/Region\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport FaceIcon from \"../Component/FaceIcon\";\nimport Loading from \"../Component/Loading\";\nimport RarityDescriptor from \"../Descriptor/RarityDescriptor\";\n\nimport \"./CraftEssencesPage.css\";\n\ninterface Event extends React.MouseEvent<HTMLInputElement> {\n\n}\n\ninterface IProps {\n    region: Region;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    craftEssences: BasicListEntity[];\n    activeRarityFilters: number[];\n}\n\nclass CraftEssencesPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            craftEssences: [],\n            activeRarityFilters: [1, 2, 3, 4, 5],\n        };\n    }\n\n    componentDidMount() {\n        try {\n            Connection.craftEssenceList(this.props.region).then(list => {\n                this.setState({\n                    loading: false,\n                    craftEssences: list\n                });\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    private toggleRarityFilter(rarity: number): void {\n        const exists = this.state.activeRarityFilters.indexOf(rarity) !== -1;\n\n        if (exists) {\n            this.setState({\n                activeRarityFilters: this.state.activeRarityFilters.filter(activeRarity => activeRarity !== rarity)\n            });\n        } else {\n            this.setState({\n                activeRarityFilters: [\n                    ...this.state.activeRarityFilters,\n                    rarity\n                ]\n            });\n        }\n    }\n\n    private craftEssences(): BasicListEntity[] {\n        let list = this.state.craftEssences.slice().reverse();\n\n        if (this.state.activeRarityFilters.length !== 5) {\n            list = list.filter(entity => {\n                return this.state.activeRarityFilters.indexOf(entity.rarity) !== -1;\n            });\n        }\n\n        return list;\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading)\n            return <Loading/>;\n\n        return (\n            <div id={'craft-essences'}>\n                <p className={'text-center'}>\n                    {[1, 2, 3, 4, 5].map(rarity => {\n                        const active = this.state.activeRarityFilters.indexOf(rarity) !== -1;\n\n                        return (\n                            <span key={rarity}\n                                  className={'filter'}\n                                  style={{opacity: active ? 1 : 0.5}}\n                                  onClick={(ev: Event) => {\n                                      this.toggleRarityFilter(rarity);\n                                  }}>\n                                <RarityDescriptor rarity={rarity} height={20}/>\n                            </span>\n                        );\n                    })}\n                </p>\n\n                <hr/>\n\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th style={{textAlign: \"center\", width: '1px'}}>#</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Thumbnail</th>\n                        <th>Name</th>\n                        <th>Rarity</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.craftEssences()\n                        .map((craftEssence, index) => {\n                            const route = `/${this.props.region}/craft-essence/${craftEssence.collectionNo}`;\n\n                            return <tr key={index}>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        {craftEssence.collectionNo}\n                                    </Link>\n                                </td>\n                                <td align={\"center\"}>\n                                    <Link to={route}>\n                                        <FaceIcon type={craftEssence.type}\n                                                  rarity={craftEssence.rarity}\n                                                  location={craftEssence.face}\n                                                  height={50}/>\n                                    </Link>\n                                </td>\n                                <td>\n                                    <Link to={route}>\n                                        {craftEssence.name}\n                                    </Link>\n                                </td>\n                                <td>\n                                    <RarityDescriptor rarity={craftEssence.rarity}/>\n                                </td>\n                            </tr>\n                        })\n                    }\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default CraftEssencesPage;\n","enum Region {\n    JP = 'JP',\n    NA = 'NA'\n}\n\nexport default Region;\n","class ResultCache<K, V> {\n    private cache = new Map<K, V>();\n    private pending = new Map<K, Function[]>();\n    private pendingCatches = new Map<K, Function[]>();\n\n    get(key: K, fetcher: Function, duration: number | null): Promise<V> {\n        const value = this.cache.get(key);\n        if (value !== undefined) {\n            return new Promise<V>(resolve => {\n                resolve(value);\n            });\n        }\n\n        const callbacks = this.pending.get(key);\n        if (callbacks !== undefined) {\n            return new Promise<V>((resolve, reject) => {\n                callbacks.push(resolve);\n\n                const catches = this.pendingCatches.get(key) ?? [];\n                catches.push(reject);\n            });\n        }\n\n        this.pending.set(key, []);\n        this.pendingCatches.set(key, []);\n        return new Promise<V>((resolve, reject) => {\n            fetcher\n                .call(null)\n                .then((value: V) => {\n                    const callbacks = this.pending.get(key) ?? [];\n\n                    callbacks.forEach(callback => {\n                        callback.call(null, value);\n                    });\n\n                    this.cache.set(key, value);\n                    this.pending.delete(key);\n                    this.pendingCatches.delete(key);\n\n                    if (duration !== null) {\n                        window.setTimeout(() => {\n                            this.cache.delete(key);\n                        }, duration);\n                    }\n\n                    resolve(value);\n                })\n                .catch((error: any) => {\n                    const callbacks = this.pendingCatches.get(key) ?? [];\n\n                    callbacks.forEach(callback => {\n                        callback.call(null, error);\n                    });\n\n                    this.pending.delete(key);\n                    this.pendingCatches.delete(key);\n\n                    reject(error);\n                });\n        });\n    }\n}\n\nexport default ResultCache;\n","import axios from \"axios\";\nimport Manager from \"../Setting/Manager\";\nimport {LanguageOption} from \"../Setting/Option\";\nimport BasicListEntity from \"./Data/BasicListEntity\";\nimport Buff from \"./Data/Buff\";\nimport CraftEssence from \"./Data/CraftEssence\";\nimport Func from \"./Data/Func\";\nimport MysticCode from \"./Data/MysticCode\";\nimport NoblePhantasm from \"./Data/NoblePhantasm\";\nimport Quest from \"./Data/Quest\";\nimport Region from \"./Data/Region\";\nimport Servant from \"./Data/Servant\";\nimport Skill from \"./Data/Skill\";\nimport TraitMap from \"./Data/TraitMap\";\nimport ResultCache from \"./ResultCache\";\n\nconst host = 'https://api.atlasacademy.io',\n    cacheDuration = 20 * 1000,\n    fetch = async function <T>(endpoint: string): Promise<T> {\n        const response = await axios.get<T>(endpoint);\n\n        return response.data;\n    },\n    cache = {\n        buff: new ResultCache<string, Buff>(),\n        craftEssence: new ResultCache<string, CraftEssence>(),\n        craftEssenceList: new ResultCache<Region, BasicListEntity[]>(),\n        func: new ResultCache<string, Func>(),\n        mysticCode: new ResultCache<string, MysticCode>(),\n        mysticCodeList: new ResultCache<Region, MysticCode[]>(),\n        noblePhantasm: new ResultCache<string, NoblePhantasm>(),\n        quest: new ResultCache<string, Quest>(),\n        servant: new ResultCache<string, Servant>(),\n        servantList: new ResultCache<Region, BasicListEntity[]>(),\n        skill: new ResultCache<string, Skill>(),\n        traitMap: new ResultCache<Region, TraitMap>(),\n    };\n\nclass Connection {\n    static buff(region: Region, id: number): Promise<Buff> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.buff.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Buff>(`${host}/nice/${region}/buff/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static craftEssence(region: Region, id: number): Promise<CraftEssence> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.craftEssence.get(\n            key,\n            () => {\n                let query = '?lore=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Servant>(`${host}/nice/${region}/equip/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async craftEssenceList(region: Region): Promise<BasicListEntity[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableCraftEssenceList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableCraftEssenceList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableCraftEssenceList(Region.JP),\n            na = await Connection.getCacheableCraftEssenceList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<BasicListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static func(region: Region, id: number): Promise<Func> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.func.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Func>(`${host}/nice/${region}/function/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static mysticCode(region: Region, id: number): Promise<MysticCode> {\n        const key = `${region}-${id}`;\n\n        return cache.mysticCode.get(\n            key,\n            () => {\n                return fetch<MysticCode>(`${host}/nice/${region}/MC/${id}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async mysticCodeList(region: Region): Promise<MysticCode[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableMysticCodeList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableMysticCodeList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableMysticCodeList(Region.JP),\n            na = await Connection.getCacheableMysticCodeList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<MysticCode>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static noblePhantasm(region: Region, id: number): Promise<NoblePhantasm> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.noblePhantasm.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<NoblePhantasm>(`${host}/nice/${region}/NP/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static quest(region: Region, id: number, phase: number): Promise<Quest> {\n        const key = `${region}-${id}-${phase}`;\n\n        return cache.quest.get(\n            key,\n            () => {\n                return fetch<Quest>(`${host}/nice/${region}/quest/${id}/${phase}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static servant(region: Region, id: number): Promise<Servant> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.servant.get(\n            key,\n            () => {\n                let query = '?lore=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Servant>(`${host}/nice/${region}/servant/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async servantList(region: Region): Promise<BasicListEntity[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableServantList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableServantList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableServantList(Region.JP),\n            na = await Connection.getCacheableServantList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<BasicListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static skill(region: Region, id: number): Promise<Skill> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.skill.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Skill>(`${host}/nice/${region}/skill/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static traitMap(region: Region): Promise<TraitMap> {\n        return cache.traitMap.get(\n            region,\n            () => {\n                return fetch<TraitMap>(`${host}/export/${region}/nice_trait.json`);\n            },\n            null\n        );\n    }\n\n    private static async getCacheableCraftEssenceList(region: Region): Promise<BasicListEntity[]> {\n        return cache.craftEssenceList.get(\n            region,\n            () => {\n                return fetch<BasicListEntity[]>(`${host}/export/${region}/basic_equip.json`);\n            },\n            null\n        );\n    }\n\n    private static async getCacheableMysticCodeList(region: Region): Promise<MysticCode[]> {\n        return cache.mysticCodeList.get(\n            region,\n            () => {\n                return fetch<BasicListEntity[]>(`${host}/export/${region}/nice_mystic_code.json`);\n            },\n            null\n        );\n    }\n\n    private static async getCacheableServantList(region: Region): Promise<BasicListEntity[]> {\n        return cache.servantList.get(\n            region,\n            () => {\n                return fetch<BasicListEntity[]>(`${host}/export/${region}/basic_servant.json`);\n            },\n            null\n        );\n    }\n}\n\nexport default Connection;\n"],"sourceRoot":""}