{"version":3,"sources":["Setting/Manager.tsx","Api/Data/Region.tsx","Setting/Option.tsx","Component/ErrorStatus.tsx","Setting/SettingForm.tsx","Component/Navigation.tsx","Page/HomePage.tsx","App.tsx","serviceWorker.ts","index.tsx","Component/Loading.tsx"],"names":["callbacks","Manager","value","window","localStorage","getItem","language","Object","values","LanguageOption","find","v","DEFAULT","undefined","setItem","triggerCallbacks","callback","push","forEach","call","Region","images","ErrorStatus","message","this","props","error","response","status","data","detail","random","Math","floor","length","image","id","alt","src","style","display","height","margin","className","React","Component","SettingForm","state","onUpdate","syncSettings","setState","setLanguage","Form","Group","Label","Control","as","onChange","ev","updateLanguage","target","map","Navigation","showSettings","matches","location","pathname","match","region","NA","JP","Navbar","bg","variant","expand","Container","to","Toggle","Collapse","Nav","NavItem","regionLink","regionClass","Link","href","icon","faDiscord","faGithub","Button","onClick","faCog","Modal","show","onHide","hideSettings","Header","closeButton","Title","Body","withRouter","HomePage","rel","BuffPage","lazy","BuffsPage","CraftEssencePage","CraftEssencesPage","FuncPage","FuncsPage","MysticCodePage","MysticCodesPage","NoblePhantasmPage","QuestPage","ServantPage","ServantsPage","SkillPage","App","updateSettings","key","exact","path","render","params","fallback","Loading","tab","phase","component","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.1830b3c2.chunk.js","sourcesContent":["import {LanguageOption} from \"./Option\";\n\nconst languageKey = 'language';\n\nconst callbacks: Function[] = [];\n\nclass Manager {\n    static language(): LanguageOption {\n        const value = window.localStorage.getItem(languageKey),\n            language = Object.values(LanguageOption).find(v => v === value);\n\n        return language ?? LanguageOption.DEFAULT;\n    }\n\n    static setLanguage(value: string) {\n        const language = Object.values(LanguageOption).find(v => v === value);\n        if (language === undefined)\n            return;\n\n        window.localStorage.setItem(languageKey, language);\n        Manager.triggerCallbacks();\n    }\n\n    static onUpdate(callback: Function) {\n        callbacks.push(callback);\n    }\n\n    private static triggerCallbacks() {\n        callbacks.forEach(callback => {\n            callback.call(null);\n        });\n    }\n}\n\nexport default Manager;\n","enum Region {\n    JP = 'JP',\n    NA = 'NA'\n}\n\nexport default Region;\n","export enum LanguageOption {\n    DEFAULT = 'Default',\n    ENGLISH = 'English',\n}\n\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\n\nconst images = [\n    './assets/figure_016.png',\n    './assets/figure_074.png',\n    './assets/figure_127.png',\n    './assets/figure_145.png',\n    './assets/figure_150.png',\n    './assets/figure_174.png',\n    './assets/figure_189.png',\n    './assets/figure_198.png',\n    './assets/figure_241.png',\n    './assets/figure_253.png',\n];\n\ninterface IProps {\n    error?: AxiosError;\n}\n\nclass ErrorStatus extends React.Component<IProps> {\n    render() {\n        let message: string;\n\n        if (this.props.error === undefined) {\n            message = 'Not Found';\n        } else if (this.props.error.response?.status === 500) {\n            message = 'Server Error';\n        } else if (this.props.error.response?.status === 404) {\n            message = 'Not Found';\n        } else {\n            message = 'Code: ' + this.props.error.response?.status;\n        }\n\n        if (\n            typeof this.props.error?.response?.data === \"object\"\n            && this.props.error.response.data.detail !== undefined\n        ) {\n            message = this.props.error.response.data.detail;\n        }\n\n        const random = Math.floor(Math.random() * images.length),\n            image = images[random];\n\n        return (\n            <div id={'error-status'}>\n                <img alt={'Error'} src={image} style={{\n                    display: \"block\",\n                    height: 300,\n                    margin: '0 auto',\n                }}/>\n\n                <p className={'text-center'} style={{margin: 50}}>\n                    <strong>ERROR: {message}</strong>\n                </p>\n            </div>\n        );\n    }\n\n}\n\nexport default ErrorStatus;\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport Manager from \"./Manager\";\nimport {LanguageOption} from \"./Option\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IState {\n    language: LanguageOption\n}\n\nclass SettingForm extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            language: Manager.language(),\n        }\n\n        Manager.onUpdate(() => this.syncSettings());\n    }\n\n    private syncSettings() {\n        this.setState({\n            language: Manager.language(),\n        });\n    }\n\n    updateLanguage(value: string) {\n        Manager.setLanguage(value);\n    }\n\n    render() {\n        return (\n            <div>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Language</Form.Label>\n                        <Form.Control as={'select'} value={this.state.language}\n                                      onChange={(ev: Event) => this.updateLanguage(ev.target.value)}>\n                            {Object.values(LanguageOption).map(v => (\n                                <option value={v}>{v}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default SettingForm;\n","import {faDiscord, faGithub} from \"@fortawesome/free-brands-svg-icons\";\nimport {faCog} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Button, Container, Modal, Nav, Navbar, NavItem} from \"react-bootstrap\";\nimport {withRouter} from \"react-router\";\nimport {Link, RouteComponentProps} from \"react-router-dom\";\nimport Region from \"../Api/Data/Region\";\nimport SettingForm from \"../Setting/SettingForm\";\n\nimport \"./Navigation.css\";\n\ninterface IProps extends RouteComponentProps {\n}\n\ninterface IState {\n    showSettings: boolean;\n}\n\nclass Navigation extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            showSettings: false,\n        };\n    }\n\n    private hideSettings() {\n        this.setState({showSettings: false});\n    }\n\n    private region(): Region {\n        const {pathname} = this.props.location,\n            matches = pathname.match(/^\\/(JP|NA)(?:\\/|$)/),\n            region = matches ? matches[1] : 'JP';\n\n        return region === 'NA' ? Region.NA : Region.JP;\n    }\n\n    private regionClass(region: Region): string {\n        return 'flag '\n            + (this.region() === region ? '' : 'inactive');\n    }\n\n    private regionLink(region: Region): string {\n        const {pathname} = this.props.location,\n            matches = pathname.match(/^\\/(?:JP|NA)(.*)/);\n\n        return matches\n            ? `/${region}${matches[1]}`\n            : `/${region}`;\n    }\n\n    private showSettings() {\n        this.setState({showSettings: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar id={'navigation'} bg={\"dark\"} variant={'dark'} expand={\"lg\"}>\n                    <Container>\n                        <Link to=\"/\" className={'navbar-brand'}>AA-DB</Link>\n                        <Navbar.Toggle/>\n\n                        <Navbar.Collapse>\n                            <Nav>\n                                <Link to={`/${this.region()}/servants`} className={'nav-link'}>\n                                    <NavItem>Servants</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav>\n                                <Link to={`/${this.region()}/craft-essences`} className={'nav-link'}>\n                                    <NavItem>Craft Essences</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav>\n                                <Link to={`/${this.region()}/mystic-codes`} className={'nav-link'}>\n                                    <NavItem>Mystic Codes</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav>\n                                <Link to={`/${this.region()}/buffs`} className={'nav-link'}>\n                                    <NavItem>Buffs</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav>\n                                <Link to={`/${this.region()}/funcs`} className={'nav-link'}>\n                                    <NavItem>Functions</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav className={'ml-auto icons'}>\n                                <Link to={this.regionLink(Region.JP)}\n                                      className={`nav-link ${this.regionClass(Region.JP)}`}>\n                                    <img alt={''} src={'assets/jp.svg'}/>\n                                </Link>\n                                <Link to={this.regionLink(Region.NA)}\n                                      className={`nav-link ${this.regionClass(Region.NA)}`}>\n                                    <img alt={''} src={'assets/us.svg'}/>\n                                </Link>\n                                <Nav.Link href={'https://discord.gg/TKJmuCR'} target={'_blank'}>\n                                    <FontAwesomeIcon icon={faDiscord}/>\n                                </Nav.Link>\n                                <Nav.Link href={'https://github.com/atlasacademy/aa-db'} target={'_blank'}>\n                                    <FontAwesomeIcon icon={faGithub}/>\n                                </Nav.Link>\n                                <Button variant={\"primary\"} onClick={() => this.showSettings()}>\n                                    <FontAwesomeIcon icon={faCog}/>\n                                </Button>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Container>\n                </Navbar>\n\n                <Modal show={this.state.showSettings} onHide={() => this.hideSettings()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Settings</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <SettingForm/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n\n}\n\nexport default withRouter(Navigation);\n","import {faDiscord} from \"@fortawesome/free-brands-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nclass HomePage extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>Atlas Academy DB</h1>\n\n                <p>\n                    <i>FGO Game Data Navigator - without any of the fluff.</i>\n                </p>\n\n                <hr/>\n\n                <p>\n                    This tools lets you accurately navigate the raw data the game is using in the back.\n                    None of the data that is being displayed on this tool is manually entered.\n                    Everything is accurately reflecting exactly the raw data available from the most recent version of\n                    the game.\n                </p>\n\n                <p>\n                    Please note that the skill/NP/effect descriptions are generated automatically and if there is an\n                    unknown interaction or new function, there is a possibility that it is displayed incorrectly.\n                </p>\n\n                <p>\n                    All the data that is being used to render this DB is publicly available at <a\n                    href='https://api.atlasacademy.io' target='_blank'\n                    rel=\"noopener noreferrer\">https://api.atlasacademy.io</a>.\n                    The data at api.atlasacademy.io is automatically maintained and will be refreshed within an hour of\n                    a new release of the game.\n                </p>\n\n                <br/>\n\n                <div>Credits:</div>\n                <ul>\n                    <li>\n                        <a href='https://discord.gg/TKJmuCR' target='_blank' rel=\"noopener noreferrer\">\n                            Atlas Academy\n                            &nbsp;\n                            <FontAwesomeIcon icon={faDiscord}/>\n                        </a>\n                    </li>\n                    <li>\n                        solution (solution#0286)\n                    </li>\n                    <li>\n                        Cereal (Cereal#5579)\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React, {Suspense} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport {HashRouter as Router, Route, Switch,} from \"react-router-dom\";\n\nimport \"./App.css\";\nimport ErrorStatus from \"./Component/ErrorStatus\";\nimport Loading from \"./Component/Loading\";\nimport Navigation from \"./Component/Navigation\";\nimport HomePage from \"./Page/HomePage\";\nimport Manager from \"./Setting/Manager\";\nimport {LanguageOption} from \"./Setting/Option\";\n\nconst BuffPage = React.lazy(() => import(\"./Page/BuffPage\"));\nconst BuffsPage = React.lazy(() => import(\"./Page/BuffsPage\"));\nconst CraftEssencePage = React.lazy(() => import(\"./Page/CraftEssencePage\"));\nconst CraftEssencesPage = React.lazy(() => import(\"./Page/CraftEssencesPage\"));\nconst FuncPage = React.lazy(() => import('./Page/FuncPage'));\nconst FuncsPage = React.lazy(() => import('./Page/FuncsPage'));\nconst MysticCodePage = React.lazy(() => import(\"./Page/MysticCodePage\"));\nconst MysticCodesPage = React.lazy(() => import(\"./Page/MysticCodesPage\"));\nconst NoblePhantasmPage = React.lazy(() => import(\"./Page/NoblePhantasmPage\"));\nconst QuestPage = React.lazy(() => import(\"./Page/QuestPage\"));\nconst ServantPage = React.lazy(() => import(\"./Page/ServantPage\"));\nconst ServantsPage = React.lazy(() => import(\"./Page/ServantsPage\"));\nconst SkillPage = React.lazy(() => import(\"./Page/SkillPage\"));\n\n\ninterface IState {\n    language: LanguageOption,\n}\n\nclass App extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            language: Manager.language(),\n        };\n\n        Manager.onUpdate(() => this.updateSettings());\n    }\n\n    private updateSettings() {\n        this.setState({\n            language: Manager.language(),\n        });\n    }\n\n    render() {\n        return (\n            <Router>\n                <Navigation/>\n                <br/>\n\n                <Container id={'app'} key={`${this.state.language}`}>\n                    <Switch>\n                        <Route exact={true} path=\"/:region(JP|NA)/buff/:id([0-9]+)\" render={props => {\n                            const {region, id} = props.match.params\n                            return (\n                                <Suspense fallback={<Loading/>}>\n                                    <BuffPage key={`${region}-${id}`} region={region} id={id}/>\n                                </Suspense>\n                            );\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/craft-essence/:id([0-9]+)/:tab([a-z0-9\\-]+)?\" render={props => {\n                            const {region, id, tab} = props.match.params\n                            return (\n                                <Suspense fallback={<Loading/>}>\n                                    <CraftEssencePage key={`${region}-${id}`} region={region} id={id} tab={tab}/>\n                                </Suspense>\n                            );\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/func/:id([0-9]+)\" render={props => {\n                            const {region, id} = props.match.params\n                            return (\n                                <Suspense fallback={<Loading/>}>\n                                    <FuncPage key={`${region}-${id}`} region={region} id={id}/>\n                                </Suspense>\n                            );\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/mystic-code/:id([0-9]+)/:tab([a-z0-9\\-]+)?\" render={props => {\n                            const {region, id, tab} = props.match.params\n                            return (\n                                <Suspense fallback={<Loading/>}>\n                                    <MysticCodePage key={`${region}-${id}`} region={region} id={id} tab={tab}/>\n                                </Suspense>\n                            );\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/noble-phantasm/:id([0-9]+)\" render={props => {\n                            const {region, id} = props.match.params\n                            return (\n                                <Suspense fallback={<Loading/>}>\n                                    <NoblePhantasmPage key={`${region}-${id}`} region={region} id={id}/>\n                                </Suspense>\n                            );\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/quest/:id([0-9]+)/:phase([0-9]+)\" render={props => {\n                            const {region, id, phase} = props.match.params\n                            return (\n                                <Suspense fallback={<Loading/>}>\n                                    <QuestPage key={`${region}-${id}-${phase}`} region={region} id={id} phase={phase}/>\n                                </Suspense>\n                            )\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/servant/:id([0-9]+)/:tab([a-z0-9\\-]+)?\" render={props => {\n                            const {region, id, tab} = props.match.params;\n                            return (\n                                <Suspense fallback={<Loading/>}>\n                                    <ServantPage key={`${region}-${id}`} region={region} id={id} tab={tab}/>\n                                </Suspense>\n                            )\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/skill/:id([0-9]+)\" render={props => {\n                            const {region, id} = props.match.params\n                            return (\n                                <Suspense fallback={<Loading/>}>\n                                    <SkillPage key={`${region}-${id}`} region={region} id={id}/>\n                                </Suspense>\n                            )\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/buffs\" render={props => {\n                            const {region} = props.match.params;\n                            return (\n                                <Suspense fallback={<Loading/>}>\n                                    <BuffsPage key={region} region={region}/>\n                                </Suspense>\n                            );\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/craft-essences\" render={props => {\n                            const {region} = props.match.params;\n                            return (\n                                <Suspense fallback={<Loading/>}>\n                                    <CraftEssencesPage key={region} region={region}/>\n                                </Suspense>\n                            );\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/funcs\" render={props => {\n                            const {region} = props.match.params;\n                            return (\n                                <Suspense fallback={<Loading/>}>\n                                    <FuncsPage key={region} region={region}/>\n                                </Suspense>\n                            );\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/mystic-codes\" render={props => {\n                            const {region} = props.match.params;\n                            return (\n                                <Suspense fallback={<Loading/>}>\n                                    <MysticCodesPage key={region} region={region}/>\n                                </Suspense>\n                            )\n                        }}/>\n                        <Route exact={true} path=\"/:region(JP|NA)/servants\" render={props => {\n                            const {region} = props.match.params;\n                            return (\n                                <Suspense fallback={<Loading/>}>\n                                    <ServantsPage key={region} region={region}/>\n                                </Suspense>\n                            )\n                        }}/>\n                        <Route path=\"/:region(JP|NA)\" exact={true} component={HomePage}/>\n                        <Route path=\"/\" exact={true} component={HomePage}/>\n                        <Route path=\"*\" exact={true} component={ErrorStatus}/>\n                    </Switch>\n                </Container>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\n\nimport \"./Loading.css\";\n\nfunction Loading() {\n    return (\n        <div id={'loading'}>\n            <img alt={''} className={'fou f1'} src={'./assets/load_icon_A01.png'} />\n            <img alt={''} className={'fou f2'} src={'./assets/load_icon_A02.png'} />\n            <img alt={''} className={'fou f3'} src={'./assets/load_icon_A03.png'} />\n            <img alt={''} className={'fou f4'} src={'./assets/load_icon_A04.png'} />\n        </div>\n    );\n}\n\nexport default Loading;\n"],"sourceRoot":""}