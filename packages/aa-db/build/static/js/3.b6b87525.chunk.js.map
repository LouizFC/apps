{"version":3,"sources":["Api/Data/Func.tsx","Descriptor/Func/FuncDescriptorSections.tsx","Descriptor/Func/handleTargetSection.tsx","Descriptor/FuncDescriptor.tsx","Descriptor/Func/handleTeamSection.tsx","Descriptor/Func/handleChanceSection.tsx","Descriptor/Func/handleActionSection.tsx","Descriptor/Func/handleAmountSection.tsx","Descriptor/Func/handleAffectsSection.tsx","Descriptor/Func/handleDurationSection.tsx","Descriptor/Func/handleScalingSection.tsx","Descriptor/SkillDescriptor.tsx","Helper/FuncHelper.tsx","Descriptor/SkillReferenceDescriptor.tsx","Descriptor/FuncValueDescriptor.tsx","Descriptor/BuffValueDescriptor.tsx"],"names":["FuncType","FuncTargetType","FuncTargetTeam","DataValField","FuncDescriptorSection","preposition","showing","parts","this","FuncDescriptorSections","team","chance","action","amount","affects","target","duration","scaling","targetMap","Map","SELF","PT_ONE","PT_ALL","ENEMY","ENEMY_ALL","PT_FULL","ENEMY_FULL","PT_OTHER","PT_ONE_OTHER","PT_RANDOM","ENEMY_OTHER","ENEMY_RANDOM","PT_OTHER_FULL","ENEMY_OTHER_FULL","PTSELECT_ONE_SUB","PTSELECT_SUB","PT_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_RANDOM","ENEMY_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_FIRST","COMMAND_TYPE_SELF_TREASURE_DEVICE","FuncDescriptor","func","props","level","getTargetVersionValues","overcharge","dataVals","getDataValList","getStaticFieldValues","region","dataVal","getDataVal","sections","section","funcTargetTeam","PLAYER","push","handleTeamSection","Rate","funcType","NONE","handleChanceSection","ADD_STATE","ADD_STATE_SHORT","buffs","forEach","buff","index","BuffDescriptor","type","BuffType","FIELD_INDIVIDUALITY","COMMANDATTACK_FUNCTION","NPATTACK_PREV_BUFF","SUB_STATE","traitVals","length","trait","TraitDescriptor","CARD_RESET","DAMAGE_NP","DAMAGE_NP_INDIVIDUAL","DAMAGE_NP_STATE_INDIVIDUAL_FIX","Target","DAMAGE_NP_INDIVIDUAL_SUM","additional","TargetList","ParamAddMaxCount","Fragment","joinElements","map","element","key","DAMAGE_NP_RARE","TargetRarityList","split","DAMAGE_NP_PIERCE","DELAY_NPTURN","FORCE_INSTANT_DEATH","GAIN_HP","GAIN_NP","GAIN_HP_FROM_TARGETS","drainAmount","drainTargets","DependFuncId","DependFuncVals","Value","GAIN_NP_FROM_TARGETS","GAIN_STAR","HASTEN_NPTURN","INSTANT_DEATH","LOSS_HP_SAFE","LOSS_NP","handleActionSection","ADD_INDIVIDUALITY","ATTACK_FUNCTION","COMMANDATTACK_BEFORE_FUNCTION","DAMAGE_FUNCTION","DEAD_FUNCTION","DELAY_FUNCTION","SELFTURNEND_FUNCTION","undefined","FuncValueDescriptor","hideRate","Value2","SkillID","SkillReferenceDescriptor","id","BuffValueDescriptor","handleAmountSection","funcquestTvals","mergeElements","functvals","handleAffectsSection","has","funcTargetType","get","handleTargetSection","Count","Turn","countDesc","turnDesc","handleDurationSection","isLevel","funcUpdatesByLevel","isOvercharge","funcUpdatesByOvercharge","handleScalingSection","Object","values","concat","to","funcId","icon","faShare","React","Component","SkillDescriptor","skill","location","height","iconHeight","name","hasChangingDataVals","vals","previous","i","JSON","stringify","hasUniqueValues","Set","size","describeMutators","getMutatingFieldValues","fields","filter","field","val","getMutatingFieldNames","dependingVals","dependingMutatingValues","staticValues","mutatingVals","x","mutatingVal","getLevelDataValList","getOverchargeDataValList","getMixedDataValList","svals","getRelatedSkillIds","getStaticFieldNames","staticVals","hasDependingVals","dependingStaticValues","svals2","svals3","svals4","svals5","state","Connection","setState","route","asPercent","toString","Correction","chargeAmount","value","UP_ATK","DOWN_ATK","UP_COMMANDALL","DOWN_COMMANDALL","UP_CRITICALDAMAGE","DOWN_CRITICALDAMAGE","UP_CRITICALPOINT","DOWN_CRITICALPOINT","UP_CRITICALRATE","DOWN_CRITICALRATE","UP_CRITICAL_RATE_DAMAGE_TAKEN","DOWN_CRITICAL_RATE_DAMAGE_TAKEN","UP_DAMAGE","DOWN_DAMAGE","UP_DAMAGEDROPNP","DOWN_DAMAGEDROPNP","UP_DEFENCE","DOWN_DEFENCE","UP_DEFENCECOMMANDALL","DOWN_DEFENCECOMMANDALL","UP_DROPNP","DOWN_DROPNP","UP_FUNC_HP_REDUCE","DOWN_FUNC_HP_REDUCE","UP_HATE","UP_NONRESIST_INSTANTDEATH","UP_NPDAMAGE","DOWN_NPDAMAGE","UP_STARWEIGHT","DOWN_STARWEIGHT","UP_TOLERANCE","DOWN_TOLERANCE","UP_TOLERANCE_SUBSTATE","DOWN_TOLERANCE_SUBSTATE","REGAIN_NP","SkillLV"],"mappings":"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","file":"static/js/3.b6b87525.chunk.js","sourcesContent":["import Buff from \"./Buff\";\nimport NoblePhantasm from \"./NoblePhantasm\";\nimport Skill from \"./Skill\";\nimport Trait from \"./Trait\";\n\nexport enum FuncType {\n    NONE = \"none\",\n    ADD_STATE = \"addState\",\n    SUB_STATE = \"subState\",\n    DAMAGE = \"damage\",\n    DAMAGE_NP = \"damageNp\",\n    GAIN_STAR = \"gainStar\",\n    GAIN_HP = \"gainHp\",\n    GAIN_NP = \"gainNp\",\n    LOSS_NP = \"lossNp\",\n    SHORTEN_SKILL = \"shortenSkill\",\n    EXTEND_SKILL = \"extendSkill\",\n    RELEASE_STATE = \"releaseState\",\n    LOSS_HP = \"lossHp\",\n    INSTANT_DEATH = \"instantDeath\",\n    DAMAGE_NP_PIERCE = \"damageNpPierce\",\n    DAMAGE_NP_INDIVIDUAL = \"damageNpIndividual\",\n    ADD_STATE_SHORT = \"addStateShort\",\n    GAIN_HP_PER = \"gainHpPer\",\n    DAMAGE_NP_STATE_INDIVIDUAL = \"damageNpStateIndividual\",\n    HASTEN_NPTURN = \"hastenNpturn\",\n    DELAY_NPTURN = \"delayNpturn\",\n    DAMAGE_NP_HPRATIO_HIGH = \"damageNpHpratioHigh\",\n    DAMAGE_NP_HPRATIO_LOW = \"damageNpHpratioLow\",\n    CARD_RESET = \"cardReset\",\n    REPLACE_MEMBER = \"replaceMember\",\n    LOSS_HP_SAFE = \"lossHpSafe\",\n    DAMAGE_NP_COUNTER = \"damageNpCounter\",\n    DAMAGE_NP_STATE_INDIVIDUAL_FIX = \"damageNpStateIndividualFix\",\n    DAMAGE_NP_SAFE = \"damageNpSafe\",\n    CALL_SERVANT = \"callServant\",\n    PT_SHUFFLE = \"ptShuffle\",\n    LOSS_STAR = \"lossStar\",\n    CHANGE_SERVANT = \"changeServant\",\n    CHANGE_BG = \"changeBg\",\n    DAMAGE_VALUE = \"damageValue\",\n    WITHDRAW = \"withdraw\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    SHORTEN_BUFFTURN = \"shortenBuffturn\",\n    EXTEND_BUFFTURN = \"extendBuffturn\",\n    SHORTEN_BUFFCOUNT = \"shortenBuffcount\",\n    EXTEND_BUFFCOUNT = \"extendBuffcount\",\n    CHANGE_BGM = \"changeBgm\",\n    DISPLAY_BUFFSTRING = \"displayBuffstring\",\n    RESURRECTION = \"resurrection\",\n    GAIN_NP_BUFF_INDIVIDUAL_SUM = \"gainNpBuffIndividualSum\",\n    SET_SYSTEM_ALIVE_FLAG = \"setSystemAliveFlag\",\n    FORCE_INSTANT_DEATH = \"forceInstantDeath\",\n    DAMAGE_NP_RARE = \"damageNpRare\",\n    GAIN_NP_FROM_TARGETS = \"gainNpFromTargets\",\n    GAIN_HP_FROM_TARGETS = \"gainHpFromTargets\",\n    LOSS_HP_PER = \"lossHpPer\",\n    LOSS_HP_PER_SAFE = \"lossHpPerSafe\",\n    SHORTEN_USER_EQUIP_SKILL = \"shortenUserEquipSkill\",\n    QUICK_CHANGE_BG = \"quickChangeBg\",\n    SHIFT_SERVANT = \"shiftServant\",\n    DAMAGE_NP_AND_CHECK_INDIVIDUALITY = \"damageNpAndCheckIndividuality\",\n    ABSORB_NPTURN = \"absorbNpturn\",\n    OVERWRITE_DEAD_TYPE = \"overwriteDeadType\",\n    FORCE_ALL_BUFF_NOACT = \"forceAllBuffNoact\",\n    BREAK_GAUGE_UP = \"breakGaugeUp\",\n    BREAK_GAUGE_DOWN = \"breakGaugeDown\",\n    EXP_UP = \"expUp\",\n    QP_UP = \"qpUp\",\n    DROP_UP = \"dropUp\",\n    FRIEND_POINT_UP = \"friendPointUp\",\n    EVENT_DROP_UP = \"eventDropUp\",\n    EVENT_DROP_RATE_UP = \"eventDropRateUp\",\n    EVENT_POINT_UP = \"eventPointUp\",\n    EVENT_POINT_RATE_UP = \"eventPointRateUp\",\n    TRANSFORM_SERVANT = \"transformServant\",\n    QP_DROP_UP = \"qpDropUp\",\n    SERVANT_FRIENDSHIP_UP = \"servantFriendshipUp\",\n    USER_EQUIP_EXP_UP = \"userEquipExpUp\",\n    CLASS_DROP_UP = \"classDropUp\",\n    ENEMY_ENCOUNT_COPY_RATE_UP = \"enemyEncountCopyRateUp\",\n    ENEMY_ENCOUNT_RATE_UP = \"enemyEncountRateUp\",\n    ENEMY_PROB_DOWN = \"enemyProbDown\",\n    GET_REWARD_GIFT = \"getRewardGift\",\n    SEND_SUPPORT_FRIEND_POINT = \"sendSupportFriendPoint\",\n    MOVE_POSITION = \"movePosition\",\n    REVIVAL = \"revival\",\n    DAMAGE_NP_INDIVIDUAL_SUM = \"damageNpIndividualSum\",\n}\n\nexport enum FuncTargetType {\n    SELF = \"self\",\n    PT_ONE = \"ptOne\",\n    PT_ANOTHER = \"ptAnother\",\n    PT_ALL = \"ptAll\",\n    ENEMY = \"enemy\",\n    ENEMY_ANOTHER = \"enemyAnother\",\n    ENEMY_ALL = \"enemyAll\",\n    PT_FULL = \"ptFull\",\n    ENEMY_FULL = \"enemyFull\",\n    PT_OTHER = \"ptOther\",\n    PT_ONE_OTHER = \"ptOneOther\",\n    PT_RANDOM = \"ptRandom\",\n    ENEMY_OTHER = \"enemyOther\",\n    ENEMY_RANDOM = \"enemyRandom\",\n    PT_OTHER_FULL = \"ptOtherFull\",\n    ENEMY_OTHER_FULL = \"enemyOtherFull\",\n    PTSELECT_ONE_SUB = \"ptselectOneSub\",\n    PTSELECT_SUB = \"ptselectSub\",\n    PT_ONE_ANOTHER_RANDOM = \"ptOneAnotherRandom\",\n    PT_SELF_ANOTHER_RANDOM = \"ptSelfAnotherRandom\",\n    ENEMY_ONE_ANOTHER_RANDOM = \"enemyOneAnotherRandom\",\n    PT_SELF_ANOTHER_FIRST = \"ptSelfAnotherFirst\",\n    PT_SELF_BEFORE = \"ptSelfBefore\",\n    PT_SELF_AFTER = \"ptSelfAfter\",\n    PT_SELF_ANOTHER_LAST = \"ptSelfAnotherLast\",\n    COMMAND_TYPE_SELF_TREASURE_DEVICE = \"commandTypeSelfTreasureDevice\",\n}\n\nexport enum FuncTargetTeam {\n    PLAYER = \"player\",\n    ENEMY = \"enemy\",\n    PLAYER_AND_ENEMY = \"playerAndEnemy\",\n}\n\nexport enum DataValField {\n    RATE = \"Rate\",\n    TURN = \"Turn\",\n    COUNT = \"Count\",\n    VALUE = \"Value\",\n    VALUE2 = \"Value2\",\n    USE_RATE = \"UseRate\",\n    TARGET = \"Target\",\n    CORRECTION = \"Correction\",\n    PARAM_ADD = \"ParamAdd\",\n    PARAM_MAX = \"ParamMax\",\n    HIDE_MISS = \"HideMiss\",\n    ON_FIELD = \"OnField\",\n    HIDE_NO_EFFECT = \"HideNoEffect\",\n    UNAFFECTED = \"Unaffected\",\n    SHOW_STATE = \"ShowState\",\n    AURA_EFFECT_ID = \"AuraEffectId\",\n    ACT_SET = \"ActSet\",\n    ACT_SET_WEIGHT = \"ActSetWeight\",\n    SHOW_QUEST_NO_EFFECT = \"ShowQuestNoEffect\",\n    CHECK_DEAD = \"CheckDead\",\n    RATIO_HP_HIGH = \"RatioHPHigh\",\n    RATIO_HP_LOW = \"RatioHPLow\",\n    SET_PASSIVE_FRAME = \"SetPassiveFrame\",\n    PROC_PASSIVE = \"ProcPassive\",\n    PROC_ACTIVE = \"ProcActive\",\n    HIDE_PARAM = \"HideParam\",\n    SKILL_ID = \"SkillID\",\n    SKILL_LV = \"SkillLV\",\n    SHOW_CARD_ONLY = \"ShowCardOnly\",\n    EFFECT_SUMMON = \"EffectSummon\",\n    RATIO_HP_RANGE_HIGH = \"RatioHPRangeHigh\",\n    RATIO_HP_RANGE_LOW = \"RatioHPRangeLow\",\n    TARGET_LIST = \"TargetList\",\n    OPPONENT_ONLY = \"OpponentOnly\",\n    STATUS_EFFECT_ID = \"StatusEffectId\",\n    END_BATTLE = \"EndBattle\",\n    LOSE_BATTLE = \"LoseBattle\",\n    ADD_INDIVIDUALTY = \"AddIndividualty\",\n    ADD_LINKAGE_TARGET_INDIVIDUALTY = \"AddLinkageTargetIndividualty\",\n    SAME_BUFF_LIMIT_TARGET_INDIVIDUALITY = \"SameBuffLimitTargetIndividuality\",\n    SAME_BUFF_LIMIT_NUM = \"SameBuffLimitNum\",\n    CHECK_DUPLICATE = \"CheckDuplicate\",\n    ON_FIELD_COUNT = \"OnFieldCount\",\n    TARGET_RARITY_LIST = \"TargetRarityList\",\n    DEPEND_FUNC_ID = \"DependFuncId\",\n    INVALID_HIDE = \"InvalidHide\",\n    OUT_ENEMY_NPC_ID = \"OutEnemyNpcId\",\n    IN_ENEMY_NPC_ID = \"InEnemyNpcId\",\n    OUT_ENEMY_POSITION = \"OutEnemyPosition\",\n    IGNORE_INDIVIDUALITY = \"IgnoreIndividuality\",\n    STAR_HIGHER = \"StarHigher\",\n    CHANGE_TD_COMMAND_TYPE = \"ChangeTDCommandType\",\n    SHIFT_NPC_ID = \"ShiftNpcId\",\n    DISPLAY_LAST_FUNC_INVALID_TYPE = \"DisplayLastFuncInvalidType\",\n    AND_CHECK_INDIVIDUALITY_LIST = \"AndCheckIndividualityList\",\n    WIN_BATTLE_NOT_RELATED_SURVIVAL_STATUS = \"WinBattleNotRelatedSurvivalStatus\",\n    FORCE_SELF_INSTANT_DEATH = \"ForceSelfInstantDeath\",\n    CHANGE_MAX_BREAK_GAUGE = \"ChangeMaxBreakGauge\",\n    PARAM_ADD_MAX_VALUE = \"ParamAddMaxValue\",\n    PARAM_ADD_MAX_COUNT = \"ParamAddMaxCount\",\n    LOSS_HP_NO_CHANGE_DAMAGE = \"LossHpNoChangeDamage\",\n    INCLUDE_PASSIVE_INDIVIDUALITY = \"IncludePassiveIndividuality\",\n}\n\ntype BaseDataVal = { [key in DataValField]?: number | string; };\n\nexport type DataVal = (\n    BaseDataVal\n    & { DependFuncVals?: BaseDataVal; }\n    );\n\nexport default interface Func {\n    funcId: number;\n    funcType: FuncType;\n    funcTargetType: FuncTargetType;\n    funcTargetTeam: FuncTargetTeam;\n    funcPopupText: string;\n    funcPopupIcon?: string;\n    functvals: Trait[];\n    funcquestTvals: number[];\n    traitVals?: Trait[];\n    buffs: Buff[];\n    svals?: DataVal[];\n    svals2?: DataVal[];\n    svals3?: DataVal[];\n    svals4?: DataVal[];\n    svals5?: DataVal[];\n    reverseSkills: Skill[];\n    reverseTds: NoblePhantasm[];\n}\n","import {Renderable} from \"../../Helper/OutputHelper\";\n\nexport class FuncDescriptorSection {\n    public showing: boolean = true;\n    public parts: Renderable[] = [];\n    public preposition?: string;\n\n    constructor(preposition?: string) {\n        this.preposition = preposition;\n    }\n}\n\nexport class FuncDescriptorSections {\n    public team = new FuncDescriptorSection();\n    public chance = new FuncDescriptorSection();\n    public action = new FuncDescriptorSection();\n    public amount = new FuncDescriptorSection('of');\n    public affects = new FuncDescriptorSection();\n    public target = new FuncDescriptorSection('to');\n    public duration = new FuncDescriptorSection();\n    public scaling = new FuncDescriptorSection();\n}\n","import Func, {DataVal, FuncTargetType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nconst targetMap = new Map<FuncTargetType, string>([\n    [FuncTargetType.SELF, 'self'],\n    [FuncTargetType.PT_ONE, 'party member'],\n    // PT_ANOTHER\n    [FuncTargetType.PT_ALL, 'party'],\n    [FuncTargetType.ENEMY, 'enemy'],\n    // ENEMY_ANOTHER\n    [FuncTargetType.ENEMY_ALL, 'enemies'],\n    [FuncTargetType.PT_FULL, 'party (including reserve)'],\n    [FuncTargetType.ENEMY_FULL, 'enemies (including reserve)'],\n    [FuncTargetType.PT_OTHER, 'party except self'],\n    [FuncTargetType.PT_ONE_OTHER, 'other party members besides target'],\n    [FuncTargetType.PT_RANDOM, 'random party member'],\n    [FuncTargetType.ENEMY_OTHER, 'other enemies besides target'],\n    [FuncTargetType.ENEMY_RANDOM, 'random enemy'],\n    [FuncTargetType.PT_OTHER_FULL, 'party except self (including reserve)'],\n    [FuncTargetType.ENEMY_OTHER_FULL, 'other enemies (including reserve)'],\n    [FuncTargetType.PTSELECT_ONE_SUB, 'active party member and reserve party member'],\n    [FuncTargetType.PTSELECT_SUB, 'reserve party member'],\n    // PT_ONE_ANOTHER_RANDOM\n    [FuncTargetType.PT_ONE_ANOTHER_RANDOM, 'other random party member'],\n    [FuncTargetType.PT_SELF_ANOTHER_RANDOM, 'other random party member (except self)'],\n    [FuncTargetType.ENEMY_ONE_ANOTHER_RANDOM, 'other random enemy'],\n    [FuncTargetType.PT_SELF_ANOTHER_FIRST, 'first other party member (except self)'],\n    // PT_SELF_BEFORE\n    // PT_SELF_AFTER\n    // PT_SELF_ANOTHER_LAST\n    [FuncTargetType.COMMAND_TYPE_SELF_TREASURE_DEVICE, 'target noble phantasm version'],\n]);\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.target,\n        parts = section.parts;\n\n    if (targetMap.has(func.funcTargetType)) {\n        parts.push(targetMap.get(func.funcTargetType));\n    } else {\n        parts.push(func.funcTargetType);\n    }\n}\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Func, {DataVal} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {getDataValList, getStaticFieldValues, getTargetVersionValues} from \"../Helper/FuncHelper\";\nimport {joinElements, Renderable} from \"../Helper/OutputHelper\";\nimport {FuncDescriptorSections} from \"./Func/FuncDescriptorSections\";\nimport handleActionSection from \"./Func/handleActionSection\";\nimport handleAffectsSection from \"./Func/handleAffectsSection\";\nimport handleAmountSection from \"./Func/handleAmountSection\";\nimport handleChanceSection from \"./Func/handleChanceSection\";\nimport handleDurationSection from \"./Func/handleDurationSection\";\nimport handleScalingSection from \"./Func/handleScalingSection\";\nimport handleTargetSection from \"./Func/handleTargetSection\";\nimport handleTeamSection from \"./Func/handleTeamSection\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n    level?: number;\n    overcharge?: number;\n}\n\nclass FuncDescriptor extends React.Component<IProps> {\n    getDataVal(): DataVal {\n        const func = this.props.func;\n\n        if (this.props.level) {\n            return getTargetVersionValues(func, this.props.level, this.props.overcharge ?? 1) ?? {};\n        } else {\n            const dataVals = getDataValList(func);\n\n            return getStaticFieldValues(dataVals);\n        }\n    }\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            dataVal = this.getDataVal();\n\n        const sections = new FuncDescriptorSections();\n\n        handleTeamSection(region, sections, func, dataVal);\n        handleChanceSection(region, sections, func, dataVal);\n        handleActionSection(region, sections, func, dataVal);\n        handleAmountSection(region, sections, func, dataVal);\n        handleAffectsSection(region, sections, func, dataVal);\n        handleTargetSection(region, sections, func, dataVal);\n        handleDurationSection(region, sections, func, dataVal);\n        handleScalingSection(region, sections, func, dataVal);\n\n        let parts: Renderable[] = [];\n\n        Object.values(sections).forEach(section => {\n            if (!section.showing)\n                return;\n\n            if (section.preposition)\n                parts.push(section.preposition);\n\n            parts = parts.concat(section.parts);\n        });\n\n        parts.push(\n            <Link to={`/${region}/func/${func.funcId}`}>\n                <FontAwesomeIcon icon={faShare}/>\n            </Link>\n        );\n\n        parts = joinElements(parts, ' ');\n\n        return (\n            <span>\n                {parts.map((element, index) => {\n                    return <React.Fragment key={index}>{element}</React.Fragment>;\n                })}\n            </span>\n        );\n    }\n}\n\nexport default FuncDescriptor;\n","import Func, {DataVal, FuncTargetTeam} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.team,\n        parts = section.parts;\n\n    if (func.funcTargetTeam === FuncTargetTeam.PLAYER)\n        parts.push('[Player]');\n    else if (func.funcTargetTeam === FuncTargetTeam.ENEMY)\n        parts.push('[Enemy]');\n    else\n        section.showing = false;\n}\n","import Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.chance,\n        parts = section.parts;\n\n    if (dataVal.Rate && dataVal.Rate < 0) {\n        parts.push('Guaranteed to');\n    } else if (typeof dataVal.Rate === \"number\" && dataVal.Rate !== 1000) {\n        parts.push((dataVal.Rate / 10) + '% Chance to');\n    } else if (!dataVal.Rate && func.funcType !== FuncType.NONE) {\n        parts.push('Chance to');\n    } else {\n        section.showing = false;\n    }\n}\n","import React from \"react\";\nimport {BuffType} from \"../../Api/Data/Buff\";\nimport Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {joinElements} from \"../../Helper/OutputHelper\";\nimport BuffDescriptor from \"../BuffDescriptor\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    if (func.funcType === FuncType.ADD_STATE || func.funcType === FuncType.ADD_STATE_SHORT) {\n        parts.push('Apply');\n        func.buffs.forEach((buff, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<BuffDescriptor region={region} buff={buff}/>);\n        });\n\n        if (func.buffs[0]?.type === BuffType.FIELD_INDIVIDUALITY) {\n            sections.amount.preposition = 'to';\n        }\n\n        sections.target.preposition = 'on';\n        if (\n            func.buffs[0]?.type === BuffType.COMMANDATTACK_FUNCTION\n            || func.buffs[0]?.type === BuffType.NPATTACK_PREV_BUFF\n        ) {\n            sections.target.preposition = 'for';\n        }\n    } else if (func.funcType === FuncType.SUB_STATE) {\n        parts.push('Remove effects');\n\n        if (func.traitVals?.length) {\n            parts.push('with');\n\n            func.traitVals.forEach((trait, index) => {\n                if (index > 0)\n                    parts.push('&');\n\n                parts.push(<TraitDescriptor region={region} trait={trait}/>);\n            });\n        }\n\n        sections.target.preposition = 'on';\n    } else if (func.funcType === FuncType.CARD_RESET) {\n        parts.push('Shuffle Cards');\n\n        sections.target.showing = false;\n    } else if (func.funcType === FuncType.DAMAGE_NP) {\n        parts.push('Deal damage');\n\n        sections.amount.preposition = 'for';\n    } else if (\n        func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL\n        || func.funcType === FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX\n    ) {\n        if (typeof dataVal.Target === \"number\") {\n            parts.push(\n                <span>Deal damage (additional to targets with {\n                    <TraitDescriptor region={region} trait={dataVal.Target}/>\n                })</span>\n            );\n        } else {\n            parts.push('Deal damage');\n        }\n\n        sections.amount.preposition = 'for';\n    } else if (func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL_SUM) {\n        let additional = [];\n\n        if (typeof dataVal.TargetList === \"number\") {\n            additional.push('to targets with');\n            additional.push(<TraitDescriptor region={region} trait={dataVal.TargetList}/>);\n        }\n\n        if (dataVal.ParamAddMaxCount) {\n            additional.push(`[Limit ${dataVal.ParamAddMaxCount}]`);\n        }\n\n        parts.push('Deal damage');\n\n        if (additional.length) {\n            parts.push(<React.Fragment>\n                (additional\n                {' '}\n                {joinElements(additional, ' ')\n                    .map((element, index) => {\n                        return <React.Fragment key={index}>{element}</React.Fragment>;\n                    })\n                })\n            </React.Fragment>)\n        }\n    } else if (func.funcType === FuncType.DAMAGE_NP_RARE) {\n        parts.push('Deal damage');\n\n        if (typeof dataVal.TargetRarityList === \"string\") {\n            parts.push('that deals additional to');\n            parts.push(dataVal.TargetRarityList);\n            parts.push(dataVal.TargetRarityList.split('/').length > 1 ? 'rarities' : 'rarity');\n        }\n\n        sections.amount.preposition = 'for';\n    } else if (func.funcType === FuncType.DAMAGE_NP_PIERCE) {\n        parts.push('Deal damage that pierces defence');\n\n        sections.amount.preposition = 'for';\n    } else if (func.funcType === FuncType.DELAY_NPTURN) {\n        parts.push('Drain Charge');\n\n        sections.target.preposition = 'from';\n    } else if (func.funcType === FuncType.FORCE_INSTANT_DEATH) {\n        parts.push('Force Instant Death');\n\n        sections.target.preposition = 'on';\n    } else if (func.funcType === FuncType.GAIN_HP) {\n        parts.push('Restore HP');\n\n        sections.target.preposition = 'for';\n    } else if (func.funcType === FuncType.GAIN_NP) {\n        parts.push('Charge NP');\n\n        sections.target.preposition = 'for';\n    } else if (func.funcType === FuncType.GAIN_HP_FROM_TARGETS) {\n        let drainAmount,\n            drainTargets;\n\n        switch (dataVal.DependFuncId) {\n            case 711:\n                drainAmount = `${dataVal.DependFuncVals?.Value ?? ''} HP`;\n                drainTargets = \"All Enemies\";\n                break;\n        }\n\n        parts.push(\n            `Drain ${drainAmount} from ${drainTargets} and Restore HP`\n        );\n\n        sections.target.preposition = 'for';\n    } else if (func.funcType === FuncType.GAIN_NP_FROM_TARGETS) {\n        let drainAmount,\n            drainTargets;\n\n        switch (dataVal.DependFuncId) {\n            case 474:\n                drainAmount = `${dataVal.DependFuncVals?.Value ?? 1} Charge`;\n                drainTargets = \"All Enemies\";\n                break;\n            case 3962:\n                drainAmount = \"NP\";\n                drainTargets = \"All Other Allies\";\n                break;\n        }\n\n        parts.push(\n            `Drain ${drainAmount} from ${drainTargets} and Charge NP`\n        );\n\n        sections.target.preposition = 'for';\n    } else if (func.funcType === FuncType.GAIN_STAR) {\n        parts.push('Gain Critical Stars');\n\n        sections.target.showing = false;\n    } else if (func.funcType === FuncType.HASTEN_NPTURN) {\n        parts.push('Charge NP');\n\n        sections.amount.preposition = 'by';\n        sections.target.preposition = 'for';\n    } else if (func.funcType === FuncType.INSTANT_DEATH) {\n        parts.push('Apply Death');\n    } else if (func.funcType === FuncType.LOSS_HP_SAFE) {\n        parts.push('Drain HP');\n\n        sections.target.preposition = 'from';\n    } else if (func.funcType === FuncType.LOSS_NP) {\n        parts.push('Drain NP');\n\n        sections.target.preposition = 'from';\n    } else if (func.funcType === FuncType.NONE) {\n        parts.push('No Effect');\n\n        sections.target.showing = false;\n    } else {\n        parts.push(func.funcType);\n    }\n}\n","import React from \"react\";\nimport {BuffType} from \"../../Api/Data/Buff\";\nimport Func, {DataVal, FuncType} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport BuffValueDescriptor from \"../BuffValueDescriptor\";\nimport FuncValueDescriptor from \"../FuncValueDescriptor\";\nimport SkillReferenceDescriptor from \"../SkillReferenceDescriptor\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.amount,\n        parts = section.parts;\n\n    if (func.buffs[0]?.type === BuffType.ADD_INDIVIDUALITY && typeof dataVal.Value === \"number\") {\n        parts.push(\n            <TraitDescriptor region={region} trait={dataVal.Value}/>\n        );\n    } else if (\n        (\n            func.buffs[0]?.type === BuffType.ATTACK_FUNCTION\n            || func.buffs[0]?.type === BuffType.COMMANDATTACK_FUNCTION\n            || func.buffs[0]?.type === BuffType.COMMANDATTACK_BEFORE_FUNCTION\n            || func.buffs[0]?.type === BuffType.DAMAGE_FUNCTION\n            || func.buffs[0]?.type === BuffType.DEAD_FUNCTION\n            || func.buffs[0]?.type === BuffType.DELAY_FUNCTION\n            || func.buffs[0]?.type === BuffType.SELFTURNEND_FUNCTION\n        )\n        && typeof dataVal.Value === \"number\"\n    ) {\n        section.preposition = undefined;\n        parts.push('that triggers');\n        parts.push(\n            <SkillReferenceDescriptor region={region} id={dataVal.Value}/>\n        );\n    } else if (func.funcType === FuncType.CARD_RESET && dataVal.Value) {\n        section.preposition = undefined;\n        parts.push(`${dataVal.Value} time${dataVal.Value > 1 ? 's' : ''}`);\n    } else if (func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL_SUM) {\n        parts.push(<FuncValueDescriptor region={region} func={func} dataVal={dataVal} hideRate={true}/>);\n    } else if (func.funcType === FuncType.GAIN_HP_FROM_TARGETS) {\n        section.showing = false;\n    } else if (func.funcType === FuncType.GAIN_NP_FROM_TARGETS) {\n        const chargeAmount = dataVal.DependFuncVals?.Value2;\n\n        if (chargeAmount !== undefined) {\n            parts.push(<FuncValueDescriptor region={region} func={func} dataVal={dataVal} hideRate={true}/>);\n        } else {\n            section.showing = false;\n        }\n    } else if (func.buffs[0]?.type === BuffType.NPATTACK_PREV_BUFF) {\n        if (typeof dataVal.SkillID !== \"number\") {\n            section.showing = false;\n            return;\n        }\n\n        section.preposition = undefined;\n        parts.push('that triggers');\n        parts.push(\n            <SkillReferenceDescriptor region={region} id={dataVal.SkillID}/>\n        );\n    } else if (func.buffs[0] && dataVal.Value) {\n        parts.push(<BuffValueDescriptor region={region} buff={func.buffs[0]} dataVal={dataVal}/>);\n    } else if (dataVal.Value) {\n        parts.push(<FuncValueDescriptor region={region} func={func} dataVal={dataVal} hideRate={true}/>);\n    } else {\n        section.showing = false;\n    }\n}\n","import React from \"react\";\nimport Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {mergeElements} from \"../../Helper/OutputHelper\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.affects,\n        parts = section.parts;\n\n    if (func.funcquestTvals.length) {\n        parts.push('if on field');\n        parts.push(\n            mergeElements(\n                func.funcquestTvals.map(trait => <TraitDescriptor region={region} trait={trait}/>),\n                ' & '\n            )\n        );\n    }\n\n    if (func.functvals.length) {\n        parts.push('for');\n\n        if (func.functvals.length > 1) {\n            parts.push('all');\n        }\n\n        func.functvals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<TraitDescriptor region={region} trait={trait}/>);\n        });\n    }\n\n    if (!parts.length) {\n        section.showing = false;\n    }\n\n}\n","import Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.duration,\n        parts = section.parts;\n\n    if (dataVal.Count && dataVal.Count > 0 && dataVal.Turn && dataVal.Turn > 0) {\n        const countDesc = dataVal.Count === 1 ? '1 Time' : `${dataVal.Count} Times`,\n            turnDesc = dataVal.Turn === 1 ? '1 Turn' : `${dataVal.Turn} Turns`;\n\n        parts.push(`(${turnDesc}, ${countDesc})`);\n    } else if (dataVal.Turn && dataVal.Turn > 0) {\n        parts.push(dataVal.Turn === 1 ? '(1 Turn)' : `(${dataVal.Turn} Turns)`);\n    } else if (dataVal.Count && dataVal.Count > 0) {\n        parts.push(dataVal.Count === 1 ? '(1 Time)' : `(${dataVal.Count} Times)`);\n    } else {\n        section.showing = false;\n    }\n}\n","import Func, {DataVal} from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport {funcUpdatesByLevel, funcUpdatesByOvercharge} from \"../../Helper/FuncHelper\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.scaling,\n        parts = section.parts,\n        isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func);\n\n    if (!isLevel && !isOvercharge) {\n        section.showing = false;\n        return;\n    }\n\n    if (isLevel) {\n        parts.push('<LEVEL>');\n    }\n\n    if (isOvercharge) {\n        parts.push('<OVERCHARGE>');\n    }\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Region from \"../Api/Data/Region\";\nimport Skill from \"../Api/Data/Skill\";\nimport BuffIcon from \"../Component/BuffIcon\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n    iconHeight?: number;\n}\n\nclass SkillDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/skill/${this.props.skill.id}`}>\n                [\n                <BuffIcon location={this.props.skill.icon} height={this.props.iconHeight}/>\n                {' '}\n                {this.props.skill.name ? this.props.skill.name : `Skill: ${this.props.skill.id}`}\n                ]\n            </Link>\n        );\n    }\n}\n\nexport default SkillDescriptor;\n","import React from \"react\";\nimport {BuffType} from \"../Api/Data/Buff\";\nimport Func, {DataVal, DataValField, FuncType} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport FuncValueDescriptor from \"../Descriptor/FuncValueDescriptor\";\nimport {Renderable} from \"./OutputHelper\";\n\nconst hasChangingDataVals = function (vals: DataVal[]): boolean {\n    if (!vals.length)\n        return false;\n\n    let previous = vals[0];\n    for (let i = 1; i < vals.length; i++) {\n        if (JSON.stringify(previous) !== JSON.stringify(vals[i]))\n            return true;\n\n        previous = vals[i];\n    }\n\n    return false;\n};\n\nconst hasUniqueValues = function (values: (number | string | undefined)[]): boolean {\n    return new Set(values).size > 1;\n};\n\nexport function describeMutators(region: Region, func: Func): Renderable[] {\n    const dataVals = getDataValList(func),\n        mutatingVals = getMutatingFieldValues(dataVals);\n\n    return mutatingVals\n        .map(mutatingVal => <FuncValueDescriptor region={region} func={func} dataVal={mutatingVal}/>);\n}\n\nexport function funcUpdatesByLevel(func: Func): boolean {\n    return hasChangingDataVals(getLevelDataValList(func));\n}\n\nexport function funcUpdatesByOvercharge(func: Func): boolean {\n    return hasChangingDataVals(getOverchargeDataValList(func));\n}\n\nexport function getDataValList(func: Func): DataVal[] {\n    const isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func);\n\n    return isLevel && isOvercharge\n        ? getMixedDataValList(func)\n        : (isOvercharge ? getOverchargeDataValList(func) : getLevelDataValList(func));\n}\n\nexport function getLevelDataValList(func: Func): DataVal[] {\n    return func.svals ?? [];\n}\n\nexport function getMixedDataValList(func: Func): DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, i, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getMutatingFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return hasUniqueValues(values);\n    });\n}\n\nexport function getMutatingFieldValues(vals: DataVal[]): DataVal[] {\n    if (!vals.length)\n        return [];\n\n    const fields = getMutatingFieldNames(vals),\n        hasDependingVals = vals.filter(val => val.DependFuncVals !== undefined).length > 0,\n        dependingVals: (DataVal[] | undefined) = (\n            hasDependingVals\n                ? vals.map(val => (val.DependFuncVals ?? {}) as DataVal)\n                : undefined\n        ),\n        dependingMutatingValues = dependingVals ? getMutatingFieldValues(dependingVals) : [],\n        staticValues = getStaticFieldValues(vals);\n\n    return vals.map((val, index) => {\n        const mutatingVals: DataVal = {};\n\n        for (let x in fields) {\n            mutatingVals[fields[x]] = val[fields[x]];\n        }\n\n        if (staticValues.DependFuncId && dependingMutatingValues[index]) {\n            mutatingVals.DependFuncId = staticValues.DependFuncId;\n            mutatingVals.DependFuncVals = dependingMutatingValues[index];\n        }\n\n        return mutatingVals;\n    });\n}\n\nexport function getOverchargeDataValList(func: Func): DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, 1, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getRelatedSkillIds(func: Func): number[] {\n    if (func.funcType !== FuncType.ADD_STATE && func.funcType !== FuncType.ADD_STATE_SHORT)\n        return [];\n\n    const buff = func.buffs[0];\n    if (\n        buff.type === BuffType.ATTACK_FUNCTION\n        || buff.type === BuffType.COMMANDATTACK_FUNCTION\n        || buff.type === BuffType.COMMANDATTACK_BEFORE_FUNCTION\n        || buff.type === BuffType.DAMAGE_FUNCTION\n        || buff.type === BuffType.DEAD_FUNCTION\n        || buff.type === BuffType.DELAY_FUNCTION\n        || buff.type === BuffType.SELFTURNEND_FUNCTION\n    ) {\n        const dataVals = getDataValList(func),\n            dataVal = dataVals[0];\n\n        return typeof dataVal.Value === \"number\" ? [dataVal.Value] : [];\n    }\n\n    if (buff.type === BuffType.NPATTACK_PREV_BUFF) {\n        const dataVals = getDataValList(func),\n            dataVal = dataVals[0];\n\n        return typeof dataVal.SkillID === \"number\" ? [dataVal.SkillID] : [];\n    }\n\n    return [];\n}\n\nexport function getStaticFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return !hasUniqueValues(values);\n    });\n}\n\nexport function getStaticFieldValues(vals: DataVal[]): DataVal {\n    if (!vals.length)\n        return {};\n\n    const fields = getStaticFieldNames(vals),\n        staticVals: DataVal = {},\n        hasDependingVals = vals.filter(val => val.DependFuncVals !== undefined).length > 0,\n        dependingVals: (DataVal[] | undefined) = (\n            hasDependingVals\n                ? vals.map(val => (val.DependFuncVals ?? {}) as DataVal)\n                : undefined\n        ),\n        dependingStaticValues = dependingVals ? getStaticFieldValues(dependingVals) : undefined;\n\n    for (let x in fields) {\n        staticVals[fields[x]] = vals[0][fields[x]];\n    }\n\n    if (hasDependingVals)\n        staticVals.DependFuncVals = dependingStaticValues;\n\n    return staticVals;\n}\n\nexport function getTargetVersionValues(func: Func, level: number, overcharge: number = 1): DataVal | undefined {\n    if (func.svals === undefined)\n        return undefined;\n\n    let dataVals;\n\n    if (overcharge === 2 && func.svals2)\n        dataVals = func.svals2;\n    else if (overcharge === 3 && func.svals3)\n        dataVals = func.svals3;\n    else if (overcharge === 4 && func.svals4)\n        dataVals = func.svals4;\n    else if (overcharge === 5 && func.svals5)\n        dataVals = func.svals5;\n    else\n        dataVals = func.svals;\n\n    return dataVals[level - 1];\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport Region from \"../Api/Data/Region\";\nimport Skill from \"../Api/Data/Skill\";\nimport SkillDescriptor from \"./SkillDescriptor\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    skill?: Skill;\n}\n\nclass SkillReferenceDescriptor extends React.Component<IProps, IState> {\n    constructor(props:IProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    async componentDidMount() {\n        try {\n            this.setState({\n                skill: await Connection.skill(this.props.region, this.props.id)\n            });\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    render() {\n        const route = `/${this.props.region}/skill/${this.props.id}`;\n\n        if (this.state.skill === undefined) {\n            return <Link to={route}>[Skill: {this.props.id}]</Link>;\n        }\n\n        return (\n            <SkillDescriptor region={this.props.region} skill={this.state.skill}/>\n        );\n    }\n}\n\nexport default SkillReferenceDescriptor;\n","import React from \"react\";\nimport {BuffType} from \"../Api/Data/Buff\";\nimport Func, {DataVal, FuncType} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {asPercent, mergeElements, Renderable} from \"../Helper/OutputHelper\";\nimport BuffValueDescriptor from \"./BuffValueDescriptor\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n    dataVal: DataVal;\n    hideRate?: boolean;\n}\n\nclass FuncValueDescriptor extends React.Component<IProps> {\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            dataVal = this.props.dataVal,\n            parts: Renderable[] = [];\n\n        if (\n            (func.funcType === FuncType.ADD_STATE || func.funcType === FuncType.ADD_STATE_SHORT)\n            && func.buffs[0]\n            && (\n                dataVal.Value\n                || (func.buffs[0].type === BuffType.DAMAGE_FUNCTION && dataVal.Value2)\n                || (func.buffs[0].type === BuffType.DEAD_FUNCTION && dataVal.Value2)\n                || (func.buffs[0].type === BuffType.DELAY_FUNCTION && dataVal.Value2)\n                || (func.buffs[0].type === BuffType.NPATTACK_PREV_BUFF && dataVal.SkillID)\n                || (func.buffs[0].type === BuffType.SELFTURNEND_FUNCTION && dataVal.Value2)\n            )\n        ) {\n            return <BuffValueDescriptor region={region} buff={func.buffs[0]} dataVal={dataVal}/>;\n        }\n\n        if (!this.props.hideRate && dataVal.Rate !== undefined) {\n            parts.push(asPercent(dataVal.Rate, 1));\n        }\n\n        if (dataVal.Value !== undefined) {\n            switch (func.funcType) {\n                case FuncType.DAMAGE_NP:\n                case FuncType.DAMAGE_NP_INDIVIDUAL:\n                case FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                case FuncType.DAMAGE_NP_PIERCE:\n                case FuncType.DAMAGE_NP_RARE:\n                case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                    parts.push(asPercent(dataVal.Value, 1));\n                    break;\n                case FuncType.GAIN_NP:\n                case FuncType.LOSS_NP:\n                    parts.push(asPercent(dataVal.Value, 2));\n                    break;\n                default:\n                    parts.push(dataVal.Value.toString());\n            }\n        }\n\n        if (dataVal.Value2 !== undefined) {\n            switch (func.funcType) {\n                case FuncType.GAIN_NP_FROM_TARGETS:\n                    parts.push(asPercent(dataVal.Value2, 2));\n                    break;\n                case FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                    parts.push(\"additional \" + asPercent(dataVal.Value2, 1));\n            }\n        }\n\n        if (dataVal.Correction !== undefined) {\n            switch (func.funcType) {\n                case FuncType.DAMAGE_NP_INDIVIDUAL:\n                case FuncType.DAMAGE_NP_RARE:\n                case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                    parts.push(asPercent(dataVal.Correction, 1));\n                    break;\n                case FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                    parts.push(\"(\" + asPercent(dataVal.Correction, 1) + \" x count)\");\n                    break;\n                default:\n                    parts.push(dataVal.Correction.toString());\n            }\n        }\n\n        if (dataVal.DependFuncId !== undefined && dataVal.DependFuncVals !== undefined) {\n            switch (func.funcType) {\n                case FuncType.GAIN_HP_FROM_TARGETS:\n                    let amount;\n\n                    switch (dataVal.DependFuncId) {\n                        case 711:\n                            amount = dataVal.DependFuncVals.Value;\n                            break;\n                    }\n\n                    if (amount !== undefined) {\n                        parts.push(amount);\n                    }\n\n                    break;\n                case FuncType.GAIN_NP_FROM_TARGETS:\n                    let chargeAmount;\n\n                    switch (dataVal.DependFuncId) {\n                        case 474:\n                            chargeAmount = dataVal.DependFuncVals.Value2;\n                            break;\n                        case 3962:\n                            chargeAmount = dataVal.DependFuncVals.Value;\n                            break;\n                    }\n\n                    if (chargeAmount !== undefined) {\n                        parts.push(asPercent(chargeAmount, 2));\n                    }\n                    break;\n            }\n        }\n\n        if (!parts.length)\n            return <span>-</span>;\n\n        return <span>{mergeElements(parts, ' + ')}</span>;\n    }\n}\n\nexport default FuncValueDescriptor;\n","import React from \"react\";\nimport Buff, {BuffType} from \"../Api/Data/Buff\";\nimport {DataVal} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport {asPercent} from \"../Helper/OutputHelper\";\nimport TraitDescriptor from \"./TraitDescriptor\";\n\ninterface IProps {\n    region: Region;\n    buff: Buff;\n    dataVal: DataVal;\n}\n\nclass BuffValueDescriptor extends React.Component<IProps> {\n    render() {\n        let value: JSX.Element | string | null = null;\n\n        switch (this.props.buff.type) {\n            case BuffType.UP_ATK:\n            case BuffType.DOWN_ATK:\n            case BuffType.UP_COMMANDALL:\n            case BuffType.DOWN_COMMANDALL:\n            case BuffType.UP_CRITICALDAMAGE:\n            case BuffType.DOWN_CRITICALDAMAGE:\n            case BuffType.UP_CRITICALPOINT:\n            case BuffType.DOWN_CRITICALPOINT:\n            case BuffType.UP_CRITICALRATE:\n            case BuffType.DOWN_CRITICALRATE:\n            case BuffType.UP_CRITICAL_RATE_DAMAGE_TAKEN:\n            case BuffType.DOWN_CRITICAL_RATE_DAMAGE_TAKEN:\n            case BuffType.UP_DAMAGE:\n            case BuffType.DOWN_DAMAGE:\n            case BuffType.UP_DAMAGEDROPNP:\n            case BuffType.DOWN_DAMAGEDROPNP:\n            case BuffType.UP_DEFENCE:\n            case BuffType.DOWN_DEFENCE:\n            case BuffType.UP_DEFENCECOMMANDALL:\n            case BuffType.DOWN_DEFENCECOMMANDALL:\n            case BuffType.UP_DROPNP:\n            case BuffType.DOWN_DROPNP:\n            case BuffType.UP_FUNC_HP_REDUCE:\n            case BuffType.DOWN_FUNC_HP_REDUCE:\n            case BuffType.UP_HATE:\n            case BuffType.UP_NONRESIST_INSTANTDEATH:\n            case BuffType.UP_NPDAMAGE:\n            case BuffType.DOWN_NPDAMAGE:\n            case BuffType.UP_STARWEIGHT:\n            case BuffType.DOWN_STARWEIGHT:\n            case BuffType.UP_TOLERANCE:\n            case BuffType.DOWN_TOLERANCE:\n            case BuffType.UP_TOLERANCE_SUBSTATE:\n            case BuffType.DOWN_TOLERANCE_SUBSTATE:\n                value = asPercent(this.props.dataVal.Value, 1);\n                break;\n            case BuffType.REGAIN_NP:\n                value = asPercent(this.props.dataVal.Value, 2);\n                break;\n            case BuffType.ATTACK_FUNCTION:\n            case BuffType.COMMANDATTACK_FUNCTION:\n            case BuffType.COMMANDATTACK_BEFORE_FUNCTION:\n            case BuffType.DAMAGE_FUNCTION:\n            case BuffType.DEAD_FUNCTION:\n            case BuffType.DELAY_FUNCTION:\n            case BuffType.SELFTURNEND_FUNCTION:\n                if (this.props.dataVal.Value2)\n                    value = 'Lv. ' + this.props.dataVal.Value2;\n                break;\n            case BuffType.NPATTACK_PREV_BUFF:\n                if (this.props.dataVal.SkillLV)\n                    value = 'Lv. ' + this.props.dataVal.SkillLV;\n                break;\n            case BuffType.FIELD_INDIVIDUALITY:\n                if (typeof this.props.dataVal.Value === \"number\")\n                    value = <TraitDescriptor region={this.props.region} trait={this.props.dataVal.Value}/>;\n                break;\n            default:\n                value = this.props.dataVal.Value?.toString() ?? \"\";\n        }\n\n        return value;\n    }\n}\n\nexport default BuffValueDescriptor;\n"],"sourceRoot":""}