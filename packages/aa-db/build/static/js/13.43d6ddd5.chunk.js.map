{"version":3,"sources":["Component/DataTable.tsx","Component/RawDataViewer.tsx","Api/Data/ClassName.tsx","Component/ClassIcon.tsx","../node_modules/react-bootstrap/esm/Row.js","Api/Data/EntityType.tsx","Descriptor/ServantDescriptor.tsx","Page/Func/FuncMainData.tsx","Page/Func/DataValMainData.tsx","Page/NoblePhantasm/NoblePhantasmVersion.tsx","Page/NoblePhantasmPage.tsx"],"names":["DataTable","this","props","header","className","bordered","hover","Object","keys","data","map","key","index","dumpValue","value","element","undefined","type","JSON","stringify","React","Component","RawDataViewer","state","showing","setState","axios","get","error","style","cursor","onClick","show","icon","faSearchPlus","size","onHide","hide","Header","closeButton","Title","Body","src","collapsed","ClassName","classTypes","Map","classIds","SABER","ARCHER","LANCER","RIDER","CASTER","ASSASSIN","BERSERKER","SHIELDER","RULER","ALTER_EGO","AVENGER","MOON_CANCER","FOREIGNER","GRAND_CASTER","BEAST_I","BEAST_II","BEAST_IIIL","BEAST_IIIR","BEAST_UNKNOWN","ALL","EXTRA","ClassIcon","alt","location","height","classId","has","rarity","DEVICE_SIZES","Row","forwardRef","_ref","ref","bsPrefix","noGutters","_ref$as","as","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","_extends","classNames","apply","concat","displayName","defaultProps","EntityType","ServantDescriptor","to","region","servant","id","iconHeight","name","FuncMainData","func","funcId","funcType","funcTargetType","funcTargetTeam","funcPopupText","functvals","trait","traitVals","buffs","buff","DataValMainData","dataVal","NoblePhantasmVersion","noblePhantasm","functions","getTargetVersionValues","level","overcharge","FuncDescriptor","Col","xs","md","NoblePhantasmPage","loading","loadNp","Connection","ErrorStatus","Loading","rank","detail","card","reverseServants","filter","NORMAL","HEROINE","Form","inline","justifyContent","Control","onChange","ev","changeLevel","parseInt","target","changeOvercharge"],"mappings":"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","file":"static/js/13.43d6ddd5.chunk.js","sourcesContent":["import React from \"react\";\nimport {Table} from \"react-bootstrap\";\n\nimport \"./DataTable.css\";\nimport {Renderable} from \"../Helper/OutputHelper\";\n\ninterface IProp {\n    header?: JSX.Element | string,\n    data: {\n        [key: string]: Renderable | object;\n    }\n}\n\nclass DataTable extends React.Component<IProp> {\n    private static dumpValue(value: Renderable | object): Renderable {\n        if (typeof value === \"object\") {\n            const element = value as JSX.Element;\n            if (element.key !== undefined && element.props !== undefined && element.type !== undefined) {\n                return element;\n            } else {\n                return JSON.stringify(value);\n            }\n        }\n\n        return value;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.header ? (\n                    <div className={'data-header'}>\n                        {this.props.header}\n                    </div>\n                ) : null}\n\n                <Table bordered hover className={'data-table'}>\n                    <tbody>\n                    {Object.keys(this.props.data).map((key, index) => {\n                        return (\n                            <tr key={index}>\n                                <th>{key}</th>\n                                <td>{DataTable.dumpValue(this.props.data[key])}</td>\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default DataTable;\n","import {faSearchPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport {Modal} from \"react-bootstrap\";\nimport ReactJson from \"react-json-view\";\n\ninterface IProps {\n    data: object | string;\n}\n\ninterface IState {\n    data?: object;\n    showing: boolean;\n}\n\nclass RawDataViewer extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            showing: false\n        };\n    }\n\n    hide() {\n        this.setState({showing: false});\n    }\n\n    async show() {\n        if (this.state.data) {\n            this.setState({showing: true});\n        } else if (typeof this.props.data === \"object\") {\n            this.setState({showing: true, data: this.props.data});\n        } else {\n            try {\n                this.setState({\n                    showing: true,\n                    data: (await axios.get(this.props.data)).data,\n                });\n            } catch (e) {\n                this.setState({\n                    showing: true,\n                    data: {error: e}\n                });\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <span className={'text-primary'}\n                      style={{cursor: \"pointer\"}}\n                      onClick={() => {\n                          this.show();\n                      }}>\n                    View\n                    &nbsp;\n                    <FontAwesomeIcon icon={faSearchPlus}/>\n                </span>\n\n                <Modal size={\"lg\"} show={this.state.showing} onHide={() => this.hide()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Raw Data Viewer</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {this.state.data ? (\n                            <ReactJson src={this.state.data} collapsed={1}/>\n                        ) : null}\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default RawDataViewer;\n","enum ClassName {\n    SABER = \"saber\",\n    ARCHER = \"archer\",\n    LANCER = \"lancer\",\n    RIDER = \"rider\",\n    CASTER = \"caster\",\n    ASSASSIN = \"assassin\",\n    BERSERKER = \"berserker\",\n    SHIELDER = \"shielder\",\n    RULER = \"ruler\",\n    ALTER_EGO = \"alterEgo\",\n    AVENGER = \"avenger\",\n    GRAND_CASTER = \"grandCaster\",\n    BEAST_II = \"beastII\",\n    BEAST_I = \"beastI\",\n    MOON_CANCER = \"moonCancer\",\n    BEAST_IIIR = \"beastIIIR\",\n    FOREIGNER = \"foreigner\",\n    BEAST_IIIL = \"beastIIIL\",\n    BEAST_UNKNOWN = \"beastUnknown\",\n    ALL = \"ALL\",\n    EXTRA = \"EXTRA\",\n}\n\nexport default ClassName;\n","import React from \"react\";\nimport ClassName from \"../Api/Data/ClassName\";\n\nconst classTypes = new Map<number, number>([\n    [0, 0],\n    [1, 1],\n    [2, 1],\n    [3, 2],\n    [4, 3],\n    [5, 3],\n]);\nconst unknownClassType = 3;\nconst classIds = new Map<ClassName, number>([\n    [ClassName.SABER, 1],\n    [ClassName.ARCHER, 2],\n    [ClassName.LANCER, 3],\n    [ClassName.RIDER, 4],\n    [ClassName.CASTER, 5],\n    [ClassName.ASSASSIN, 6],\n    [ClassName.BERSERKER, 7],\n    [ClassName.SHIELDER, 8],\n    [ClassName.RULER, 9],\n    [ClassName.ALTER_EGO, 10],\n    [ClassName.AVENGER, 11],\n    [ClassName.MOON_CANCER, 23],\n    [ClassName.FOREIGNER, 25],\n    [ClassName.GRAND_CASTER, 5],\n    [ClassName.BEAST_I, 20],\n    [ClassName.BEAST_II, 20],\n    [ClassName.BEAST_IIIL, 20],\n    [ClassName.BEAST_IIIR, 20],\n    [ClassName.BEAST_UNKNOWN, 20],\n\n    [ClassName.ALL, 1001],\n    [ClassName.EXTRA, 1002],\n]);\nconst unknownClassId = 12;\n\ninterface IProps {\n    className: ClassName;\n    rarity?: number;\n    height?: number;\n}\n\nclass ClassIcon extends React.Component<IProps> {\n    render() {\n        return (\n            <img alt={''} src={this.location()}\n                 style={{height: this.props.height ?? 24}}/>\n        );\n    }\n\n    private location(): string {\n        let classId = classIds.has(this.props.className) ? classIds.get(this.props.className) : unknownClassId,\n            rarity = this.props.rarity ?? 5,\n            type = classTypes.has(rarity) ? classTypes.get(rarity) : unknownClassType;\n\n        return `https://assets.atlasacademy.io/GameData/NA/ClassIcons/class${type}_${classId}.png`;\n    }\n}\n\nexport default ClassIcon;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","enum EntityType {\n    NORMAL = \"normal\",\n    HEROINE = \"heroine\",\n    COMBINE_MATERIAL = \"combineMaterial\",\n    ENEMY = \"enemy\",\n    ENEMY_COLLECTION = \"enemyCollection\",\n    SERVANT_EQUIP = \"servantEquip\",\n    STATUS_UP = \"statusUp\",\n    SVT_EQUIP_MATERIAL = \"svtEquipMaterial\",\n    ENEMY_COLLECTION_DETAIL = \"enemyCollectionDetail\",\n    ALL = \"all\",\n    COMMAND_CODE = \"commandCode\",\n}\n\nexport default EntityType;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Region from \"../Api/Data/Region\";\nimport Servant from \"../Api/Data/Servant\";\nimport ClassIcon from \"../Component/ClassIcon\";\n\ninterface IProps {\n    region: Region;\n    servant: Servant;\n    iconHeight?: number;\n}\n\nclass ServantDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/servant/${this.props.servant.id}`}>\n                <ClassIcon className={this.props.servant.className}\n                           rarity={this.props.servant.rarity}\n                           height={this.props.iconHeight}/>\n                {' '}\n                {this.props.servant.name}\n            </Link>\n        );\n    }\n}\n\nexport default ServantDescriptor;\n","import React from \"react\";\nimport Func from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\nimport BuffDescriptor from \"../../Descriptor/BuffDescriptor\";\nimport TraitDescriptor from \"../../Descriptor/TraitDescriptor\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n}\n\nclass FuncMainData extends React.Component<IProps> {\n    render() {\n        const func = this.props.func;\n\n        return (\n            <DataTable data={{\n                \"Data\": <RawDataViewer data={func}/>,\n                \"Raw\": <RawDataViewer\n                    data={`https://api.atlasacademy.io/raw/${this.props.region}/function/${func.funcId}?expand=true`}/>,\n                \"ID\": func.funcId,\n                \"Type\": func.funcType,\n                \"Target\": func.funcTargetType,\n                \"Affects Players/Enemies\": func.funcTargetTeam,\n                \"Popup Text\": func.funcPopupText,\n                \"Target Traits\": (\n                    <div>\n                        {func.functvals.map((trait, index) => {\n                            return <TraitDescriptor key={index} region={this.props.region} trait={trait}/>;\n                        })}\n                    </div>\n                ),\n                \"Affects Traits\": (\n                    <div>\n                        {func.traitVals?.map((trait, index) => {\n                            return <TraitDescriptor key={index} region={this.props.region} trait={trait}/>;\n                        })}\n                    </div>\n                ),\n                \"Buffs\": (\n                    <div>\n                        {func.buffs.map((buff, index) => {\n                            return <BuffDescriptor key={index} region={this.props.region} buff={buff}/>;\n                        })}\n                    </div>\n                )\n            }}/>\n        );\n    }\n}\n\nexport default FuncMainData;\n","import React from \"react\";\nimport {DataVal} from \"../../Api/Data/Func\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\n\ninterface IProps {\n    dataVal: DataVal;\n}\n\nclass DataValMainData extends React.Component<IProps> {\n    render() {\n        return (\n            <DataTable data={{\n                \"Raw\": <RawDataViewer data={this.props.dataVal}/>,\n                ...this.props.dataVal\n            }}/>\n        );\n    }\n}\n\nexport default DataValMainData;\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport NoblePhantasm from \"../../Api/Data/NoblePhantasm\";\nimport Region from \"../../Api/Data/Region\";\nimport FuncDescriptor from \"../../Descriptor/FuncDescriptor\";\nimport {getTargetVersionValues} from \"../../Helper/FuncHelper\";\nimport DataValMainData from \"../Func/DataValMainData\";\nimport FuncMainData from \"../Func/FuncMainData\";\n\ninterface IProps {\n    region: Region;\n    noblePhantasm: NoblePhantasm;\n    level: number;\n    overcharge: number;\n}\n\nclass NoblePhantasmVersion extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {this.props.noblePhantasm.functions.map((func, index) => {\n                    const dataVal = getTargetVersionValues(func, this.props.level, this.props.overcharge);\n\n                    return (\n                        <div key={index}>\n                            <h3>Effect #{index + 1}</h3>\n                            <p>\n                                <FuncDescriptor region={this.props.region}\n                                                func={func}\n                                                level={this.props.level}\n                                                overcharge={this.props.overcharge}/>\n                            </p>\n\n                            <Row>\n                                <Col xs={12} md={6}>\n                                    <h5>Function</h5>\n                                    <FuncMainData region={this.props.region} func={func}/>\n                                </Col>\n                                <Col xs={12} md={6}>\n                                    <h5>Values</h5>\n                                    <DataValMainData dataVal={dataVal ?? {}}/>\n                                </Col>\n                            </Row>\n\n                            <hr/>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default NoblePhantasmVersion;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport EntityType from \"../Api/Data/EntityType\";\nimport NoblePhantasm from \"../Api/Data/NoblePhantasm\";\nimport Region from \"../Api/Data/Region\";\nimport DataTable from \"../Component/DataTable\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\nimport ServantDescriptor from \"../Descriptor/ServantDescriptor\";\nimport NoblePhantasmVersion from \"./NoblePhantasm/NoblePhantasmVersion\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    noblePhantasm?: NoblePhantasm;\n    level: number;\n    overcharge: number;\n}\n\nclass NoblePhantasmPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            level: 1,\n            overcharge: 1,\n        };\n    }\n\n    componentDidMount() {\n        this.loadNp();\n    }\n\n    async loadNp() {\n        try {\n            const noblePhantasm = await Connection.noblePhantasm(this.props.region, this.props.id);\n\n            this.setState({\n                loading: false,\n                noblePhantasm: noblePhantasm,\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    private changeLevel(level: number) {\n        this.setState({\n            level: level\n        });\n    }\n\n    private changeOvercharge(level: number) {\n        this.setState({\n            overcharge: level\n        });\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error} />;\n\n        if (this.state.loading || !this.state.noblePhantasm)\n            return <Loading/>;\n\n        const noblePhantasm = this.state.noblePhantasm;\n\n        return (\n            <div>\n                <h1>{noblePhantasm.name}</h1>\n                <br/>\n\n                <DataTable data={{\n                    \"Data\": <RawDataViewer data={noblePhantasm}/>,\n                    \"Raw\": <RawDataViewer data={`https://api.atlasacademy.io/raw/${this.props.region}/NP/${noblePhantasm.id}?expand=true`}/>,\n                    \"ID\": noblePhantasm.id,\n                    \"Name\": noblePhantasm.name,\n                    \"Type\": noblePhantasm.type,\n                    \"Rank\": noblePhantasm.rank,\n                    \"Detail\": noblePhantasm.detail,\n                    \"Card Type\": noblePhantasm.card,\n                    \"Owner\": (\n                        <div>\n                            {noblePhantasm.reverseServants\n                                .filter(servant => {\n                                    return servant.type === EntityType.NORMAL\n                                        || servant.type === EntityType.HEROINE\n                                })\n                                .map((servant, index) => {\n                                    return (\n                                        <div>\n                                            <ServantDescriptor region={this.props.region}\n                                                               servant={servant}\n                                                               iconHeight={24}/>\n                                        </div>\n                                    );\n                                })\n                            }\n                        </div>\n                    )\n                }}/>\n\n                <br/>\n                <Row>\n                    <Col>\n                        <Form inline style={{justifyContent: 'flex-end'}}>\n                            <Form.Control as={'select'} value={this.state.level}\n                                          onChange={(ev: Event) => this.changeLevel(parseInt(ev.target.value))}>\n                                {[1, 2, 3, 4, 5].map(level => (\n                                    <option key={level} value={level}>NP LEVEL {level}</option>\n                                ))}\n                            </Form.Control>\n                        </Form>\n                    </Col>\n                    <Col>\n                        <Form inline>\n                            <Form.Control as={'select'} value={this.state.overcharge}\n                                          onChange={(ev: Event) => this.changeOvercharge(parseInt(ev.target.value))}>\n                                {[1, 2, 3, 4, 5].map(level => (\n                                    <option key={level} value={level}>OVERCHARGE {level}</option>\n                                ))}\n                            </Form.Control>\n                        </Form>\n                    </Col>\n                </Row>\n\n                <br/>\n                <NoblePhantasmVersion region={this.props.region}\n                                      noblePhantasm={noblePhantasm}\n                                      level={this.state.level}\n                                      overcharge={this.state.overcharge}/>\n            </div>\n        );\n    }\n}\n\nexport default NoblePhantasmPage;\n"],"sourceRoot":""}