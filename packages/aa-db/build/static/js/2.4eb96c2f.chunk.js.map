{"version":3,"sources":["Component/RawDataViewer.tsx","Descriptor/TraitDescriptor.tsx","Component/BuffIcon.tsx","Api/Data/Buff.tsx","Descriptor/SkillDescriptor.tsx","Descriptor/BuffDescriptor.tsx","Api/Data/Region.tsx","Api/ResultCache.tsx","Api/Connection.tsx","Helper/OutputHelper.tsx","Component/DataTable.tsx"],"names":["RawDataViewer","props","state","showing","this","setState","className","style","cursor","onClick","show","icon","faSearchPlus","size","onHide","hide","Header","closeButton","Title","Body","src","data","collapsed","React","Component","traitDescriptions","Map","TraitDescriptor","id","trait","undefined","Connection","traitMap","region","name","get","getDescription","BuffIcon","alt","location","height","verticalAlign","BuffType","SkillDescriptor","to","skill","iconHeight","upDownBuffs","up","UP_ATK","down","DOWN_ATK","description","UP_CHAGETD","UP_COMMANDATK","DOWN_COMMANDATK","UP_CRITICALDAMAGE","DOWN_CRITICALDAMAGE","UP_CRITICALPOINT","DOWN_CRITICALPOINT","UP_CRITICALRATE","DOWN_CRITICALRATE","UP_CRITICAL_RATE_DAMAGE_TAKEN","DOWN_CRITICAL_RATE_DAMAGE_TAKEN","UP_DAMAGE","DOWN_DAMAGE","UP_DAMAGEDROPNP","DOWN_DAMAGEDROPNP","UP_DEFENCE","DOWN_DEFENCE","UP_DEFENCECOMMANDALL","DOWN_DEFENCECOMMANDALL","UP_DROPNP","DOWN_DROPNP","UP_FUNC_HP_REDUCE","DOWN_FUNC_HP_REDUCE","UP_GRANT_INSTANTDEATH","DOWN_GRANT_INSTANTDEATH","UP_GRANTSTATE","DOWN_GRANTSTATE","UP_NONRESIST_INSTANTDEATH","UP_NPDAMAGE","DOWN_NPDAMAGE","UP_STARWEIGHT","DOWN_STARWEIGHT","UP_TOLERANCE","DOWN_TOLERANCE","UP_TOLERANCE_SUBSTATE","DOWN_TOLERANCE_SUBSTATE","typeDescriptions","AVOID_INSTANTDEATH","AVOID_STATE","ADD_DAMAGE","ADD_INDIVIDUALITY","AVOIDANCE","BREAK_AVOIDANCE","DELAY_FUNCTION","DONOT_NOBLE","DONOT_NOBLE_COND_MISMATCH","DONOT_RECOVERY","DONOT_SELECT_COMMANDCARD","DONOT_SKILL","FIELD_INDIVIDUALITY","GUTS","INVINCIBLE","MULTIATTACK","PIERCE_INVINCIBLE","REGAIN_HP","REGAIN_NP","REGAIN_STAR","SELFTURNEND_FUNCTION","SUB_SELFDAMAGE","TD_TYPE_CHANGE","UP_HATE","BuffDescriptor","getTraitFilters","Fragment","traits","buff","ckSelfIndv","filter","indexOf","length","joinElements","map","cards","hasApplicableTrait","push","join","ckOpIndv","element","index","key","traitIds","vals","x","traitId","mergeElements","type","has","isUpDownBuff","getUpDownDescription","getTraitFilterAppend","UP_COMMANDALL","getCommandCardTypes","getTraitFilterAppendWithoutCards","DOWN_COMMANDALL","ATTACK_FUNCTION","COMMANDATTACK_FUNCTION","COMMANDATTACK_BEFORE_FUNCTION","DAMAGE_FUNCTION","DEAD_FUNCTION","NPATTACK_PREV_BUFF","hasTypeDescription","getTypeDescription","hasTraitDescription","getTraitDescription","getEffectiveTargetsDescriptions","Region","ResultCache","cache","pending","pendingCatches","fetcher","duration","value","Promise","resolve","callbacks","reject","set","call","then","forEach","callback","delete","window","setTimeout","catch","error","host","fetch","endpoint","a","axios","response","craftEssence","craftEssenceList","func","mysticCode","mysticCodeList","noblePhantasm","quest","servant","servantList","language","Manager","query","LanguageOption","ENGLISH","NA","getCacheableCraftEssenceList","JP","DEFAULT","jp","na","names","entity","getCacheableMysticCodeList","phase","getCacheableServantList","asPercent","pow","parseInt","decimal","Math","handleNewLine","text","split","elements","separator","parts","pushElement","previous","toString","seperator","DataTable","header","bordered","hover","Object","keys","dumpValue","JSON","stringify"],"mappings":"oMAcMA,E,kDACF,WAAYC,GAAgB,IAAD,8BACvB,cAAMA,IAEDC,MAAQ,CACTC,SAAS,GAJU,E,mDASvBC,KAAKC,SAAS,CAACF,SAAS,M,6BAIxBC,KAAKC,SAAS,CAACF,SAAS,M,+BAGlB,IAAD,OACL,OACI,6BACI,0BAAMG,UAAW,eACXC,MAAO,CAACC,OAAQ,WAChBC,QAAS,WACL,EAAKC,SAHf,gBAOI,kBAAC,IAAD,CAAiBC,KAAMC,OAG3B,kBAAC,IAAD,CAAOC,KAAM,KAAMH,KAAMN,KAAKF,MAAMC,QAASW,OAAQ,kBAAM,EAAKC,SAC5D,kBAAC,IAAMC,OAAP,CAAcC,aAAW,GACrB,kBAAC,IAAMC,MAAP,yBAEJ,kBAAC,IAAMC,KAAP,KACI,kBAAC,IAAD,CAAWC,IAAKhB,KAAKH,MAAMoB,KAAMC,UAAW,W,GAnCxCC,IAAMC,WA2CnBxB,O,sHCpDTyB,EAAoB,IAAIC,IAAoB,CAC9C,CAAC,EAAG,eACJ,CAAC,EAAG,iBACJ,CAAC,EAAG,kBACJ,CAAC,IAAK,eACN,CAAC,IAAK,gBACN,CAAC,IAAK,gBACN,CAAC,IAAK,eACN,CAAC,IAAK,gBACN,CAAC,IAAK,kBACN,CAAC,IAAK,mBACN,CAAC,IAAK,kBACN,CAAC,IAAK,eACN,CAAC,IAAK,mBACN,CAAC,IAAK,iBACN,CAAC,IAAK,gBACN,CAAC,IAAK,sBACN,CAAC,IAAK,WACN,CAAC,IAAK,YACN,CAAC,IAAK,qBACN,CAAC,IAAK,cACN,CAAC,IAAK,mBACN,CAAC,IAAK,cACN,CAAC,IAAK,iBACN,CAAC,IAAK,iBACN,CAAC,IAAK,kBACN,CAAC,IAAK,mBACN,CAAC,IAAK,kBACN,CAAC,IAAK,mBACN,CAAC,IAAK,oBACN,CAAC,IAAK,qBACN,CAAC,IAAK,qBACN,CAAC,IAAK,kBACN,CAAC,IAAK,kBACN,CAAC,IAAK,sBACN,CAAC,IAAK,qBACN,CAAC,IAAK,oBACN,CAAC,IAAM,WACP,CAAC,KAAM,UACP,CAAC,KAAM,kBACP,CAAC,KAAM,SACP,CAAC,KAAM,UACP,CAAC,KAAM,WACP,CAAC,KAAM,cACP,CAAC,KAAM,YACP,CAAC,KAAM,kBACP,CAAC,KAAM,QACP,CAAC,KAAM,UACP,CAAC,KAAM,kBACP,CAAC,KAAM,kBACP,CAAC,KAAM,UACP,CAAC,KAAM,SACP,CAAC,KAAM,QACP,CAAC,KAAM,SACP,CAAC,KAAM,SACP,CAAC,KAAM,UACP,CAAC,KAAM,aACP,CAAC,KAAM,eACP,CAAC,KAAM,cACP,CAAC,KAAM,cACP,CAAC,KAAM,eACP,CAAC,KAAM,kBAaLC,E,kDACF,WAAY1B,GAAgB,IAAD,8BACvB,cAAMA,IAEDC,MAAQ,CACT0B,GAA2B,kBAAhB3B,EAAM4B,MAAqB5B,EAAM4B,MAAQ5B,EAAM4B,MAAMD,GAChEC,MAA8B,kBAAhB5B,EAAM4B,WAAqBC,EAAY7B,EAAM4B,OALxC,E,oLAUnBzB,KAAKF,MAAM2B,M,iEAGQE,IAAWC,SAAS5B,KAAKH,MAAMgC,Q,YACtBH,KAD1BE,E,QACO5B,KAAKF,MAAM0B,KACpBxB,KAAKC,SAAS,CACVwB,MAAO,CACHD,GAAIxB,KAAKF,MAAM0B,GACfM,KAAMF,EAAS5B,KAAKF,MAAM0B,O,6IAStC,OADcH,EAAkBU,IAAI/B,KAAKF,MAAM0B,MAK3CxB,KAAKF,MAAM2B,OAAmC,YAA1BzB,KAAKF,MAAM2B,MAAMK,KAC9B9B,KAAKF,MAAM2B,MAAMK,KAEtB,WAAN,OAAkB9B,KAAKF,MAAM0B,GAA7B,Q,+BAIA,OACI,kCACMxB,KAAKgC,iBADX,S,GAxCkBb,IAAMC,WA+CrBG,O,qFCvHTU,E,uKAEQ,IAAD,EACL,OACI,yBAAKC,IAAK,GAAIlB,IAAKhB,KAAKH,MAAMsC,SAAUhC,MAAO,CAC3CiC,OAAM,UAAEpC,KAAKH,MAAMuC,cAAb,QAAuB,GAC7BC,cAAe,gB,GANRlB,IAAMC,WAada,O,iCCjBR,IAAKK,EAAZ,kC,SAAYA,K,YAAAA,E,6BAAAA,E,6BAAAA,E,mCAAAA,E,uCAAAA,E,qBAAAA,E,yBAAAA,E,qBAAAA,E,qBAAAA,E,eAAAA,E,mBAAAA,E,qBAAAA,E,yBAAAA,E,uBAAAA,E,uBAAAA,E,yBAAAA,E,6BAAAA,E,qBAAAA,E,qCAAAA,E,yCAAAA,E,6BAAAA,E,iCAAAA,E,+BAAAA,E,+BAAAA,E,sBAAAA,E,iCAAAA,E,wBAAAA,E,6BAAAA,E,iCAAAA,E,2BAAAA,E,+BAAAA,E,yBAAAA,E,qBAAAA,E,yBAAAA,E,yBAAAA,E,+BAAAA,E,+BAAAA,E,YAAAA,E,iBAAAA,E,qCAAAA,E,qCAAAA,E,uBAAAA,E,2BAAAA,E,+BAAAA,E,2BAAAA,E,6BAAAA,E,iCAAAA,E,iCAAAA,E,qBAAAA,E,yBAAAA,E,sBAAAA,E,0BAAAA,E,iCAAAA,E,iCAAAA,E,+BAAAA,E,iCAAAA,E,qCAAAA,E,qCAAAA,E,uCAAAA,E,8CAAAA,E,oDAAAA,E,+BAAAA,E,yCAAAA,E,6BAAAA,E,mBAAAA,E,uBAAAA,E,qBAAAA,E,qBAAAA,E,2CAAAA,E,uCAAAA,E,2CAAAA,E,8BAAAA,E,kCAAAA,E,+CAAAA,E,yCAAAA,E,qCAAAA,E,yCAAAA,E,iCAAAA,E,qCAAAA,E,+BAAAA,E,uBAAAA,E,yCAAAA,E,oCAAAA,E,wCAAAA,E,4CAAAA,E,gDAAAA,E,4CAAAA,E,gDAAAA,E,uBAAAA,E,iCAAAA,E,2CAAAA,E,+CAAAA,E,6CAAAA,E,sDAAAA,E,sDAAAA,E,gDAAAA,E,oDAAAA,E,qEAAAA,E,yEAAAA,E,2BAAAA,E,+BAAAA,E,0BAAAA,E,sBAAAA,E,0BAAAA,E,qDAAAA,E,yDAAAA,E,+BAAAA,E,sBAAAA,E,0BAAAA,E,8BAAAA,E,kCAAAA,E,mCAAAA,E,uCAAAA,E,gDAAAA,E,oDAAAA,E,sCAAAA,E,iCAAAA,E,2BAAAA,E,yCAAAA,E,4CAAAA,E,2CAAAA,E,oCAAAA,E,iCAAAA,E,uDAAAA,E,mDAAAA,E,kDAAAA,E,6BAAAA,E,iDAAAA,E,8BAAAA,E,kDAAAA,E,uCAAAA,E,2CAAAA,E,yCAAAA,E,4DAAAA,E,6BAAAA,E,0DAAAA,E,8DAAAA,E,0DAAAA,E,+DAAAA,M,4GCSNC,E,uKAEE,OACI,kBAAC,IAAD,CAAMC,GAAE,WAAMxC,KAAKH,MAAMgC,OAAjB,kBAAiC7B,KAAKH,MAAM4C,MAAMjB,KAA1D,IAEI,kBAAC,IAAD,CAAUW,SAAUnC,KAAKH,MAAM4C,MAAMlC,KAAM6B,OAAQpC,KAAKH,MAAM6C,aAC7D,IACA1C,KAAKH,MAAM4C,MAAMX,KAAO9B,KAAKH,MAAM4C,MAAMX,KAAzC,iBAA0D9B,KAAKH,MAAM4C,MAAMjB,IAJhF,S,GAHkBL,IAAMC,WAcrBmB,O,gIClBTI,EAAyE,CAC3E,CAACC,GAAIN,IAASO,OAAQC,KAAMR,IAASS,SAAUC,YAAa,OAC5D,CAACJ,GAAIN,IAASW,WAAYH,UAAMpB,EAAWsB,YAAa,cACxD,CAACJ,GAAIN,IAASY,cAAeJ,KAAMR,IAASa,gBAAiBH,YAAa,OAC1E,CAACJ,GAAIN,IAASc,kBAAmBN,KAAMR,IAASe,oBAAqBL,YAAa,mBAClF,CAACJ,GAAIN,IAASgB,iBAAkBR,KAAMR,IAASiB,mBAAoBP,YAAa,kBAChF,CAACJ,GAAIN,IAASkB,gBAAiBV,KAAMR,IAASmB,kBAAmBT,YAAa,iBAC9E,CACIJ,GAAIN,IAASoB,8BACbZ,KAAMR,IAASqB,gCACfX,YAAa,uBAEjB,CAACJ,GAAIN,IAASsB,UAAWd,KAAMR,IAASuB,YAAab,YAAa,UAClE,CAACJ,GAAIN,IAASwB,gBAAiBhB,KAAMR,IAASyB,kBAAmBf,YAAa,wBAC9E,CAACJ,GAAIN,IAAS0B,WAAYlB,KAAMR,IAAS2B,aAAcjB,YAAa,OACpE,CAACJ,GAAIN,IAAS4B,qBAAsBpB,KAAMR,IAAS6B,uBAAwBnB,YAAa,cACxF,CAACJ,GAAIN,IAAS8B,UAAWtB,KAAMR,IAAS+B,YAAarB,YAAa,WAClE,CAACJ,GAAIN,IAASgC,kBAAmBxB,KAAMR,IAASiC,oBAAqBvB,YAAa,qBAClF,CAACJ,GAAIN,IAASkC,sBAAuB1B,KAAMR,IAASmC,wBAAyBzB,YAAa,gBAC1F,CAACJ,GAAIN,IAASoC,cAAe5B,KAAMR,IAASqC,gBAAiB3B,YAAa,eAC1E,CAACJ,QAAIlB,EAAWoB,KAAMR,IAASsC,0BAA2B5B,YAAa,gBACvE,CAACJ,GAAIN,IAASuC,YAAa/B,KAAMR,IAASwC,cAAe9B,YAAa,aACtE,CAACJ,GAAIN,IAASyC,cAAejC,KAAMR,IAAS0C,gBAAiBhC,YAAa,eAC1E,CAACJ,GAAIN,IAAS2C,aAAcnC,KAAMR,IAAS4C,eAAgBlC,YAAa,iBACxE,CAACJ,GAAIN,IAAS6C,sBAAuBrC,KAAMR,IAAS8C,wBAAyBpC,YAAa,wBAGxF3B,EAAoB,IAAIC,IAAoB,CAC9C,CAAC,KAAM,SACP,CAAC,KAAM,QACP,CAAC,KAAM,SACP,CAAC,KAAM,UAGL+D,EAAmB,IAAI/D,IAAsB,CAC/C,CAACgB,IAASgD,mBAAoB,mBAC9B,CAAChD,IAASiD,YAAa,YACvB,CAACjD,IAASkD,WAAY,eACtB,CAAClD,IAASmD,kBAAmB,aAC7B,CAACnD,IAASoD,UAAW,SACrB,CAACpD,IAASqD,gBAAiB,YAC3B,CAACrD,IAASsD,eAAgB,gCAC1B,CAACtD,IAASuD,YAAa,WACvB,CAACvD,IAASwD,0BAA2B,gCACrC,CAACxD,IAASyD,eAAgB,qBAC1B,CAACzD,IAAS0D,yBAA0B,2BACpC,CAAC1D,IAAS2D,YAAa,cACvB,CAAC3D,IAAS4D,oBAAqB,qBAC/B,CAAC5D,IAAS6D,KAAM,QAChB,CAAC7D,IAAS8D,WAAY,cACtB,CAAC9D,IAAS+D,YAAa,iBACvB,CAAC/D,IAASgE,kBAAmB,qBAC7B,CAAChE,IAASiE,UAAW,eACrB,CAACjE,IAASkE,UAAW,eACrB,CAAClE,IAASmE,YAAa,kBACvB,CAACnE,IAASoE,qBAAsB,gCAChC,CAACpE,IAASqE,eAAgB,cAC1B,CAACrE,IAASsE,eAAgB,yBAC1B,CAACtE,IAASuE,QAAS,WAQjBC,E,qLAEE,GAAK9G,KAAK+G,kBAGV,OAAO,kBAAC,IAAMC,SAAP,aAAsBhH,KAAK+G,qB,yDAG+B,IAAD,OAC1DE,EAASjH,KAAKH,MAAMqH,KAAKC,WAAWC,QACtC,SAAA3F,GAAK,OAAoD,IAAhD,CAAC,KAAM,KAAM,KAAM,MAAM4F,QAAQ5F,EAAMD,OAGpD,GAAKyF,EAAOK,OAGZ,OACI,kBAAC,IAAMN,SAAP,KACK,IADL,MAGK,IACAO,YACGN,EAAOO,KACH,SAAA/F,GAAK,OAAI,kBAAC,IAAD,CAAiBI,OAAQ,EAAKhC,MAAMgC,OAAQJ,MAAOA,OAEhE,U,4CAOZ,IAAMgG,EAAQ,GAsBd,OApBIzH,KAAK0H,mBAAmB,OACxBD,EAAME,KAAK,QAGX3H,KAAK0H,mBAAmB,OACxBD,EAAME,KAAK,UAGX3H,KAAK0H,mBAAmB,OACxBD,EAAME,KAAK,SAGX3H,KAAK0H,mBAAmB,OACxBD,EAAME,KAAK,SAGVF,EAAMH,QACPG,EAAME,KAAK,gBAGRF,EAAMG,KAAK,S,wDAG8C,IAAD,OACzDV,EAAOlH,KAAKH,MAAMqH,KAExB,GAAKA,EAAKW,SAASP,OAGnB,OACI,kBAAC,IAAMN,SAAP,KACK,QACAO,YACGL,EAAKW,SAASL,KAAI,SAAA/F,GACd,OAAO,kBAAC,IAAD,CAAiBI,OAAQ,EAAKhC,MAAMgC,OAAQJ,MAAOA,OAE9D,OACF+F,KAAI,SAACM,EAASC,GACZ,OAAO,kBAAC,IAAMf,SAAP,CAAgBgB,IAAKD,GAAQD,S,4CAOhD,IACIG,EADSjI,KAAKH,MAAMqH,KACJgB,KAAKV,KAAI,SAAA/F,GAAK,OAAIA,EAAMD,MAE5C,IAAK,IAAI2G,KAAKF,EAAU,CACpB,IAAMG,EAAUH,EAASE,GACrBnF,EAAc3B,EAAkBU,IAAIqG,GAExC,QAAoB1G,IAAhBsB,EACA,OAAOA,EAGf,MAAO,K,wCAGyC,IAAD,OAC/C,GAAKhD,KAAKH,MAAMqH,KAAKC,WAAWG,OAGhC,OACI,kBAAC,IAAMN,SAAP,KACKqB,YACGrI,KAAKH,MAAMqH,KAAKC,WAAWK,KACvB,SAAA/F,GAAK,OAAI,kBAAC,IAAD,CAAiBI,OAAQ,EAAKhC,MAAMgC,OAAQJ,MAAOA,OAEhE,U,2CAMsB,IAAD,EAC3B6G,EAAOtI,KAAKH,MAAMqH,KAAKoB,KAE7B,iBAAOjD,EAAiBtD,IAAIuG,UAA5B,QAAqC,K,6CAIrC,IAAMA,EAAOtI,KAAKH,MAAMqH,KAAKoB,KAE7B,IAAK,IAAIH,KAAKxF,EAAa,CACvB,GAAIA,EAAYwF,GAAGvF,KAAO0F,EACtB,MAAM,GAAN,OAAU3F,EAAYwF,GAAGnF,YAAzB,OACJ,GAAIL,EAAYwF,GAAGrF,OAASwF,EACxB,MAAM,GAAN,OAAU3F,EAAYwF,GAAGnF,YAAzB,SAGR,MAAO,K,yCAGgBxB,GAGvB,OAFaxB,KAAKH,MAAMqH,KAEZC,WAAWC,QAAO,SAAA3F,GAAK,OAAIA,EAAMD,KAAOA,KAAI8F,OAAS,I,4CAIjE,IACIW,EADSjI,KAAKH,MAAMqH,KACJgB,KAAKV,KAAI,SAAA/F,GAAK,OAAIA,EAAMD,MAE5C,IAAK,IAAI2G,KAAKF,EAAU,CACpB,IAAMG,EAAUH,EAASE,GAGzB,QAAoBzG,IAFFL,EAAkBU,IAAIqG,GAGpC,OAAO,EAGf,OAAO,I,2CAIP,IAAMlB,EAAOlH,KAAKH,MAAMqH,KAExB,OAAO7B,EAAiBkD,IAAIrB,EAAKoB,Q,qCAIjC,IAAMA,EAAOtI,KAAKH,MAAMqH,KAAKoB,KAE7B,IAAK,IAAIH,KAAKxF,EACV,GAAIA,EAAYwF,GAAGvF,KAAO0F,GAAQ3F,EAAYwF,GAAGrF,OAASwF,EACtD,OAAO,EAGf,OAAO,I,+BAIP,IAAMpB,EAAOlH,KAAKH,MAAMqH,KAEpBlE,EAAoCkE,EAAKpF,KAsD7C,OApDI9B,KAAKwI,eACLxF,EAAc,kBAAC,IAAMgE,SAAP,KACThH,KAAKyI,uBACLzI,KAAK0I,wBAEHxB,EAAKoB,OAAShG,IAASqG,cAC9B3F,EAAc,kBAAC,IAAMgE,SAAP,KACThH,KAAK4I,sBADI,MAET5I,KAAK6I,oCAEH3B,EAAKoB,OAAShG,IAASwG,gBAC9B9F,EAAc,kBAAC,IAAMgE,SAAP,KACThH,KAAK4I,sBADI,QAET5I,KAAK6I,oCAEH3B,EAAKoB,OAAShG,IAASyG,gBAC9B/F,EAAc,kBAAC,IAAMgE,SAAP,yBACQhH,KAAK+G,kBADb,YAGPG,EAAKoB,OAAShG,IAAS0G,uBAC9BhG,EAAc,kBAAC,IAAMgE,SAAP,yBACQhH,KAAK+G,kBADb,UAGPG,EAAKoB,OAAShG,IAAS2G,8BAC9BjG,EAAc,kBAAC,IAAMgE,SAAP,6BACYhH,KAAK+G,kBADjB,UAGPG,EAAKoB,OAAShG,IAAS4G,gBAC9BlG,EAAc,kBAAC,IAAMgE,SAAP,mCACkBhH,KAAK+G,kBADvB,YAGPG,EAAKoB,OAAShG,IAAS6G,cAC9BnG,EAAc,kBAAC,IAAMgE,SAAP,8BAEThH,KAAK0I,wBAEHxB,EAAKoB,OAAShG,IAAS8G,mBAC9BpG,EAAc,kBAAC,IAAMgE,SAAP,yBACQhH,KAAK+G,kBADb,OAGP/G,KAAKqJ,qBACZrG,EAAc,kBAAC,IAAMgE,SAAP,KACThH,KAAKsJ,qBACLtJ,KAAK0I,wBAEH1I,KAAKuJ,wBACZvG,EAAc,kBAAC,IAAMgE,SAAP,KACThH,KAAKwJ,sBACLxJ,KAAK0I,yBAKV,kBAAC,IAAD,CAAMlG,GAAE,WAAMxC,KAAKH,MAAMgC,OAAjB,iBAAgCqF,EAAK1F,KAA7C,IAEI,kBAAC,IAAD,CAAUW,SAAU+E,EAAK3G,OACxB,IACAyC,EACAhD,KAAKyJ,kCALV,S,GAhOiBtI,IAAMC,WA4OpB0F,O,0DCtTV4C,E,8FAAAA,K,QAAAA,E,SAAAA,M,KAKUA,QC0DAC,E,iDA9DHC,MAAQ,IAAItI,I,KACZuI,QAAU,IAAIvI,I,KACdwI,eAAiB,IAAIxI,I,gDAEzB0G,EAAQ+B,EAAmBC,GAAsC,IAAD,OAC1DC,EAAQjK,KAAK4J,MAAM7H,IAAIiG,GAC7B,QAActG,IAAVuI,EACA,OAAO,IAAIC,SAAW,SAAAC,GAClBA,EAAQF,MAIhB,IAAMG,EAAYpK,KAAK6J,QAAQ9H,IAAIiG,GACnC,YAAkBtG,IAAd0I,EACO,IAAIF,SAAW,SAACC,EAASE,GAAY,IAAD,EACvCD,EAAUzC,KAAKwC,IAEF,UAAG,EAAKL,eAAe/H,IAAIiG,UAA3B,QAAmC,IACxCL,KAAK0C,OAIrBrK,KAAK6J,QAAQS,IAAItC,EAAK,IACtBhI,KAAK8J,eAAeQ,IAAItC,EAAK,IACtB,IAAIkC,SAAW,SAACC,EAASE,GAC5BN,EACKQ,KAAK,MACLC,MAAK,SAACP,GAAc,IAAD,GACD,UAAG,EAAKJ,QAAQ9H,IAAIiG,UAApB,QAA4B,IAEjCyC,SAAQ,SAAAC,GACdA,EAASH,KAAK,KAAMN,MAGxB,EAAKL,MAAMU,IAAItC,EAAKiC,GACpB,EAAKJ,QAAQc,OAAO3C,GACpB,EAAK8B,eAAea,OAAO3C,GAEV,OAAbgC,GACAY,OAAOC,YAAW,WACd,EAAKjB,MAAMe,OAAO3C,KACnBgC,GAGPG,EAAQF,MAEXa,OAAM,SAACC,GAAgB,IAAD,GACJ,UAAG,EAAKjB,eAAe/H,IAAIiG,UAA3B,QAAmC,IAExCyC,SAAQ,SAAAC,GACdA,EAASH,KAAK,KAAMQ,MAGxB,EAAKlB,QAAQc,OAAO3C,GACpB,EAAK8B,eAAea,OAAO3C,GAE3BqC,EAAOU,c,KCzCrBC,EAAO,8BAETC,EAAK,uCAAG,WAAmBC,GAAnB,eAAAC,EAAA,sEACmBC,IAAMrJ,IAAOmJ,GADhC,cACEG,EADF,yBAGGA,EAASpK,MAHZ,2CAAH,sDAKL2I,EAAQ,CACJ1C,KAAM,IAAIyC,EACV2B,aAAc,IAAI3B,EAClB4B,iBAAkB,IAAI5B,EACtB6B,KAAM,IAAI7B,EACV8B,WAAY,IAAI9B,EAChB+B,eAAgB,IAAI/B,EACpBgC,cAAe,IAAIhC,EACnBiC,MAAO,IAAIjC,EACXkC,QAAS,IAAIlC,EACbmC,YAAa,IAAInC,EACjBlH,MAAO,IAAIkH,EACX/H,SAAU,IAAI+H,GAGhBhI,E,kGACUE,EAAgBL,GACxB,IAAMuK,EAAWC,IAAQD,WACrB/D,EAAG,UAAMnG,EAAN,YAAgBkK,EAAhB,YAA4BvK,GAEnC,OAAOoI,EAAM1C,KAAKnF,IACdiG,GACA,WACI,IAAIiE,EAAQ,iBACRF,IAAaG,IAAeC,QAAU,WAAa,IAGvD,OAAOlB,EAAK,UAAUD,EAAV,iBAAuBnJ,EAAvB,iBAAsCL,GAAtC,OAA2CyK,MAjCnD,O,mCAuCIpK,EAAgBL,GAChC,IAAMuK,EAAWC,IAAQD,WACrB/D,EAAG,UAAMnG,EAAN,YAAgBkK,EAAhB,YAA4BvK,GAEnC,OAAOoI,EAAM0B,aAAavJ,IACtBiG,GACA,WACI,IAAIiE,EAAQ,cACRF,IAAaG,IAAeC,QAAU,WAAa,IAGvD,OAAOlB,EAAK,UAAaD,EAAb,iBAA0BnJ,EAA1B,kBAA0CL,GAA1C,OAA+CyK,MAlDvD,O,gFAwDcpK,G,8EACtBA,IAAW6H,EAAO0C,G,yCACXzK,EAAW0K,6BAA6B3C,EAAO0C,K,UAC/CvK,IAAW6H,EAAO4C,IAAMN,IAAQD,aAAeG,IAAeK,Q,yCAC9D5K,EAAW0K,6BAA6B3C,EAAO4C,K,uBAGzC3K,EAAW0K,6BAA6B3C,EAAO4C,I,cAA1DE,E,iBACS7K,EAAW0K,6BAA6B3C,EAAO0C,I,eAA1DK,E,OACAC,EAAQ,IAAIpL,IAAoBmL,EAAGjF,KAAI,SAAAmF,GAAM,MAAI,CAACA,EAAOnL,GAAImL,EAAO7K,U,kBAEjE0K,EAAGhF,KAAqB,SAAAmF,GAAW,IAAD,EACrC,OAAO,2BACAA,GADP,IAEI7K,KAAI,UAAE4K,EAAM3K,IAAI4K,EAAOnL,WAAnB,QAA0BmL,EAAO7K,W,8HAKrCD,EAAgBL,GACxB,IAAMuK,EAAWC,IAAQD,WACrB/D,EAAG,UAAMnG,EAAN,YAAgBkK,EAAhB,YAA4BvK,GAEnC,OAAOoI,EAAM4B,KAAKzJ,IACdiG,GACA,WACI,IAAIiE,EAAQ,iBACRF,IAAaG,IAAeC,QAAU,WAAa,IAGvD,OAAOlB,EAAK,UAAUD,EAAV,iBAAuBnJ,EAAvB,qBAA0CL,GAA1C,OAA+CyK,MAtFvD,O,iCA4FEpK,EAAgBL,GAC9B,IAAMwG,EAAG,UAAMnG,EAAN,YAAgBL,GAEzB,OAAOoI,EAAM6B,WAAW1J,IACpBiG,GACA,WACI,OAAOiD,EAAK,UAAgBD,EAAhB,iBAA6BnJ,EAA7B,eAA0CL,MAlGlD,O,8EAwGYK,G,8EACpBA,IAAW6H,EAAO0C,G,yCACXzK,EAAWiL,2BAA2BlD,EAAO0C,K,UAC7CvK,IAAW6H,EAAO4C,IAAMN,IAAQD,aAAeG,IAAeK,Q,yCAC9D5K,EAAWiL,2BAA2BlD,EAAO4C,K,uBAGvC3K,EAAWiL,2BAA2BlD,EAAO4C,I,cAAxDE,E,iBACS7K,EAAWiL,2BAA2BlD,EAAO0C,I,eAAxDK,E,OACAC,EAAQ,IAAIpL,IAAoBmL,EAAGjF,KAAI,SAAAmF,GAAM,MAAI,CAACA,EAAOnL,GAAImL,EAAO7K,U,kBAEjE0K,EAAGhF,KAAgB,SAAAmF,GAAW,IAAD,EAChC,OAAO,2BACAA,GADP,IAEI7K,KAAI,UAAE4K,EAAM3K,IAAI4K,EAAOnL,WAAnB,QAA0BmL,EAAO7K,W,uIAK5BD,EAAgBL,GACjC,IAAMuK,EAAWC,IAAQD,WACrB/D,EAAG,UAAMnG,EAAN,YAAgBkK,EAAhB,YAA4BvK,GAEnC,OAAOoI,EAAM+B,cAAc5J,IACvBiG,GACA,WACI,IAAIiE,EAAQ,iBACRF,IAAaG,IAAeC,QAAU,WAAa,IAGvD,OAAOlB,EAAK,UAAmBD,EAAnB,iBAAgCnJ,EAAhC,eAA6CL,GAA7C,OAAkDyK,MAtI1D,O,4BA4IHpK,EAAgBL,EAAYqL,GACrC,IAAM7E,EAAG,UAAMnG,EAAN,YAAgBL,EAAhB,YAAsBqL,GAE/B,OAAOjD,EAAMgC,MAAM7J,IACfiG,GACA,WACI,OAAOiD,EAAK,UAAWD,EAAX,iBAAwBnJ,EAAxB,kBAAwCL,EAAxC,YAA8CqL,MAlJtD,O,8BAwJDhL,EAAgBL,GAC3B,IAAMuK,EAAWC,IAAQD,WACrB/D,EAAG,UAAMnG,EAAN,YAAgBkK,EAAhB,YAA4BvK,GAEnC,OAAOoI,EAAMiC,QAAQ9J,IACjBiG,GACA,WACI,IAAIiE,EAAQ,cACRF,IAAaG,IAAeC,QAAU,WAAa,IAGvD,OAAOlB,EAAK,UAAaD,EAAb,iBAA0BnJ,EAA1B,oBAA4CL,GAA5C,OAAiDyK,MAnKzD,O,2EAyKSpK,G,8EACjBA,IAAW6H,EAAO0C,G,yCACXzK,EAAWmL,wBAAwBpD,EAAO0C,K,UAC1CvK,IAAW6H,EAAO4C,IAAMN,IAAQD,aAAeG,IAAeK,Q,yCAC9D5K,EAAWmL,wBAAwBpD,EAAO4C,K,uBAGpC3K,EAAWmL,wBAAwBpD,EAAO4C,I,cAArDE,E,iBACS7K,EAAWmL,wBAAwBpD,EAAO0C,I,eAArDK,E,OACAC,EAAQ,IAAIpL,IAAoBmL,EAAGjF,KAAI,SAAAmF,GAAM,MAAI,CAACA,EAAOnL,GAAImL,EAAO7K,U,kBAEjE0K,EAAGhF,KAAqB,SAAAmF,GAAW,IAAD,EACrC,OAAO,2BACAA,GADP,IAEI7K,KAAI,UAAE4K,EAAM3K,IAAI4K,EAAOnL,WAAnB,QAA0BmL,EAAO7K,W,+HAKpCD,EAAgBL,GACzB,IAAMuK,EAAWC,IAAQD,WACrB/D,EAAG,UAAMnG,EAAN,YAAgBkK,EAAhB,YAA4BvK,GAEnC,OAAOoI,EAAMnH,MAAMV,IACfiG,GACA,WACI,IAAIiE,EAAQ,iBACRF,IAAaG,IAAeC,QAAU,WAAa,IAGvD,OAAOlB,EAAK,UAAWD,EAAX,iBAAwBnJ,EAAxB,kBAAwCL,GAAxC,OAA6CyK,MAvMrD,O,+BA6MApK,GACZ,OAAO+H,EAAMhI,SAASG,IAClBF,GACA,WACI,OAAOoJ,EAAK,UAAcD,EAAd,mBAA6BnJ,EAA7B,uBAEhB,Q,4FAI0CA,G,0FACvC+H,EAAM2B,iBAAiBxJ,IAC1BF,GACA,WACI,OAAOoJ,EAAK,UAAuBD,EAAvB,mBAAsCnJ,EAAtC,wBAEhB,O,4LAIwCA,G,0FACrC+H,EAAM8B,eAAe3J,IACxBF,GACA,WACI,OAAOoJ,EAAK,UAAuBD,EAAvB,mBAAsCnJ,EAAtC,6BAEhB,O,yLAIqCA,G,0FAClC+H,EAAMkC,YAAY/J,IACrBF,GACA,WACI,OAAOoJ,EAAK,UAAuBD,EAAvB,mBAAsCnJ,EAAtC,0BAEhB,O,yGAKGF,O,gCCvQf,4JASO,SAASoL,EAAU9C,EAAoC+C,GAC1D,GAAqB,kBAAV/C,EACP,OAAO8C,EAAUE,SAAShD,GAAQ+C,GAEtC,IAAME,GAAU,OAACjD,QAAD,IAACA,IAAS,GAAKkD,KAAKH,IAAI,GAAIA,GAE5C,MAAM,GAAN,OAAUE,EAAV,KAGG,SAASE,EAAcC,GAC1B,OAAKA,EAID,8BACKhF,EAAcgF,EAAKC,MAAM,MAAO,+BAJ9B,GASR,SAAS/F,EAAagG,EAAwBC,GACjD,IAAMC,EAAsB,GACxBC,EAAc,SAAU5F,GACpB,QAAgBpG,IAAZoG,EAGJ,GAAuB,kBAAZA,EAKX,GAAqB,IAAjB2F,EAAMnG,OAAV,CAKA,IAAMqG,EAAWF,EAAMA,EAAMnG,OAAS,GACd,kBAAbqG,EAKXF,EAAMA,EAAMnG,OAAS,GAAKqG,EAAW7F,EAAQ8F,WAJzCH,EAAM9F,KAAKG,EAAQ8F,iBANnBH,EAAM9F,KAAKG,EAAQ8F,iBALnBH,EAAM9F,KAAKG,IAyBvB,OAPAyF,EAAS9C,SAAQ,SAAC3C,EAASC,GACnBA,EAAQ,GACR2F,EAAYF,GAEhBE,EAAY5F,MAGT2F,EAGJ,SAASpF,EAAckF,EAAwBM,GAClD,OAAO,kBAAC,IAAM7G,SAAP,KACFO,EAAagG,EAAUM,GAAWrG,KAAI,SAACM,EAASC,GAC7C,OAAO,kBAAC,IAAMf,SAAP,CAAgBgB,IAAKD,GAAQD,S,6FCtD1CgG,G,8KAcQ,IAAD,OACL,OACI,6BACK9N,KAAKH,MAAMkO,OACR,yBAAK7N,UAAW,eACXF,KAAKH,MAAMkO,QAEhB,KAEJ,kBAAC,IAAD,CAAOC,UAAQ,EAACC,OAAK,EAAC/N,UAAW,cAC7B,+BACCgO,OAAOC,KAAKnO,KAAKH,MAAMoB,MAAMuG,KAAI,SAACQ,EAAKD,GACpC,OACI,wBAAIC,IAAKD,GACL,4BAAKC,GACL,4BAAK8F,EAAUM,UAAU,EAAKvO,MAAMoB,KAAK+G,e,iCA5B5CiC,GACrB,GAAqB,kBAAVA,EAAoB,CAC3B,IAAMnC,EAAUmC,EAChB,YAAoBvI,IAAhBoG,EAAQE,UAAuCtG,IAAlBoG,EAAQjI,YAAwC6B,IAAjBoG,EAAQQ,KAC7DR,EAEAuG,KAAKC,UAAUrE,GAI9B,OAAOA,M,GAXS9I,IAAMC,YAwCf0M","file":"static/js/2.4eb96c2f.chunk.js","sourcesContent":["import {faSearchPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Modal} from \"react-bootstrap\";\nimport ReactJson from \"react-json-view\";\n\ninterface IProps {\n    data: object;\n}\n\ninterface IState {\n    showing: boolean;\n}\n\nclass RawDataViewer extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            showing: false\n        };\n    }\n\n    hide() {\n        this.setState({showing: false});\n    }\n\n    show() {\n        this.setState({showing: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <span className={'text-primary'}\n                      style={{cursor: \"pointer\"}}\n                      onClick={() => {\n                          this.show();\n                      }}>\n                    View Raw\n                    &nbsp;\n                    <FontAwesomeIcon icon={faSearchPlus}/>\n                </span>\n\n                <Modal size={\"lg\"} show={this.state.showing} onHide={() => this.hide()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Raw Data Viewer</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ReactJson src={this.props.data} collapsed={1}/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default RawDataViewer;\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Region from \"../Api/Data/Region\";\nimport Trait from \"../Api/Data/Trait\";\n\nconst traitDescriptions = new Map<number, string>([\n    [1, \"Gender:Male\"],\n    [2, \"Gender:Female\"],\n    [3, \"Gender:Unknown\"],\n    [100, \"Class:Saber\"],\n    [101, \"Class:Lancer\"],\n    [102, \"Class:Archer\"],\n    [103, \"Class:Rider\"],\n    [104, \"Class:Caster\"],\n    [105, \"Class:Assassin\"],\n    [106, \"Class:Berserker\"],\n    [107, \"Class:Shielder\"],\n    [108, \"Class:Ruler\"],\n    [109, \"Class:Alter Ego\"],\n    [110, \"Class:Avenger\"],\n    [111, \"Demon Pillar\"],\n    [112, \"Class:Grand Caster\"],\n    [113, \"Beast I\"],\n    [114, \"Beast II\"],\n    [115, \"Class:Moon Cancer\"],\n    [116, \"Beast IIIR\"],\n    [117, \"Class:Foreigner\"],\n    [118, \"Beast IIIL\"],\n    [119, \"Beast Unknown\"],\n    [200, \"Attribute:Sky\"],\n    [201, \"Attribute:Eart\"],\n    [202, \"Attribute:Human\"],\n    [203, \"Attribute:Star\"],\n    [204, \"Attribute:Beast\"],\n    [300, \"Alignment:Lawful\"],\n    [301, \"Alignment:Chaotic\"],\n    [302, \"Alignment:Neutral\"],\n    [303, \"Alignment:Good\"],\n    [304, \"Alignment:Evil\"],\n    [305, \"Alignment:Balanced\"],\n    [306, \"Alignment:Madness\"],\n    [308, \"Alignment:Summer\"],\n    [1000, \"Servant\"],\n    [1002, \"Undead\"],\n    [1122, \"Shadow Servant\"],\n    [2004, \"Roman\"],\n    [2005, \"Beasts\"],\n    [2019, \"Demonic\"],\n    [2039, \"Near Water\"],\n    [2466, \"Argonaut\"],\n    [2654, \"Pseudo-Servant\"],\n    [3004, \"Buff\"],\n    [3005, \"Debuff\"],\n    [3006, \"Buff:Offensive\"],\n    [3007, \"Buff:Defensive\"],\n    [3011, \"Poison\"],\n    [3012, \"Charm\"],\n    [3015, \"Burn\"],\n    [3021, \"Evade\"],\n    [3026, \"Curse\"],\n    [3047, \"Pigify\"],\n    [4001, \"Card:Arts\"],\n    [4002, \"Card:Buster\"],\n    [4003, \"Card:Quick\"],\n    [4004, \"Card:Extra\"],\n    [4008, \"Player Card\"],\n    [4100, \"Critical Hit\"],\n]);\n\ninterface IProps {\n    region: Region;\n    trait: Trait | number;\n}\n\ninterface IState {\n    id: number;\n    trait?: Trait;\n}\n\nclass TraitDescriptor extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            id: typeof props.trait === \"number\" ? props.trait : props.trait.id,\n            trait: typeof props.trait === \"number\" ? undefined : props.trait,\n        };\n    }\n\n    async componentDidMount() {\n        if (this.state.trait)\n            return;\n\n        const traitMap = await Connection.traitMap(this.props.region);\n        if (traitMap[this.state.id] !== undefined)\n            this.setState({\n                trait: {\n                    id: this.state.id,\n                    name: traitMap[this.state.id]\n                }\n            });\n    }\n\n    private getDescription() : string {\n        let description;\n\n        description = traitDescriptions.get(this.state.id);\n        if (description) {\n            return description;\n        }\n\n        if (this.state.trait && this.state.trait.name !== 'unknown')\n            return this.state.trait.name;\n\n        return `unknown(${this.state.id})`;\n    }\n\n    render() {\n        return (\n            <span>\n                [{this.getDescription()}]\n            </span>\n        );\n    }\n}\n\nexport default TraitDescriptor;\n","import React from \"react\";\n\ninterface IProp {\n    location: string;\n    height?: number;\n}\n\nclass BuffIcon extends React.Component<IProp> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location} style={{\n                height: this.props.height ?? 25,\n                verticalAlign: \"bottom\",\n            }}/>\n        );\n    }\n\n}\n\nexport default BuffIcon;\n","import Func from \"./Func\";\nimport Trait from \"./Trait\";\n\nexport enum BuffType {\n    NONE = \"none\",\n    UP_COMMANDATK = \"upCommandatk\",\n    UP_STARWEIGHT = \"upStarweight\",\n    UP_CRITICALPOINT = \"upCriticalpoint\",\n    DOWN_CRITICALPOINT = \"downCriticalpoint\",\n    REGAIN_NP = \"regainNp\",\n    REGAIN_STAR = \"regainStar\",\n    REGAIN_HP = \"regainHp\",\n    REDUCE_HP = \"reduceHp\",\n    UP_ATK = \"upAtk\",\n    DOWN_ATK = \"downAtk\",\n    UP_DAMAGE = \"upDamage\",\n    DOWN_DAMAGE = \"downDamage\",\n    ADD_DAMAGE = \"addDamage\",\n    SUB_DAMAGE = \"subDamage\",\n    UP_NPDAMAGE = \"upNpdamage\",\n    DOWN_NPDAMAGE = \"downNpdamage\",\n    UP_DROPNP = \"upDropnp\",\n    UP_CRITICALDAMAGE = \"upCriticaldamage\",\n    DOWN_CRITICALDAMAGE = \"downCriticaldamage\",\n    UP_SELFDAMAGE = \"upSelfdamage\",\n    DOWN_SELFDAMAGE = \"downSelfdamage\",\n    ADD_SELFDAMAGE = \"addSelfdamage\",\n    SUB_SELFDAMAGE = \"subSelfdamage\",\n    AVOIDANCE = \"avoidance\",\n    BREAK_AVOIDANCE = \"breakAvoidance\",\n    INVINCIBLE = \"invincible\",\n    UP_GRANTSTATE = \"upGrantstate\",\n    DOWN_GRANTSTATE = \"downGrantstate\",\n    UP_TOLERANCE = \"upTolerance\",\n    DOWN_TOLERANCE = \"downTolerance\",\n    AVOID_STATE = \"avoidState\",\n    DONOT_ACT = \"donotAct\",\n    DONOT_SKILL = \"donotSkill\",\n    DONOT_NOBLE = \"donotNoble\",\n    DONOT_RECOVERY = \"donotRecovery\",\n    DISABLE_GENDER = \"disableGender\",\n    GUTS = \"guts\",\n    UP_HATE = \"upHate\",\n    ADD_INDIVIDUALITY = \"addIndividuality\",\n    SUB_INDIVIDUALITY = \"subIndividuality\",\n    UP_DEFENCE = \"upDefence\",\n    DOWN_DEFENCE = \"downDefence\",\n    UP_COMMANDSTAR = \"upCommandstar\",\n    UP_COMMANDNP = \"upCommandnp\",\n    UP_COMMANDALL = \"upCommandall\",\n    DOWN_COMMANDALL = \"downCommandall\",\n    DOWN_STARWEIGHT = \"downStarweight\",\n    REDUCE_NP = \"reduceNp\",\n    DOWN_DROPNP = \"downDropnp\",\n    UP_GAIN_HP = \"upGainHp\",\n    DOWN_GAIN_HP = \"downGainHp\",\n    DOWN_COMMANDATK = \"downCommandatk\",\n    DOWN_COMMANSTAR = \"downCommanstar\",\n    DOWN_COMMANDNP = \"downCommandnp\",\n    UP_CRITICALRATE = \"upCriticalrate\",\n    DOWN_CRITICALRATE = \"downCriticalrate\",\n    PIERCE_INVINCIBLE = \"pierceInvincible\",\n    AVOID_INSTANTDEATH = \"avoidInstantdeath\",\n    UP_RESIST_INSTANTDEATH = \"upResistInstantdeath\",\n    UP_NONRESIST_INSTANTDEATH = \"upNonresistInstantdeath\",\n    DELAY_FUNCTION = \"delayFunction\",\n    REGAIN_NP_USED_NOBLE = \"regainNpUsedNoble\",\n    DEAD_FUNCTION = \"deadFunction\",\n    UP_MAXHP = \"upMaxhp\",\n    DOWN_MAXHP = \"downMaxhp\",\n    ADD_MAXHP = \"addMaxhp\",\n    SUB_MAXHP = \"subMaxhp\",\n    BATTLESTART_FUNCTION = \"battlestartFunction\",\n    WAVESTART_FUNCTION = \"wavestartFunction\",\n    SELFTURNEND_FUNCTION = \"selfturnendFunction\",\n    UP_GIVEGAIN_HP = \"upGivegainHp\",\n    DOWN_GIVEGAIN_HP = \"downGivegainHp\",\n    COMMANDATTACK_FUNCTION = \"commandattackFunction\",\n    DEADATTACK_FUNCTION = \"deadattackFunction\",\n    UP_SPECIALDEFENCE = \"upSpecialdefence\",\n    DOWN_SPECIALDEFENCE = \"downSpecialdefence\",\n    UP_DAMAGEDROPNP = \"upDamagedropnp\",\n    DOWN_DAMAGEDROPNP = \"downDamagedropnp\",\n    ENTRY_FUNCTION = \"entryFunction\",\n    UP_CHAGETD = \"upChagetd\",\n    REFLECTION_FUNCTION = \"reflectionFunction\",\n    UP_GRANT_SUBSTATE = \"upGrantSubstate\",\n    DOWN_GRANT_SUBSTATE = \"downGrantSubstate\",\n    UP_TOLERANCE_SUBSTATE = \"upToleranceSubstate\",\n    DOWN_TOLERANCE_SUBSTATE = \"downToleranceSubstate\",\n    UP_GRANT_INSTANTDEATH = \"upGrantInstantdeath\",\n    DOWN_GRANT_INSTANTDEATH = \"downGrantInstantdeath\",\n    GUTS_RATIO = \"gutsRatio\",\n    DAMAGE_FUNCTION = \"damageFunction\",\n    UP_DEFENCECOMMANDALL = \"upDefencecommandall\",\n    DOWN_DEFENCECOMMANDALL = \"downDefencecommandall\",\n    OVERWRITE_BATTLECLASS = \"overwriteBattleclass\",\n    OVERWRITE_CLASSRELATIO_ATK = \"overwriteClassrelatioAtk\",\n    OVERWRITE_CLASSRELATIO_DEF = \"overwriteClassrelatioDef\",\n    UP_DAMAGE_INDIVIDUALITY = \"upDamageIndividuality\",\n    DOWN_DAMAGE_INDIVIDUALITY = \"downDamageIndividuality\",\n    UP_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"upDamageIndividualityActiveonly\",\n    DOWN_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"downDamageIndividualityActiveonly\",\n    UP_NPTURNVAL = \"upNpturnval\",\n    DOWN_NPTURNVAL = \"downNpturnval\",\n    MULTIATTACK = \"multiattack\",\n    UP_GIVE_NP = \"upGiveNp\",\n    DOWN_GIVE_NP = \"downGiveNp\",\n    UP_RESISTANCE_DELAY_NPTURN = \"upResistanceDelayNpturn\",\n    DOWN_RESISTANCE_DELAY_NPTURN = \"downResistanceDelayNpturn\",\n    PIERCE_DEFENCE = \"pierceDefence\",\n    UP_GUTS_HP = \"upGutsHp\",\n    DOWN_GUTS_HP = \"downGutsHp\",\n    UP_FUNCGAIN_NP = \"upFuncgainNp\",\n    DOWN_FUNCGAIN_NP = \"downFuncgainNp\",\n    UP_FUNC_HP_REDUCE = \"upFuncHpReduce\",\n    DOWN_FUNC_HP_REDUCE = \"downFuncHpReduce\",\n    UP_DEFENCECOMMAN_DAMAGE = \"upDefencecommanDamage\",\n    DOWN_DEFENCECOMMAN_DAMAGE = \"downDefencecommanDamage\",\n    NPATTACK_PREV_BUFF = \"npattackPrevBuff\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    DONOT_GAINNP = \"donotGainnp\",\n    FIELD_INDIVIDUALITY = \"fieldIndividuality\",\n    DONOT_ACT_COMMANDTYPE = \"donotActCommandtype\",\n    UP_DAMAGE_EVENT_POINT = \"upDamageEventPoint\",\n    UP_DAMAGE_SPECIAL = \"upDamageSpecial\",\n    ATTACK_FUNCTION = \"attackFunction\",\n    COMMANDCODEATTACK_FUNCTION = \"commandcodeattackFunction\",\n    DONOT_NOBLE_COND_MISMATCH = \"donotNobleCondMismatch\",\n    DONOT_SELECT_COMMANDCARD = \"donotSelectCommandcard\",\n    DONOT_REPLACE = \"donotReplace\",\n    SHORTEN_USER_EQUIP_SKILL = \"shortenUserEquipSkill\",\n    TD_TYPE_CHANGE = \"tdTypeChange\",\n    OVERWRITE_CLASS_RELATION = \"overwriteClassRelation\",\n    TD_TYPE_CHANGE_ARTS = \"tdTypeChangeArts\",\n    TD_TYPE_CHANGE_BUSTER = \"tdTypeChangeBuster\",\n    TD_TYPE_CHANGE_QUICK = \"tdTypeChangeQuick\",\n    COMMANDATTACK_BEFORE_FUNCTION = \"commandattackBeforeFunction\",\n    GUTS_FUNCTION = \"gutsFunction\",\n    UP_CRITICAL_RATE_DAMAGE_TAKEN = \"upCriticalRateDamageTaken\",\n    DOWN_CRITICAL_RATE_DAMAGE_TAKEN = \"downCriticalRateDamageTaken\",\n    UP_CRITICAL_STAR_DAMAGE_TAKEN = \"upCriticalStarDamageTaken\",\n    DOWN_CRITICAL_STAR_DAMAGE_TAKEN = \"downCriticalStarDamageTaken\",\n}\n\nexport default interface Buff {\n    id: number;\n    name: string;\n    detail: string;\n    icon: string;\n    type: BuffType;\n    vals: Trait[];\n    tvals: Trait[];\n    ckSelfIndv: Trait[];\n    ckOpIndv: Trait[];\n    maxRate: number;\n    reverseFunctions: Func[];\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Region from \"../Api/Data/Region\";\nimport Skill from \"../Api/Data/Skill\";\nimport BuffIcon from \"../Component/BuffIcon\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n    iconHeight?: number;\n}\n\nclass SkillDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/skill/${this.props.skill.id}`}>\n                [\n                <BuffIcon location={this.props.skill.icon} height={this.props.iconHeight}/>\n                {' '}\n                {this.props.skill.name ? this.props.skill.name : `Skill: ${this.props.skill.id}`}\n                ]\n            </Link>\n        );\n    }\n}\n\nexport default SkillDescriptor;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Buff, {BuffType} from \"../Api/Data/Buff\";\nimport Region from \"../Api/Data/Region\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport {joinElements, mergeElements} from \"../Helper/OutputHelper\";\nimport TraitDescriptor from \"./TraitDescriptor\";\n\nconst upDownBuffs: { up?: BuffType, down?: BuffType, description: string }[] = [\n    {up: BuffType.UP_ATK, down: BuffType.DOWN_ATK, description: \"ATK\"},\n    {up: BuffType.UP_CHAGETD, down: undefined, description: \"Overcharge\"},\n    {up: BuffType.UP_COMMANDATK, down: BuffType.DOWN_COMMANDATK, description: \"ATK\"},\n    {up: BuffType.UP_CRITICALDAMAGE, down: BuffType.DOWN_CRITICALDAMAGE, description: \"Critical Damage\"},\n    {up: BuffType.UP_CRITICALPOINT, down: BuffType.DOWN_CRITICALPOINT, description: \"Star Drop Rate\"},\n    {up: BuffType.UP_CRITICALRATE, down: BuffType.DOWN_CRITICALRATE, description: \"Critical Rate\"},\n    {\n        up: BuffType.UP_CRITICAL_RATE_DAMAGE_TAKEN,\n        down: BuffType.DOWN_CRITICAL_RATE_DAMAGE_TAKEN,\n        description: \"Critical Rate Taken\"\n    },\n    {up: BuffType.UP_DAMAGE, down: BuffType.DOWN_DAMAGE, description: \"SP.DMG\"},\n    {up: BuffType.UP_DAMAGEDROPNP, down: BuffType.DOWN_DAMAGEDROPNP, description: \"NP Gain When Damaged\"},\n    {up: BuffType.UP_DEFENCE, down: BuffType.DOWN_DEFENCE, description: \"DEF\"},\n    {up: BuffType.UP_DEFENCECOMMANDALL, down: BuffType.DOWN_DEFENCECOMMANDALL, description: \"Resistance\"},\n    {up: BuffType.UP_DROPNP, down: BuffType.DOWN_DROPNP, description: \"NP Gain\"},\n    {up: BuffType.UP_FUNC_HP_REDUCE, down: BuffType.DOWN_FUNC_HP_REDUCE, description: \"DoT Effectiveness\"},\n    {up: BuffType.UP_GRANT_INSTANTDEATH, down: BuffType.DOWN_GRANT_INSTANTDEATH, description: \"Death Chance\"},\n    {up: BuffType.UP_GRANTSTATE, down: BuffType.DOWN_GRANTSTATE, description: \"Buff Chance\"},\n    {up: undefined, down: BuffType.UP_NONRESIST_INSTANTDEATH, description: \"Death Resist\"},\n    {up: BuffType.UP_NPDAMAGE, down: BuffType.DOWN_NPDAMAGE, description: \"NP Damage\"},\n    {up: BuffType.UP_STARWEIGHT, down: BuffType.DOWN_STARWEIGHT, description: \"Star Weight\"},\n    {up: BuffType.UP_TOLERANCE, down: BuffType.DOWN_TOLERANCE, description: \"Debuff Resist\"},\n    {up: BuffType.UP_TOLERANCE_SUBSTATE, down: BuffType.DOWN_TOLERANCE_SUBSTATE, description: \"Buff Removal Resist\"},\n];\n\nconst traitDescriptions = new Map<number, string>([\n    [3012, 'Charm'],\n    [3015, 'Burn'],\n    [3026, 'Curse'],\n    [3045, 'Stun'],\n]);\n\nconst typeDescriptions = new Map<BuffType, string>([\n    [BuffType.AVOID_INSTANTDEATH, 'Immune to Death'],\n    [BuffType.AVOID_STATE, 'Immunity'],\n    [BuffType.ADD_DAMAGE, 'Damage Plus'],\n    [BuffType.ADD_INDIVIDUALITY, 'Add Trait'],\n    [BuffType.AVOIDANCE, 'Evade'],\n    [BuffType.BREAK_AVOIDANCE, 'Sure Hit'],\n    [BuffType.DELAY_FUNCTION, 'Trigger Skill after Duration'],\n    [BuffType.DONOT_NOBLE, 'NP Seal'],\n    [BuffType.DONOT_NOBLE_COND_MISMATCH, 'NP Block if Condition Failed'],\n    [BuffType.DONOT_RECOVERY, 'Recovery Disabled'],\n    [BuffType.DONOT_SELECT_COMMANDCARD, 'Do Not Shuffle In Cards'],\n    [BuffType.DONOT_SKILL, 'Skill Seal'],\n    [BuffType.FIELD_INDIVIDUALITY, 'Change Field Type'],\n    [BuffType.GUTS, 'Guts'],\n    [BuffType.INVINCIBLE, 'Invincible'],\n    [BuffType.MULTIATTACK, 'Multiple Hits'],\n    [BuffType.PIERCE_INVINCIBLE, 'Ignore Invincible'],\n    [BuffType.REGAIN_HP, 'HP Per Turn'],\n    [BuffType.REGAIN_NP, 'NP Per Turn'],\n    [BuffType.REGAIN_STAR, 'Stars Per Turn'],\n    [BuffType.SELFTURNEND_FUNCTION, 'Trigger Skill after Duration'],\n    [BuffType.SUB_SELFDAMAGE, 'Damage Cut'],\n    [BuffType.TD_TYPE_CHANGE, 'Change Noble Phantasm'],\n    [BuffType.UP_HATE, 'Taunt'],\n]);\n\ninterface IProps {\n    region: Region;\n    buff: Buff;\n}\n\nclass BuffDescriptor extends React.Component<IProps> {\n    private getTraitFilterAppend(): JSX.Element | undefined {\n        if (!this.getTraitFilters())\n            return undefined;\n\n        return <React.Fragment> for {this.getTraitFilters()}</React.Fragment>;\n    }\n\n    private getTraitFilterAppendWithoutCards(): JSX.Element | undefined {\n        const traits = this.props.buff.ckSelfIndv.filter(\n            trait => [4001, 4002, 4003, 4004].indexOf(trait.id) === -1\n        );\n\n        if (!traits.length)\n            return undefined;\n\n        return (\n            <React.Fragment>\n                {' '}\n                for\n                {' '}\n                {joinElements(\n                    traits.map(\n                        trait => <TraitDescriptor region={this.props.region} trait={trait}/>\n                    ),\n                    ' & '\n                )}\n            </React.Fragment>\n        );\n    }\n\n    private getCommandCardTypes(): string {\n        const cards = [];\n\n        if (this.hasApplicableTrait(4001)) {\n            cards.push('Arts');\n        }\n\n        if (this.hasApplicableTrait(4002)) {\n            cards.push('Buster');\n        }\n\n        if (this.hasApplicableTrait(4003)) {\n            cards.push('Quick');\n        }\n\n        if (this.hasApplicableTrait(4004)) {\n            cards.push('Extra');\n        }\n\n        if (!cards.length) {\n            cards.push('Command Card');\n        }\n\n        return cards.join(' & ');\n    }\n\n    private getEffectiveTargetsDescriptions(): JSX.Element | undefined {\n        const buff = this.props.buff;\n\n        if (!buff.ckOpIndv.length)\n            return undefined;\n\n        return (\n            <React.Fragment>\n                {' vs. '}\n                {joinElements(\n                    buff.ckOpIndv.map(trait => {\n                        return <TraitDescriptor region={this.props.region} trait={trait}/>;\n                    }),\n                    ' & '\n                ).map((element, index) => {\n                    return <React.Fragment key={index}>{element}</React.Fragment>;\n                })}\n            </React.Fragment>\n        );\n    }\n\n    private getTraitDescription(): string {\n        const buff = this.props.buff,\n            traitIds = buff.vals.map(trait => trait.id);\n\n        for (let x in traitIds) {\n            const traitId = traitIds[x],\n                description = traitDescriptions.get(traitId);\n\n            if (description !== undefined)\n                return description;\n        }\n\n        return \"\";\n    }\n\n    private getTraitFilters(): JSX.Element | undefined {\n        if (!this.props.buff.ckSelfIndv.length)\n            return undefined;\n\n        return (\n            <React.Fragment>\n                {mergeElements(\n                    this.props.buff.ckSelfIndv.map(\n                        trait => <TraitDescriptor region={this.props.region} trait={trait}/>\n                    ),\n                    ' & '\n                )}\n            </React.Fragment>\n        );\n    }\n\n    private getTypeDescription(): string {\n        const type = this.props.buff.type;\n\n        return typeDescriptions.get(type) ?? \"\";\n    }\n\n    private getUpDownDescription(): string {\n        const type = this.props.buff.type;\n\n        for (let x in upDownBuffs) {\n            if (upDownBuffs[x].up === type)\n                return `${upDownBuffs[x].description} Up`;\n            if (upDownBuffs[x].down === type)\n                return `${upDownBuffs[x].description} Down`;\n        }\n\n        return \"\";\n    }\n\n    private hasApplicableTrait(id: number): boolean {\n        const buff = this.props.buff;\n\n        return buff.ckSelfIndv.filter(trait => trait.id === id).length > 0;\n    }\n\n    private hasTraitDescription(): boolean {\n        const buff = this.props.buff,\n            traitIds = buff.vals.map(trait => trait.id);\n\n        for (let x in traitIds) {\n            const traitId = traitIds[x],\n                description = traitDescriptions.get(traitId);\n\n            if (description !== undefined)\n                return true;\n        }\n\n        return false;\n    }\n\n    private hasTypeDescription(): boolean {\n        const buff = this.props.buff;\n\n        return typeDescriptions.has(buff.type);\n    }\n\n    private isUpDownBuff(): boolean {\n        const type = this.props.buff.type;\n\n        for (let x in upDownBuffs) {\n            if (upDownBuffs[x].up === type || upDownBuffs[x].down === type)\n                return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const buff = this.props.buff;\n\n        let description: JSX.Element | string = buff.name;\n\n        if (this.isUpDownBuff()) {\n            description = <React.Fragment>\n                {this.getUpDownDescription()}\n                {this.getTraitFilterAppend()}\n            </React.Fragment>\n        } else if (buff.type === BuffType.UP_COMMANDALL) {\n            description = <React.Fragment>\n                {this.getCommandCardTypes()} Up\n                {this.getTraitFilterAppendWithoutCards()}\n            </React.Fragment>\n        } else if (buff.type === BuffType.DOWN_COMMANDALL) {\n            description = <React.Fragment>\n                {this.getCommandCardTypes()} Down\n                {this.getTraitFilterAppendWithoutCards()}\n            </React.Fragment>\n        } else if (buff.type === BuffType.ATTACK_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill on {this.getTraitFilters()} attacks\n            </React.Fragment>;\n        } else if (buff.type === BuffType.COMMANDATTACK_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill on {this.getTraitFilters()} cards\n            </React.Fragment>;\n        } else if (buff.type === BuffType.COMMANDATTACK_BEFORE_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill before {this.getTraitFilters()} cards\n            </React.Fragment>;\n        } else if (buff.type === BuffType.DAMAGE_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill on receiving {this.getTraitFilters()} attacks\n            </React.Fragment>;\n        } else if (buff.type === BuffType.DEAD_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill on death\n                {this.getTraitFilterAppend()}\n            </React.Fragment>;\n        } else if (buff.type === BuffType.NPATTACK_PREV_BUFF) {\n            description = <React.Fragment>\n                Trigger Skill on {this.getTraitFilters()} NP\n            </React.Fragment>;\n        } else if (this.hasTypeDescription()) {\n            description = <React.Fragment>\n                {this.getTypeDescription()}\n                {this.getTraitFilterAppend()}\n            </React.Fragment>;\n        } else if (this.hasTraitDescription()) {\n            description = <React.Fragment>\n                {this.getTraitDescription()}\n                {this.getTraitFilterAppend()}\n            </React.Fragment>;\n        }\n\n        return (\n            <Link to={`/${this.props.region}/buff/${buff.id}`}>\n                [\n                <BuffIcon location={buff.icon}/>\n                {' '}\n                {description}\n                {this.getEffectiveTargetsDescriptions()}\n                ]\n            </Link>\n        );\n    }\n}\n\nexport default BuffDescriptor;\n","enum Region {\n    JP = 'JP',\n    NA = 'NA'\n}\n\nexport default Region;\n","class ResultCache<K, V> {\n    private cache = new Map<K, V>();\n    private pending = new Map<K, Function[]>();\n    private pendingCatches = new Map<K, Function[]>();\n\n    get(key: K, fetcher: Function, duration: number | null): Promise<V> {\n        const value = this.cache.get(key);\n        if (value !== undefined) {\n            return new Promise<V>(resolve => {\n                resolve(value);\n            });\n        }\n\n        const callbacks = this.pending.get(key);\n        if (callbacks !== undefined) {\n            return new Promise<V>((resolve, reject) => {\n                callbacks.push(resolve);\n\n                const catches = this.pendingCatches.get(key) ?? [];\n                catches.push(reject);\n            });\n        }\n\n        this.pending.set(key, []);\n        this.pendingCatches.set(key, []);\n        return new Promise<V>((resolve, reject) => {\n            fetcher\n                .call(null)\n                .then((value: V) => {\n                    const callbacks = this.pending.get(key) ?? [];\n\n                    callbacks.forEach(callback => {\n                        callback.call(null, value);\n                    });\n\n                    this.cache.set(key, value);\n                    this.pending.delete(key);\n                    this.pendingCatches.delete(key);\n\n                    if (duration !== null) {\n                        window.setTimeout(() => {\n                            this.cache.delete(key);\n                        }, duration);\n                    }\n\n                    resolve(value);\n                })\n                .catch((error: any) => {\n                    const callbacks = this.pendingCatches.get(key) ?? [];\n\n                    callbacks.forEach(callback => {\n                        callback.call(null, error);\n                    });\n\n                    this.pending.delete(key);\n                    this.pendingCatches.delete(key);\n\n                    reject(error);\n                });\n        });\n    }\n}\n\nexport default ResultCache;\n","import axios from \"axios\";\nimport Manager from \"../Setting/Manager\";\nimport {LanguageOption} from \"../Setting/Option\";\nimport BasicListEntity from \"./Data/BasicListEntity\";\nimport Buff from \"./Data/Buff\";\nimport CraftEssence from \"./Data/CraftEssence\";\nimport Func from \"./Data/Func\";\nimport MysticCode from \"./Data/MysticCode\";\nimport NoblePhantasm from \"./Data/NoblePhantasm\";\nimport Quest from \"./Data/Quest\";\nimport Region from \"./Data/Region\";\nimport Servant from \"./Data/Servant\";\nimport Skill from \"./Data/Skill\";\nimport TraitMap from \"./Data/TraitMap\";\nimport ResultCache from \"./ResultCache\";\n\nconst host = 'https://api.atlasacademy.io',\n    cacheDuration = 20 * 1000,\n    fetch = async function <T>(endpoint: string): Promise<T> {\n        const response = await axios.get<T>(endpoint);\n\n        return response.data;\n    },\n    cache = {\n        buff: new ResultCache<string, Buff>(),\n        craftEssence: new ResultCache<string, CraftEssence>(),\n        craftEssenceList: new ResultCache<Region, BasicListEntity[]>(),\n        func: new ResultCache<string, Func>(),\n        mysticCode: new ResultCache<string, MysticCode>(),\n        mysticCodeList: new ResultCache<Region, MysticCode[]>(),\n        noblePhantasm: new ResultCache<string, NoblePhantasm>(),\n        quest: new ResultCache<string, Quest>(),\n        servant: new ResultCache<string, Servant>(),\n        servantList: new ResultCache<Region, BasicListEntity[]>(),\n        skill: new ResultCache<string, Skill>(),\n        traitMap: new ResultCache<Region, TraitMap>(),\n    };\n\nclass Connection {\n    static buff(region: Region, id: number): Promise<Buff> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.buff.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Buff>(`${host}/nice/${region}/buff/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static craftEssence(region: Region, id: number): Promise<CraftEssence> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.craftEssence.get(\n            key,\n            () => {\n                let query = '?lore=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Servant>(`${host}/nice/${region}/equip/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async craftEssenceList(region: Region): Promise<BasicListEntity[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableCraftEssenceList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableCraftEssenceList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableCraftEssenceList(Region.JP),\n            na = await Connection.getCacheableCraftEssenceList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<BasicListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static func(region: Region, id: number): Promise<Func> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.func.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Func>(`${host}/nice/${region}/function/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static mysticCode(region: Region, id: number): Promise<MysticCode> {\n        const key = `${region}-${id}`;\n\n        return cache.mysticCode.get(\n            key,\n            () => {\n                return fetch<MysticCode>(`${host}/nice/${region}/MC/${id}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async mysticCodeList(region: Region): Promise<MysticCode[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableMysticCodeList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableMysticCodeList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableMysticCodeList(Region.JP),\n            na = await Connection.getCacheableMysticCodeList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<MysticCode>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static noblePhantasm(region: Region, id: number): Promise<NoblePhantasm> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.noblePhantasm.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<NoblePhantasm>(`${host}/nice/${region}/NP/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static quest(region: Region, id: number, phase: number): Promise<Quest> {\n        const key = `${region}-${id}-${phase}`;\n\n        return cache.quest.get(\n            key,\n            () => {\n                return fetch<Quest>(`${host}/nice/${region}/quest/${id}/${phase}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static servant(region: Region, id: number): Promise<Servant> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.servant.get(\n            key,\n            () => {\n                let query = '?lore=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Servant>(`${host}/nice/${region}/servant/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async servantList(region: Region): Promise<BasicListEntity[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableServantList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableServantList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableServantList(Region.JP),\n            na = await Connection.getCacheableServantList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<BasicListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static skill(region: Region, id: number): Promise<Skill> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.skill.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Skill>(`${host}/nice/${region}/skill/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static traitMap(region: Region): Promise<TraitMap> {\n        return cache.traitMap.get(\n            region,\n            () => {\n                return fetch<TraitMap>(`${host}/export/${region}/nice_trait.json`);\n            },\n            null\n        );\n    }\n\n    private static async getCacheableCraftEssenceList(region: Region): Promise<BasicListEntity[]> {\n        return cache.craftEssenceList.get(\n            region,\n            () => {\n                return fetch<BasicListEntity[]>(`${host}/export/${region}/basic_equip.json`);\n            },\n            null\n        );\n    }\n\n    private static async getCacheableMysticCodeList(region: Region): Promise<MysticCode[]> {\n        return cache.mysticCodeList.get(\n            region,\n            () => {\n                return fetch<BasicListEntity[]>(`${host}/export/${region}/nice_mystic_code.json`);\n            },\n            null\n        );\n    }\n\n    private static async getCacheableServantList(region: Region): Promise<BasicListEntity[]> {\n        return cache.servantList.get(\n            region,\n            () => {\n                return fetch<BasicListEntity[]>(`${host}/export/${region}/basic_servant.json`);\n            },\n            null\n        );\n    }\n}\n\nexport default Connection;\n","import React from \"react\";\n\nexport type Renderable = (\n    JSX.Element\n    | string\n    | number\n    | undefined\n    )\n\nexport function asPercent(value: number | string | undefined, pow: number): string {\n    if (typeof value === \"string\")\n        return asPercent(parseInt(value), pow);\n\n    const decimal = (value ?? 0) / Math.pow(10, pow);\n\n    return `${decimal}%`;\n}\n\nexport function handleNewLine(text?: string): Renderable {\n    if (!text)\n        return \"\";\n\n    return (\n        <span>\n            {mergeElements(text.split(\"\\n\"), <br/>)}\n        </span>\n    );\n}\n\nexport function joinElements(elements: Renderable[], separator: Renderable): Renderable[] {\n    const parts: Renderable[] = [],\n        pushElement = function (element: Renderable) {\n            if (element === undefined)\n                return;\n\n            if (typeof element === 'object') {\n                parts.push(element);\n                return;\n            }\n\n            if (parts.length === 0) {\n                parts.push(element.toString());\n                return;\n            }\n\n            const previous = parts[parts.length - 1];\n            if (typeof previous !== 'string') {\n                parts.push(element.toString());\n                return;\n            }\n\n            parts[parts.length - 1] = previous + element.toString();\n        };\n\n    elements.forEach((element, index) => {\n        if (index > 0)\n            pushElement(separator);\n\n        pushElement(element);\n    });\n\n    return parts;\n}\n\nexport function mergeElements(elements: Renderable[], seperator: Renderable): Renderable {\n    return <React.Fragment>\n        {joinElements(elements, seperator).map((element, index) => {\n            return <React.Fragment key={index}>{element}</React.Fragment>;\n        })}\n    </React.Fragment>\n}\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\n\nimport \"./DataTable.css\";\nimport {Renderable} from \"../Helper/OutputHelper\";\n\ninterface IProp {\n    header?: JSX.Element | string,\n    data: {\n        [key: string]: Renderable | object;\n    }\n}\n\nclass DataTable extends React.Component<IProp> {\n    private static dumpValue(value: Renderable | object): Renderable {\n        if (typeof value === \"object\") {\n            const element = value as JSX.Element;\n            if (element.key !== undefined && element.props !== undefined && element.type !== undefined) {\n                return element;\n            } else {\n                return JSON.stringify(value);\n            }\n        }\n\n        return value;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.header ? (\n                    <div className={'data-header'}>\n                        {this.props.header}\n                    </div>\n                ) : null}\n\n                <Table bordered hover className={'data-table'}>\n                    <tbody>\n                    {Object.keys(this.props.data).map((key, index) => {\n                        return (\n                            <tr key={index}>\n                                <th>{key}</th>\n                                <td>{DataTable.dumpValue(this.props.data[key])}</td>\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default DataTable;\n"],"sourceRoot":""}