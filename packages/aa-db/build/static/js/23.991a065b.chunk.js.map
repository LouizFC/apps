{"version":3,"sources":["Descriptor/RarityDescriptor.tsx","Page/CommandCode/CommandCodeMainData.tsx","Page/CommandCode/CommandCodePicker.tsx","Page/CommandCode/CommandCodePortrait.tsx","Page/CommandCodePage.tsx"],"names":["assetMap","Map","RarityDescriptor","has","this","props","rarity","alt","src","get","style","height","React","Component","CommandCodeMainData","commandCode","name","DataTable","data","RawDataViewer","region","id","collectionNo","comment","CommandCodePicker","history","push","FormControl","as","custom","onChange","ev","changeCommandCode","parseInt","target","value","commandCodes","slice","reverse","map","index","key","withRouter","CommandCodePortrait","extraAssets","charaGraph","cc","Object","values","shift","undefined","asset","CommandCodePage","state","loading","Manager","setRegion","loadCraftEssence","Promise","all","Api","commandCodeList","traitList","setState","error","ErrorStatus","Loading","Row","Col","xs","span","order","lg","Tabs","defaultActiveKey","tab","transition","onSelect","replace","Tab","eventKey","title","skills","skill","SkillBreakdown","cooldowns"],"mappings":"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","file":"static/js/23.991a065b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst assetMap = new Map<number, string>([\n    [1, './assets/star1.png'],\n    [2, './assets/star2.png'],\n    [3, './assets/star3.png'],\n    [4, './assets/star4.png'],\n    [5, './assets/star5.png'],\n]);\n\ninterface IProps {\n    rarity: number;\n    height?: number;\n}\n\nclass RarityDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <span>\n                {assetMap.has(this.props.rarity) ? (\n                    <img alt={`${this.props.rarity} star(s)`}\n                         src={assetMap.get(this.props.rarity)}\n                         style={{height: this.props.height ?? 18}}/>\n                ) : null}\n            </span>\n        );\n    }\n}\n\nexport default RarityDescriptor;\n","import {CommandCode, Region} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\nimport RarityDescriptor from \"../../Descriptor/RarityDescriptor\";\n\ninterface IProps {\n    region: Region;\n    commandCode: CommandCode.CommandCode;\n}\n\nclass CommandCodeMainData extends React.Component<IProps> {\n    render() {\n        const commandCode = this.props.commandCode;\n\n        return (\n            <div>\n                <h1>\n                    {commandCode.name}\n                </h1>\n\n                <DataTable data={{\n                    \"Data\": <RawDataViewer data={commandCode}/>,\n                    \"Raw\": <RawDataViewer\n                        data={`https://api.atlasacademy.io/raw/${this.props.region}/CC/${commandCode.id}?expand=true`}/>,\n                    \"ID\": commandCode.id,\n                    \"Collection\": commandCode.collectionNo,\n                    \"Name\": commandCode.name,\n                    \"Rarity\": <RarityDescriptor rarity={commandCode.rarity}/>,\n                    \"Comment\": commandCode.comment,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default CommandCodeMainData;\n","import {Region} from \"@atlasacademy/api-connector\";\nimport CommandCodeBasic from \"@atlasacademy/api-connector/dist/Schema/CommandCodeBasic\";\nimport React from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from \"react-router-dom\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps extends RouteComponentProps {\n    region: Region;\n    id: number;\n    commandCodes: CommandCodeBasic[];\n}\n\nclass CommandCodePicker extends React.Component<IProps> {\n    private changeCommandCode(id: number) {\n        this.props.history.push(`/${this.props.region}/command-code/${id}`);\n    }\n\n    render() {\n        return (\n            <div>\n                Jump to:\n                <FormControl as={\"select\"} custom\n                             onChange={(ev: Event) => {\n                                 this.changeCommandCode(parseInt(ev.target.value));\n                             }}\n                             value={this.props.id}>\n                    {this.props.commandCodes\n                        .slice()\n                        .reverse()\n                        .map((commandCode, index) => {\n                            return (\n                                <option key={index} value={commandCode.id}>\n                                    {commandCode.name}\n                                </option>\n                            );\n                        })\n                    }\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(CommandCodePicker);\n","import {CommandCode} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\n\nimport \"./CommandCodePortrait.css\";\n\ninterface IProps {\n    commandCode: CommandCode.CommandCode;\n}\n\nclass CommandCodePortrait extends React.Component<IProps> {\n\n    private asset(): string | undefined {\n        const assetMap = this.props.commandCode.extraAssets.charaGraph.cc;\n\n        return assetMap ? Object.values(assetMap).shift() : undefined;\n    }\n\n    render() {\n        const asset = this.asset();\n\n        return (\n            <div>\n                <img alt={this.props.commandCode.name}\n                     id={'command-code-portrait'}\n                     src={asset}/>\n            </div>\n        );\n    }\n}\n\nexport default CommandCodePortrait;\n","import {CommandCode, Region, Trait} from \"@atlasacademy/api-connector\";\nimport {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Col, Row, Tab, Tabs} from \"react-bootstrap\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport Api from \"../Api\";\nimport SkillBreakdown from \"../Breakdown/SkillBreakdown\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport Manager from \"../Setting/Manager\";\nimport CommandCodeMainData from \"./CommandCode/CommandCodeMainData\";\nimport CommandCodePicker from \"./CommandCode/CommandCodePicker\";\nimport CommandCodePortrait from \"./CommandCode/CommandCodePortrait\";\n\ninterface IProps extends RouteComponentProps {\n    region: Region;\n    id: number;\n    tab?: string;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    id: number;\n    commandCodes: CommandCode.CommandCodeBasic[];\n    commandCode?: CommandCode.CommandCode;\n}\n\nclass CommandCodePage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            id: this.props.id,\n            commandCodes: [],\n        };\n    }\n\n    componentDidMount() {\n        Manager.setRegion(this.props.region);\n        this.loadCraftEssence();\n    }\n\n    async loadCraftEssence() {\n        try {\n            let [commandCodes, commandCode] = await Promise.all<CommandCode.CommandCodeBasic[], CommandCode.CommandCode, Trait.Trait[]>([\n                Api.commandCodeList(),\n                Api.commandCode(this.state.id),\n                Api.traitList()\n            ]);\n\n            this.setState({\n                loading: false,\n                commandCodes,\n                commandCode\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading || !this.state.commandCode)\n            return <Loading/>;\n\n        const commandCode = this.state.commandCode;\n\n        return (\n            <div>\n                <CommandCodePicker region={this.props.region}\n                                   commandCodes={this.state.commandCodes}\n                                   id={commandCode.id}/>\n                <hr/>\n\n                <Row>\n                    <Col xs={{span: 12, order: 2}} lg={{span: 6, order: 1}}>\n                        <CommandCodeMainData region={this.props.region} commandCode={commandCode}/>\n                    </Col>\n                    <Col xs={{span: 12, order: 1}} lg={{span: 6, order: 2}}>\n                        <CommandCodePortrait commandCode={commandCode}/>\n                    </Col>\n                </Row>\n\n                <Tabs id={'cc-tabs'} defaultActiveKey={this.props.tab ?? 'effects'} transition={false}\n                      onSelect={(key?: string) => {\n                          this.props.history.replace(`/${this.props.region}/command-code/${this.props.id}/${key}`);\n                      }}>\n                    <Tab eventKey={'effects'} title={'Effects'}>\n                        <br/>\n                        {commandCode.skills\n                            .map((skill, index) => {\n                                return (\n                                    <SkillBreakdown key={index}\n                                                    region={this.props.region}\n                                                    skill={skill}\n                                                    cooldowns={false}/>\n                                );\n                            })}\n                    </Tab>\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(CommandCodePage);\n"],"sourceRoot":""}