{"version":3,"sources":["Setting/Option.tsx","Setting/Manager.tsx","Setting/SettingForm.tsx","Component/Navigation.tsx","Api/Connection.tsx","Component/Loading.tsx","Component/BuffIcon.tsx","Component/DataTable.tsx","Helper.tsx","Page/Servant/ServantAdvancedData.tsx","Api/Data/ClassName.tsx","Api/Data/Func.tsx","Api/Data/Buff.tsx","Component/ClassIcon.tsx","Page/Servant/ServantMainData.tsx","Helper/FuncHelper.tsx","Helper/BuffHelper.tsx","Page/Servant/ServantNoblePhantasm.tsx","Page/Servant/ServantPicker.tsx","Page/Servant/ServantPortrait.tsx","Page/ServantPage.tsx","Component/RarityStars.tsx","Component/ServantThumbnail.tsx","Page/ServantsPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LanguageOption","RegionOption","callbacks","Manager","value","window","localStorage","getItem","language","Object","values","find","v","DEFAULT","region","JP","undefined","setItem","triggerCallbacks","callback","push","forEach","call","SettingForm","props","state","onUpdate","syncSettings","this","setState","setLanguage","setRegion","Form","Group","Label","Control","as","onChange","ev","updateRegion","target","map","updateLanguage","React","Component","Navigation","showSettings","Navbar","bg","variant","expand","Container","to","className","Toggle","Collapse","Nav","NavItem","Link","href","icon","faDiscord","faGithub","Button","onClick","faCog","Modal","show","onHide","hideSettings","Header","closeButton","Title","Body","host","fetch","endpoint","a","axios","get","response","data","option","NA","servantListCache","Map","Connection","id","query","ENGLISH","getCacheableServantList","jp","na","names","entity","name","list","set","Loading","BuffIcon","alt","src","location","style","height","DataTable","header","Table","bordered","hover","keys","key","index","asPercent","ClassName","buffIconPath","deathChanceIcon","hitCountIcon","npGainIcon","starGenIcon","showHits","hits","hit","length","ServantAdvancedData","servant","Row","Col","xs","md","starAbsorb","starGen","instantDeathChance","npGain","buster","arts","quick","extra","defence","hitsDistribution","FuncType","FuncTargetType","FuncTargetTeam","DataValField","BuffType","classTypes","classIds","SABER","ARCHER","LANCER","RIDER","CASTER","ASSASSIN","BERSERKER","SHIELDER","RULER","ALTER_EGO","AVENGER","ClassIcon","classId","has","rarity","type","ServantMainData","collectionNo","cost","lvMax","hpMax","atkMax","gender","attribute","traits","trait","join","hasChangingDataVals","vals","previous","i","JSON","stringify","hasUniqueValues","Set","size","describeFunc","func","isLevel","funcUpdatesByLevel","isOvercharge","funcUpdatesByOvercharge","staticValues","fields","filter","field","val","getStaticFieldNames","staticVals","x","getStaticFieldValues","getLevelDataValList","getOverchargeDataValList","svals","description","Rate","funcType","DAMAGE_NP","DAMAGE_NP_PIERCE","ADD_STATE","ADD_STATE_SHORT","buffs","buff","detail","GAIN_NP","GAIN_HP","funcTargetType","ENEMY_ALL","PT_ALL","PT_OTHER","SELF","Turn","describeMutators","getMutatingFieldNames","mutatingVals","getMutatingFieldValues","mutatingVal","Value","SUB_SELFDAMAGE","buffIsFlatValue","LOSS_NP","LOSS_HP","svals2","svals3","svals4","svals5","ServantNoblePhantasm","showFunc","np","noblePhantasm","functions","funcDescription","mutatingDescriptions","cursor","faSearchPlus","hideFunc","ServantPicker","history","FormControl","custom","changeServant","parseInt","servants","withRouter","ServantPortrait","extraAssets","charaGraph","ascension","ServantPage","loading","loadServant","Promise","all","servantList","span","order","noblePhantasms","fillChars","count","character","Array","fill","RarityStars","ServantThumbnail","ServantsPage","then","striped","textAlign","width","align","face","App","updateSettings","path","component","render","match","params","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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AAA,E,4BAAAA,E,kCAAAA,E,kCAAAA,E,2BAAAA,E,4CAAAA,Q,cAsBAC,K,gBAAAA,E,cAAAA,E,mCAAAA,Q,cAMAC,K,YAAAA,E,YAAAA,E,cAAAA,E,cAAAA,E,gBAAAA,E,mBAAAA,E,gBAAAA,E,wBAAAA,E,qBAAAA,E,qBAAAA,E,qBAAAA,E,mBAAAA,E,8BAAAA,E,wBAAAA,E,uBAAAA,E,8BAAAA,E,iBAAAA,E,8BAAAA,E,yCAAAA,E,uBAAAA,E,4BAAAA,E,0BAAAA,E,oCAAAA,E,2BAAAA,E,yBAAAA,E,uBAAAA,E,mBAAAA,E,mBAAAA,E,8BAAAA,E,6BAAAA,E,uCAAAA,E,qCAAAA,E,yBAAAA,E,6BAAAA,E,uCAAAA,Q,cC3FAC,K,YAAAA,E,6BAAAA,E,6BAAAA,E,mCAAAA,E,uCAAAA,E,qBAAAA,E,yBAAAA,E,qBAAAA,E,qBAAAA,E,eAAAA,E,mBAAAA,E,qBAAAA,E,yBAAAA,E,uBAAAA,E,uBAAAA,E,yBAAAA,E,6BAAAA,E,qBAAAA,E,qCAAAA,E,yCAAAA,E,6BAAAA,E,iCAAAA,E,+BAAAA,E,+BAAAA,E,sBAAAA,E,iCAAAA,E,wBAAAA,E,6BAAAA,E,iCAAAA,E,2BAAAA,E,+BAAAA,E,yBAAAA,E,qBAAAA,E,yBAAAA,E,yBAAAA,E,+BAAAA,E,+BAAAA,E,YAAAA,E,iBAAAA,E,qCAAAA,E,qCAAAA,E,uBAAAA,E,2BAAAA,E,+BAAAA,E,2BAAAA,E,6BAAAA,E,iCAAAA,E,iCAAAA,E,qBAAAA,E,yBAAAA,E,sBAAAA,E,0BAAAA,E,iCAAAA,E,iCAAAA,E,+BAAAA,E,iCAAAA,E,qCAAAA,E,qCAAAA,E,uCAAAA,E,8CAAAA,E,oDAAAA,E,+BAAAA,E,yCAAAA,E,6BAAAA,E,mBAAAA,E,uBAAAA,E,qBAAAA,E,qBAAAA,E,2CAAAA,E,uCAAAA,E,2CAAAA,E,8BAAAA,E,kCAAAA,E,+CAAAA,E,yCAAAA,E,qCAAAA,E,yCAAAA,E,iCAAAA,E,qCAAAA,E,+BAAAA,E,uBAAAA,E,yCAAAA,E,oCAAAA,E,wCAAAA,E,4CAAAA,E,gDAAAA,E,4CAAAA,E,gDAAAA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","file":"static/js/main.c0445705.chunk.js","sourcesContent":["export enum LanguageOption {\n    DEFAULT = 'Default',\n    ENGLISH = 'English',\n}\n\nexport enum RegionOption {\n    JP = 'JP',\n    NA = 'NA'\n}\n","import {LanguageOption, RegionOption} from \"./Option\";\n\nconst languageKey = 'language',\n    regionKey = 'region';\n\nconst callbacks: Function[] = [];\n\nclass Manager {\n    static language(): LanguageOption {\n        const value = window.localStorage.getItem(languageKey),\n            language = Object.values(LanguageOption).find(v => v === value);\n\n        return language ?? LanguageOption.DEFAULT;\n    }\n\n    static region(): RegionOption {\n        const value = window.localStorage.getItem(regionKey),\n            region = Object.values(RegionOption).find(v => v === value);\n\n        return region ?? RegionOption.JP;\n    }\n\n    static setLanguage(value: string) {\n        const language = Object.values(LanguageOption).find(v => v === value);\n        if (language === undefined)\n            return;\n\n        window.localStorage.setItem(languageKey, language);\n        Manager.triggerCallbacks();\n    }\n\n    static setRegion(value: string) {\n        const region = Object.values(RegionOption).find(v => v === value);\n        if (region === undefined)\n            return;\n\n        window.localStorage.setItem(regionKey, region);\n        Manager.triggerCallbacks();\n    }\n\n    static onUpdate(callback: Function) {\n        callbacks.push(callback);\n    }\n\n    private static triggerCallbacks()\n    {\n        callbacks.forEach(callback => {\n            callback.call(null);\n        });\n    }\n}\n\nexport default Manager;\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport Manager from \"./Manager\";\nimport {LanguageOption, RegionOption} from \"./Option\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IState {\n    region: RegionOption,\n    language: LanguageOption\n}\n\nclass SettingForm extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            region: Manager.region(),\n            language: Manager.language(),\n        }\n\n        Manager.onUpdate(() => this.syncSettings());\n    }\n\n    private syncSettings() {\n        this.setState({\n            region: Manager.region(),\n            language: Manager.language(),\n        });\n    }\n\n    updateLanguage(value: string) {\n        Manager.setLanguage(value);\n    }\n\n    updateRegion(value: string) {\n        Manager.setRegion(value);\n    }\n\n    render() {\n        return (\n            <div>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Region</Form.Label>\n                        <Form.Control as={'select'} value={this.state.region}\n                                      onChange={(ev: Event) => this.updateRegion(ev.target.value)}>\n                            {Object.values(RegionOption).map(v => (\n                                <option value={v}>{v}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Language</Form.Label>\n                        <Form.Control as={'select'} value={this.state.language}\n                                      onChange={(ev: Event) => this.updateLanguage(ev.target.value)}>\n                            {Object.values(LanguageOption).map(v => (\n                                <option value={v}>{v}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default SettingForm;\n","import {faDiscord, faGithub} from \"@fortawesome/free-brands-svg-icons\";\nimport {faCog} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Button, Container, Modal, Nav, Navbar, NavItem} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport SettingForm from \"../Setting/SettingForm\";\n\ninterface IState {\n    showSettings: boolean;\n}\n\nclass Navigation extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            showSettings: false,\n        };\n    }\n\n    hideSettings() {\n        this.setState({showSettings: false});\n    }\n\n    showSettings() {\n        this.setState({showSettings: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar bg={\"dark\"} variant={'dark'} expand={\"lg\"}>\n                    <Container>\n                        <Link to=\"/\" className={'navbar-brand'}>AA-DB</Link>\n                        <Navbar.Toggle/>\n\n                        <Navbar.Collapse>\n                            <Nav>\n                                <Link to=\"/servants\" className={'nav-link'}>\n                                    <NavItem>Servants</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav className={'ml-auto'}>\n                                <Nav.Link href={'https://discord.gg/TKJmuCR'} target={'_blank'}>\n                                    <FontAwesomeIcon icon={faDiscord}/>\n                                </Nav.Link>\n                                <Nav.Link href={'https://github.com/atlasacademy/aa-db'} target={'_blank'}>\n                                    <FontAwesomeIcon icon={faGithub}/>\n                                </Nav.Link>\n                                <Button variant={\"primary\"} onClick={() => this.showSettings()}>\n                                    <FontAwesomeIcon icon={faCog}/>\n                                </Button>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Container>\n                </Navbar>\n\n                <Modal show={this.state.showSettings} onHide={() => this.hideSettings()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Settings</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <SettingForm/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n\n}\n\nexport default Navigation;\n","import axios from \"axios\";\nimport Manager from \"../Setting/Manager\";\nimport {LanguageOption, RegionOption} from \"../Setting/Option\";\nimport ServantEntity from \"./Data/ServantEntity\";\nimport ServantListEntity from \"./Data/ServantListEntity\";\n\nconst host = 'https://api.atlasacademy.io';\nconst fetch = async function <T>(endpoint: string): Promise<T> {\n    const response = await axios.get<T>(endpoint);\n\n    return response.data;\n}\nconst region = function (option?: RegionOption): string {\n    option = option ?? Manager.region();\n\n    if (option === RegionOption.NA)\n        return 'NA';\n\n    return 'JP';\n}\nconst servantListCache = new Map<RegionOption, ServantListEntity[]>();\n\nclass Connection {\n\n    public static servant(id: number): Promise<ServantEntity> {\n        let query = '?lore=true' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<ServantEntity>(`${host}/nice/${region()}/servant/${id}${query}`);\n    }\n\n    public static async servantList(): Promise<ServantListEntity[]> {\n        if (Manager.region() === RegionOption.NA) {\n            return Connection.getCacheableServantList(RegionOption.NA);\n        } else if (Manager.region() === RegionOption.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableServantList(RegionOption.JP);\n        }\n\n        const jp = await Connection.getCacheableServantList(RegionOption.JP),\n            na = await Connection.getCacheableServantList(RegionOption.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<ServantListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    private static async getCacheableServantList(option: RegionOption): Promise<ServantListEntity[]> {\n        let list = servantListCache.get(option);\n        if (list !== undefined)\n            return list;\n\n        list = await fetch<ServantListEntity[]>(`${host}/export/${region(option)}/basic_servant.json`);\n        servantListCache.set(option, list);\n\n        return list;\n    }\n\n}\n\nexport default Connection;\n","import React from \"react\";\n\nfunction Loading() {\n    return (\n        <div>\n            Loading ...\n        </div>\n    );\n}\n\nexport default Loading;\n","import React from \"react\";\n\ninterface IProp {\n    location: string;\n    height?: number;\n}\n\nclass BuffIcon extends React.Component<IProp> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location} style={{height: this.props.height ?? 25}}/>\n        );\n    }\n\n}\n\nexport default BuffIcon;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\n\nimport \"./DataTable.css\";\n\ninterface IProp {\n    header?: JSX.Element | string,\n    data: {\n        [key: string]: JSX.Element | string | number;\n    }\n}\n\nclass DataTable extends React.Component<IProp> {\n    render() {\n        return (\n            <div>\n                {this.props.header ? (\n                    <div className={'data-header'}>\n                        {this.props.header}\n                    </div>\n                ) : null}\n\n                <Table bordered hover className={'data-table'}>\n                    <tbody>\n                    {Object.keys(this.props.data).map((key, index) => {\n                        return (\n                            <tr key={index}>\n                                <th>{key}</th>\n                                <td>{this.props.data[key]}</td>\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default DataTable;\n","export function asPercent(value: number | undefined): string {\n    const decimal = (value ?? 0) / 10;\n\n    return `${decimal}%`;\n}\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport ServantEntity from \"../../Api/Data/ServantEntity\";\nimport BuffIcon from \"../../Component/BuffIcon\";\nimport DataTable from \"../../Component/DataTable\";\nimport {asPercent} from \"../../Helper\";\n\nconst buffIconPath = 'https://assets.atlasacademy.io/GameData/JP/BuffIcons',\n    deathChanceIcon = `${buffIconPath}/bufficon_337.png`,\n    hitCountIcon = `${buffIconPath}/bufficon_349.png`,\n    npGainIcon = `${buffIconPath}/bufficon_303.png`,\n    starGenIcon = `${buffIconPath}/bufficon_310.png`,\n    showHits = function (hits: number[] | undefined): JSX.Element | string {\n        if (hits === undefined)\n            return '';\n\n        return <span>\n            {hits.map((hit, index) => {\n                return (index > 0 ? ', ' : '') + hit + '%';\n            })}\n            &nbsp;-&nbsp;\n            {hits.length} Hits\n        </span>\n    };\n\ninterface IProps {\n    servant: ServantEntity;\n}\n\nclass ServantAdvancedData extends React.Component<IProps> {\n    render() {\n        const servant = this.props.servant;\n\n        return (\n            <div>\n                <Row>\n                    <Col xs={12} md={4}>\n                        <DataTable\n                            header={(\n                                <div>\n                                    <BuffIcon location={starGenIcon}/>&nbsp;Crit Stars\n                                </div>\n                            )}\n                            data={{\n                                \"Star Absorb\": servant.starAbsorb,\n                                \"Star Gen\": asPercent(servant.starGen),\n                            }}/>\n\n                        <DataTable\n                            header={(\n                                <div>\n                                    <BuffIcon location={deathChanceIcon}/>&nbsp;Instant Death\n                                </div>\n                            )}\n                            data={{\n                                \"Death Chance\": asPercent(servant.instantDeathChance),\n                            }}/>\n                    </Col>\n\n                    <Col xs={12} md={4}>\n                        <DataTable\n                            header={(\n                                <div>\n                                    <BuffIcon location={npGainIcon}/>&nbsp;NP Gain\n                                </div>\n                            )}\n                            data={{\n                                \"Buster\": asPercent(servant.npGain.buster),\n                                \"Arts\": asPercent(servant.npGain.arts),\n                                \"Quick\": asPercent(servant.npGain.quick),\n                                \"Extra\": asPercent(servant.npGain.extra),\n                                \"Defense\": asPercent(servant.npGain.defence),\n                            }}/>\n                    </Col>\n\n                    <Col xs={12} md={4}>\n                        <DataTable\n                            header={(\n                                <div>\n                                    <BuffIcon location={hitCountIcon}/>\n                                    &nbsp;\n                                    Hit Count\n                                </div>\n                            )}\n                            data={{\n                                \"Buster\": showHits(servant.hitsDistribution.buster),\n                                \"Arts\": showHits(servant.hitsDistribution.arts),\n                                \"Quick\": showHits(servant.hitsDistribution.quick),\n                                \"Extra\": showHits(servant.hitsDistribution.extra),\n                            }}/>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default ServantAdvancedData;\n","enum ClassName {\n    SABER = \"saber\",\n    ARCHER = \"archer\",\n    LANCER = \"lancer\",\n    RIDER = \"rider\",\n    CASTER = \"caster\",\n    ASSASSIN = \"assassin\",\n    BERSERKER = \"berserker\",\n    SHIELDER = \"shielder\",\n    RULER = \"ruler\",\n    ALTER_EGO = \"alterEgo\",\n    AVENGER = \"avenger\",\n    GRAND_CASTER = \"grandCaster\",\n    BEAST_II = \"beastII\",\n    BEAST_I = \"beastI\",\n    MOON_CANCER = \"moonCancer\",\n    BEAST_IIIR = \"beastIIIR\",\n    FOREIGNER = \"foreigner\",\n    BEAST_IIIL = \"beastIIIL\",\n    BEAST_UNKNOWN = \"beastUnknown\",\n    ALL = \"ALL\",\n}\n\nexport default ClassName;\n","import Buff from \"./Buff\";\nimport Trait from \"./Trait\";\n\nexport enum FuncType {\n    NONE = \"none\",\n    ADD_STATE = \"addState\",\n    SUB_STATE = \"subState\",\n    DAMAGE = \"damage\",\n    DAMAGE_NP = \"damageNp\",\n    GAIN_STAR = \"gainStar\",\n    GAIN_HP = \"gainHp\",\n    GAIN_NP = \"gainNp\",\n    LOSS_NP = \"lossNp\",\n    SHORTEN_SKILL = \"shortenSkill\",\n    EXTEND_SKILL = \"extendSkill\",\n    RELEASE_STATE = \"releaseState\",\n    LOSS_HP = \"lossHp\",\n    INSTANT_DEATH = \"instantDeath\",\n    DAMAGE_NP_PIERCE = \"damageNpPierce\",\n    DAMAGE_NP_INDIVIDUAL = \"damageNpIndividual\",\n    ADD_STATE_SHORT = \"addStateShort\",\n    GAIN_HP_PER = \"gainHpPer\",\n    DAMAGE_NP_STATE_INDIVIDUAL = \"damageNpStateIndividual\",\n    HASTEN_NPTURN = \"hastenNpturn\",\n    DELAY_NPTURN = \"delayNpturn\",\n    DAMAGE_NP_HPRATIO_HIGH = \"damageNpHpratioHigh\",\n    DAMAGE_NP_HPRATIO_LOW = \"damageNpHpratioLow\",\n    CARD_RESET = \"cardReset\",\n    REPLACE_MEMBER = \"replaceMember\",\n    LOSS_HP_SAFE = \"lossHpSafe\",\n    DAMAGE_NP_COUNTER = \"damageNpCounter\",\n    DAMAGE_NP_STATE_INDIVIDUAL_FIX = \"damageNpStateIndividualFix\",\n    DAMAGE_NP_SAFE = \"damageNpSafe\",\n    CALL_SERVANT = \"callServant\",\n    PT_SHUFFLE = \"ptShuffle\",\n    LOSS_STAR = \"lossStar\",\n    CHANGE_SERVANT = \"changeServant\",\n    CHANGE_BG = \"changeBg\",\n    DAMAGE_VALUE = \"damageValue\",\n    WITHDRAW = \"withdraw\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    SHORTEN_BUFFTURN = \"shortenBuffturn\",\n    EXTEND_BUFFTURN = \"extendBuffturn\",\n    SHORTEN_BUFFCOUNT = \"shortenBuffcount\",\n    EXTEND_BUFFCOUNT = \"extendBuffcount\",\n    CHANGE_BGM = \"changeBgm\",\n    DISPLAY_BUFFSTRING = \"displayBuffstring\",\n    EXP_UP = \"expUp\",\n    QP_UP = \"qpUp\",\n    DROP_UP = \"dropUp\",\n    FRIEND_POINT_UP = \"friendPointUp\",\n    EVENT_DROP_UP = \"eventDropUp\",\n    EVENT_DROP_RATE_UP = \"eventDropRateUp\",\n    EVENT_POINT_UP = \"eventPointUp\",\n    EVENT_POINT_RATE_UP = \"eventPointRateUp\",\n    TRANSFORM_SERVANT = \"transformServant\",\n    QP_DROP_UP = \"qpDropUp\",\n    SERVANT_FRIENDSHIP_UP = \"servantFriendshipUp\",\n    USER_EQUIP_EXP_UP = \"userEquipExpUp\",\n    CLASS_DROP_UP = \"classDropUp\",\n    ENEMY_ENCOUNT_COPY_RATE_UP = \"enemyEncountCopyRateUp\",\n    ENEMY_ENCOUNT_RATE_UP = \"enemyEncountRateUp\",\n    ENEMY_PROB_DOWN = \"enemyProbDown\",\n}\n\nexport enum FuncTargetType {\n    SELF = \"self\",\n    PT_ONE = \"ptOne\",\n    PT_ANOTHER = \"ptAnother\",\n    PT_ALL = \"ptAll\",\n    ENEMY = \"enemy\",\n    ENEMY_ANOTHER = \"enemyAnother\",\n    ENEMY_ALL = \"enemyAll\",\n    PT_FULL = \"ptFull\",\n    ENEMY_FULL = \"enemyFull\",\n    PT_OTHER = \"ptOther\",\n    PT_ONE_OTHER = \"ptOneOther\",\n    PT_RANDOM = \"ptRandom\",\n    ENEMY_OTHER = \"enemyOther\",\n    ENEMY_RANDOM = \"enemyRandom\",\n    PT_OTHER_FULL = \"ptOtherFull\",\n    ENEMY_OTHER_FULL = \"enemyOtherFull\",\n    PTSELECT_ONE_SUB = \"ptselectOneSub\",\n    PTSELECT_SUB = \"ptselectSub\",\n    PT_ONE_ANOTHER_RANDOM = \"ptOneAnotherRandom\",\n}\n\nexport enum FuncTargetTeam {\n    PLAYER = \"player\",\n    ENEMY = \"enemy\",\n    PLAYER_AND_ENEMY = \"playerAndEnemy\",\n}\n\nexport enum DataValField {\n    RATE = \"Rate\",\n    TURN = \"Turn\",\n    COUNT = \"Count\",\n    VALUE = \"Value\",\n    VALUE2 = \"Value2\",\n    USE_RATE = \"UseRate\",\n    TARGET = \"Target\",\n    CORRECTION = \"Correction\",\n    PARAM_ADD = \"ParamAdd\",\n    PARAM_MAX = \"ParamMax\",\n    HIDE_MISS = \"HideMiss\",\n    ON_FIELD = \"OnField\",\n    HIDE_NO_EFFECT = \"HideNoEffect\",\n    UNAFFECTED = \"Unaffected\",\n    SHOW_STATE = \"ShowState\",\n    AURA_EFFECT_ID = \"AuraEffectId\",\n    ACT_SET = \"ActSet\",\n    ACT_SET_WEIGHT = \"ActSetWeight\",\n    SHOW_QUEST_NO_EFFECT = \"ShowQuestNoEffect\",\n    CHECK_DEAD = \"CheckDead\",\n    RATIO_HP_HIGH = \"RatioHPHigh\",\n    RATIO_HP_LOW = \"RatioHPLow\",\n    SET_PASSIVE_FRAME = \"SetPassiveFrame\",\n    PROC_PASSIVE = \"ProcPassive\",\n    PROC_ACTIVE = \"ProcActive\",\n    HIDE_PARAM = \"HideParam\",\n    SKILL_ID = \"SkillID\",\n    SKILL_LV = \"SkillLV\",\n    SHOW_CARD_ONLY = \"ShowCardOnly\",\n    EFFECT_SUMMON = \"EffectSummon\",\n    RATIO_HP_RANGE_HIGH = \"RatioHPRangeHigh\",\n    RATIO_HP_RANGE_LOW = \"RatioHPRangeLow\",\n    TARGET_LIST = \"TargetList\",\n    OPPONENT_ONLY = \"OpponentOnly\",\n    TARGET_RARITY_LIST = \"TargetRarityList\",\n}\n\nexport type DataVal = {\n    [key in DataValField]?: number;\n}\n\nexport default interface Func {\n    funcId: number;\n    funcType: FuncType;\n    funcTargetType: FuncTargetType;\n    funcTargetTeam: FuncTargetTeam;\n    funcPopupText: string;\n    funcPopupIcon: string;\n    functvals: Trait[];\n    funcquestTvals: number[];\n    buffs: Buff[];\n    svals: DataVal[];\n    svals2?: DataVal[];\n    svals3?: DataVal[];\n    svals4?: DataVal[];\n    svals5?: DataVal[];\n}\n","import Trait from \"./Trait\";\n\nexport enum BuffType {\n    NONE = \"none\",\n    UP_COMMANDATK = \"upCommandatk\",\n    UP_STARWEIGHT = \"upStarweight\",\n    UP_CRITICALPOINT = \"upCriticalpoint\",\n    DOWN_CRITICALPOINT = \"downCriticalpoint\",\n    REGAIN_NP = \"regainNp\",\n    REGAIN_STAR = \"regainStar\",\n    REGAIN_HP = \"regainHp\",\n    REDUCE_HP = \"reduceHp\",\n    UP_ATK = \"upAtk\",\n    DOWN_ATK = \"downAtk\",\n    UP_DAMAGE = \"upDamage\",\n    DOWN_DAMAGE = \"downDamage\",\n    ADD_DAMAGE = \"addDamage\",\n    SUB_DAMAGE = \"subDamage\",\n    UP_NPDAMAGE = \"upNpdamage\",\n    DOWN_NPDAMAGE = \"downNpdamage\",\n    UP_DROPNP = \"upDropnp\",\n    UP_CRITICALDAMAGE = \"upCriticaldamage\",\n    DOWN_CRITICALDAMAGE = \"downCriticaldamage\",\n    UP_SELFDAMAGE = \"upSelfdamage\",\n    DOWN_SELFDAMAGE = \"downSelfdamage\",\n    ADD_SELFDAMAGE = \"addSelfdamage\",\n    SUB_SELFDAMAGE = \"subSelfdamage\",\n    AVOIDANCE = \"avoidance\",\n    BREAK_AVOIDANCE = \"breakAvoidance\",\n    INVINCIBLE = \"invincible\",\n    UP_GRANTSTATE = \"upGrantstate\",\n    DOWN_GRANTSTATE = \"downGrantstate\",\n    UP_TOLERANCE = \"upTolerance\",\n    DOWN_TOLERANCE = \"downTolerance\",\n    AVOID_STATE = \"avoidState\",\n    DONOT_ACT = \"donotAct\",\n    DONOT_SKILL = \"donotSkill\",\n    DONOT_NOBLE = \"donotNoble\",\n    DONOT_RECOVERY = \"donotRecovery\",\n    DISABLE_GENDER = \"disableGender\",\n    GUTS = \"guts\",\n    UP_HATE = \"upHate\",\n    ADD_INDIVIDUALITY = \"addIndividuality\",\n    SUB_INDIVIDUALITY = \"subIndividuality\",\n    UP_DEFENCE = \"upDefence\",\n    DOWN_DEFENCE = \"downDefence\",\n    UP_COMMANDSTAR = \"upCommandstar\",\n    UP_COMMANDNP = \"upCommandnp\",\n    UP_COMMANDALL = \"upCommandall\",\n    DOWN_COMMANDALL = \"downCommandall\",\n    DOWN_STARWEIGHT = \"downStarweight\",\n    REDUCE_NP = \"reduceNp\",\n    DOWN_DROPNP = \"downDropnp\",\n    UP_GAIN_HP = \"upGainHp\",\n    DOWN_GAIN_HP = \"downGainHp\",\n    DOWN_COMMANDATK = \"downCommandatk\",\n    DOWN_COMMANSTAR = \"downCommanstar\",\n    DOWN_COMMANDNP = \"downCommandnp\",\n    UP_CRITICALRATE = \"upCriticalrate\",\n    DOWN_CRITICALRATE = \"downCriticalrate\",\n    PIERCE_INVINCIBLE = \"pierceInvincible\",\n    AVOID_INSTANTDEATH = \"avoidInstantdeath\",\n    UP_RESIST_INSTANTDEATH = \"upResistInstantdeath\",\n    UP_NONRESIST_INSTANTDEATH = \"upNonresistInstantdeath\",\n    DELAY_FUNCTION = \"delayFunction\",\n    REGAIN_NP_USED_NOBLE = \"regainNpUsedNoble\",\n    DEAD_FUNCTION = \"deadFunction\",\n    UP_MAXHP = \"upMaxhp\",\n    DOWN_MAXHP = \"downMaxhp\",\n    ADD_MAXHP = \"addMaxhp\",\n    SUB_MAXHP = \"subMaxhp\",\n    BATTLESTART_FUNCTION = \"battlestartFunction\",\n    WAVESTART_FUNCTION = \"wavestartFunction\",\n    SELFTURNEND_FUNCTION = \"selfturnendFunction\",\n    UP_GIVEGAIN_HP = \"upGivegainHp\",\n    DOWN_GIVEGAIN_HP = \"downGivegainHp\",\n    COMMANDATTACK_FUNCTION = \"commandattackFunction\",\n    DEADATTACK_FUNCTION = \"deadattackFunction\",\n    UP_SPECIALDEFENCE = \"upSpecialdefence\",\n    DOWN_SPECIALDEFENCE = \"downSpecialdefence\",\n    UP_DAMAGEDROPNP = \"upDamagedropnp\",\n    DOWN_DAMAGEDROPNP = \"downDamagedropnp\",\n    ENTRY_FUNCTION = \"entryFunction\",\n    UP_CHAGETD = \"upChagetd\",\n    REFLECTION_FUNCTION = \"reflectionFunction\",\n    UP_GRANT_SUBSTATE = \"upGrantSubstate\",\n    DOWN_GRANT_SUBSTATE = \"downGrantSubstate\",\n    UP_TOLERANCE_SUBSTATE = \"upToleranceSubstate\",\n    DOWN_TOLERANCE_SUBSTATE = \"downToleranceSubstate\",\n    UP_GRANT_INSTANTDEATH = \"upGrantInstantdeath\",\n    DOWN_GRANT_INSTANTDEATH = \"downGrantInstantdeath\",\n    GUTS_RATIO = \"gutsRatio\",\n    DAMAGE_FUNCTION = \"damageFunction\",\n    UP_DEFENCECOMMANDALL = \"upDefencecommandall\",\n    DOWN_DEFENCECOMMANDALL = \"downDefencecommandall\",\n    OVERWRITE_BATTLECLASS = \"overwriteBattleclass\",\n    OVERWRITE_CLASSRELATIO_ATK = \"overwriteClassrelatioAtk\",\n    OVERWRITE_CLASSRELATIO_DEF = \"overwriteClassrelatioDef\",\n    UP_DAMAGE_INDIVIDUALITY = \"upDamageIndividuality\",\n    DOWN_DAMAGE_INDIVIDUALITY = \"downDamageIndividuality\",\n    UP_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"upDamageIndividualityActiveonly\",\n    DOWN_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"downDamageIndividualityActiveonly\",\n    UP_NPTURNVAL = \"upNpturnval\",\n    DOWN_NPTURNVAL = \"downNpturnval\",\n    MULTIATTACK = \"multiattack\",\n    UP_GIVE_NP = \"upGiveNp\",\n    DOWN_GIVE_NP = \"downGiveNp\",\n    UP_RESISTANCE_DELAY_NPTURN = \"upResistanceDelayNpturn\",\n    DOWN_RESISTANCE_DELAY_NPTURN = \"downResistanceDelayNpturn\",\n    PIERCE_DEFENCE = \"pierceDefence\",\n    UP_GUTS_HP = \"upGutsHp\",\n    DOWN_GUTS_HP = \"downGutsHp\",\n    UP_FUNCGAIN_NP = \"upFuncgainNp\",\n    DOWN_FUNCGAIN_NP = \"downFuncgainNp\",\n    UP_FUNC_HP_REDUCE = \"upFuncHpReduce\",\n    DOWN_FUNC_HP_REDUCE = \"downFuncHpReduce\",\n    UP_DEFENCECOMMAN_DAMAGE = \"upDefencecommanDamage\",\n    DOWN_DEFENCECOMMAN_DAMAGE = \"downDefencecommanDamage\",\n    NPATTACK_PREV_BUFF = \"npattackPrevBuff\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    DONOT_GAINNP = \"donotGainnp\",\n    FIELD_INDIVIDUALITY = \"fieldIndividuality\",\n    DONOT_ACT_COMMANDTYPE = \"donotActCommandtype\",\n    UP_DAMAGE_EVENT_POINT = \"upDamageEventPoint\",\n}\n\nexport default interface Buff {\n    id: number;\n    name: string;\n    detail: string;\n    icon: string;\n    type: BuffType;\n    vals: Trait[];\n    tvals: Trait[];\n    ckSelfIndv: Trait[];\n    ckOpIndv: Trait[];\n    maxRate: number;\n}\n","import React from \"react\";\nimport ClassName from \"../Api/Data/ClassName\";\n\nconst classTypes = new Map<number, number>([\n    [1, 1],\n    [2, 1],\n    [3, 2],\n    [4, 3],\n    [5, 3],\n]);\nconst unknownClassType = 3;\nconst classIds = new Map<ClassName, number>([\n    [ClassName.SABER, 1],\n    [ClassName.ARCHER, 2],\n    [ClassName.LANCER, 3],\n    [ClassName.RIDER, 4],\n    [ClassName.CASTER, 5],\n    [ClassName.ASSASSIN, 6],\n    [ClassName.BERSERKER, 7],\n    [ClassName.SHIELDER, 8],\n    [ClassName.RULER, 9],\n    [ClassName.ALTER_EGO, 10],\n    [ClassName.AVENGER, 11],\n]);\nconst unknownClassId = 12;\n\ninterface IProps {\n    className: ClassName;\n    rarity?: number;\n    height?: number;\n}\n\nclass ClassIcon extends React.Component<IProps> {\n    render() {\n        return (\n            <img alt={''} src={this.location()}\n                 style={this.props.height ? {height: this.props.height} : undefined}/>\n        );\n    }\n\n    private location(): string {\n        let classId = classIds.has(this.props.className) ? classIds.get(this.props.className) : unknownClassId,\n            rarity = this.props.rarity ?? 5,\n            type = classTypes.has(rarity) ? classTypes.get(rarity) : unknownClassType;\n\n        return `https://assets.atlasacademy.io/GameData/NA/ClassIcons/class${type}_${classId}.png`;\n    }\n}\n\nexport default ClassIcon;\n","import React from \"react\";\nimport ServantEntity from \"../../Api/Data/ServantEntity\";\nimport ClassIcon from \"../../Component/ClassIcon\";\nimport DataTable from \"../../Component/DataTable\";\n\ninterface IProps {\n    servant: ServantEntity;\n}\n\nclass ServantMainData extends React.Component<IProps> {\n    render() {\n        const servant = this.props.servant;\n\n        return (\n            <div>\n                <h1>\n                    <ClassIcon className={servant.className} rarity={servant.rarity}/>\n                    &nbsp;\n                    {servant.name}\n                </h1>\n\n                <DataTable data={{\n                    \"ID\": servant.id,\n                    \"Collection\": servant.collectionNo,\n                    \"Name\": servant.name,\n                    \"Class\": servant.className,\n                    \"Rarity\": servant.rarity,\n                    \"Cost\": servant.cost,\n                    \"Max Lv.\": servant.lvMax,\n                    \"Max Hp\": servant.hpMax,\n                    \"Max Atk\": servant.atkMax,\n                    \"Gender\": servant.gender,\n                    \"Attribute\": servant.attribute,\n                    \"Traits\": servant.traits.map((trait) => {\n                        return trait.name;\n                    }).join(', '),\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantMainData;\n","import Func, {DataVal, DataValField, FuncTargetType, FuncType} from \"../Api/Data/Func\";\nimport {buffIsFlatValue} from \"./BuffHelper\";\n\nconst hasChangingDataVals = function (vals: DataVal[]): boolean {\n    if (!vals.length)\n        return false;\n\n    let previous = vals[0];\n    for (let i = 1; i < vals.length; i++) {\n        if (JSON.stringify(previous) !== JSON.stringify(vals[i]))\n            return true;\n\n        previous = vals[i];\n    }\n\n    return false;\n};\n\nconst hasUniqueValues = function (values: (number | undefined)[]): boolean {\n    return new Set(values).size > 1;\n};\n\nexport function describeFunc(func: Func): string {\n    const isLevel = funcUpdatesByLevel(func),\n        isOvercharge = isLevel ? false : funcUpdatesByOvercharge(func),\n        dataVals = isLevel ? getLevelDataValList(func) : (isOvercharge ? getOverchargeDataValList(func) : func.svals),\n        staticValues = getStaticFieldValues(dataVals);\n\n    let description = '';\n\n    if (staticValues.Rate && staticValues.Rate !== 1000) {\n        description += (staticValues.Rate / 10) + '% Chance to ';\n    }\n\n    if (func.funcType === FuncType.DAMAGE_NP) {\n        description += 'Deal damage ';\n    } else if (func.funcType === FuncType.DAMAGE_NP_PIERCE) {\n        description += 'Deal damage that pierces defence ';\n    } else if (func.funcType === FuncType.ADD_STATE || func.funcType === FuncType.ADD_STATE_SHORT) {\n        description += 'Apply ' + func.buffs.map(buff => `\"${buff.detail}\"`).join(' & ') + ' ';\n    } else if (func.funcType === FuncType.GAIN_NP) {\n        description += 'Charge NP ';\n    } else if (func.funcType === FuncType.GAIN_HP) {\n        description += 'Gain HP ';\n    }\n\n    if (func.funcTargetType === FuncTargetType.ENEMY_ALL) {\n        description += 'to all enemies ';\n    } else if (func.funcTargetType === FuncTargetType.PT_ALL) {\n        description += 'to party ';\n    } else if (func.funcTargetType === FuncTargetType.PT_OTHER) {\n        description += 'to other party members ';\n    } else if (func.funcTargetType === FuncTargetType.SELF) {\n        description += 'to self ';\n    }\n\n    if (staticValues.Turn) {\n        description += (staticValues.Turn === 1 ? '(1 Turn)' : `(${staticValues.Turn} Turns)`) + ' ';\n    }\n\n    if (isLevel) {\n        description += '<LEVEL> ';\n    }\n\n    if (isOvercharge) {\n        description += '<OVERCHARGE> ';\n    }\n\n    return description;\n}\n\nexport function describeMutators(func: Func): string[] {\n    const isLevel = funcUpdatesByLevel(func),\n        isOvercharge = isLevel ? false : funcUpdatesByOvercharge(func),\n        dataVals = isLevel ? getLevelDataValList(func) : (isOvercharge ? getOverchargeDataValList(func) : func.svals),\n        mutatingVals = getMutatingFieldValues(dataVals);\n\n    return mutatingVals.map(mutatingVal => {\n        let description = '';\n\n        if (mutatingVal.Value) {\n            if (func.buffs[0] && buffIsFlatValue(func.buffs[0])) {\n                description += mutatingVal.Value + ' ';\n            } else if (func.funcType === FuncType.GAIN_NP || func.funcType === FuncType.LOSS_NP) {\n                description += (mutatingVal.Value / 100) + '% ';\n            } else if (func.funcType === FuncType.GAIN_HP || func.funcType === FuncType.LOSS_HP) {\n                description += mutatingVal.Value + ' ';\n            } else {\n                description += (mutatingVal.Value / 10) + '% ';\n            }\n        }\n\n        return description;\n    }).filter(description => description.length);\n}\n\nexport function funcUpdatesByLevel(func: Func): boolean {\n    return hasChangingDataVals(getLevelDataValList(func));\n}\n\nexport function funcUpdatesByOvercharge(func: Func): boolean {\n    return hasChangingDataVals(getOverchargeDataValList(func));\n}\n\nexport function getLevelDataValList(func: Func): DataVal[] {\n    return func.svals;\n}\n\nexport function getMutatingFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return hasUniqueValues(values);\n    });\n}\n\nexport function getMutatingFieldValues(vals: DataVal[]): DataVal[] {\n    if (!vals.length)\n        return [];\n\n    const fields = getMutatingFieldNames(vals);\n\n    return vals.map(val => {\n        const mutatingVals: DataVal = {};\n\n        for (let x in fields) {\n            mutatingVals[fields[x]] = val[fields[x]];\n        }\n\n        return mutatingVals;\n    });\n}\n\nexport function getOverchargeDataValList(func: Func): DataVal[] {\n    let vals = [func.svals[0]];\n\n    if (func.svals2)\n        vals.push(func.svals2[0]);\n    if (func.svals3)\n        vals.push(func.svals3[0]);\n    if (func.svals4)\n        vals.push(func.svals4[0]);\n    if (func.svals5)\n        vals.push(func.svals5[0]);\n\n    return vals.filter(val => val !== undefined);\n}\n\nexport function getStaticFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return !hasUniqueValues(values);\n    });\n}\n\nexport function getStaticFieldValues(vals: DataVal[]): DataVal {\n    if (!vals.length)\n        return {};\n\n    const fields = getStaticFieldNames(vals),\n        staticVals: DataVal = {};\n\n    for (let x in fields) {\n        staticVals[fields[x]] = vals[0][fields[x]];\n    }\n\n    return staticVals;\n}\n","import Buff, {BuffType} from \"../Api/Data/Buff\";\n\nexport function buffIsFlatValue(buff: Buff) {\n    switch (buff.type) {\n        case BuffType.SUB_SELFDAMAGE:\n            return true;\n        default:\n            return false;\n    }\n}\n","import {faSearchPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Modal, Table} from \"react-bootstrap\";\nimport ReactJson from \"react-json-view\";\nimport Func from \"../../Api/Data/Func\";\nimport {default as ServantNoblePhantasmData} from \"../../Api/Data/ServantNoblePhantasm\";\nimport {describeFunc, describeMutators} from \"../../Helper/FuncHelper\";\n\ninterface IProps {\n    noblePhantasm: ServantNoblePhantasmData;\n}\n\ninterface IState {\n    showFunc: boolean;\n    func?: Func;\n}\n\nclass ServantNoblePhantasm extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            showFunc: false\n        };\n    }\n\n    private showFunc(func: Func) {\n        this.setState({\n            showFunc: true,\n            func: func\n        });\n    }\n\n    private hideFunc() {\n        this.setState({\n            showFunc: false,\n            func: undefined\n        });\n    }\n\n    render() {\n        const np = this.props.noblePhantasm;\n\n        return (\n            <div>\n                <h3>{np.name}</h3>\n                <p>{np.detail}</p>\n\n                <Table>\n                    <thead>\n                    <tr>\n                        <th>Effect</th>\n                        <th>1</th>\n                        <th>2</th>\n                        <th>3</th>\n                        <th>4</th>\n                        <th>5</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {np.functions.map((func, index) => {\n                        let funcDescription = describeFunc(func),\n                            mutatingDescriptions = describeMutators(func);\n\n                        for (let i = 0; i < 5; i++) {\n                            if (!mutatingDescriptions[i])\n                                mutatingDescriptions.push('-');\n                        }\n\n                        return (\n                            <tr key={index}>\n                                <td>\n                                    {funcDescription}\n                                    <span className={'text-primary'}\n                                          style={{cursor: \"pointer\"}}\n                                          onClick={() => {\n                                              this.showFunc(func);\n                                          }}>\n                                        <FontAwesomeIcon icon={faSearchPlus}/>\n                                    </span>\n                                </td>\n                                {mutatingDescriptions.map((description, index) => {\n                                    return (\n                                        <td key={index}>{description}</td>\n                                    );\n                                })}\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </Table>\n\n                <Modal show={this.state.showFunc} onHide={() => this.hideFunc()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Raw Function</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ReactJson src={this.state.func ?? {}}/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ServantNoblePhantasm;\n","import React from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport ServantListEntity from \"../../Api/Data/ServantListEntity\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps extends RouteComponentProps {\n    id: number;\n    servants: ServantListEntity[];\n}\n\nclass ServantPicker extends React.Component<IProps> {\n    private changeServant(id: number) {\n        this.props.history.push(`/servant/${id}`);\n    }\n\n    render() {\n        return (\n            <div>\n                Jump to:\n                <FormControl as={\"select\"} custom\n                             onChange={(ev: Event) => {\n                                 this.changeServant(parseInt(ev.target.value));\n                             }}\n                             value={this.props.id}>\n                    {this.props.servants.map((servant, index) => {\n                        return (\n                            <option key={index} value={servant.collectionNo}>\n                                {servant.name}\n                            </option>\n                        );\n                    })}\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ServantPicker);\n","import React from \"react\";\nimport ServantEntity from \"../../Api/Data/ServantEntity\";\n\ninterface IProps {\n    servant: ServantEntity;\n}\n\nclass ServantPortrait extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                <img alt={this.props.servant.name}\n                     className={'profile'}\n                     src={this.props.servant.extraAssets.charaGraph.ascension[\"1\"]}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantPortrait;\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport ServantEntity from \"../Api/Data/ServantEntity\";\nimport ServantListEntity from \"../Api/Data/ServantListEntity\";\nimport Loading from \"../Component/Loading\";\nimport ServantAdvancedData from \"./Servant/ServantAdvancedData\";\nimport ServantMainData from \"./Servant/ServantMainData\";\nimport ServantNoblePhantasm from \"./Servant/ServantNoblePhantasm\";\nimport ServantPicker from \"./Servant/ServantPicker\";\nimport ServantPortrait from \"./Servant/ServantPortrait\";\n\nimport './ServantPage.css';\n\ninterface IProp {\n    id: string;\n}\n\ninterface IState {\n    loading: boolean;\n    id: number;\n    servants: ServantListEntity[];\n    servant?: ServantEntity;\n}\n\nclass ServantPage extends React.Component<IProp, IState> {\n    constructor(props: IProp) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            id: parseInt(this.props.id),\n            servants: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadServant();\n    }\n\n    async loadServant() {\n        let [servants, servant] = await Promise.all([\n            Connection.servantList(),\n            Connection.servant(this.state.id)\n        ]);\n\n        this.setState({\n            loading: false,\n            servants,\n            servant\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.servant)\n            return <Loading/>;\n\n        return (\n            <div id={'servant'}>\n                <ServantPicker servants={this.state.servants} id={this.state.servant.collectionNo}/>\n                <hr/>\n\n                <Row>\n                    <Col xs={{span: 12, order: 2}} md={{span: 6, order: 1}}>\n                        <ServantMainData servant={this.state.servant}/>\n                    </Col>\n                    <Col xs={{span: 12, order: 1}} md={{span: 6, order: 2}}>\n                        <ServantPortrait servant={this.state.servant}/>\n                    </Col>\n                </Row>\n\n                <br/>\n\n                <ServantAdvancedData servant={this.state.servant}/>\n\n                {this.state.servant.noblePhantasms.map((noblePhantasm, index) => {\n                    return <ServantNoblePhantasm key={index} noblePhantasm={noblePhantasm}/>;\n                })}\n            </div>\n        );\n    }\n}\n\nexport default ServantPage;\n","import React from \"react\";\n\ninterface IProps {\n    rarity: number;\n}\n\nconst fillChars = function (count: number, character: string): string {\n    return (new Array(count)).fill(null).map(v => character).join('');\n}\n\nclass RarityStars extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {\n                    fillChars(this.props.rarity, '★')\n                    + fillChars(5 - this.props.rarity, '☆')\n                }\n            </div>\n        );\n    }\n}\n\nexport default RarityStars;\n","import React from \"react\";\n\ninterface IProps {\n    rarity: number;\n    location: string;\n    height?: number;\n}\n\nclass ServantThumbnail extends React.Component<IProps> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location}\n                 style={this.props.height ? {height: this.props.height} : undefined}/>\n        );\n    }\n\n}\n\nexport default ServantThumbnail;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport ServantListEntity from \"../Api/Data/ServantListEntity\";\nimport ClassIcon from \"../Component/ClassIcon\";\nimport Loading from \"../Component/Loading\";\nimport RarityStars from \"../Component/RarityStars\";\nimport ServantThumbnail from \"../Component/ServantThumbnail\";\n\nimport './ServantsPage.css';\n\ninterface IProps {\n}\n\ninterface IState {\n    loading: boolean;\n    servants: ServantListEntity[];\n}\n\nclass ServantsPage extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            servants: [],\n        };\n    }\n\n    componentDidMount() {\n        Connection.servantList().then(servantList => {\n            this.setState({\n                loading: false,\n                servants: servantList\n            });\n        });\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading/>\n\n        return (\n            <div id=\"servants\">\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th style={{textAlign: \"center\", width: '1px'}}>#</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Class</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Thumbnail</th>\n                        <th>Name</th>\n                        <th>Rarity</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.servants.map((servant, index) => {\n                        return <tr key={index}>\n                            <td align={\"center\"}>\n                                <Link to={`/servant/${servant.collectionNo}`}>\n                                    {servant.collectionNo}\n                                </Link>\n                            </td>\n                            <td align={\"center\"}>\n                                <ClassIcon className={servant.className} rarity={servant.rarity} height={50} />\n                            </td>\n                            <td align={\"center\"}>\n                                <Link to={`/servant/${servant.collectionNo}`}>\n                                    <ServantThumbnail rarity={servant.rarity} location={servant.face} height={50}/>\n                                </Link>\n                            </td>\n                            <td>\n                                <Link to={`/servant/${servant.collectionNo}`}>\n                                    {servant.name}\n                                </Link>\n                            </td>\n                            <td>\n                                <RarityStars rarity={servant.rarity}/>\n                            </td>\n                        </tr>\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n\n}\n\nexport default ServantsPage;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport {Container} from \"react-bootstrap\";\nimport {HashRouter as Router, Route, Switch,} from \"react-router-dom\";\nimport Navigation from \"./Component/Navigation\";\nimport ServantPage from \"./Page/ServantPage\";\nimport ServantsPage from \"./Page/ServantsPage\";\nimport Manager from \"./Setting/Manager\";\nimport {LanguageOption, RegionOption} from \"./Setting/Option\";\n\ninterface IState {\n    region: RegionOption,\n    language: LanguageOption,\n}\n\nclass App extends React.Component<any, IState>{\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            region: Manager.region(),\n            language: Manager.language(),\n        };\n\n        Manager.onUpdate(() => this.updateSettings());\n    }\n\n    private updateSettings() {\n        this.setState({\n            region: Manager.region(),\n            language: Manager.language(),\n        });\n    }\n\n    render() {\n        return (\n            <Router>\n                <Navigation/>\n                <br/>\n\n                <Container key={`${this.state.region}-${this.state.language}`}>\n                    <Switch>\n                        <Route path=\"/servants\" component={ServantsPage}/>\n                        <Route path=\"/servant/:id\" render={(\n                            props => <ServantPage key={props.match.params.id} id={props.match.params.id}/>\n                        )}/>\n                        <Route path=\"/\" component={ServantsPage}/>\n                    </Switch>\n                </Container>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}