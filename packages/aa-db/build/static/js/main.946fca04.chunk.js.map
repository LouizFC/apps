{"version":3,"sources":["Setting/Option.tsx","Setting/Manager.tsx","Api/Data/Region.tsx","Setting/SettingForm.tsx","Component/Navigation.tsx","Api/Connection.tsx","Component/BuffIcon.tsx","Component/DataTable.tsx","Component/Loading.tsx","Component/RawDataViewer.tsx","Helper/OutputHelper.tsx","Api/Data/Buff.tsx","Page/BuffPage.tsx","Api/Data/Func.tsx","Component/BuffDescription.tsx","Helper/TraitHelper.tsx","Page/Func/FuncMainData.tsx","Page/FuncPage.tsx","Component/TraitDescription.tsx","Helper/BuffHelper.tsx","Helper/FuncHelper.tsx","Api/Data/ClassName.tsx","Page/Func/DataValMainData.tsx","Page/NoblePhantasm/NoblePhantasmVersion.tsx","Page/NoblePhantasmPage.tsx","Page/QuestPage.tsx","Component/ClassIcon.tsx","Page/Servant/ServantMainData.tsx","Page/Servant/ServantMiscData.tsx","Helper/QuestHelper.tsx","Page/Servant/ServantNoblePhantasm.tsx","Page/Servant/ServantPicker.tsx","Page/Servant/ServantPortrait.tsx","Page/Servant/ServantSkill.tsx","Page/Servant/ServantTraits.tsx","Page/ServantPage.tsx","Component/RarityStars.tsx","Component/ServantThumbnail.tsx","Page/ServantsPage.tsx","Page/SkillPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LanguageOption","Region","callbacks","Manager","value","window","localStorage","getItem","language","Object","values","find","v","DEFAULT","undefined","setItem","triggerCallbacks","callback","push","forEach","call","SettingForm","props","state","onUpdate","syncSettings","this","setState","setLanguage","Form","Group","Label","Control","as","onChange","ev","updateLanguage","target","map","React","Component","Navigation","showSettings","Navbar","bg","variant","expand","Container","to","className","Toggle","Collapse","Nav","NavItem","Link","href","icon","faDiscord","faGithub","Button","onClick","faCog","Modal","show","onHide","hideSettings","Header","closeButton","Title","Body","host","fetch","endpoint","a","axios","get","response","data","servantListCache","Map","traitMapCache","Connection","region","id","query","ENGLISH","phase","NA","getCacheableServantList","JP","jp","na","names","entity","name","getCacheableTraitMap","list","set","BuffIcon","alt","src","location","style","height","verticalAlign","DataTable","header","Table","bordered","hover","keys","key","index","Loading","RawDataViewer","showing","cursor","faSearchPlus","size","hide","collapsed","asPercent","pow","decimal","Math","handleNewLine","text","joinElements","split","elements","separator","parts","pushElement","element","length","previous","toString","BuffType","BuffPage","loading","loadBuff","buff","detail","type","vals","trait","FuncType","FuncTargetType","FuncTargetTeam","DataValField","BuffDescription","traits","description","DONOT_ACT","filter","FuncMainData","func","funcId","funcType","funcTargetType","funcTargetTeam","funcPopupText","buffs","FuncPage","loadFunc","funcPopupIcon","TraitDescription","traitMap","describeBuffValue","UP_ATK","DOWN_ATK","UP_COMMANDALL","DOWN_COMMANDALL","UP_CRITICALDAMAGE","DOWN_CRITICALDAMAGE","UP_DEFENCE","DOWN_DEFENCE","UP_DROPNP","DOWN_DROPNP","UP_HATE","UP_TOLERANCE","DOWN_TOLERANCE","hasChangingDataVals","i","JSON","stringify","hasUniqueValues","Set","describeFunc","isLevel","funcUpdatesByLevel","isOvercharge","funcUpdatesByOvercharge","staticValues","fields","field","val","getStaticFieldNames","staticVals","x","getStaticFieldValues","getMixedDataValList","getOverchargeDataValList","getLevelDataValList","sectionFlags","chance","action","amountPreposition","amount","affects","targetPreposition","duration","scaling","Rate","NONE","ADD_STATE","ADD_STATE_SHORT","DAMAGE_NP","DAMAGE_NP_INDIVIDUAL","DAMAGE_NP_STATE_INDIVIDUAL_FIX","Target","DAMAGE_NP_PIERCE","DELAY_NPTURN","GAIN_HP","GAIN_NP","GAIN_STAR","INSTANT_DEATH","LOSS_HP_SAFE","Value","prunedValues","describeFuncValue","functvals","ENEMY","ENEMY_ALL","PT_ALL","PT_ONE","PT_OTHER","SELF","Count","Turn","countDesc","turnDesc","dataVal","valueDescription","LOSS_NP","correctionDescription","Correction","chanceDescription","describeMutators","getMutatingFieldNames","mutatingVals","getMutatingFieldValues","mutatingVal","getTargetVersionValues","level","overcharge","svals2","svals3","svals4","svals5","svals","ClassName","DataValMainData","NoblePhantasmVersion","noblePhantasm","functions","Row","Col","xs","md","NoblePhantasmPage","loadNp","rank","card","Tabs","defaultActiveKey","transition","title","Tab","eventKey","QuestPage","loadQuest","quest","classTypes","classIds","SABER","ARCHER","LANCER","RIDER","CASTER","ASSASSIN","BERSERKER","SHIELDER","RULER","ALTER_EGO","AVENGER","ClassIcon","classId","has","rarity","ServantMainData","servant","collectionNo","cost","gender","attribute","lvMax","hpBase","atkBase","hpMax","atkMax","buffIconPath","deathChanceIcon","hitCountIcon","npGainIcon","starGenIcon","showHits","hits","hit","ServantMiscData","lg","hitsDistribution","buster","arts","quick","extra","starAbsorb","starGen","instantDeathChance","npGain","defence","hitsColumn","npGainColumn","miscColumn","describeQuestType","questId","questPhase","floor","ServantNoblePhantasm","np","faShare","condQuestId","condQuestPhase","Alert","responsive","funcDescription","mutatingDescriptions","ServantPicker","history","FormControl","custom","changeServant","parseInt","servants","withRouter","ServantPortrait","extraAssets","charaGraph","ascension","ServantSkill","skill","coolDown","cooldown","ServantTraits","ServantPage","loadServant","Promise","all","servantList","span","order","skills","num","noblePhantasms","fillChars","count","character","Array","fill","join","RarityStars","ServantThumbnail","ServantsPage","then","striped","textAlign","width","route","align","face","SkillPage","loadSkill","App","updateSettings","path","render","match","params","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.946fca04.chunk.js","sourcesContent":["export enum LanguageOption {\n    DEFAULT = 'Default',\n    ENGLISH = 'English',\n}\n\n","import {LanguageOption} from \"./Option\";\n\nconst languageKey = 'language';\n\nconst callbacks: Function[] = [];\n\nclass Manager {\n    static language(): LanguageOption {\n        const value = window.localStorage.getItem(languageKey),\n            language = Object.values(LanguageOption).find(v => v === value);\n\n        return language ?? LanguageOption.DEFAULT;\n    }\n\n    static setLanguage(value: string) {\n        const language = Object.values(LanguageOption).find(v => v === value);\n        if (language === undefined)\n            return;\n\n        window.localStorage.setItem(languageKey, language);\n        Manager.triggerCallbacks();\n    }\n\n    static onUpdate(callback: Function) {\n        callbacks.push(callback);\n    }\n\n    private static triggerCallbacks() {\n        callbacks.forEach(callback => {\n            callback.call(null);\n        });\n    }\n}\n\nexport default Manager;\n","enum Region {\n    JP = 'JP',\n    NA = 'NA'\n}\n\nexport default Region;\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport Manager from \"./Manager\";\nimport {LanguageOption} from \"./Option\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IState {\n    language: LanguageOption\n}\n\nclass SettingForm extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            language: Manager.language(),\n        }\n\n        Manager.onUpdate(() => this.syncSettings());\n    }\n\n    private syncSettings() {\n        this.setState({\n            language: Manager.language(),\n        });\n    }\n\n    updateLanguage(value: string) {\n        Manager.setLanguage(value);\n    }\n\n    render() {\n        return (\n            <div>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Language</Form.Label>\n                        <Form.Control as={'select'} value={this.state.language}\n                                      onChange={(ev: Event) => this.updateLanguage(ev.target.value)}>\n                            {Object.values(LanguageOption).map(v => (\n                                <option value={v}>{v}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default SettingForm;\n","import {faDiscord, faGithub} from \"@fortawesome/free-brands-svg-icons\";\nimport {faCog} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Button, Container, Modal, Nav, Navbar, NavItem} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport SettingForm from \"../Setting/SettingForm\";\n\ninterface IState {\n    showSettings: boolean;\n}\n\nclass Navigation extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            showSettings: false,\n        };\n    }\n\n    hideSettings() {\n        this.setState({showSettings: false});\n    }\n\n    showSettings() {\n        this.setState({showSettings: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar bg={\"dark\"} variant={'dark'} expand={\"lg\"}>\n                    <Container>\n                        <Link to=\"/\" className={'navbar-brand'}>AA-DB</Link>\n                        <Navbar.Toggle/>\n\n                        <Navbar.Collapse>\n                            <Nav>\n                                <Link to=\"/JP/servants\" className={'nav-link'}>\n                                    <NavItem>JP Servants</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav>\n                                <Link to=\"/NA/servants\" className={'nav-link'}>\n                                    <NavItem>NA Servants</NavItem>\n                                </Link>\n                            </Nav>\n                            <Nav className={'ml-auto'}>\n                                <Nav.Link href={'https://discord.gg/TKJmuCR'} target={'_blank'}>\n                                    <FontAwesomeIcon icon={faDiscord}/>\n                                </Nav.Link>\n                                <Nav.Link href={'https://github.com/atlasacademy/aa-db'} target={'_blank'}>\n                                    <FontAwesomeIcon icon={faGithub}/>\n                                </Nav.Link>\n                                <Button variant={\"primary\"} onClick={() => this.showSettings()}>\n                                    <FontAwesomeIcon icon={faCog}/>\n                                </Button>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Container>\n                </Navbar>\n\n                <Modal show={this.state.showSettings} onHide={() => this.hideSettings()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Settings</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <SettingForm/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n\n}\n\nexport default Navigation;\n","import axios from \"axios\";\nimport Manager from \"../Setting/Manager\";\nimport {LanguageOption} from \"../Setting/Option\";\nimport Buff from \"./Data/Buff\";\nimport Func from \"./Data/Func\";\nimport NoblePhantasm from \"./Data/NoblePhantasm\";\nimport Quest from \"./Data/Quest\";\nimport Region from \"./Data/Region\";\nimport ServantEntity from \"./Data/ServantEntity\";\nimport ServantListEntity from \"./Data/ServantListEntity\";\nimport Skill from \"./Data/Skill\";\nimport TraitMap from \"./Data/TraitMap\";\n\nconst host = 'https://api.atlasacademy.io';\nconst fetch = async function <T>(endpoint: string): Promise<T> {\n    const response = await axios.get<T>(endpoint);\n\n    return response.data;\n}\nconst servantListCache = new Map<Region, ServantListEntity[]>(),\n    traitMapCache = new Map<Region, TraitMap>();\n\nclass Connection {\n    static buff(region: Region, id: number): Promise<Buff> {\n        let query = '?' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<Buff>(`${host}/nice/${region}/buff/${id}${query}`);\n    }\n\n    static func(region: Region, id: number): Promise<Func> {\n        let query = '?' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<Func>(`${host}/nice/${region}/function/${id}${query}`);\n    }\n\n    static noblePhantasm(region: Region, id: number): Promise<NoblePhantasm> {\n        let query = '?' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<NoblePhantasm>(`${host}/nice/${region}/NP/${id}${query}`);\n    }\n\n    static quest(region: Region, id: number, phase: number): Promise<Quest> {\n        return fetch<Quest>(`${host}/nice/${region}/quest/${id}/${phase}`);\n    }\n\n    static servant(region: Region, id: number): Promise<ServantEntity> {\n        let query = '?lore=true' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<ServantEntity>(`${host}/nice/${region}/servant/${id}${query}`);\n    }\n\n    static async servantList(region: Region): Promise<ServantListEntity[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableServantList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableServantList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableServantList(Region.JP),\n            na = await Connection.getCacheableServantList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<ServantListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static skill(region: Region, id: number): Promise<Skill> {\n        let query = '?reverse=true' + (\n            Manager.language() === LanguageOption.ENGLISH ? '&lang=en' : ''\n        );\n\n        return fetch<Skill>(`${host}/nice/${region}/skill/${id}${query}`);\n    }\n\n    static traitMap(region: Region): Promise<TraitMap> {\n        return Connection.getCacheableTraitMap(region);\n    }\n\n    private static async getCacheableServantList(region: Region): Promise<ServantListEntity[]> {\n        let list = servantListCache.get(region);\n        if (list !== undefined)\n            return list;\n\n        list = await fetch<ServantListEntity[]>(`${host}/export/${region}/basic_servant.json`);\n        servantListCache.set(region, list);\n\n        return list;\n    }\n\n    private static async getCacheableTraitMap(region: Region): Promise<TraitMap> {\n        let list = traitMapCache.get(region);\n        if (list !== undefined)\n            return list;\n\n        list = await fetch<TraitMap>(`${host}/export/${region}/nice_trait.json`);\n        traitMapCache.set(region, list);\n\n        return list;\n    }\n}\n\nexport default Connection;\n","import React from \"react\";\n\ninterface IProp {\n    location: string;\n    height?: number;\n}\n\nclass BuffIcon extends React.Component<IProp> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location} style={{\n                height: this.props.height ?? 25,\n                verticalAlign: \"bottom\",\n            }}/>\n        );\n    }\n\n}\n\nexport default BuffIcon;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\n\nimport \"./DataTable.css\";\nimport {Renderable} from \"../Helper/Renderable\";\n\ninterface IProp {\n    header?: JSX.Element | string,\n    data: {\n        [key: string]: Renderable;\n    }\n}\n\nclass DataTable extends React.Component<IProp> {\n    render() {\n        return (\n            <div>\n                {this.props.header ? (\n                    <div className={'data-header'}>\n                        {this.props.header}\n                    </div>\n                ) : null}\n\n                <Table bordered hover className={'data-table'}>\n                    <tbody>\n                    {Object.keys(this.props.data).map((key, index) => {\n                        return (\n                            <tr key={index}>\n                                <th>{key}</th>\n                                <td>{this.props.data[key]}</td>\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default DataTable;\n","import React from \"react\";\n\nfunction Loading() {\n    return (\n        <div>\n            Loading ...\n        </div>\n    );\n}\n\nexport default Loading;\n","import {faSearchPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Modal} from \"react-bootstrap\";\nimport ReactJson from \"react-json-view\";\n\ninterface IProps {\n    data: object;\n}\n\ninterface IState {\n    showing: boolean;\n}\n\nclass RawDataViewer extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            showing: false\n        };\n    }\n\n    hide() {\n        this.setState({showing: false});\n    }\n\n    show() {\n        this.setState({showing: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <span className={'text-primary'}\n                      style={{cursor: \"pointer\"}}\n                      onClick={() => {\n                          this.show();\n                      }}>\n                    View Raw\n                    &nbsp;\n                    <FontAwesomeIcon icon={faSearchPlus}/>\n                </span>\n\n                <Modal size={\"lg\"} show={this.state.showing} onHide={() => this.hide()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Raw Data Viewer</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ReactJson src={this.props.data} collapsed={1}/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default RawDataViewer;\n","import React from \"react\";\nimport {Renderable} from \"./Renderable\";\n\nexport function asPercent(value: number | undefined, pow: number): string {\n    const decimal = (value ?? 0) / Math.pow(10, pow);\n\n    return `${decimal}%`;\n}\n\nexport function handleNewLine(text: string): Renderable {\n    return (\n        <span>\n            {joinElements(text.split(\"\\n\"), <br/>)}\n        </span>\n    );\n}\n\nexport function joinElements(elements: Renderable[], separator: Renderable): Renderable[] {\n    const parts: Renderable[] = [],\n        pushElement = function (element: Renderable) {\n            if (element === undefined)\n                return;\n\n            if (typeof element === 'object') {\n                parts.push(element);\n                return;\n            }\n\n            if (parts.length === 0) {\n                parts.push(element.toString());\n                return;\n            }\n\n            const previous = parts[parts.length - 1];\n            if (typeof previous !== 'string') {\n                parts.push(element.toString());\n                return;\n            }\n\n            parts[parts.length - 1] = previous + element.toString();\n        };\n\n    elements.forEach((element, index) => {\n        if (index > 0)\n            pushElement(separator);\n\n        pushElement(element);\n    });\n\n    return parts;\n}\n","import Trait from \"./Trait\";\n\nexport enum BuffType {\n    NONE = \"none\",\n    UP_COMMANDATK = \"upCommandatk\",\n    UP_STARWEIGHT = \"upStarweight\",\n    UP_CRITICALPOINT = \"upCriticalpoint\",\n    DOWN_CRITICALPOINT = \"downCriticalpoint\",\n    REGAIN_NP = \"regainNp\",\n    REGAIN_STAR = \"regainStar\",\n    REGAIN_HP = \"regainHp\",\n    REDUCE_HP = \"reduceHp\",\n    UP_ATK = \"upAtk\",\n    DOWN_ATK = \"downAtk\",\n    UP_DAMAGE = \"upDamage\",\n    DOWN_DAMAGE = \"downDamage\",\n    ADD_DAMAGE = \"addDamage\",\n    SUB_DAMAGE = \"subDamage\",\n    UP_NPDAMAGE = \"upNpdamage\",\n    DOWN_NPDAMAGE = \"downNpdamage\",\n    UP_DROPNP = \"upDropnp\",\n    UP_CRITICALDAMAGE = \"upCriticaldamage\",\n    DOWN_CRITICALDAMAGE = \"downCriticaldamage\",\n    UP_SELFDAMAGE = \"upSelfdamage\",\n    DOWN_SELFDAMAGE = \"downSelfdamage\",\n    ADD_SELFDAMAGE = \"addSelfdamage\",\n    SUB_SELFDAMAGE = \"subSelfdamage\",\n    AVOIDANCE = \"avoidance\",\n    BREAK_AVOIDANCE = \"breakAvoidance\",\n    INVINCIBLE = \"invincible\",\n    UP_GRANTSTATE = \"upGrantstate\",\n    DOWN_GRANTSTATE = \"downGrantstate\",\n    UP_TOLERANCE = \"upTolerance\",\n    DOWN_TOLERANCE = \"downTolerance\",\n    AVOID_STATE = \"avoidState\",\n    DONOT_ACT = \"donotAct\",\n    DONOT_SKILL = \"donotSkill\",\n    DONOT_NOBLE = \"donotNoble\",\n    DONOT_RECOVERY = \"donotRecovery\",\n    DISABLE_GENDER = \"disableGender\",\n    GUTS = \"guts\",\n    UP_HATE = \"upHate\",\n    ADD_INDIVIDUALITY = \"addIndividuality\",\n    SUB_INDIVIDUALITY = \"subIndividuality\",\n    UP_DEFENCE = \"upDefence\",\n    DOWN_DEFENCE = \"downDefence\",\n    UP_COMMANDSTAR = \"upCommandstar\",\n    UP_COMMANDNP = \"upCommandnp\",\n    UP_COMMANDALL = \"upCommandall\",\n    DOWN_COMMANDALL = \"downCommandall\",\n    DOWN_STARWEIGHT = \"downStarweight\",\n    REDUCE_NP = \"reduceNp\",\n    DOWN_DROPNP = \"downDropnp\",\n    UP_GAIN_HP = \"upGainHp\",\n    DOWN_GAIN_HP = \"downGainHp\",\n    DOWN_COMMANDATK = \"downCommandatk\",\n    DOWN_COMMANSTAR = \"downCommanstar\",\n    DOWN_COMMANDNP = \"downCommandnp\",\n    UP_CRITICALRATE = \"upCriticalrate\",\n    DOWN_CRITICALRATE = \"downCriticalrate\",\n    PIERCE_INVINCIBLE = \"pierceInvincible\",\n    AVOID_INSTANTDEATH = \"avoidInstantdeath\",\n    UP_RESIST_INSTANTDEATH = \"upResistInstantdeath\",\n    UP_NONRESIST_INSTANTDEATH = \"upNonresistInstantdeath\",\n    DELAY_FUNCTION = \"delayFunction\",\n    REGAIN_NP_USED_NOBLE = \"regainNpUsedNoble\",\n    DEAD_FUNCTION = \"deadFunction\",\n    UP_MAXHP = \"upMaxhp\",\n    DOWN_MAXHP = \"downMaxhp\",\n    ADD_MAXHP = \"addMaxhp\",\n    SUB_MAXHP = \"subMaxhp\",\n    BATTLESTART_FUNCTION = \"battlestartFunction\",\n    WAVESTART_FUNCTION = \"wavestartFunction\",\n    SELFTURNEND_FUNCTION = \"selfturnendFunction\",\n    UP_GIVEGAIN_HP = \"upGivegainHp\",\n    DOWN_GIVEGAIN_HP = \"downGivegainHp\",\n    COMMANDATTACK_FUNCTION = \"commandattackFunction\",\n    DEADATTACK_FUNCTION = \"deadattackFunction\",\n    UP_SPECIALDEFENCE = \"upSpecialdefence\",\n    DOWN_SPECIALDEFENCE = \"downSpecialdefence\",\n    UP_DAMAGEDROPNP = \"upDamagedropnp\",\n    DOWN_DAMAGEDROPNP = \"downDamagedropnp\",\n    ENTRY_FUNCTION = \"entryFunction\",\n    UP_CHAGETD = \"upChagetd\",\n    REFLECTION_FUNCTION = \"reflectionFunction\",\n    UP_GRANT_SUBSTATE = \"upGrantSubstate\",\n    DOWN_GRANT_SUBSTATE = \"downGrantSubstate\",\n    UP_TOLERANCE_SUBSTATE = \"upToleranceSubstate\",\n    DOWN_TOLERANCE_SUBSTATE = \"downToleranceSubstate\",\n    UP_GRANT_INSTANTDEATH = \"upGrantInstantdeath\",\n    DOWN_GRANT_INSTANTDEATH = \"downGrantInstantdeath\",\n    GUTS_RATIO = \"gutsRatio\",\n    DAMAGE_FUNCTION = \"damageFunction\",\n    UP_DEFENCECOMMANDALL = \"upDefencecommandall\",\n    DOWN_DEFENCECOMMANDALL = \"downDefencecommandall\",\n    OVERWRITE_BATTLECLASS = \"overwriteBattleclass\",\n    OVERWRITE_CLASSRELATIO_ATK = \"overwriteClassrelatioAtk\",\n    OVERWRITE_CLASSRELATIO_DEF = \"overwriteClassrelatioDef\",\n    UP_DAMAGE_INDIVIDUALITY = \"upDamageIndividuality\",\n    DOWN_DAMAGE_INDIVIDUALITY = \"downDamageIndividuality\",\n    UP_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"upDamageIndividualityActiveonly\",\n    DOWN_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"downDamageIndividualityActiveonly\",\n    UP_NPTURNVAL = \"upNpturnval\",\n    DOWN_NPTURNVAL = \"downNpturnval\",\n    MULTIATTACK = \"multiattack\",\n    UP_GIVE_NP = \"upGiveNp\",\n    DOWN_GIVE_NP = \"downGiveNp\",\n    UP_RESISTANCE_DELAY_NPTURN = \"upResistanceDelayNpturn\",\n    DOWN_RESISTANCE_DELAY_NPTURN = \"downResistanceDelayNpturn\",\n    PIERCE_DEFENCE = \"pierceDefence\",\n    UP_GUTS_HP = \"upGutsHp\",\n    DOWN_GUTS_HP = \"downGutsHp\",\n    UP_FUNCGAIN_NP = \"upFuncgainNp\",\n    DOWN_FUNCGAIN_NP = \"downFuncgainNp\",\n    UP_FUNC_HP_REDUCE = \"upFuncHpReduce\",\n    DOWN_FUNC_HP_REDUCE = \"downFuncHpReduce\",\n    UP_DEFENCECOMMAN_DAMAGE = \"upDefencecommanDamage\",\n    DOWN_DEFENCECOMMAN_DAMAGE = \"downDefencecommanDamage\",\n    NPATTACK_PREV_BUFF = \"npattackPrevBuff\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    DONOT_GAINNP = \"donotGainnp\",\n    FIELD_INDIVIDUALITY = \"fieldIndividuality\",\n    DONOT_ACT_COMMANDTYPE = \"donotActCommandtype\",\n    UP_DAMAGE_EVENT_POINT = \"upDamageEventPoint\",\n}\n\nexport default interface Buff {\n    id: number;\n    name: string;\n    detail: string;\n    icon: string;\n    type: BuffType;\n    vals: Trait[];\n    tvals: Trait[];\n    ckSelfIndv: Trait[];\n    ckOpIndv: Trait[];\n    maxRate: number;\n}\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Buff from \"../Api/Data/Buff\";\nimport Region from \"../Api/Data/Region\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport DataTable from \"../Component/DataTable\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\nimport {joinElements} from \"../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    buff?: Buff;\n}\n\nclass BuffPage extends React.Component<IProps, IState>{\n    constructor(props:IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.loadBuff();\n    }\n\n    async loadBuff() {\n        const buff = await Connection.buff(this.props.region, this.props.id);\n\n        this.setState({\n            loading: false,\n            buff: buff,\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.buff)\n            return <Loading/>;\n\n        const buff = this.state.buff;\n\n        return (\n            <div>\n                <h1>\n                    <BuffIcon location={buff.icon} height={48}/>\n                    &nbsp;\n                    {buff.name}\n                </h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={buff}/>,\n                    \"ID\": buff.id,\n                    \"Name\": buff.name,\n                    \"Detail\": buff.detail,\n                    \"Type\": buff.type,\n                    \"Gained Traits\": (\n                        <div>\n                            {joinElements(buff.vals.map(trait => trait.name), ', ')}\n                        </div>\n                    ),\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default BuffPage;\n","import Buff from \"./Buff\";\nimport Trait from \"./Trait\";\n\nexport enum FuncType {\n    NONE = \"none\",\n    ADD_STATE = \"addState\",\n    SUB_STATE = \"subState\",\n    DAMAGE = \"damage\",\n    DAMAGE_NP = \"damageNp\",\n    GAIN_STAR = \"gainStar\",\n    GAIN_HP = \"gainHp\",\n    GAIN_NP = \"gainNp\",\n    LOSS_NP = \"lossNp\",\n    SHORTEN_SKILL = \"shortenSkill\",\n    EXTEND_SKILL = \"extendSkill\",\n    RELEASE_STATE = \"releaseState\",\n    LOSS_HP = \"lossHp\",\n    INSTANT_DEATH = \"instantDeath\",\n    DAMAGE_NP_PIERCE = \"damageNpPierce\",\n    DAMAGE_NP_INDIVIDUAL = \"damageNpIndividual\",\n    ADD_STATE_SHORT = \"addStateShort\",\n    GAIN_HP_PER = \"gainHpPer\",\n    DAMAGE_NP_STATE_INDIVIDUAL = \"damageNpStateIndividual\",\n    HASTEN_NPTURN = \"hastenNpturn\",\n    DELAY_NPTURN = \"delayNpturn\",\n    DAMAGE_NP_HPRATIO_HIGH = \"damageNpHpratioHigh\",\n    DAMAGE_NP_HPRATIO_LOW = \"damageNpHpratioLow\",\n    CARD_RESET = \"cardReset\",\n    REPLACE_MEMBER = \"replaceMember\",\n    LOSS_HP_SAFE = \"lossHpSafe\",\n    DAMAGE_NP_COUNTER = \"damageNpCounter\",\n    DAMAGE_NP_STATE_INDIVIDUAL_FIX = \"damageNpStateIndividualFix\",\n    DAMAGE_NP_SAFE = \"damageNpSafe\",\n    CALL_SERVANT = \"callServant\",\n    PT_SHUFFLE = \"ptShuffle\",\n    LOSS_STAR = \"lossStar\",\n    CHANGE_SERVANT = \"changeServant\",\n    CHANGE_BG = \"changeBg\",\n    DAMAGE_VALUE = \"damageValue\",\n    WITHDRAW = \"withdraw\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    SHORTEN_BUFFTURN = \"shortenBuffturn\",\n    EXTEND_BUFFTURN = \"extendBuffturn\",\n    SHORTEN_BUFFCOUNT = \"shortenBuffcount\",\n    EXTEND_BUFFCOUNT = \"extendBuffcount\",\n    CHANGE_BGM = \"changeBgm\",\n    DISPLAY_BUFFSTRING = \"displayBuffstring\",\n    EXP_UP = \"expUp\",\n    QP_UP = \"qpUp\",\n    DROP_UP = \"dropUp\",\n    FRIEND_POINT_UP = \"friendPointUp\",\n    EVENT_DROP_UP = \"eventDropUp\",\n    EVENT_DROP_RATE_UP = \"eventDropRateUp\",\n    EVENT_POINT_UP = \"eventPointUp\",\n    EVENT_POINT_RATE_UP = \"eventPointRateUp\",\n    TRANSFORM_SERVANT = \"transformServant\",\n    QP_DROP_UP = \"qpDropUp\",\n    SERVANT_FRIENDSHIP_UP = \"servantFriendshipUp\",\n    USER_EQUIP_EXP_UP = \"userEquipExpUp\",\n    CLASS_DROP_UP = \"classDropUp\",\n    ENEMY_ENCOUNT_COPY_RATE_UP = \"enemyEncountCopyRateUp\",\n    ENEMY_ENCOUNT_RATE_UP = \"enemyEncountRateUp\",\n    ENEMY_PROB_DOWN = \"enemyProbDown\",\n}\n\nexport enum FuncTargetType {\n    SELF = \"self\",\n    PT_ONE = \"ptOne\",\n    PT_ANOTHER = \"ptAnother\",\n    PT_ALL = \"ptAll\",\n    ENEMY = \"enemy\",\n    ENEMY_ANOTHER = \"enemyAnother\",\n    ENEMY_ALL = \"enemyAll\",\n    PT_FULL = \"ptFull\",\n    ENEMY_FULL = \"enemyFull\",\n    PT_OTHER = \"ptOther\",\n    PT_ONE_OTHER = \"ptOneOther\",\n    PT_RANDOM = \"ptRandom\",\n    ENEMY_OTHER = \"enemyOther\",\n    ENEMY_RANDOM = \"enemyRandom\",\n    PT_OTHER_FULL = \"ptOtherFull\",\n    ENEMY_OTHER_FULL = \"enemyOtherFull\",\n    PTSELECT_ONE_SUB = \"ptselectOneSub\",\n    PTSELECT_SUB = \"ptselectSub\",\n    PT_ONE_ANOTHER_RANDOM = \"ptOneAnotherRandom\",\n}\n\nexport enum FuncTargetTeam {\n    PLAYER = \"player\",\n    ENEMY = \"enemy\",\n    PLAYER_AND_ENEMY = \"playerAndEnemy\",\n}\n\nexport enum DataValField {\n    RATE = \"Rate\",\n    TURN = \"Turn\",\n    COUNT = \"Count\",\n    VALUE = \"Value\",\n    VALUE2 = \"Value2\",\n    USE_RATE = \"UseRate\",\n    TARGET = \"Target\",\n    CORRECTION = \"Correction\",\n    PARAM_ADD = \"ParamAdd\",\n    PARAM_MAX = \"ParamMax\",\n    HIDE_MISS = \"HideMiss\",\n    ON_FIELD = \"OnField\",\n    HIDE_NO_EFFECT = \"HideNoEffect\",\n    UNAFFECTED = \"Unaffected\",\n    SHOW_STATE = \"ShowState\",\n    AURA_EFFECT_ID = \"AuraEffectId\",\n    ACT_SET = \"ActSet\",\n    ACT_SET_WEIGHT = \"ActSetWeight\",\n    SHOW_QUEST_NO_EFFECT = \"ShowQuestNoEffect\",\n    CHECK_DEAD = \"CheckDead\",\n    RATIO_HP_HIGH = \"RatioHPHigh\",\n    RATIO_HP_LOW = \"RatioHPLow\",\n    SET_PASSIVE_FRAME = \"SetPassiveFrame\",\n    PROC_PASSIVE = \"ProcPassive\",\n    PROC_ACTIVE = \"ProcActive\",\n    HIDE_PARAM = \"HideParam\",\n    SKILL_ID = \"SkillID\",\n    SKILL_LV = \"SkillLV\",\n    SHOW_CARD_ONLY = \"ShowCardOnly\",\n    EFFECT_SUMMON = \"EffectSummon\",\n    RATIO_HP_RANGE_HIGH = \"RatioHPRangeHigh\",\n    RATIO_HP_RANGE_LOW = \"RatioHPRangeLow\",\n    TARGET_LIST = \"TargetList\",\n    OPPONENT_ONLY = \"OpponentOnly\",\n    TARGET_RARITY_LIST = \"TargetRarityList\",\n}\n\nexport type DataVal = {\n    [key in DataValField]?: number;\n}\n\nexport default interface Func {\n    funcId: number;\n    funcType: FuncType;\n    funcTargetType: FuncTargetType;\n    funcTargetTeam: FuncTargetTeam;\n    funcPopupText: string;\n    funcPopupIcon?: string;\n    functvals: Trait[];\n    funcquestTvals: number[];\n    buffs: Buff[];\n    svals: DataVal[];\n    svals2?: DataVal[];\n    svals3?: DataVal[];\n    svals4?: DataVal[];\n    svals5?: DataVal[];\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Buff, {BuffType} from \"../Api/Data/Buff\";\nimport Region from \"../Api/Data/Region\";\nimport {hasTraitId} from \"../Helper/TraitHelper\";\nimport BuffIcon from \"./BuffIcon\";\n\ninterface IProps {\n    region: Region;\n    buff: Buff;\n}\n\nclass BuffDescription extends React.Component<IProps>{\n    render() {\n        const buff = this.props.buff;\n\n        let description = buff.name;\n        if (buff.type === BuffType.DONOT_ACT) {\n            if (hasTraitId(buff.vals, 3012)) {\n                description = 'Charm';\n            }\n        }\n\n        return (\n            <Link to={`/${this.props.region}/buff/${buff.id}`}>\n                [{description} <BuffIcon location={buff.icon}/>]\n            </Link>\n        );\n    }\n}\n\nexport default BuffDescription;\n","import Trait from \"../Api/Data/Trait\";\n\nexport function hasTraitId(traits: Trait[], id: number): boolean {\n    return traits.filter(trait => trait.id === id).length > 0;\n}\n","import React from \"react\";\nimport Func from \"../../Api/Data/Func\";\nimport Region from \"../../Api/Data/Region\";\nimport BuffDescription from \"../../Component/BuffDescription\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n}\n\nclass FuncMainData extends React.Component<IProps> {\n    render() {\n        const func = this.props.func;\n\n        return (\n            <DataTable data={{\n                \"Raw\": <RawDataViewer data={func}/>,\n                \"ID\": func.funcId,\n                \"Type\": func.funcType,\n                \"Target\": func.funcTargetType,\n                \"Affects Players/Enemies\": func.funcTargetTeam,\n                \"Popup Text\": func.funcPopupText,\n                \"Buffs\": (\n                    <div>\n                        {func.buffs.map(\n                            (buff, index) => <BuffDescription key={index} region={this.props.region} buff={buff}/>\n                        )}\n                    </div>\n                )\n            }}/>\n        );\n    }\n}\n\nexport default FuncMainData;\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Func from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport Loading from \"../Component/Loading\";\nimport FuncMainData from \"./Func/FuncMainData\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    func?: Func;\n}\n\nclass FuncPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.loadFunc();\n    }\n\n    async loadFunc() {\n        const func = await Connection.func(this.props.region, this.props.id);\n\n        this.setState({\n            loading: false,\n            func: func,\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.func)\n            return <Loading/>;\n\n        const func = this.state.func;\n\n        return (\n            <div>\n                <h1>\n                    {func.funcPopupIcon ? (\n                        <span>\n                            <BuffIcon location={func.funcPopupIcon} height={48}/>\n                            &nbsp;\n                        </span>\n                    ) : null}\n                    Function: {this.props.id}\n                </h1>\n                <br/>\n\n                <FuncMainData region={this.props.region} func={func}/>\n            </div>\n        );\n    }\n}\n\nexport default FuncPage;\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Region from \"../Api/Data/Region\";\nimport Trait from \"../Api/Data/Trait\";\n\ninterface IProps {\n    region: Region;\n    trait: Trait | number;\n}\n\ninterface IState {\n    id: number;\n    trait?: Trait;\n}\n\nclass TraitDescription extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            id: typeof props.trait === \"number\" ? props.trait : props.trait.id,\n            trait: typeof props.trait === \"number\" ? undefined : props.trait,\n        };\n    }\n\n    async componentDidMount() {\n        if (this.state.trait)\n            return;\n\n        const traitMap = await Connection.traitMap(this.props.region);\n        if (traitMap[this.state.id] !== undefined)\n            this.setState({\n                trait: {\n                    id: this.state.id,\n                    name: traitMap[this.state.id]\n                }\n            });\n    }\n\n    render() {\n        return (\n            <span>\n                [\n                {this.state.trait ? this.state.trait.name : 'unknown'}\n                {this.state.trait === undefined || this.state.trait.name === 'unknown' ? `(${this.state.id})` : null}\n                ]\n            </span>\n        );\n    }\n}\n\nexport default TraitDescription;\n","import Buff, {BuffType} from \"../Api/Data/Buff\";\nimport {asPercent} from \"./OutputHelper\";\n\nexport function describeBuffValue(buff: Buff, value: number): string {\n    switch (buff.type) {\n        case BuffType.UP_ATK:\n        case BuffType.DOWN_ATK:\n        case BuffType.UP_COMMANDALL:\n        case BuffType.DOWN_COMMANDALL:\n        case BuffType.UP_CRITICALDAMAGE:\n        case BuffType.DOWN_CRITICALDAMAGE:\n        case BuffType.UP_DEFENCE:\n        case BuffType.DOWN_DEFENCE:\n        case BuffType.UP_DROPNP:\n        case BuffType.DOWN_DROPNP:\n        case BuffType.UP_HATE:\n        case BuffType.UP_TOLERANCE:\n        case BuffType.DOWN_TOLERANCE:\n            return asPercent(value, 1);\n    }\n\n    return value.toString();\n}\n","import React from \"react\";\nimport Func, {DataVal, DataValField, FuncTargetType, FuncType} from \"../Api/Data/Func\";\nimport Region from \"../Api/Data/Region\";\nimport BuffDescription from \"../Component/BuffDescription\";\nimport TraitDescription from \"../Component/TraitDescription\";\nimport {describeBuffValue} from \"./BuffHelper\";\nimport {asPercent, joinElements} from \"./OutputHelper\";\nimport {Renderable} from \"./Renderable\";\n\nconst hasChangingDataVals = function (vals: DataVal[]): boolean {\n    if (!vals.length)\n        return false;\n\n    let previous = vals[0];\n    for (let i = 1; i < vals.length; i++) {\n        if (JSON.stringify(previous) !== JSON.stringify(vals[i]))\n            return true;\n\n        previous = vals[i];\n    }\n\n    return false;\n};\n\nconst hasUniqueValues = function (values: (number | undefined)[]): boolean {\n    return new Set(values).size > 1;\n};\n\nexport function describeFunc(region: Region, func: Func): Renderable {\n    const isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func),\n        dataVals = isLevel && isOvercharge\n            ? getMixedDataValList(func)\n            : (isOvercharge ? getOverchargeDataValList(func) : getLevelDataValList(func)),\n        staticValues = getStaticFieldValues(dataVals);\n\n    const parts: Renderable[] = [],\n        sectionFlags = {\n            chance: true,\n            action: true,\n            amountPreposition: 'of',\n            amount: true,\n            affects: true,\n            targetPreposition: 'to',\n            target: true,\n            duration: true,\n            scaling: true,\n        };\n\n    if (sectionFlags.chance && staticValues.Rate && staticValues.Rate !== 1000) {\n        parts.push((staticValues.Rate / 10) + '% Chance to');\n    } else if (!staticValues.Rate && func.funcType !== FuncType.NONE) {\n        parts.push('Chance to');\n    }\n\n    if (sectionFlags.action) {\n        if (func.funcType === FuncType.ADD_STATE || func.funcType === FuncType.ADD_STATE_SHORT) {\n            parts.push('Apply');\n            func.buffs.forEach((buff, index) => {\n                if (index > 0)\n                    parts.push('&');\n\n                parts.push(<BuffDescription region={region} buff={buff}/>);\n            });\n            sectionFlags.targetPreposition = 'on';\n        } else if (func.funcType === FuncType.DAMAGE_NP) {\n            parts.push('Deal damage');\n            sectionFlags.amountPreposition = 'for';\n        } else if (\n            func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL\n            || func.funcType === FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX\n        ) {\n            if (staticValues.Target) {\n                parts.push(\n                    <span>Deal damage (additional to targets with {\n                        <TraitDescription region={region} trait={staticValues.Target}/>\n                    })</span>\n                );\n            } else {\n                parts.push('Deal damage');\n            }\n            sectionFlags.amountPreposition = 'for';\n        } else if (func.funcType === FuncType.DAMAGE_NP_PIERCE) {\n            parts.push('Deal damage that pierces defence');\n            sectionFlags.amountPreposition = 'for';\n        } else if (func.funcType === FuncType.DELAY_NPTURN) {\n            parts.push('Drain Charge');\n            sectionFlags.targetPreposition = 'from';\n        } else if (func.funcType === FuncType.GAIN_HP) {\n            parts.push('Gain HP');\n            sectionFlags.targetPreposition = 'on';\n        } else if (func.funcType === FuncType.GAIN_NP) {\n            parts.push('Charge NP');\n            sectionFlags.targetPreposition = 'for';\n        } else if (func.funcType === FuncType.GAIN_STAR) {\n            parts.push('Gain Critical Stars');\n            sectionFlags.target = false;\n        } else if (func.funcType === FuncType.INSTANT_DEATH) {\n            parts.push('Apply Death');\n        } else if (func.funcType === FuncType.LOSS_HP_SAFE) {\n            parts.push('Lose HP')\n            sectionFlags.target = false;\n        } else if (func.funcType === FuncType.NONE) {\n            parts.push('No Effect');\n            sectionFlags.target = false;\n        }\n    }\n\n    if (sectionFlags.amount && staticValues.Value) {\n        if (func.buffs[0]) {\n            parts.push('of ' + describeBuffValue(func.buffs[0], staticValues.Value));\n        } else {\n            // there are some properties that we don't want back as the description\n            const prunedValues = {...staticValues};\n            prunedValues.Rate = undefined;\n\n            parts.push('of ' + describeFuncValue(func, prunedValues));\n        }\n    }\n\n    if (sectionFlags.affects && func.functvals.length) {\n        parts.push('for all');\n        func.functvals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<TraitDescription region={region} trait={trait}/>);\n        });\n    }\n\n    if (sectionFlags.target) {\n        parts.push(sectionFlags.targetPreposition);\n        if (func.funcTargetType === FuncTargetType.ENEMY) {\n            parts.push('enemy');\n        } else if (func.funcTargetType === FuncTargetType.ENEMY_ALL) {\n            parts.push('all enemies');\n        } else if (func.funcTargetType === FuncTargetType.PT_ALL) {\n            parts.push('party');\n        } else if (func.funcTargetType === FuncTargetType.PT_ONE) {\n            parts.push('party member');\n        } else if (func.funcTargetType === FuncTargetType.PT_OTHER) {\n            parts.push('party except self');\n        } else if (func.funcTargetType === FuncTargetType.SELF) {\n            parts.push('self');\n        }\n    }\n\n    if (sectionFlags.duration) {\n        if (staticValues.Count && staticValues.Count > 0 && staticValues.Turn && staticValues.Turn > 0) {\n            const countDesc = staticValues.Count === 1 ? '1 Time' : `${staticValues.Count} Times`,\n                turnDesc = staticValues.Turn === 1 ? '1 Turn' : `${staticValues.Turn} Turns`;\n\n            parts.push(`(${turnDesc}, ${countDesc})`);\n        } else if (staticValues.Turn && staticValues.Turn > 0) {\n            parts.push(staticValues.Turn === 1 ? '(1 Turn)' : `(${staticValues.Turn} Turns)`);\n        } else if (staticValues.Count && staticValues.Count > 0) {\n            parts.push(staticValues.Count === 1 ? '(1 Time)' : `(${staticValues.Count} Times)`);\n        }\n    }\n\n    if (sectionFlags.scaling) {\n        if (isLevel) {\n            parts.push('<LEVEL>');\n        }\n\n        if (isOvercharge) {\n            parts.push('<OVERCHARGE>');\n        }\n    }\n\n    return (\n        <span>\n            {joinElements(parts, ' ').map(\n                (element, index) => <span key={index}>{element}</span>\n            )}\n        </span>\n    );\n}\n\nexport function describeFuncValue(func: Func, dataVal: DataVal): string {\n    let valueDescription = \"\";\n    if (dataVal.Value !== undefined) {\n        switch (func.funcType) {\n            case FuncType.ADD_STATE:\n            case FuncType.ADD_STATE_SHORT:\n                valueDescription = describeBuffValue(func.buffs[0], dataVal.Value);\n                break;\n            case FuncType.DAMAGE_NP:\n            case FuncType.DAMAGE_NP_INDIVIDUAL:\n            case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n            case FuncType.DAMAGE_NP_PIERCE:\n                valueDescription = asPercent(dataVal.Value, 1);\n                break;\n            case FuncType.GAIN_NP:\n            case FuncType.LOSS_NP:\n                valueDescription = asPercent(dataVal.Value, 2);\n                break;\n            default:\n                valueDescription = dataVal.Value.toString();\n        }\n    }\n\n    let correctionDescription = \"\";\n    if (dataVal.Correction !== undefined) {\n        switch (func.funcType) {\n            case FuncType.DAMAGE_NP_INDIVIDUAL:\n            case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                correctionDescription = asPercent(dataVal.Correction, 1);\n                break;\n            default:\n                correctionDescription = dataVal.Correction.toString();\n        }\n    }\n\n    let chanceDescription = \"\";\n    if (dataVal.Rate !== undefined) {\n        chanceDescription = asPercent(dataVal.Rate, 1);\n    }\n\n    if (valueDescription && correctionDescription)\n        return `${valueDescription} + ${correctionDescription}`;\n    else if (chanceDescription)\n        return chanceDescription;\n    else if (correctionDescription)\n        return correctionDescription;\n    else\n        return valueDescription;\n}\n\nexport function describeMutators(func: Func): Renderable[] {\n    const isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func),\n        dataVals = isLevel && isOvercharge\n            ? getMixedDataValList(func)\n            : (isOvercharge ? getOverchargeDataValList(func) : getLevelDataValList(func)),\n        mutatingVals = getMutatingFieldValues(dataVals);\n\n    return mutatingVals\n        .map(mutatingVal => describeFuncValue(func, mutatingVal))\n        .filter(description => description.length);\n}\n\nexport function funcUpdatesByLevel(func: Func): boolean {\n    return hasChangingDataVals(getLevelDataValList(func));\n}\n\nexport function funcUpdatesByOvercharge(func: Func): boolean {\n    return hasChangingDataVals(getOverchargeDataValList(func));\n}\n\nexport function getLevelDataValList(func: Func): DataVal[] {\n    return [1,2,3,4,5].map(i => getTargetVersionValues(func, i, 1));\n}\n\nexport function getMixedDataValList(func: Func): DataVal[] {\n    return [1,2,3,4,5].map(i => getTargetVersionValues(func, i, i));\n}\n\nexport function getMutatingFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return hasUniqueValues(values);\n    });\n}\n\nexport function getMutatingFieldValues(vals: DataVal[]): DataVal[] {\n    if (!vals.length)\n        return [];\n\n    const fields = getMutatingFieldNames(vals);\n\n    return vals.map(val => {\n        const mutatingVals: DataVal = {};\n\n        for (let x in fields) {\n            mutatingVals[fields[x]] = val[fields[x]];\n        }\n\n        return mutatingVals;\n    });\n}\n\nexport function getOverchargeDataValList(func: Func): DataVal[] {\n    return [1,2,3,4,5].map(i => getTargetVersionValues(func, 1, i));\n}\n\nexport function getStaticFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return !hasUniqueValues(values);\n    });\n}\n\nexport function getStaticFieldValues(vals: DataVal[]): DataVal {\n    if (!vals.length)\n        return {};\n\n    const fields = getStaticFieldNames(vals),\n        staticVals: DataVal = {};\n\n    for (let x in fields) {\n        staticVals[fields[x]] = vals[0][fields[x]];\n    }\n\n    return staticVals;\n}\n\nexport function getTargetVersionValues(func: Func, level: number, overcharge: number = 1): DataVal {\n    let dataVals;\n\n    if (overcharge === 2 && func.svals2)\n        dataVals = func.svals2;\n    else if (overcharge === 3 && func.svals3)\n        dataVals = func.svals3;\n    else if (overcharge === 4 && func.svals4)\n        dataVals = func.svals4;\n    else if (overcharge === 5 && func.svals5)\n        dataVals = func.svals5;\n    else\n        dataVals = func.svals;\n\n    return dataVals[level-1];\n}\n","enum ClassName {\n    SABER = \"saber\",\n    ARCHER = \"archer\",\n    LANCER = \"lancer\",\n    RIDER = \"rider\",\n    CASTER = \"caster\",\n    ASSASSIN = \"assassin\",\n    BERSERKER = \"berserker\",\n    SHIELDER = \"shielder\",\n    RULER = \"ruler\",\n    ALTER_EGO = \"alterEgo\",\n    AVENGER = \"avenger\",\n    GRAND_CASTER = \"grandCaster\",\n    BEAST_II = \"beastII\",\n    BEAST_I = \"beastI\",\n    MOON_CANCER = \"moonCancer\",\n    BEAST_IIIR = \"beastIIIR\",\n    FOREIGNER = \"foreigner\",\n    BEAST_IIIL = \"beastIIIL\",\n    BEAST_UNKNOWN = \"beastUnknown\",\n    ALL = \"ALL\",\n}\n\nexport default ClassName;\n","import React from \"react\";\nimport {DataVal} from \"../../Api/Data/Func\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\n\ninterface IProps {\n    dataVal: DataVal;\n}\n\nclass DataValMainData extends React.Component<IProps> {\n    render() {\n        return (\n            <DataTable data={{\n                \"Raw\": <RawDataViewer data={this.props.dataVal}/>,\n                ...this.props.dataVal\n            }}/>\n        );\n    }\n}\n\nexport default DataValMainData;\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport NoblePhantasm from \"../../Api/Data/NoblePhantasm\";\nimport Region from \"../../Api/Data/Region\";\nimport {getTargetVersionValues} from \"../../Helper/FuncHelper\";\nimport DataValMainData from \"../Func/DataValMainData\";\nimport FuncMainData from \"../Func/FuncMainData\";\n\ninterface IProps {\n    region: Region;\n    noblePhantasm: NoblePhantasm;\n    level: number;\n    overcharge: number;\n}\n\nclass NoblePhantasmVersion extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {this.props.noblePhantasm.functions.map((func, index) => {\n                    const dataVal = getTargetVersionValues(func, this.props.level, this.props.overcharge);\n\n                    return (\n                        <div key={index}>\n                            <h3>Effect #{index + 1}</h3>\n\n                            <Row>\n                                <Col xs={12} md={6}>\n                                    <h5>Function</h5>\n                                    <FuncMainData region={this.props.region} func={func}/>\n                                </Col>\n                                <Col xs={12} md={6}>\n                                    <h5>Values</h5>\n                                    <DataValMainData dataVal={dataVal}/>\n                                </Col>\n                            </Row>\n\n                            <hr/>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default NoblePhantasmVersion;\n","import React from \"react\";\nimport {Tab, Tabs} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport NoblePhantasm from \"../Api/Data/NoblePhantasm\";\nimport Region from \"../Api/Data/Region\";\nimport DataTable from \"../Component/DataTable\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\nimport NoblePhantasmVersion from \"./NoblePhantasm/NoblePhantasmVersion\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    noblePhantasm?: NoblePhantasm;\n}\n\nclass NoblePhantasmPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.loadNp();\n    }\n\n    async loadNp() {\n        const noblePhantasm = await Connection.noblePhantasm(this.props.region, this.props.id);\n\n        this.setState({\n            loading: false,\n            noblePhantasm: noblePhantasm,\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.noblePhantasm)\n            return <Loading/>;\n\n        const noblePhantasm = this.state.noblePhantasm;\n\n        return (\n            <div>\n                <h1>{noblePhantasm.name}</h1>\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={noblePhantasm}/>,\n                    \"ID\": noblePhantasm.id,\n                    \"Name\": noblePhantasm.name,\n                    \"Type\": noblePhantasm.type,\n                    \"Rank\": noblePhantasm.rank,\n                    \"Detail\": noblePhantasm.detail,\n                    \"Card Type\": noblePhantasm.card,\n                }}/>\n\n                <Tabs id={'np-tabs'} defaultActiveKey={'n1o1'} transition={false}>\n                    {[1, 2, 3, 4, 5].map(level => {\n                        return [1, 2, 3, 4, 5].map(overcharge => {\n                            const key = `n${level}o${overcharge}`,\n                                title = `NP${level}-OC${overcharge}`;\n\n                            return (\n                                <Tab key={key} eventKey={key} title={title}>\n                                    <br/>\n                                    <NoblePhantasmVersion region={this.props.region}\n                                                          noblePhantasm={noblePhantasm}\n                                                          level={level}\n                                                          overcharge={overcharge}/>\n                                </Tab>\n                            );\n                        });\n                    })}\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default NoblePhantasmPage;\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Quest from \"../Api/Data/Quest\";\nimport Region from \"../Api/Data/Region\";\nimport DataTable from \"../Component/DataTable\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n    phase: number;\n}\n\ninterface IState {\n    loading: boolean;\n    quest?: Quest;\n}\n\nclass QuestPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.loadQuest();\n    }\n\n    async loadQuest() {\n        const quest = await Connection.quest(this.props.region, this.props.id, this.props.phase);\n\n        this.setState({\n            loading: false,\n            quest: quest,\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.quest)\n            return <Loading/>;\n\n        const quest = this.state.quest;\n\n        return (\n            <div>\n                <h1>{quest.name}</h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={quest}/>,\n                    \"ID\": quest.id,\n                    \"Phase\": quest.phase,\n                    \"Name\": quest.name,\n                    \"Type\": quest.type,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default QuestPage;\n","import React from \"react\";\nimport ClassName from \"../Api/Data/ClassName\";\n\nconst classTypes = new Map<number, number>([\n    [1, 1],\n    [2, 1],\n    [3, 2],\n    [4, 3],\n    [5, 3],\n]);\nconst unknownClassType = 3;\nconst classIds = new Map<ClassName, number>([\n    [ClassName.SABER, 1],\n    [ClassName.ARCHER, 2],\n    [ClassName.LANCER, 3],\n    [ClassName.RIDER, 4],\n    [ClassName.CASTER, 5],\n    [ClassName.ASSASSIN, 6],\n    [ClassName.BERSERKER, 7],\n    [ClassName.SHIELDER, 8],\n    [ClassName.RULER, 9],\n    [ClassName.ALTER_EGO, 10],\n    [ClassName.AVENGER, 11],\n]);\nconst unknownClassId = 12;\n\ninterface IProps {\n    className: ClassName;\n    rarity?: number;\n    height?: number;\n}\n\nclass ClassIcon extends React.Component<IProps> {\n    render() {\n        return (\n            <img alt={''} src={this.location()}\n                 style={this.props.height ? {height: this.props.height} : undefined}/>\n        );\n    }\n\n    private location(): string {\n        let classId = classIds.has(this.props.className) ? classIds.get(this.props.className) : unknownClassId,\n            rarity = this.props.rarity ?? 5,\n            type = classTypes.has(rarity) ? classTypes.get(rarity) : unknownClassType;\n\n        return `https://assets.atlasacademy.io/GameData/NA/ClassIcons/class${type}_${classId}.png`;\n    }\n}\n\nexport default ClassIcon;\n","import React from \"react\";\nimport ServantEntity from \"../../Api/Data/ServantEntity\";\nimport ClassIcon from \"../../Component/ClassIcon\";\nimport DataTable from \"../../Component/DataTable\";\nimport RawDataViewer from \"../../Component/RawDataViewer\";\n\ninterface IProps {\n    servant: ServantEntity;\n}\n\nclass ServantMainData extends React.Component<IProps> {\n    render() {\n        const servant = this.props.servant;\n\n        return (\n            <div>\n                <h1>\n                    <ClassIcon className={servant.className} rarity={servant.rarity}/>\n                    &nbsp;\n                    {servant.name}\n                </h1>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={servant}/>,\n                    \"ID\": servant.id,\n                    \"Collection\": servant.collectionNo,\n                    \"Name\": servant.name,\n                    \"Class\": servant.className,\n                    \"Rarity\": servant.rarity,\n                    \"Cost\": servant.cost,\n                    \"Gender\": servant.gender,\n                    \"Attribute\": servant.attribute,\n                    \"Max Lv.\": servant.lvMax,\n                    \"Base Hp\": servant.hpBase,\n                    \"Base Atk\": servant.atkBase,\n                    \"Max Hp\": servant.hpMax,\n                    \"Max Atk\": servant.atkMax,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantMainData;\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport ServantEntity from \"../../Api/Data/ServantEntity\";\nimport BuffIcon from \"../../Component/BuffIcon\";\nimport DataTable from \"../../Component/DataTable\";\nimport {asPercent} from \"../../Helper/OutputHelper\";\n\nconst buffIconPath = 'https://assets.atlasacademy.io/GameData/JP/BuffIcons',\n    deathChanceIcon = `${buffIconPath}/bufficon_337.png`,\n    hitCountIcon = `${buffIconPath}/bufficon_349.png`,\n    npGainIcon = `${buffIconPath}/bufficon_303.png`,\n    starGenIcon = `${buffIconPath}/bufficon_310.png`,\n    showHits = function (hits: number[] | undefined): JSX.Element | string {\n        if (hits === undefined)\n            return '';\n\n        return <span>\n            {hits.map((hit, index) => {\n                return (index > 0 ? ', ' : '') + asPercent(hit, 0);\n            })}\n            &nbsp;-&nbsp;\n            {hits.length} Hits\n        </span>\n    };\n\ninterface IProps {\n    servant: ServantEntity;\n}\n\nclass ServantMiscData extends React.Component<IProps> {\n    private hitsColumn() {\n        return (\n            <Col xs={12} md={12} lg={4}>\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={hitCountIcon}/>\n                            &nbsp;\n                            Hit Count\n                        </div>\n                    )}\n                    data={{\n                        \"Buster\": showHits(this.props.servant.hitsDistribution.buster),\n                        \"Arts\": showHits(this.props.servant.hitsDistribution.arts),\n                        \"Quick\": showHits(this.props.servant.hitsDistribution.quick),\n                        \"Extra\": showHits(this.props.servant.hitsDistribution.extra),\n                    }}/>\n            </Col>\n        );\n    }\n\n    private miscColumn() {\n        return (\n            <Col xs={12} md={12} lg={4}>\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={starGenIcon}/>&nbsp;Crit Stars\n                        </div>\n                    )}\n                    data={{\n                        \"Star Absorb\": this.props.servant.starAbsorb,\n                        \"Star Gen\": asPercent(this.props.servant.starGen, 1),\n                    }}/>\n\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={deathChanceIcon}/>&nbsp;Instant Death\n                        </div>\n                    )}\n                    data={{\n                        \"Death Chance\": asPercent(this.props.servant.instantDeathChance, 1),\n                    }}/>\n            </Col>\n        );\n    }\n\n    private npGainColumn() {\n        return (\n            <Col xs={12} md={12} lg={4}>\n                <DataTable\n                    header={(\n                        <div>\n                            <BuffIcon location={npGainIcon}/>&nbsp;NP Gain\n                        </div>\n                    )}\n                    data={{\n                        \"Buster\": asPercent(this.props.servant.npGain.buster, 2),\n                        \"Arts\": asPercent(this.props.servant.npGain.arts, 2),\n                        \"Quick\": asPercent(this.props.servant.npGain.quick, 2),\n                        \"Extra\": asPercent(this.props.servant.npGain.extra, 2),\n                        \"Defense\": asPercent(this.props.servant.npGain.defence, 2),\n                    }}/>\n            </Col>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    {this.hitsColumn()}\n                    {this.npGainColumn()}\n                    {this.miscColumn()}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default ServantMiscData;\n","export function describeQuestType(questId?: number, questPhase?: number): string {\n    const prefix = Math.floor((questId ?? 0) / 1000000);\n\n    switch (prefix) {\n        case 91:\n            return 'Interlude';\n        case 94:\n            return 'Strengthening';\n        default:\n            return 'Main Quest';\n    }\n}\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Alert, Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport {default as ServantNoblePhantasmData} from \"../../Api/Data/NoblePhantasm\";\nimport Region from \"../../Api/Data/Region\";\nimport {describeFunc, describeMutators} from \"../../Helper/FuncHelper\";\nimport {handleNewLine} from \"../../Helper/OutputHelper\";\nimport {describeQuestType} from \"../../Helper/QuestHelper\";\n\ninterface IProps {\n    region: Region;\n    noblePhantasm: ServantNoblePhantasmData;\n}\n\nclass ServantNoblePhantasm extends React.Component<IProps> {\n    render() {\n        const np = this.props.noblePhantasm;\n\n        return (\n            <div>\n                <h3>\n                    {np.name}\n                    &nbsp;\n                    <Link to={`/${this.props.region}/noble-phantasm/${np.id}`}>\n                        <FontAwesomeIcon icon={faShare}/>\n                    </Link>\n                </h3>\n\n                {np.condQuestId && np.condQuestPhase ? (\n                    <Alert variant={'primary'}>\n                        <Link to={`/${this.props.region}/quest/${np.condQuestId}/${np.condQuestPhase}`}>\n                            Available after {describeQuestType(np.condQuestId, np.condQuestPhase)}\n                            &nbsp;\n                            <FontAwesomeIcon icon={faShare}/>\n                        </Link>\n                    </Alert>\n                ): null}\n\n                <p>{handleNewLine(np.detail)}</p>\n\n                <Table responsive>\n                    <thead>\n                    <tr>\n                        <th>Effect</th>\n                        <th>1</th>\n                        <th>2</th>\n                        <th>3</th>\n                        <th>4</th>\n                        <th>5</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {np.functions.map((func, index) => {\n                        let funcDescription = describeFunc(this.props.region, func),\n                            mutatingDescriptions = describeMutators(func);\n\n                        for (let i = 0; i < 5; i++) {\n                            if (!mutatingDescriptions[i])\n                                mutatingDescriptions.push('-');\n                        }\n\n                        return (\n                            <tr key={index}>\n                                <td>\n                                    {funcDescription}\n                                    &nbsp;\n                                    <Link to={`/${this.props.region}/func/${func.funcId}`}>\n                                        <FontAwesomeIcon icon={faShare}/>\n                                    </Link>\n                                </td>\n                                {mutatingDescriptions.map((description, index) => {\n                                    return (\n                                        <td key={index}>{description}</td>\n                                    );\n                                })}\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default ServantNoblePhantasm;\n","import React from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport ServantListEntity from \"../../Api/Data/ServantListEntity\";\n\ninterface Event extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps extends RouteComponentProps {\n    id: number;\n    servants: ServantListEntity[];\n}\n\nclass ServantPicker extends React.Component<IProps> {\n    private changeServant(id: number) {\n        this.props.history.push(`/servant/${id}`);\n    }\n\n    render() {\n        return (\n            <div>\n                Jump to:\n                <FormControl as={\"select\"} custom\n                             onChange={(ev: Event) => {\n                                 this.changeServant(parseInt(ev.target.value));\n                             }}\n                             value={this.props.id}>\n                    {this.props.servants.map((servant, index) => {\n                        return (\n                            <option key={index} value={servant.collectionNo}>\n                                {servant.name}\n                            </option>\n                        );\n                    })}\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ServantPicker);\n","import React from \"react\";\nimport ServantEntity from \"../../Api/Data/ServantEntity\";\n\ninterface IProps {\n    servant: ServantEntity;\n}\n\nclass ServantPortrait extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                <img alt={this.props.servant.name}\n                     className={'profile'}\n                     src={this.props.servant.extraAssets.charaGraph.ascension[\"1\"]}/>\n            </div>\n        );\n    }\n}\n\nexport default ServantPortrait;\n","import {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Alert, Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport Region from \"../../Api/Data/Region\";\nimport Skill from \"../../Api/Data/Skill\";\nimport {describeFunc, describeMutators} from \"../../Helper/FuncHelper\";\nimport {handleNewLine} from \"../../Helper/OutputHelper\";\nimport {describeQuestType} from \"../../Helper/QuestHelper\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n}\n\nclass ServantSkill extends React.Component<IProps, any> {\n    render() {\n        const skill = this.props.skill;\n        return (\n            <div>\n                <h3>\n                    {skill.name}\n                    &nbsp;\n                    <Link to={`/${this.props.region}/skill/${skill.id}`}>\n                        <FontAwesomeIcon icon={faShare}/>\n                    </Link>\n                </h3>\n\n                {skill.condQuestId && skill.condQuestPhase ? (\n                    <Alert variant={'primary'}>\n                        <Link to={`/${this.props.region}/quest/${skill.condQuestId}/${skill.condQuestPhase}`}>\n                            Available after {describeQuestType(skill.condQuestId, skill.condQuestPhase)}\n                            &nbsp;\n                            <FontAwesomeIcon icon={faShare}/>\n                        </Link>\n                    </Alert>\n                ): null}\n\n                <p>{handleNewLine(skill.detail)}</p>\n\n                <Table responsive>\n                    <thead>\n                    <tr>\n                        <th>Effect</th>\n                        <th>1</th>\n                        <th>2</th>\n                        <th>3</th>\n                        <th>4</th>\n                        <th>5</th>\n                        <th>6</th>\n                        <th>7</th>\n                        <th>8</th>\n                        <th>9</th>\n                        <th>10</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>Cooldown</td>\n                        {skill.coolDown.map((cooldown, index) => {\n                            return <td key={index}>{cooldown}</td>;\n                        })}\n                    </tr>\n                    {skill.functions.map((func, index) => {\n                        let funcDescription = describeFunc(this.props.region, func),\n                            mutatingDescriptions = describeMutators(func);\n\n                        for (let i = 0; i < 10; i++) {\n                            if (!mutatingDescriptions[i])\n                                mutatingDescriptions.push('-');\n                        }\n\n                        return (\n                            <tr key={index}>\n                                <td>\n                                    {funcDescription}\n                                    &nbsp;\n                                    <Link to={`/${this.props.region}/func/${func.funcId}`}>\n                                        <FontAwesomeIcon icon={faShare}/>\n                                    </Link>\n                                </td>\n                                {mutatingDescriptions.map((description, index) => {\n                                    return (\n                                        <td key={index}>{description}</td>\n                                    );\n                                })}\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default ServantSkill;\n","import React from \"react\";\nimport Region from \"../../Api/Data/Region\";\nimport Trait from \"../../Api/Data/Trait\";\nimport TraitDescription from \"../../Component/TraitDescription\";\nimport {joinElements} from \"../../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    traits: Trait[];\n}\n\nclass ServantTraits extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {joinElements(\n                    this.props.traits.map(trait => <TraitDescription region={this.props.region} trait={trait}/>),\n                    ', '\n                ).map(\n                    (element, index) => <span key={index}>{element}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ServantTraits;\n","import React from \"react\";\nimport {Col, Row, Tab, Tabs} from \"react-bootstrap\";\nimport Connection from \"../Api/Connection\";\nimport Region from \"../Api/Data/Region\";\nimport ServantEntity from \"../Api/Data/ServantEntity\";\nimport ServantListEntity from \"../Api/Data/ServantListEntity\";\nimport TraitMap from \"../Api/Data/TraitMap\";\nimport Loading from \"../Component/Loading\";\nimport ServantMainData from \"./Servant/ServantMainData\";\nimport ServantMiscData from \"./Servant/ServantMiscData\";\nimport ServantNoblePhantasm from \"./Servant/ServantNoblePhantasm\";\nimport ServantPicker from \"./Servant/ServantPicker\";\nimport ServantPortrait from \"./Servant/ServantPortrait\";\nimport ServantSkill from \"./Servant/ServantSkill\";\nimport ServantTraits from \"./Servant/ServantTraits\";\n\nimport './ServantPage.css';\n\ninterface IProp {\n    region: Region;\n    id: string;\n}\n\ninterface IState {\n    loading: boolean;\n    id: number;\n    servants: ServantListEntity[];\n    servant?: ServantEntity;\n}\n\nclass ServantPage extends React.Component<IProp, IState> {\n    constructor(props: IProp) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            id: parseInt(this.props.id),\n            servants: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadServant();\n    }\n\n    async loadServant() {\n        let [servants, servant] = await Promise.all<ServantListEntity[], ServantEntity, TraitMap>([\n            Connection.servantList(this.props.region),\n            Connection.servant(this.props.region, this.state.id),\n            Connection.traitMap(this.props.region)\n        ]);\n\n        this.setState({\n            loading: false,\n            servants,\n            servant\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.servant)\n            return <Loading/>;\n\n        return (\n            <div id={'servant'}>\n                <ServantPicker servants={this.state.servants} id={this.state.servant.collectionNo}/>\n                <hr/>\n\n                <Row>\n                    <Col xs={{span: 12, order: 2}} lg={{span: 6, order: 1}}>\n                        <ServantMainData servant={this.state.servant}/>\n                    </Col>\n                    <Col xs={{span: 12, order: 1}} lg={{span: 6, order: 2}}>\n                        <ServantPortrait servant={this.state.servant}/>\n                    </Col>\n                </Row>\n\n                <Tabs id={'servant-tabs'} defaultActiveKey={'skill-1'} transition={false}>\n                    <Tab eventKey={'skill-1'} title={'Skill 1'}>\n                        <br/>\n                        {this.state.servant.skills\n                            .filter(skill => skill.num === 1)\n                            .map((skill, index) => {\n                                return <ServantSkill region={this.props.region} key={index} skill={skill}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'skill-2'} title={'Skill 2'}>\n                        <br/>\n                        {this.state.servant.skills\n                            .filter(skill => skill.num === 2)\n                            .map((skill, index) => {\n                                return <ServantSkill region={this.props.region} key={index} skill={skill}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'skill-3'} title={'Skill 3'}>\n                        <br/>\n                        {this.state.servant.skills\n                            .filter(skill => skill.num === 3)\n                            .map((skill, index) => {\n                                return <ServantSkill region={this.props.region} key={index} skill={skill}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'nps'} title={'Noble Phantasms'}>\n                        <br/>\n                        {this.state.servant.noblePhantasms\n                            .filter(noblePhantasm => noblePhantasm.functions.length > 0)\n                            .map((noblePhantasm, index) => {\n                                return <ServantNoblePhantasm region={this.props.region} key={index}\n                                                             noblePhantasm={noblePhantasm}/>;\n                            })}\n                    </Tab>\n                    <Tab eventKey={'traits'} title={'Traits'}>\n                        <br/>\n                        <ServantTraits region={this.props.region} traits={this.state.servant.traits}/>\n                    </Tab>\n                    <Tab eventKey={'misc'} title={'Misc'}>\n                        <br/>\n                        <ServantMiscData servant={this.state.servant}/>\n                    </Tab>\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default ServantPage;\n","import React from \"react\";\n\ninterface IProps {\n    rarity: number;\n}\n\nconst fillChars = function (count: number, character: string): string {\n    return (new Array(count)).fill(null).map(v => character).join('');\n}\n\nclass RarityStars extends React.Component<IProps> {\n    render() {\n        return (\n            <div>\n                {\n                    fillChars(this.props.rarity, '★')\n                    + fillChars(5 - this.props.rarity, '☆')\n                }\n            </div>\n        );\n    }\n}\n\nexport default RarityStars;\n","import React from \"react\";\n\ninterface IProps {\n    rarity: number;\n    location: string;\n    height?: number;\n}\n\nclass ServantThumbnail extends React.Component<IProps> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location}\n                 style={this.props.height ? {height: this.props.height} : undefined}/>\n        );\n    }\n\n}\n\nexport default ServantThumbnail;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport Connection from \"../Api/Connection\";\nimport Region from \"../Api/Data/Region\";\nimport ServantListEntity from \"../Api/Data/ServantListEntity\";\nimport ClassIcon from \"../Component/ClassIcon\";\nimport Loading from \"../Component/Loading\";\nimport RarityStars from \"../Component/RarityStars\";\nimport ServantThumbnail from \"../Component/ServantThumbnail\";\n\nimport './ServantsPage.css';\n\ninterface IProps {\n    region: Region,\n}\n\ninterface IState {\n    loading: boolean;\n    servants: ServantListEntity[];\n}\n\nclass ServantsPage extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            servants: [],\n        };\n    }\n\n    componentDidMount() {\n        Connection.servantList(this.props.region).then(servantList => {\n            this.setState({\n                loading: false,\n                servants: servantList\n            });\n        });\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading/>\n\n        return (\n            <div id=\"servants\">\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th style={{textAlign: \"center\", width: '1px'}}>#</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Class</th>\n                        <th style={{textAlign: \"center\", width: '1px'}}>Thumbnail</th>\n                        <th>Name</th>\n                        <th>Rarity</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.servants.map((servant, index) => {\n                        const route = `/${this.props.region}/servant/${servant.collectionNo}`;\n\n                        return <tr key={index}>\n                            <td align={\"center\"}>\n                                <Link to={route}>\n                                    {servant.collectionNo}\n                                </Link>\n                            </td>\n                            <td align={\"center\"}>\n                                <ClassIcon className={servant.className} rarity={servant.rarity} height={50}/>\n                            </td>\n                            <td align={\"center\"}>\n                                <Link to={route}>\n                                    <ServantThumbnail rarity={servant.rarity} location={servant.face} height={50}/>\n                                </Link>\n                            </td>\n                            <td>\n                                <Link to={route}>\n                                    {servant.name}\n                                </Link>\n                            </td>\n                            <td>\n                                <RarityStars rarity={servant.rarity}/>\n                            </td>\n                        </tr>\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n\n}\n\nexport default ServantsPage;\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Region from \"../Api/Data/Region\";\nimport Skill from \"../Api/Data/Skill\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport DataTable from \"../Component/DataTable\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    loading: boolean;\n    skill?: Skill;\n}\n\nclass SkillPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.loadSkill();\n    }\n\n    async loadSkill() {\n        const skill = await Connection.skill(this.props.region, this.props.id);\n\n        this.setState({\n            loading: false,\n            skill: skill,\n        });\n    }\n\n    render() {\n        if (this.state.loading || !this.state.skill)\n            return <Loading/>;\n\n        const skill = this.state.skill;\n\n        return (\n            <div>\n                <h1>\n                    <BuffIcon location={skill.icon} height={48}/>\n                    &nbsp;\n                    {skill.name}\n                </h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={skill}/>,\n                    \"ID\": skill.id,\n                    \"Name\": skill.name,\n                    \"Detail\": skill.detail,\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default SkillPage;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport {Container} from \"react-bootstrap\";\nimport {HashRouter as Router, Route, Switch,} from \"react-router-dom\";\nimport Navigation from \"./Component/Navigation\";\nimport BuffPage from \"./Page/BuffPage\";\nimport FuncPage from './Page/FuncPage';\nimport NoblePhantasmPage from \"./Page/NoblePhantasmPage\";\nimport QuestPage from \"./Page/QuestPage\";\nimport ServantPage from \"./Page/ServantPage\";\nimport ServantsPage from \"./Page/ServantsPage\";\nimport SkillPage from \"./Page/SkillPage\";\nimport Manager from \"./Setting/Manager\";\nimport {LanguageOption} from \"./Setting/Option\";\n\ninterface IState {\n    language: LanguageOption,\n}\n\nclass App extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            language: Manager.language(),\n        };\n\n        Manager.onUpdate(() => this.updateSettings());\n    }\n\n    private updateSettings() {\n        this.setState({\n            language: Manager.language(),\n        });\n    }\n\n    render() {\n        return (\n            <Router>\n                <Navigation/>\n                <br/>\n\n                <Container key={`${this.state.language}`}>\n                    <Switch>\n                        <Route path=\"/:region(JP|NA)/buff/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <BuffPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route path=\"/:region(JP|NA)/func/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <FuncPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route path=\"/:region(JP|NA)/noble-phantasm/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <NoblePhantasmPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route path=\"/:region(JP|NA)/quest/:id([0-9]+)/:phase([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                phase = props.match.params.phase,\n                                key = `${region}-${id}-${phase}`;\n                            return <QuestPage key={key} region={region} id={id} phase={phase}/>;\n                        }}/>\n                        <Route path=\"/:region(JP|NA)/servant/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <ServantPage key={key} region={region} id={id}/>;\n                        }}/>\n                        <Route path=\"/:region(JP|NA)/skill/:id([0-9]+)\" render={props => {\n                            const region = props.match.params.region,\n                                id = props.match.params.id,\n                                key = `${region}-${id}`;\n                            return <SkillPage key={key} region={region} id={id}/>\n                        }}/>\n                        <Route path=\"/:region(JP|NA)/servants\" render={props => {\n                            const region = props.match.params.region;\n                            return <ServantsPage key={region} region={region}/>;\n                        }}/>\n                        {/*<Route exact path=\"/\" component={ServantsPage}/>*/}\n                    </Switch>\n                </Container>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}