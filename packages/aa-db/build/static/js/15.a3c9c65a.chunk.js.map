{"version":3,"sources":["Helper/OutputHelper.tsx","Component/FaceIcon.tsx","Descriptor/TraitDescriptor.tsx","Component/SearchableSelect.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/react-bootstrap/esm/Table.js","../node_modules/react-bootstrap/esm/Badge.js","Page/Entities/TraitsSelector.tsx","Page/EntitiesPage.tsx"],"names":["asPercent","value","pow","parseInt","decimal","Math","formatNumber","String","replace","handleNewLine","text","mergeElements","split","joinElements","elements","separator","parts","pushElement","element","undefined","length","previous","toString","push","forEach","index","seperator","Fragment","map","key","FaceIcon","alt","src","this","props","location","style","height","React","Component","traitDescriptions","Map","TraitDescriptor","state","id","trait","Api","traitList","i","setState","get","name","region","disableLink","getDescription","to","getLocation","SearchableSelect","ref","createRef","selected","focused","results","current","clear","description","labels","disableLabelStyling","label","hideAll","getOption","concat","options","onChange","getOptions","placeholder","ignoreDiacritics","maxResults","onBlur","resetInput","selectOption","onFocus","hideReset","className","onClick","e","preventDefault","clearSelection","onMouseDown","icon","faTimes","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","arguments","source","getOwnPropertyDescriptors","defineProperties","Table","forwardRef","_ref","bsPrefix","striped","bordered","borderless","hover","size","variant","responsive","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","Badge","pill","_ref$as","as","prefix","displayName","defaultProps","TraitsSelector","padStart","resetField","input","match","addTrait","onUpdate","traits","console","log","_trait","cursor","removeTrait","faTimesCircle","onInputChange","onKeyDown","keyCode","addInputTrait","attributeDescriptions","classNameDescriptions","entityTypeDescriptions","EntityType","NORMAL","HEROINE","COMBINE_MATERIAL","ENEMY","ENEMY_COLLECTION","ENEMY_COLLECTION_DETAIL","SERVANT_EQUIP","STATUS_UP","genderDescriptions","stateCache","EntitiesPage","defaultState","loading","searching","entities","traitSelected","Manager","setRegion","search","history","error","set","entity","type","gender","attribute","alert","searchEntity","ErrorStatus","Loading","onSubmit","ev","Form","Group","Label","Control","values","ClassName","EXTRA","Gender","Attribute","Button","faSearch","route","face","withRouter"],"mappings":"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","file":"static/js/15.a3c9c65a.chunk.js","sourcesContent":["import React from \"react\";\n\nexport type Renderable = (\n    JSX.Element\n    | string\n    | number\n    | undefined\n    )\n\nexport function asPercent(value: number | string | undefined, pow: number): string {\n    if (typeof value === \"string\")\n        return asPercent(parseInt(value), pow);\n\n    const decimal = (value ?? 0) / Math.pow(10, pow);\n\n    return `${decimal}%`;\n}\n\nexport function formatNumber(value: number): string {\n    return String(value).replace(/(.)(?=(\\d{3})+$)/g, '$1,');\n}\n\nexport function handleNewLine(text?: string): Renderable {\n    if (!text)\n        return \"\";\n\n    return (\n        <span>\n            {mergeElements(text.split(\"\\n\"), <br/>)}\n        </span>\n    );\n}\n\nexport function joinElements(elements: Renderable[], separator: Renderable): Renderable[] {\n    const parts: Renderable[] = [],\n        pushElement = function (element: Renderable) {\n            if (element === undefined)\n                return;\n\n            if (typeof element === 'object') {\n                parts.push(element);\n                return;\n            }\n\n            if (parts.length === 0) {\n                parts.push(element.toString());\n                return;\n            }\n\n            const previous = parts[parts.length - 1];\n            if (typeof previous !== 'string') {\n                parts.push(element.toString());\n                return;\n            }\n\n            parts[parts.length - 1] = previous + element.toString();\n        };\n\n    elements.forEach((element, index) => {\n        if (index > 0)\n            pushElement(separator);\n\n        pushElement(element);\n    });\n\n    return parts;\n}\n\nexport function mergeElements(elements: Renderable[], seperator: Renderable): Renderable {\n    return <React.Fragment>\n        {joinElements(elements, seperator).map((element, index) => {\n            return <React.Fragment key={index}>{element}</React.Fragment>;\n        })}\n    </React.Fragment>\n}\n","import EntityType from \"@atlasacademy/api-connector/dist/Enum/EntityType\";\nimport React from \"react\";\n\ninterface IProps {\n    type?: EntityType;\n    rarity?: number;\n    location: string;\n    height?: number | string;\n}\n\nclass FaceIcon extends React.Component<IProps> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location}\n                 style={{height: this.props.height ?? '2em'}}/>\n        );\n    }\n\n}\n\nexport default FaceIcon;\n","import {Region, Trait} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Api from \"../Api\";\n\nexport const traitDescriptions = new Map<number, string>([\n    [1, \"Gender:Male\"],\n    [2, \"Gender:Female\"],\n    [3, \"Gender:Unknown\"],\n    [100, \"Class:Saber\"],\n    [101, \"Class:Lancer\"],\n    [102, \"Class:Archer\"],\n    [103, \"Class:Rider\"],\n    [104, \"Class:Caster\"],\n    [105, \"Class:Assassin\"],\n    [106, \"Class:Berserker\"],\n    [107, \"Class:Shielder\"],\n    [108, \"Class:Ruler\"],\n    [109, \"Class:Alter Ego\"],\n    [110, \"Class:Avenger\"],\n    [111, \"Demon Pillar\"],\n    [112, \"Class:Grand Caster\"],\n    [113, \"Beast I\"],\n    [114, \"Beast II\"],\n    [115, \"Class:Moon Cancer\"],\n    [116, \"Beast IIIR\"],\n    [117, \"Class:Foreigner\"],\n    [118, \"Beast IIIL\"],\n    [119, \"Beast Unknown\"],\n    [200, \"Attribute:Sky\"],\n    [201, \"Attribute:Earth\"],\n    [202, \"Attribute:Human\"],\n    [203, \"Attribute:Star\"],\n    [204, \"Attribute:Beast\"],\n    [300, \"Alignment:Lawful\"],\n    [301, \"Alignment:Chaotic\"],\n    [302, \"Alignment:Neutral\"],\n    [303, \"Alignment:Good\"],\n    [304, \"Alignment:Evil\"],\n    [305, \"Alignment:Balanced\"],\n    [306, \"Alignment:Madness\"],\n    [308, \"Alignment:Summer\"],\n    [1000, \"Servant\"],\n    [1002, \"Undead\"],\n    [1122, \"Shadow Servant\"],\n    [1172, \"Threats against Humanity\"],\n    [2004, \"Roman\"],\n    [2005, \"Beasts\"],\n    [2019, \"Demonic\"],\n    [2039, \"Near Water\"],\n    [2386, \"Kingprotea: Proliferation\"],\n    [2387, \"Kingprotea: Growth\"],\n    [2466, \"Argonaut\"],\n    [2654, \"Pseudo-Servant\"],\n    [2664, \"Kingprotea: Proliferation NP Defense\"],\n    [3004, \"Buff\"],\n    [3005, \"Debuff\"],\n    [3006, \"Buff:Offensive\"],\n    [3007, \"Buff:Defensive\"],\n    [3011, \"Poison\"],\n    [3012, \"Charm\"],\n    [3015, \"Burn\"],\n    [3021, \"Evade\"],\n    [3026, \"Curse\"],\n    [3047, \"Pigify\"],\n    [4001, \"Card:Arts\"],\n    [4002, \"Card:Buster\"],\n    [4003, \"Card:Quick\"],\n    [4004, \"Card:Extra\"],\n    [4008, \"Player Card\"],\n    [4100, \"Critical Hit\"],\n]);\n\ninterface IProps {\n    region: Region;\n    trait: Trait | number;\n    disableLink?: boolean;\n}\n\ninterface IState {\n    id: number;\n    trait?: Trait;\n}\n\nclass TraitDescriptor extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            id: typeof props.trait === \"number\" ? props.trait : props.trait.id,\n            trait: typeof props.trait === \"number\" ? undefined : props.trait,\n        };\n    }\n\n    async componentDidMount() {\n        if (this.state.trait)\n            return;\n\n        const traitList = await Api.traitList();\n\n        for (let i = 0; i < traitList.length; i++) {\n            const trait = traitList[i];\n\n            if (trait.id === this.state.id) {\n                this.setState({trait});\n\n                return;\n            }\n        }\n    }\n\n    private getDescription(): string {\n        let description;\n\n        description = traitDescriptions.get(this.state.id);\n        if (description) {\n            return description;\n        }\n\n        if (this.state.trait && this.state.trait.name !== 'unknown')\n            return this.state.trait.name;\n\n        return `unknown(${this.state.id})`;\n    }\n\n    private getLocation(): string {\n        return `/${this.props.region}/entities/trait/${this.state.id}`;\n    }\n\n    render() {\n        return (\n            this.props.disableLink\n                ? <span>[{this.getDescription()}]</span>\n                : <Link to={this.getLocation()}>[{this.getDescription()}]</Link>\n        );\n    }\n}\n\nexport default TraitDescriptor;\n","import {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React, {RefObject} from \"react\";\nimport {Typeahead} from \"react-bootstrap-typeahead\";\n\nimport \"./SearchableSelect.css\";\n\ninterface Option<T> {\n    label: string,\n    value?: T,\n}\n\ninterface IProps<T> {\n    id: string,\n    options: T[],\n    labels: Map<T, string>,\n    onChange: Function,\n    selected?: T,\n    hideAll?: boolean,\n    hideReset?: boolean,\n    disableLabelStyling?: boolean,\n    maxResults?: number,\n}\n\ninterface IState<T> {\n    ref: RefObject<any>,\n    selected?: T,\n    focused: boolean,\n    results: boolean,\n}\n\nclass SearchableSelect<T> extends React.Component<IProps<T>, IState<T>> {\n    constructor(props: IProps<T>) {\n        super(props);\n\n        this.state = {\n            ref: React.createRef(),\n            selected: props.selected,\n            focused: false,\n            results: false,\n        };\n    }\n\n    private async clearSelection() {\n        await this.setState({selected: undefined, results: true});\n        this.state.ref.current.clear();\n    }\n\n    private getDescription(value?: T): string {\n        if (value === undefined)\n            return 'All';\n\n        const description = this.props.labels.get(value);\n\n        if (this.props.disableLabelStyling) {\n            if (description)\n                return description;\n\n            return typeof value === 'string' ? value : 'Unknown';\n        }\n\n        return description\n            ? `${description} - ${value}`\n            : `(${value})`;\n    }\n\n    private getOption(value?: T): Option<T> {\n        const label = this.getDescription(value);\n\n        return {label, value};\n    }\n\n    private getOptions(): Option<T>[] {\n        return (this.props.hideAll ? [] : [this.getOption()])\n            .concat(\n                this.props.options.map(value => this.getOption(value))\n            );\n    }\n\n    private resetInput() {\n        this.setState({focused: false, results: false});\n    }\n\n    private async selectOption(options: Option<T>[]) {\n        if (options.length === 0) {\n            this.setState({results: false});\n        } else {\n            const selected = options[0].value;\n\n            await this.setState({selected, results: true});\n            this.props.onChange(selected);\n        }\n    }\n\n    render() {\n        return (\n            <Typeahead ref={this.state.ref}\n                       id={this.props.id}\n                       options={this.getOptions()}\n                       placeholder={this.getDescription(this.state.selected)}\n                       selected={this.state.focused && this.state.results ? [this.getOption(this.state.selected)] : []}\n                       ignoreDiacritics={true}\n                       maxResults={this.props.maxResults ?? 1000}\n                       onBlur={() => {\n                           this.resetInput();\n                       }}\n                       onChange={(selected) => {\n                           this.selectOption(selected);\n                       }}\n                       onFocus={() => {\n                           this.setState({focused: true});\n                       }}>\n\n                {this.props.hideReset ? null : (\n                    <button className='searchable-select-clear'\n                            onClick={e => {\n                                e.preventDefault();\n                                this.clearSelection();\n                            }}\n                            onMouseDown={e => {\n                                // Prevent input from losing focus.\n                                e.preventDefault();\n                            }}>\n                        <FontAwesomeIcon icon={faTimes}/>\n                    </button>\n                )}\n            </Typeahead>\n        );\n    }\n}\n\nexport default SearchableSelect;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import {Region, Trait} from \"@atlasacademy/api-connector\";\nimport {faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React, {RefObject} from \"react\";\nimport {Badge} from \"react-bootstrap\";\nimport {Typeahead} from \"react-bootstrap-typeahead\";\nimport TraitDescriptor, {traitDescriptions} from \"../../Descriptor/TraitDescriptor\";\nimport {mergeElements} from \"../../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    traitList: Trait[];\n    traits: number[];\n    onUpdate: (traits: number[]) => void;\n}\n\ninterface IState {\n    ref: RefObject<any>,\n    input?: string,\n}\n\nclass TraitsSelector extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            ref: React.createRef()\n        };\n    }\n\n    private options() {\n        return this.props.traitList.map(trait => {\n            let label = traitDescriptions.get(trait.id) ?? `(${trait.name})`;\n\n            return {\n                label: `${trait.id.toString().padStart(4, '0')} - ${label}`,\n                value: trait.id,\n            };\n        });\n    }\n\n    private resetInput(resetField = true) {\n        this.setState({\n            input: ''\n        });\n        if (resetField) this.state.ref.current.clear();\n    }\n\n    private addInputTrait() {\n        const value = this.state.input;\n        if (!value) {\n            this.resetInput();\n            return;\n        }\n\n        if (!value.match(/^[0-9]+$/)) {\n            this.resetInput();\n            return;\n        }\n\n        this.addTrait(parseInt(value));\n        this.resetInput();\n    }\n\n    private addTrait(trait: number) {\n        this.props.onUpdate(\n            this.props.traits.concat([trait])\n        );\n    }\n\n    private removeTrait(trait: number) {\n        console.log(\n            trait,\n            this.props.traits.filter(_trait => _trait !== trait)\n        );\n        this.props.onUpdate(\n            this.props.traits.filter(_trait => _trait !== trait)\n        );\n    }\n\n    render() {\n        return (\n            <div>\n\n                <p>\n                    {this.props.traits.length > 0 ? mergeElements(this.props.traits.map(trait => (\n                        <span key={trait}\n                              style={{cursor: 'pointer'}}\n                              onClick={(e) => {\n                                  e.preventDefault();\n                                  this.removeTrait(trait);\n                              }}>\n                            <Badge variant='primary'>\n                                <TraitDescriptor region={this.props.region} trait={trait} disableLink={true}/>\n                                &nbsp;\n                                <FontAwesomeIcon icon={faTimesCircle}/>\n                            </Badge>\n                        </span>\n                    )), ' ') : <i>No Traits Selected</i>}\n                </p>\n\n                <Typeahead ref={this.state.ref}\n                           id={'traitsSelector'}\n                           options={this.options()}\n                           placeholder='Add Trait Filter'\n                           ignoreDiacritics={true}\n                           selected={[]}\n                           onBlur={() => {\n                               this.resetInput(false);\n                           }}\n                           onChange={(selected) => {\n                               if (selected.length > 0) {\n                                   this.addTrait(selected[0].value);\n                               }\n                           }}\n                           onInputChange={text => {\n                               this.setState({input: text});\n                           }}\n                           onKeyDown={(e: any) => {\n                               if (e.keyCode === 13) {\n                                   this.addInputTrait();\n                               }\n                           }}/>\n\n            </div>\n        );\n    }\n}\n\nexport default TraitsSelector;\n","import {Attribute, BaseEntityBasic, ClassName, EntityType, Gender, Region, Trait} from \"@atlasacademy/api-connector\";\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Button, Form, Table} from \"react-bootstrap\";\nimport {withRouter} from \"react-router\";\nimport {Link, RouteComponentProps} from \"react-router-dom\";\nimport Api from \"../Api\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport FaceIcon from \"../Component/FaceIcon\";\nimport Loading from \"../Component/Loading\";\nimport SearchableSelect from \"../Component/SearchableSelect\";\nimport Manager from \"../Setting/Manager\";\nimport TraitsSelector from \"./Entities/TraitsSelector\";\n\nconst attributeDescriptions = new Map<Attribute, string>(),\n    classNameDescriptions = new Map<ClassName, string>(),\n    entityTypeDescriptions = new Map<EntityType, string>([\n        [EntityType.NORMAL, 'Servant'],\n        [EntityType.HEROINE, 'Servant (Mash)'],\n        [EntityType.COMBINE_MATERIAL, 'Exp Card'],\n        [EntityType.ENEMY, 'Enemy'],\n        [EntityType.ENEMY_COLLECTION, 'Enemy Servant'],\n        [EntityType.ENEMY_COLLECTION_DETAIL, 'Boss'],\n        [EntityType.SERVANT_EQUIP, 'Craft Essence'],\n        [EntityType.STATUS_UP, 'Fou Card'],\n    ]),\n    genderDescriptions = new Map<Gender, string>();\n\nlet stateCache = new Map<Region, IState>([]);\n\ninterface ChangeEvent extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps extends RouteComponentProps {\n    region: Region;\n    traitSelected?: number;\n}\n\ninterface IState {\n    loading: boolean;\n    error?: AxiosError;\n    traitList: Trait[];\n    searching: boolean;\n    entities: BaseEntityBasic[];\n    name?: string;\n    type?: EntityType;\n    className?: ClassName;\n    gender?: Gender;\n    attribute?: Attribute;\n    traits: number[];\n}\n\nclass EntitiesPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        const defaultState : IState = {\n            loading: true,\n            traitList: [],\n            searching: false,\n            entities: [],\n            traits: []\n        };\n\n        if (props.traitSelected) {\n            this.state = {\n                ...defaultState,\n                traits: [props.traitSelected]\n            }\n        } else {\n            this.state = stateCache.get(props.region) ?? defaultState;\n        }\n    }\n\n    async componentDidMount() {\n        Manager.setRegion(this.props.region);\n\n        try {\n            const traitList = await Api.traitList();\n            if (this.props.traitSelected) {\n                await this.search();\n                this.props.history.replace(`/${this.props.region}/entities`);\n            }\n\n            this.setState({\n                loading: false,\n                traitList\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    componentDidUpdate() {\n        stateCache.set(this.props.region, {...this.state});\n    }\n\n    private location(entity: BaseEntityBasic): string | undefined {\n        switch (entity.type) {\n            case EntityType.NORMAL:\n            case EntityType.HEROINE:\n                return `/${this.props.region}/servant/${entity.id}`;\n            case EntityType.SERVANT_EQUIP:\n                return `/${this.props.region}/craft-essence/${entity.id}`;\n            case EntityType.ENEMY:\n            case EntityType.ENEMY_COLLECTION:\n            case EntityType.ENEMY_COLLECTION_DETAIL:\n                return `/${this.props.region}/enemy/${entity.id}`;\n        }\n\n        return undefined;\n    }\n\n    private async search() {\n        // no filter set\n        if (!this.state.name\n            && !this.state.className\n            && !this.state.gender\n            && !this.state.attribute\n            && this.state.traits.length === 0\n        ) {\n            this.setState({entities: []});\n            alert('Please refine the results before searching');\n            return;\n        }\n\n        try {\n            await this.setState({searching: true, entities: []});\n\n            const entities = await Api.searchEntity(\n                this.state.name,\n                this.state.type,\n                this.state.className,\n                this.state.gender,\n                this.state.attribute,\n                this.state.traits\n            );\n\n            this.setState({searching: false, entities: entities});\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading)\n            return <Loading/>;\n\n        return (\n            <div>\n                {this.state.searching ? <Loading/> : null}\n\n                <h1>Entities Search</h1>\n\n                <form onSubmit={(ev: React.FormEvent) => {\n                    ev.preventDefault();\n                    this.search();\n                }}>\n\n                    <Form.Group>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control value={this.state.name ?? ''}\n                                      onChange={(ev: ChangeEvent) => {\n                                          this.setState({name: ev.target.value});\n                                      }}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Type</Form.Label>\n                        <SearchableSelect<EntityType> id='select-EntityType'\n                                                      options={Object.values(EntityType)}\n                                                      labels={entityTypeDescriptions}\n                                                      selected={this.state.type}\n                                                      onChange={(value?: EntityType) => {\n                                                          this.setState({type: value});\n                                                      }}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Class</Form.Label>\n                        <SearchableSelect<ClassName> id='select-ClassName'\n                                                     options={\n                                                         Object\n                                                             .values(ClassName)\n                                                             .filter(className => className !== ClassName.EXTRA)\n                                                     }\n                                                     labels={classNameDescriptions}\n                                                     selected={this.state.className}\n                                                     onChange={(value?: ClassName) => {\n                                                         this.setState({className: value});\n                                                     }}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Gender</Form.Label>\n                        <SearchableSelect<Gender> id='select-Gender'\n                                                  options={Object.values(Gender)}\n                                                  labels={genderDescriptions}\n                                                  selected={this.state.gender}\n                                                  onChange={(value?: Gender) => {\n                                                      this.setState({gender: value});\n                                                  }}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Attribute</Form.Label>\n                        <SearchableSelect<Attribute> id='select-Attribute'\n                                                     options={Object.values(Attribute)}\n                                                     labels={attributeDescriptions}\n                                                     selected={this.state.attribute}\n                                                     onChange={(value?: Attribute) => {\n                                                         this.setState({attribute: value});\n                                                     }}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Traits</Form.Label>\n                        <TraitsSelector region={this.props.region}\n                                        traitList={this.state.traitList}\n                                        traits={this.state.traits}\n                                        onUpdate={(traits => {\n                                            this.setState({traits});\n                                        })}/>\n                    </Form.Group>\n                    <Button variant={'primary'} onClick={() => this.search()}>\n                        Search\n                        {' '}\n                        <FontAwesomeIcon icon={faSearch}/>\n                    </Button>\n                </form>\n\n                <hr/>\n\n                <Table responsive>\n                    <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Type</th>\n                        <th>Icon</th>\n                        <th>Name</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.entities.map((entity, index) => {\n                        const route = this.location(entity);\n\n                        return (\n                            <tr key={index}>\n                                <td>\n                                    {route ? (\n                                        <Link to={route}>\n                                            {entity.id}\n                                        </Link>\n                                    ) : entity.id}\n                                </td>\n                                <td>{entityTypeDescriptions.get(entity.type) ?? entity.type}</td>\n                                <td>\n                                    <FaceIcon location={entity.face}/>\n                                </td>\n                                <td>{entity.name}</td>\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(EntitiesPage);\n"],"sourceRoot":""}