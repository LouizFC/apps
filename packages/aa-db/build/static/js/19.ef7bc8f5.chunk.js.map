{"version":3,"sources":["Component/DataTable.tsx","Component/RawDataViewer.tsx","Page/BuffPage.tsx"],"names":["DataTable","this","props","header","className","bordered","hover","Object","keys","data","map","key","index","dumpValue","value","element","undefined","type","JSON","stringify","React","Component","RawDataViewer","state","showing","setState","style","cursor","onClick","show","icon","faSearchPlus","size","onHide","hide","Header","closeButton","Title","Body","src","collapsed","BuffPage","loading","loadBuff","Connection","buff","region","id","error","location","height","name","detail","mergeElements","vals","trait","tvals","ckSelfIndv","ckOpIndv","reverseFunctions","func"],"mappings":"oKAaMA,G,8KAcQ,IAAD,OACL,OACI,6BACKC,KAAKC,MAAMC,OACR,yBAAKC,UAAW,eACXH,KAAKC,MAAMC,QAEhB,KAEJ,kBAAC,IAAD,CAAOE,UAAQ,EAACC,OAAK,EAACF,UAAW,cAC7B,+BACCG,OAAOC,KAAKP,KAAKC,MAAMO,MAAMC,KAAI,SAACC,EAAKC,GACpC,OACI,wBAAID,IAAKC,GACL,4BAAKD,GACL,4BAAKX,EAAUa,UAAU,EAAKX,MAAMO,KAAKE,e,iCA5B5CG,GACrB,GAAqB,kBAAVA,EAAoB,CAC3B,IAAMC,EAAUD,EAChB,YAAoBE,IAAhBD,EAAQJ,UAAuCK,IAAlBD,EAAQb,YAAwCc,IAAjBD,EAAQE,KAC7DF,EAEAG,KAAKC,UAAUL,GAI9B,OAAOA,M,GAXSM,IAAMC,YAwCfrB,O,+HCvCTsB,E,kDACF,WAAYpB,GAAgB,IAAD,8BACvB,cAAMA,IAEDqB,MAAQ,CACTC,SAAS,GAJU,E,mDASvBvB,KAAKwB,SAAS,CAACD,SAAS,M,6BAIxBvB,KAAKwB,SAAS,CAACD,SAAS,M,+BAGlB,IAAD,OACL,OACI,6BACI,0BAAMpB,UAAW,eACXsB,MAAO,CAACC,OAAQ,WAChBC,QAAS,WACL,EAAKC,SAHf,gBAOI,kBAAC,IAAD,CAAiBC,KAAMC,OAG3B,kBAAC,IAAD,CAAOC,KAAM,KAAMH,KAAM5B,KAAKsB,MAAMC,QAASS,OAAQ,kBAAM,EAAKC,SAC5D,kBAAC,IAAMC,OAAP,CAAcC,aAAW,GACrB,kBAAC,IAAMC,MAAP,yBAEJ,kBAAC,IAAMC,KAAP,KACI,kBAAC,IAAD,CAAWC,IAAKtC,KAAKC,MAAMO,KAAM+B,UAAW,W,GAnCxCpB,IAAMC,WA2CnBC,O,wNChCTmB,E,kDACF,WAAYvC,GAAgB,IAAD,8BACvB,cAAMA,IAEDqB,MAAQ,CACTmB,SAAS,GAJU,E,gEASvBzC,KAAK0C,a,0KAKkBC,IAAWC,KAAK5C,KAAKC,MAAM4C,OAAQ7C,KAAKC,MAAM6C,I,OAA3DF,E,OAEN5C,KAAKwB,SAAS,CACViB,SAAS,EACTG,KAAMA,I,gDAGV5C,KAAKwB,SAAS,CACVuB,MAAM,EAAD,K,8IAKP,IAAD,OACL,GAAI/C,KAAKsB,MAAMyB,MACX,OAAO,kBAAC,IAAD,CAAaA,MAAO/C,KAAKsB,MAAMyB,QAE1C,GAAI/C,KAAKsB,MAAMmB,UAAYzC,KAAKsB,MAAMsB,KAClC,OAAO,kBAAC,IAAD,MAEX,IAAMA,EAAO5C,KAAKsB,MAAMsB,KAExB,OACI,6BACI,4BACI,kBAAC,IAAD,CAAUI,SAAUJ,EAAKf,KAAMoB,OAAQ,KAD3C,OAGKL,EAAKM,MAGV,6BAEA,kBAAC,IAAD,CAAW1C,KAAM,CACb,IAAO,kBAAC,IAAD,CAAeA,KAAMoC,IAC5B,GAAMA,EAAKE,GACX,KAAQF,EAAKM,KACb,OAAUN,EAAKO,OACf,KAAQP,EAAK5B,KACb,cACI,6BACKoC,YACGR,EAAKS,KAAK5C,KACN,SAAA6C,GAAK,OAAI,kBAAC,IAAD,CAAiBT,OAAQ,EAAK5C,MAAM4C,OAAQS,MAAOA,OAEhE,MAIZ,gBACI,6BACKF,YACGR,EAAKW,MAAM9C,KACP,SAAA6C,GAAK,OAAI,kBAAC,IAAD,CAAiBT,OAAQ,EAAK5C,MAAM4C,OAAQS,MAAOA,OAEhE,MAIZ,uBACI,6BACKF,YACGR,EAAKY,WAAW/C,KACZ,SAAA6C,GAAK,OAAI,kBAAC,IAAD,CAAiBT,OAAQ,EAAK5C,MAAM4C,OAAQS,MAAOA,OAEhE,MAIZ,2BACI,6BACKF,YACGR,EAAKa,SAAShD,KACV,SAAA6C,GAAK,OAAI,kBAAC,IAAD,CAAiBT,OAAQ,EAAK5C,MAAM4C,OAAQS,MAAOA,OAEhE,SAMhB,iDACCV,EAAKc,iBAAiBjD,KAAI,SAACkD,EAAMhD,GAC9B,OACI,uBAAGD,IAAKC,GACJ,kBAAC,IAAD,CAAgBkC,OAAQ,EAAK5C,MAAM4C,OAAQc,KAAMA,a,GAnGtDxC,IAAMC,WA4GdoB","file":"static/js/19.ef7bc8f5.chunk.js","sourcesContent":["import React from \"react\";\nimport {Table} from \"react-bootstrap\";\n\nimport \"./DataTable.css\";\nimport {Renderable} from \"../Helper/OutputHelper\";\n\ninterface IProp {\n    header?: JSX.Element | string,\n    data: {\n        [key: string]: Renderable | object;\n    }\n}\n\nclass DataTable extends React.Component<IProp> {\n    private static dumpValue(value: Renderable | object): Renderable {\n        if (typeof value === \"object\") {\n            const element = value as JSX.Element;\n            if (element.key !== undefined && element.props !== undefined && element.type !== undefined) {\n                return element;\n            } else {\n                return JSON.stringify(value);\n            }\n        }\n\n        return value;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.header ? (\n                    <div className={'data-header'}>\n                        {this.props.header}\n                    </div>\n                ) : null}\n\n                <Table bordered hover className={'data-table'}>\n                    <tbody>\n                    {Object.keys(this.props.data).map((key, index) => {\n                        return (\n                            <tr key={index}>\n                                <th>{key}</th>\n                                <td>{DataTable.dumpValue(this.props.data[key])}</td>\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default DataTable;\n","import {faSearchPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Modal} from \"react-bootstrap\";\nimport ReactJson from \"react-json-view\";\n\ninterface IProps {\n    data: object;\n}\n\ninterface IState {\n    showing: boolean;\n}\n\nclass RawDataViewer extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            showing: false\n        };\n    }\n\n    hide() {\n        this.setState({showing: false});\n    }\n\n    show() {\n        this.setState({showing: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <span className={'text-primary'}\n                      style={{cursor: \"pointer\"}}\n                      onClick={() => {\n                          this.show();\n                      }}>\n                    View Raw\n                    &nbsp;\n                    <FontAwesomeIcon icon={faSearchPlus}/>\n                </span>\n\n                <Modal size={\"lg\"} show={this.state.showing} onHide={() => this.hide()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Raw Data Viewer</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ReactJson src={this.props.data} collapsed={1}/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default RawDataViewer;\n","import {AxiosError} from \"axios\";\nimport React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Buff from \"../Api/Data/Buff\";\nimport Region from \"../Api/Data/Region\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport DataTable from \"../Component/DataTable\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport RawDataViewer from \"../Component/RawDataViewer\";\nimport FuncDescriptor from \"../Descriptor/FuncDescriptor\";\nimport TraitDescriptor from \"../Descriptor/TraitDescriptor\";\nimport {mergeElements} from \"../Helper/OutputHelper\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    error?: AxiosError;\n    loading: boolean;\n    buff?: Buff;\n}\n\nclass BuffPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.loadBuff();\n    }\n\n    async loadBuff() {\n        try {\n            const buff = await Connection.buff(this.props.region, this.props.id);\n\n            this.setState({\n                loading: false,\n                buff: buff,\n            });\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        if (this.state.loading || !this.state.buff)\n            return <Loading/>;\n\n        const buff = this.state.buff;\n\n        return (\n            <div>\n                <h1>\n                    <BuffIcon location={buff.icon} height={48}/>\n                    &nbsp;\n                    {buff.name}\n                </h1>\n\n                <br/>\n\n                <DataTable data={{\n                    \"Raw\": <RawDataViewer data={buff}/>,\n                    \"ID\": buff.id,\n                    \"Name\": buff.name,\n                    \"Detail\": buff.detail,\n                    \"Type\": buff.type,\n                    \"Buff Traits\": (\n                        <div>\n                            {mergeElements(\n                                buff.vals.map(\n                                    trait => <TraitDescriptor region={this.props.region} trait={trait}/>\n                                ),\n                                ' '\n                            )}\n                        </div>\n                    ),\n                    \"Target Traits\": (\n                        <div>\n                            {mergeElements(\n                                buff.tvals.map(\n                                    trait => <TraitDescriptor region={this.props.region} trait={trait}/>\n                                ),\n                                ' '\n                            )}\n                        </div>\n                    ),\n                    \"Required Self Traits\": (\n                        <div>\n                            {mergeElements(\n                                buff.ckSelfIndv.map(\n                                    trait => <TraitDescriptor region={this.props.region} trait={trait}/>\n                                ),\n                                ' '\n                            )}\n                        </div>\n                    ),\n                    \"Required Opponent Traits\": (\n                        <div>\n                            {mergeElements(\n                                buff.ckOpIndv.map(\n                                    trait => <TraitDescriptor region={this.props.region} trait={trait}/>\n                                ),\n                                ' '\n                            )}\n                        </div>\n                    )\n                }}/>\n\n                <h3>Related Functions</h3>\n                {buff.reverseFunctions.map((func, index) => {\n                    return (\n                        <p key={index}>\n                            <FuncDescriptor region={this.props.region} func={func}/>\n                        </p>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default BuffPage;\n"],"sourceRoot":""}