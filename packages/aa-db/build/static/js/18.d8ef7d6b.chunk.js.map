{"version":3,"sources":["Component/SearchableSelect.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Descriptor/BuffDescription.tsx","../node_modules/react-bootstrap/esm/Table.js","Page/BuffsPage.tsx"],"names":["SearchableSelect","props","state","ref","React","createRef","selected","focused","results","this","setState","undefined","current","clear","value","description","labels","get","disableLabelStyling","label","getDescription","hideAll","getOption","concat","options","map","length","onChange","id","getOptions","placeholder","ignoreDiacritics","maxResults","onBlur","resetInput","selectOption","onFocus","hideReset","className","onClick","e","preventDefault","clearSelection","onMouseDown","icon","faTimes","Component","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","BuffDescription","buff","descriptor","BuffDescriptor","describe","to","region","location","Description","renderAsString","Table","forwardRef","_ref","bsPrefix","striped","bordered","borderless","hover","size","variant","responsive","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","stateCache","Map","buffDescriptions","values","Buff","BuffType","type","describeType","BuffsPage","searching","buffs","Manager","setRegion","set","name","alert","Api","searchBuffs","error","onSubmit","ev","search","Group","Label","Control","faSearch","index","reverse","nice","function"],"mappings":"6MA+BMA,G,yDACF,WAAYC,GAAmB,IAAD,8BAC1B,cAAMA,IAEDC,MAAQ,CACTC,IAAKC,IAAMC,YACXC,SAAUL,EAAMK,SAChBC,SAAS,EACTC,SAAS,GAPa,E,uLAYpBC,KAAKC,SAAS,CAACJ,cAAUK,EAAWH,SAAS,I,OACnDC,KAAKP,MAAMC,IAAIS,QAAQC,Q,2IAGJC,GACnB,QAAcH,IAAVG,EACA,MAAO,MAEX,IAAMC,EAAcN,KAAKR,MAAMe,OAAOC,IAAIH,GAE1C,OAAIL,KAAKR,MAAMiB,oBACPH,IAGoB,kBAAVD,EAAqBA,EAAQ,WAGxCC,EAAW,UACTA,EADS,cACQD,GADR,WAERA,EAFQ,O,gCAKJA,GAGd,MAAO,CAACK,MAFMV,KAAKW,eAAeN,GAEnBA,W,mCAGgB,IAAD,OAC9B,OAAQL,KAAKR,MAAMoB,QAAU,GAAK,CAACZ,KAAKa,cACnCC,OACGd,KAAKR,MAAMuB,QAAQC,KAAI,SAAAX,GAAK,OAAI,EAAKQ,UAAUR,S,mCAKvDL,KAAKC,SAAS,CAACH,SAAS,EAAOC,SAAS,M,4EAGjBgB,G,0EACA,IAAnBA,EAAQE,O,gBACRjB,KAAKC,SAAS,CAACF,SAAS,I,6BAElBF,EAAWkB,EAAQ,GAAGV,M,SAEtBL,KAAKC,SAAS,CAACJ,WAAUE,SAAS,I,OACxCC,KAAKR,MAAM0B,SAASrB,G,sIAIlB,IAAD,SACL,OACI,kBAAC,IAAD,CAAWH,IAAKM,KAAKP,MAAMC,IAChByB,GAAInB,KAAKR,MAAM2B,GACfJ,QAASf,KAAKoB,aACdC,YAAarB,KAAKW,eAAeX,KAAKP,MAAMI,UAC5CA,SAAUG,KAAKP,MAAMK,SAAWE,KAAKP,MAAMM,QAAU,CAACC,KAAKa,UAAUb,KAAKP,MAAMI,WAAa,GAC7FyB,kBAAkB,EAClBC,WAAU,UAAEvB,KAAKR,MAAM+B,kBAAb,QAA2B,IACrCC,OAAQ,WACJ,EAAKC,cAETP,SAAU,SAACrB,GACP,EAAK6B,aAAa7B,IAEtB8B,QAAS,WACL,EAAK1B,SAAS,CAACH,SAAS,MAGlCE,KAAKR,MAAMoC,UAAY,KACpB,4BAAQC,UAAU,0BACVC,QAAS,SAAAC,GACLA,EAAEC,iBACF,EAAKC,kBAETC,YAAa,SAAAH,GAETA,EAAEC,mBAEV,kBAAC,IAAD,CAAiBG,KAAMC,Y,GA5FbzC,IAAM0C,YAoGzB9C,O,uDCnIA,SAAS+C,EAAgBC,EAAKC,EAAKnC,GAYhD,OAXImC,KAAOD,EACTE,OAAOC,eAAeH,EAAKC,EAAK,CAC9BnC,MAAOA,EACPsC,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIC,GAAOnC,EAGNkC,ECVT,SAASO,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAU3C,OAAQ0C,IAAK,CACzC,IAAIE,EAAyB,MAAhBD,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOoB,IAAS,GAAMC,SAAQ,SAAUtB,GAC9C,EAAekB,EAAQlB,EAAKqB,EAAOrB,OAE5BC,OAAOsB,0BAChBtB,OAAOuB,iBAAiBN,EAAQjB,OAAOsB,0BAA0BF,IAEjEf,EAAQL,OAAOoB,IAASC,SAAQ,SAAUtB,GACxCC,OAAOC,eAAegB,EAAQlB,EAAKC,OAAOa,yBAAyBO,EAAQrB,OAKjF,OAAOkB,E,2JCrBHO,E,uKAQE,IAAMC,EAAOlE,KAAKR,MAAM0E,KACpBC,EAAaC,IAAeC,SAASrE,KAAKR,MAAM0E,MAEpD,OACI,kBAAC,IAAD,CAAMI,GAAE,WAAMtE,KAAKR,MAAM+E,OAAjB,iBAAgCL,EAAK/C,KAA7C,IAEK+C,EAAK/B,KAAO,kBAAC,IAAD,CAAUqC,SAAUN,EAAK/B,YAAUjC,EAC/CgE,EAAK/B,KAAO,SAAMjC,EAClBuE,IAAYC,eAAeP,GAJhC,Q,sCAXcD,GAClB,IAAMC,EAAaC,IAAeC,SAASH,GAE3C,MAAO,IAAMO,IAAYC,eAAeP,GAAc,Q,GAJhCxE,IAAM0C,WAuBrB4B,O,iCCnCf,yDAKIU,EAAQhF,IAAMiF,YAAW,SAAUC,EAAMnF,GAC3C,IAAIoF,EAAWD,EAAKC,SAChBjD,EAAYgD,EAAKhD,UACjBkD,EAAUF,EAAKE,QACfC,EAAWH,EAAKG,SAChBC,EAAaJ,EAAKI,WAClBC,EAAQL,EAAKK,MACbC,EAAON,EAAKM,KACZC,EAAUP,EAAKO,QACfC,EAAaR,EAAKQ,WAClB7F,EAAQ8F,YAA8BT,EAAM,CAAC,WAAY,YAAa,UAAW,WAAY,aAAc,QAAS,OAAQ,UAAW,eAEvIU,EAAoBC,YAAmBV,EAAU,SACjDW,EAAUC,IAAW7D,EAAW0D,EAAmBH,GAAWG,EAAoB,IAAMH,EAASD,GAAQI,EAAoB,IAAMJ,EAAMJ,GAAWQ,EAAoB,WAAYP,GAAYO,EAAoB,YAAaN,GAAcM,EAAoB,cAAeL,GAASK,EAAoB,UAC/SI,EAAqBhG,IAAMiG,cAAc,QAASC,YAAS,GAAIrG,EAAO,CACxEqC,UAAW4D,EACX/F,IAAKA,KAGP,GAAI2F,EAAY,CACd,IAAIS,EAAkBP,EAAoB,cAM1C,MAJ0B,kBAAfF,IACTS,EAAkBA,EAAkB,IAAMT,GAGxB1F,IAAMiG,cAAc,MAAO,CAC7C/D,UAAWiE,GACVH,GAGL,OAAOA,KAEMhB,O,2OCxBXoB,EAAa,IAAIC,IAAoB,IAkBnCC,EAAmB,IAAID,IACzBvD,OAAOyD,OAAOC,IAAKC,UAAUpF,KAAI,SAAAqF,GAC7B,MAAO,CAACA,EAAMjC,IAAekC,aAAaD,QAI5CE,E,kDACF,WAAY/G,GAAgB,IAAD,gCACvB,cAAMA,IAEDC,MAAL,UAAasG,EAAWvF,IAAIhB,EAAM+E,eAAlC,QAA6C,CACzCiC,WAAW,EACXC,MAAO,IAGXC,IAAQC,UAAU,EAAKnH,MAAM+E,QARN,E,iEAYvBwB,EAAWa,IAAI5G,KAAKR,MAAM+E,OAA1B,eAAsCvE,KAAKP,U,kJAKtCO,KAAKP,MAAMoH,MAAS7G,KAAKP,MAAM4G,K,uBAChCrG,KAAKC,SAAS,CAACwG,MAAO,KACtBK,MAAM,8C,mDAKA9G,KAAKC,SAAS,CAACuG,WAAW,EAAMC,MAAO,K,uBAEzBM,IAAIC,YACpBhH,KAAKP,MAAMoH,KACX7G,KAAKP,MAAM4G,M,OAFTI,E,OAKNzG,KAAKC,SAAS,CAACuG,WAAW,EAAOC,U,kDAEjCzG,KAAKC,SAAS,CACVgH,MAAM,EAAD,K,+IAKP,IAAD,SACL,OAAIjH,KAAKP,MAAMwH,MACJ,kBAAC,IAAD,CAAaA,MAAOjH,KAAKP,MAAMwH,QAGtC,6BACKjH,KAAKP,MAAM+G,UAAY,kBAAC,IAAD,MAAa,KAErC,4CAEA,0BAAMU,SAAU,SAACC,GACbA,EAAGnF,iBACH,EAAKoF,WAEL,kBAAC,IAAKC,MAAN,KACI,kBAAC,IAAKC,MAAN,aACA,kBAAC,IAAKC,QAAN,CAAclH,MAAK,UAAEL,KAAKP,MAAMoH,YAAb,QAAqB,GAC1B3F,SAAU,SAACiG,GACP,EAAKlH,SAAS,CAAC4G,KAAMM,EAAGzD,OAAOrD,YAGrD,kBAAC,IAAKgH,MAAN,KACI,kBAAC,IAAKC,MAAN,aACA,kBAAC,IAAD,CAAiCnG,GAAG,kBACHJ,QAAS0B,OAAOyD,OAAOC,IAAKC,UAC5B7F,OAAQ0F,EACRpG,SAAUG,KAAKP,MAAM4G,KACrBnF,SAAU,SAACb,GACP,EAAKJ,SAAS,CAACoG,KAAMhG,QAG9D,kBAAC,IAAD,CAAQ+E,QAAS,UAAWtD,QAAS,kBAAM,EAAKsF,WAAhD,SAEK,IACD,kBAAC,IAAD,CAAiBjF,KAAMqF,QAI/B,6BAEA,kBAAC,IAAD,CAAOnC,YAAU,GACb,+BACA,4BACI,iCACA,oCACA,6CAGJ,+BACCrF,KAAKP,MAAMgH,MAAMzF,KAAI,SAACkD,EAAMuD,GAAW,IAAD,MACnC,OACI,wBAAIjF,IAAKiF,GACL,4BAAKvD,EAAK/C,IACV,4BACI,kBAAC,IAAD,CAAiBoD,OAAQ,EAAK/E,MAAM+E,OAAQL,KAAMA,KAEtD,6BACK,oBAACA,EAAKwD,eAAN,iBAAC,EAAcC,YAAf,aAAC,EAAoBC,gBAArB,QAAiC,IAAI3G,mB,GAjGlDtB,IAAM0C,WA6GfkE","file":"static/js/18.d8ef7d6b.chunk.js","sourcesContent":["import {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React, {RefObject} from \"react\";\nimport {Typeahead} from \"react-bootstrap-typeahead\";\n\nimport \"./SearchableSelect.css\";\n\ninterface Option<T> {\n    label: string,\n    value?: T,\n}\n\ninterface IProps<T> {\n    id: string,\n    options: T[],\n    labels: Map<T, string>,\n    onChange: Function,\n    selected?: T,\n    hideAll?: boolean,\n    hideReset?: boolean,\n    disableLabelStyling?: boolean,\n    maxResults?: number,\n}\n\ninterface IState<T> {\n    ref: RefObject<any>,\n    selected?: T,\n    focused: boolean,\n    results: boolean,\n}\n\nclass SearchableSelect<T> extends React.Component<IProps<T>, IState<T>> {\n    constructor(props: IProps<T>) {\n        super(props);\n\n        this.state = {\n            ref: React.createRef(),\n            selected: props.selected,\n            focused: false,\n            results: false,\n        };\n    }\n\n    private async clearSelection() {\n        await this.setState({selected: undefined, results: true});\n        this.state.ref.current.clear();\n    }\n\n    private getDescription(value?: T): string {\n        if (value === undefined)\n            return 'All';\n\n        const description = this.props.labels.get(value);\n\n        if (this.props.disableLabelStyling) {\n            if (description)\n                return description;\n\n            return typeof value === 'string' ? value : 'Unknown';\n        }\n\n        return description\n            ? `${description} - ${value}`\n            : `(${value})`;\n    }\n\n    private getOption(value?: T): Option<T> {\n        const label = this.getDescription(value);\n\n        return {label, value};\n    }\n\n    private getOptions(): Option<T>[] {\n        return (this.props.hideAll ? [] : [this.getOption()])\n            .concat(\n                this.props.options.map(value => this.getOption(value))\n            );\n    }\n\n    private resetInput() {\n        this.setState({focused: false, results: false});\n    }\n\n    private async selectOption(options: Option<T>[]) {\n        if (options.length === 0) {\n            this.setState({results: false});\n        } else {\n            const selected = options[0].value;\n\n            await this.setState({selected, results: true});\n            this.props.onChange(selected);\n        }\n    }\n\n    render() {\n        return (\n            <Typeahead ref={this.state.ref}\n                       id={this.props.id}\n                       options={this.getOptions()}\n                       placeholder={this.getDescription(this.state.selected)}\n                       selected={this.state.focused && this.state.results ? [this.getOption(this.state.selected)] : []}\n                       ignoreDiacritics={true}\n                       maxResults={this.props.maxResults ?? 1000}\n                       onBlur={() => {\n                           this.resetInput();\n                       }}\n                       onChange={(selected) => {\n                           this.selectOption(selected);\n                       }}\n                       onFocus={() => {\n                           this.setState({focused: true});\n                       }}>\n\n                {this.props.hideReset ? null : (\n                    <button className='searchable-select-clear'\n                            onClick={e => {\n                                e.preventDefault();\n                                this.clearSelection();\n                            }}\n                            onMouseDown={e => {\n                                // Prevent input from losing focus.\n                                e.preventDefault();\n                            }}>\n                        <FontAwesomeIcon icon={faTimes}/>\n                    </button>\n                )}\n            </Typeahead>\n        );\n    }\n}\n\nexport default SearchableSelect;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import {Buff, Region} from \"@atlasacademy/api-connector\";\nimport {BuffDescriptor} from \"@atlasacademy/api-descriptor\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport Description from \"./Description\";\n\ninterface IProps {\n    region: Region;\n    buff: Buff.Buff;\n}\n\nclass BuffDescription extends React.Component<IProps> {\n    static renderAsString(buff: Buff.Buff): string {\n        const descriptor = BuffDescriptor.describe(buff);\n\n        return \"[\" + Description.renderAsString(descriptor) + \"]\";\n    }\n\n    render() {\n        const buff = this.props.buff,\n            descriptor = BuffDescriptor.describe(this.props.buff);\n\n        return (\n            <Link to={`/${this.props.region}/buff/${buff.id}`}>\n                [\n                {buff.icon ? <BuffIcon location={buff.icon}/> : undefined}\n                {buff.icon ? ' ' : undefined}\n                {Description.renderAsString(descriptor)}\n                ]\n            </Link>\n        );\n    }\n}\n\nexport default BuffDescription;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import {Buff, Region} from \"@atlasacademy/api-connector\";\nimport {BuffDescriptor} from \"@atlasacademy/api-descriptor\";\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {AxiosError} from \"axios\";\nimport React from \"react\";\nimport {Button, Form, Table} from \"react-bootstrap\";\nimport Api from \"../Api\";\nimport ErrorStatus from \"../Component/ErrorStatus\";\nimport Loading from \"../Component/Loading\";\nimport SearchableSelect from \"../Component/SearchableSelect\";\nimport BuffDescription from \"../Descriptor/BuffDescription\";\nimport Manager from \"../Setting/Manager\";\n\nlet stateCache = new Map<Region, IState>([]);\n\ninterface ChangeEvent extends React.ChangeEvent<HTMLInputElement> {\n\n}\n\ninterface IProps {\n    region: Region;\n}\n\ninterface IState {\n    error?: AxiosError;\n    searching: boolean;\n    buffs: Buff.Buff[];\n    name?: string;\n    type?: Buff.BuffType;\n}\n\nconst buffDescriptions = new Map<Buff.BuffType, string>(\n    Object.values(Buff.BuffType).map(type => {\n        return [type, BuffDescriptor.describeType(type)];\n    })\n);\n\nclass BuffsPage extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = stateCache.get(props.region) ?? {\n            searching: false,\n            buffs: []\n        };\n\n        Manager.setRegion(this.props.region);\n    }\n\n    componentDidUpdate() {\n        stateCache.set(this.props.region, {...this.state});\n    }\n\n    private async search() {\n        // no filter set\n        if (!this.state.name && !this.state.type) {\n            this.setState({buffs: []});\n            alert('Please refine the results before searching');\n            return;\n        }\n\n        try {\n            await this.setState({searching: true, buffs: []});\n\n            const buffs = await Api.searchBuffs(\n                this.state.name,\n                this.state.type\n            );\n\n            this.setState({searching: false, buffs});\n        } catch (e) {\n            this.setState({\n                error: e\n            });\n        }\n    }\n\n    render() {\n        if (this.state.error)\n            return <ErrorStatus error={this.state.error}/>;\n\n        return (\n            <div>\n                {this.state.searching ? <Loading/> : null}\n\n                <h1>Buffs Search</h1>\n\n                <form onSubmit={(ev: React.FormEvent) => {\n                    ev.preventDefault();\n                    this.search();\n                }}>\n                    <Form.Group>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control value={this.state.name ?? ''}\n                                      onChange={(ev: ChangeEvent) => {\n                                          this.setState({name: ev.target.value});\n                                      }}/>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Type</Form.Label>\n                        <SearchableSelect<Buff.BuffType> id='select-BuffType'\n                                                         options={Object.values(Buff.BuffType)}\n                                                         labels={buffDescriptions}\n                                                         selected={this.state.type}\n                                                         onChange={(value?: Buff.BuffType) => {\n                                                             this.setState({type: value});\n                                                         }}/>\n                    </Form.Group>\n                    <Button variant={'primary'} onClick={() => this.search()}>\n                        Search\n                        {' '}\n                        <FontAwesomeIcon icon={faSearch}/>\n                    </Button>\n                </form>\n\n                <hr/>\n\n                <Table responsive>\n                    <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Buff</th>\n                        <th>Usage Count</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.buffs.map((buff, index) => {\n                        return (\n                            <tr key={index}>\n                                <td>{buff.id}</td>\n                                <td>\n                                    <BuffDescription region={this.props.region} buff={buff}/>\n                                </td>\n                                <td>\n                                    {(buff.reverse?.nice?.function ?? []).length}\n                                </td>\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default BuffsPage;\n"],"sourceRoot":""}