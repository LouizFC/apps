{"version":3,"sources":["Helper/OutputHelper.tsx","Api/ResultCache.tsx","Api/Connection.tsx","Descriptor/TraitDescriptor.tsx","Api/Data/Buff.tsx","Component/BuffIcon.tsx","Descriptor/BuffDescriptor.tsx"],"names":["asPercent","value","pow","parseInt","decimal","Math","formatNumber","String","replace","handleNewLine","text","mergeElements","split","joinElements","elements","separator","parts","pushElement","element","undefined","length","previous","toString","push","forEach","index","seperator","Fragment","map","key","ResultCache","cache","Map","pending","pendingCatches","fetcher","duration","this","get","Promise","resolve","callbacks","reject","set","call","then","callback","delete","window","setTimeout","catch","error","host","fetch","endpoint","a","axios","response","data","buff","commandCode","commandCodes","craftEssence","craftEssenceList","func","mysticCode","mysticCodeList","noblePhantasm","quest","servant","servantList","skill","traitMap","Connection","region","id","language","Manager","query","LanguageOption","ENGLISH","Region","NA","getCommandCodeEssenceList","JP","DEFAULT","jp","na","names","entity","name","getCacheableCraftEssenceList","getCacheableMysticCodeList","phase","source","type","encodeURI","target","team","traitDescriptions","TraitDescriptor","props","state","trait","setState","getDescription","React","Component","BuffType","BuffIcon","alt","src","location","style","height","verticalAlign","upDownBuffs","up","ADD_MAXHP","down","SUB_MAXHP","description","UP_ATK","DOWN_ATK","UP_CHAGETD","UP_COMMANDATK","DOWN_COMMANDATK","UP_CRITICALDAMAGE","DOWN_CRITICALDAMAGE","UP_CRITICALPOINT","DOWN_CRITICALPOINT","UP_CRITICALRATE","DOWN_CRITICALRATE","UP_CRITICAL_RATE_DAMAGE_TAKEN","DOWN_CRITICAL_RATE_DAMAGE_TAKEN","UP_DAMAGE","DOWN_DAMAGE","UP_DAMAGEDROPNP","DOWN_DAMAGEDROPNP","UP_DEFENCE","DOWN_DEFENCE","UP_DEFENCECOMMANDALL","DOWN_DEFENCECOMMANDALL","UP_DROPNP","DOWN_DROPNP","UP_FUNC_HP_REDUCE","DOWN_FUNC_HP_REDUCE","UP_GRANT_INSTANTDEATH","DOWN_GRANT_INSTANTDEATH","UP_GRANTSTATE","DOWN_GRANTSTATE","UP_NONRESIST_INSTANTDEATH","UP_NPDAMAGE","DOWN_NPDAMAGE","UP_SPECIALDEFENCE","DOWN_SPECIALDEFENCE","UP_STARWEIGHT","DOWN_STARWEIGHT","UP_TOLERANCE","DOWN_TOLERANCE","UP_TOLERANCE_SUBSTATE","DOWN_TOLERANCE_SUBSTATE","typeDescriptions","AVOID_INSTANTDEATH","AVOID_STATE","ADD_DAMAGE","ADD_INDIVIDUALITY","AVOIDANCE","COMMANDCODEATTACK_FUNCTION","BREAK_AVOIDANCE","DELAY_FUNCTION","DONOT_NOBLE","DONOT_NOBLE_COND_MISMATCH","DONOT_RECOVERY","DONOT_SELECT_COMMANDCARD","DONOT_SKILL","FIELD_INDIVIDUALITY","FIX_COMMANDCARD","GUTS","INVINCIBLE","MULTIATTACK","PIERCE_INVINCIBLE","REGAIN_HP","REGAIN_NP","REGAIN_STAR","SELFTURNEND_FUNCTION","SUB_SELFDAMAGE","TD_TYPE_CHANGE","UP_HATE","BuffDescriptor","getTraitFilters","traits","ckSelfIndv","filter","indexOf","cards","hasApplicableTrait","join","ckOpIndv","traitIds","vals","x","traitId","has","isUpDownBuff","getUpDownDescription","getTraitFilterAppend","UP_COMMANDALL","getCommandCardTypes","getTraitFilterAppendWithoutCards","DOWN_COMMANDALL","ATTACK_FUNCTION","COMMANDATTACK_FUNCTION","COMMANDATTACK_BEFORE_FUNCTION","DAMAGE_FUNCTION","DEAD_FUNCTION","NPATTACK_PREV_BUFF","hasTypeDescription","getTypeDescription","hasTraitDescription","getTraitDescription","to","icon","getEffectiveTargetsDescriptions"],"mappings":"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","file":"static/js/1.90b345ae.chunk.js","sourcesContent":["import React from \"react\";\n\nexport type Renderable = (\n    JSX.Element\n    | string\n    | number\n    | undefined\n    )\n\nexport function asPercent(value: number | string | undefined, pow: number): string {\n    if (typeof value === \"string\")\n        return asPercent(parseInt(value), pow);\n\n    const decimal = (value ?? 0) / Math.pow(10, pow);\n\n    return `${decimal}%`;\n}\n\nexport function formatNumber(value: number): string {\n    return String(value).replace(/(.)(?=(\\d{3})+$)/g, '$1,');\n}\n\nexport function handleNewLine(text?: string): Renderable {\n    if (!text)\n        return \"\";\n\n    return (\n        <span>\n            {mergeElements(text.split(\"\\n\"), <br/>)}\n        </span>\n    );\n}\n\nexport function joinElements(elements: Renderable[], separator: Renderable): Renderable[] {\n    const parts: Renderable[] = [],\n        pushElement = function (element: Renderable) {\n            if (element === undefined)\n                return;\n\n            if (typeof element === 'object') {\n                parts.push(element);\n                return;\n            }\n\n            if (parts.length === 0) {\n                parts.push(element.toString());\n                return;\n            }\n\n            const previous = parts[parts.length - 1];\n            if (typeof previous !== 'string') {\n                parts.push(element.toString());\n                return;\n            }\n\n            parts[parts.length - 1] = previous + element.toString();\n        };\n\n    elements.forEach((element, index) => {\n        if (index > 0)\n            pushElement(separator);\n\n        pushElement(element);\n    });\n\n    return parts;\n}\n\nexport function mergeElements(elements: Renderable[], seperator: Renderable): Renderable {\n    return <React.Fragment>\n        {joinElements(elements, seperator).map((element, index) => {\n            return <React.Fragment key={index}>{element}</React.Fragment>;\n        })}\n    </React.Fragment>\n}\n","class ResultCache<K, V> {\n    private cache = new Map<K, V>();\n    private pending = new Map<K, Function[]>();\n    private pendingCatches = new Map<K, Function[]>();\n\n    get(key: K, fetcher: Function, duration: number | null): Promise<V> {\n        const value = this.cache.get(key);\n        if (value !== undefined) {\n            return new Promise<V>(resolve => {\n                resolve(value);\n            });\n        }\n\n        const callbacks = this.pending.get(key);\n        if (callbacks !== undefined) {\n            return new Promise<V>((resolve, reject) => {\n                callbacks.push(resolve);\n\n                const catches = this.pendingCatches.get(key) ?? [];\n                catches.push(reject);\n            });\n        }\n\n        this.pending.set(key, []);\n        this.pendingCatches.set(key, []);\n        return new Promise<V>((resolve, reject) => {\n            fetcher\n                .call(null)\n                .then((value: V) => {\n                    const callbacks = this.pending.get(key) ?? [];\n\n                    callbacks.forEach(callback => {\n                        callback.call(null, value);\n                    });\n\n                    this.cache.set(key, value);\n                    this.pending.delete(key);\n                    this.pendingCatches.delete(key);\n\n                    if (duration !== null) {\n                        window.setTimeout(() => {\n                            this.cache.delete(key);\n                        }, duration);\n                    }\n\n                    resolve(value);\n                })\n                .catch((error: any) => {\n                    const callbacks = this.pendingCatches.get(key) ?? [];\n\n                    callbacks.forEach(callback => {\n                        callback.call(null, error);\n                    });\n\n                    this.pending.delete(key);\n                    this.pendingCatches.delete(key);\n\n                    reject(error);\n                });\n        });\n    }\n}\n\nexport default ResultCache;\n","import axios from \"axios\";\nimport Manager from \"../Setting/Manager\";\nimport {LanguageOption} from \"../Setting/Option\";\nimport BasicListEntity from \"./Data/BasicListEntity\";\nimport Buff, {BuffType} from \"./Data/Buff\";\nimport CommandCode from \"./Data/CommandCode\";\nimport CraftEssence from \"./Data/CraftEssence\";\nimport Func, {FuncTargetTeam, FuncTargetType, FuncType} from \"./Data/Func\";\nimport MysticCode from \"./Data/MysticCode\";\nimport NoblePhantasm from \"./Data/NoblePhantasm\";\nimport Quest from \"./Data/Quest\";\nimport Region from \"./Data/Region\";\nimport Servant from \"./Data/Servant\";\nimport Skill from \"./Data/Skill\";\nimport TraitMap from \"./Data/TraitMap\";\nimport ResultCache from \"./ResultCache\";\n\nconst host = 'https://api.atlasacademy.io',\n    cacheDuration = 20 * 1000,\n    fetch = async function <T>(endpoint: string): Promise<T> {\n        const response = await axios.get<T>(endpoint);\n\n        return response.data;\n    },\n    cache = {\n        buff: new ResultCache<string, Buff>(),\n        commandCode: new ResultCache<string, CommandCode>(),\n        commandCodes: new ResultCache<Region, CommandCode[]>(),\n        craftEssence: new ResultCache<string, CraftEssence>(),\n        craftEssenceList: new ResultCache<Region, BasicListEntity[]>(),\n        func: new ResultCache<string, Func>(),\n        mysticCode: new ResultCache<string, MysticCode>(),\n        mysticCodeList: new ResultCache<Region, MysticCode[]>(),\n        noblePhantasm: new ResultCache<string, NoblePhantasm>(),\n        quest: new ResultCache<string, Quest>(),\n        servant: new ResultCache<string, Servant>(),\n        servantList: new ResultCache<string, BasicListEntity[]>(),\n        skill: new ResultCache<string, Skill>(),\n        traitMap: new ResultCache<Region, TraitMap>(),\n    };\n\nclass Connection {\n    static buff(region: Region, id: number): Promise<Buff> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.buff.get(\n            key,\n            () => {\n                let query = '?reverse=true&reverseDepth=skillNp' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Buff>(`${host}/nice/${region}/buff/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static commandCode(region: Region, id: number): Promise<CommandCode> {\n        const key = `${region}-${id}`;\n\n        return cache.commandCode.get(\n            key,\n            () => {\n                return fetch<CommandCode>(`${host}/nice/${region}/CC/${id}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async commandCodeList(region: Region): Promise<CommandCode[]> {\n        if (region === Region.NA) {\n            return Connection.getCommandCodeEssenceList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCommandCodeEssenceList(Region.JP);\n        }\n\n        const jp = await Connection.getCommandCodeEssenceList(Region.JP),\n            na = await Connection.getCommandCodeEssenceList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static craftEssence(region: Region, id: number): Promise<CraftEssence> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.craftEssence.get(\n            key,\n            () => {\n                let query = '?lore=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Servant>(`${host}/nice/${region}/equip/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async craftEssenceList(region: Region): Promise<BasicListEntity[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableCraftEssenceList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableCraftEssenceList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableCraftEssenceList(Region.JP),\n            na = await Connection.getCacheableCraftEssenceList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<BasicListEntity>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static func(region: Region, id: number): Promise<Func> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.func.get(\n            key,\n            () => {\n                let query = '?reverse=true&reverseDepth=servant' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Func>(`${host}/nice/${region}/function/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static mysticCode(region: Region, id: number): Promise<MysticCode> {\n        const key = `${region}-${id}`;\n\n        return cache.mysticCode.get(\n            key,\n            () => {\n                return fetch<MysticCode>(`${host}/nice/${region}/MC/${id}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async mysticCodeList(region: Region): Promise<MysticCode[]> {\n        if (region === Region.NA) {\n            return Connection.getCacheableMysticCodeList(Region.NA);\n        } else if (region === Region.JP && Manager.language() === LanguageOption.DEFAULT) {\n            return Connection.getCacheableMysticCodeList(Region.JP);\n        }\n\n        const jp = await Connection.getCacheableMysticCodeList(Region.JP),\n            na = await Connection.getCacheableMysticCodeList(Region.NA),\n            names = new Map<number, string>(na.map(entity => [entity.id, entity.name]));\n\n        return jp.map<MysticCode>(entity => {\n            return {\n                ...entity,\n                name: names.get(entity.id) ?? entity.name,\n            };\n        });\n    }\n\n    static noblePhantasm(region: Region, id: number): Promise<NoblePhantasm> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.noblePhantasm.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<NoblePhantasm>(`${host}/nice/${region}/NP/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static quest(region: Region, id: number, phase: number): Promise<Quest> {\n        const key = `${region}-${id}-${phase}`;\n\n        return cache.quest.get(\n            key,\n            () => {\n                return fetch<Quest>(`${host}/nice/${region}/quest/${id}/${phase}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static servant(region: Region, id: number): Promise<Servant> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.servant.get(\n            key,\n            () => {\n                let query = '?lore=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Servant>(`${host}/nice/${region}/servant/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static async servantList(region: Region): Promise<BasicListEntity[]> {\n        const language = Manager.language(),\n            key = `${region}-${language}`;\n\n        let source: string;\n\n        if (region === Region.NA) {\n            source = `${host}/export/NA/basic_servant.json`;\n        } else if (region === Region.JP && language === LanguageOption.DEFAULT) {\n            source = `${host}/export/JP/basic_servant.json`;\n        } else {\n            source = `${host}/export/JP/basic_servant_lang_en.json`;\n        }\n\n        return cache.servantList.get(\n            key,\n            () => {\n                return fetch<BasicListEntity[]>(source);\n            },\n            null\n        );\n    }\n\n    static skill(region: Region, id: number): Promise<Skill> {\n        const language = Manager.language(),\n            key = `${region}-${language}-${id}`;\n\n        return cache.skill.get(\n            key,\n            () => {\n                let query = '?reverse=true' + (\n                    language === LanguageOption.ENGLISH ? '&lang=en' : ''\n                );\n\n                return fetch<Skill>(`${host}/nice/${region}/skill/${id}${query}`);\n            },\n            cacheDuration\n        );\n    }\n\n    static traitMap(region: Region): Promise<TraitMap> {\n        return cache.traitMap.get(\n            region,\n            () => {\n                return fetch<TraitMap>(`${host}/export/${region}/nice_trait.json`);\n            },\n            null\n        );\n    }\n\n    static searchBuffs(region: Region, name?: string, type?: BuffType): Promise<Buff[]> {\n        const language = Manager.language();\n\n        let query = \"?reverse=true\";\n\n        if (language === LanguageOption.ENGLISH)\n            query += \"&lang=en\";\n        if (name)\n            query += \"&name=\" + encodeURI(name);\n        if (type)\n            query += \"&type=\" + type;\n\n        return fetch<Buff[]>(`${host}/nice/${region}/buff/search${query}`);\n    }\n\n    static searchFuncs(region: Region,\n                       text?: string,\n                       type?: FuncType,\n                       target?: FuncTargetType,\n                       team?: FuncTargetTeam): Promise<Func[]> {\n        const language = Manager.language();\n\n        let query = \"?reverse=true\";\n\n        if (language === LanguageOption.ENGLISH)\n            query += \"&lang=en\";\n        if (text)\n            query += \"&popupText=\" + encodeURI(text);\n        if (type)\n            query += \"&type=\" + type;\n        if (target)\n            query += \"&targetType=\" + target;\n        if (team)\n            query += \"&targetTeam=\" + team;\n\n        return fetch<Func[]>(`${host}/nice/${region}/function/search${query}`);\n    }\n\n    private static async getCommandCodeEssenceList(region: Region): Promise<CommandCode[]> {\n        return cache.commandCodes.get(\n            region,\n            () => {\n                return fetch<CommandCode[]>(`${host}/export/${region}/nice_command_code.json`);\n            },\n            null\n        );\n    }\n\n    private static async getCacheableCraftEssenceList(region: Region): Promise<BasicListEntity[]> {\n        return cache.craftEssenceList.get(\n            region,\n            () => {\n                return fetch<BasicListEntity[]>(`${host}/export/${region}/basic_equip.json`);\n            },\n            null\n        );\n    }\n\n    private static async getCacheableMysticCodeList(region: Region): Promise<MysticCode[]> {\n        return cache.mysticCodeList.get(\n            region,\n            () => {\n                return fetch<BasicListEntity[]>(`${host}/export/${region}/nice_mystic_code.json`);\n            },\n            null\n        );\n    }\n}\n\nexport default Connection;\n","import React from \"react\";\nimport Connection from \"../Api/Connection\";\nimport Region from \"../Api/Data/Region\";\nimport Trait from \"../Api/Data/Trait\";\n\nconst traitDescriptions = new Map<number, string>([\n    [1, \"Gender:Male\"],\n    [2, \"Gender:Female\"],\n    [3, \"Gender:Unknown\"],\n    [100, \"Class:Saber\"],\n    [101, \"Class:Lancer\"],\n    [102, \"Class:Archer\"],\n    [103, \"Class:Rider\"],\n    [104, \"Class:Caster\"],\n    [105, \"Class:Assassin\"],\n    [106, \"Class:Berserker\"],\n    [107, \"Class:Shielder\"],\n    [108, \"Class:Ruler\"],\n    [109, \"Class:Alter Ego\"],\n    [110, \"Class:Avenger\"],\n    [111, \"Demon Pillar\"],\n    [112, \"Class:Grand Caster\"],\n    [113, \"Beast I\"],\n    [114, \"Beast II\"],\n    [115, \"Class:Moon Cancer\"],\n    [116, \"Beast IIIR\"],\n    [117, \"Class:Foreigner\"],\n    [118, \"Beast IIIL\"],\n    [119, \"Beast Unknown\"],\n    [200, \"Attribute:Sky\"],\n    [201, \"Attribute:Eart\"],\n    [202, \"Attribute:Human\"],\n    [203, \"Attribute:Star\"],\n    [204, \"Attribute:Beast\"],\n    [300, \"Alignment:Lawful\"],\n    [301, \"Alignment:Chaotic\"],\n    [302, \"Alignment:Neutral\"],\n    [303, \"Alignment:Good\"],\n    [304, \"Alignment:Evil\"],\n    [305, \"Alignment:Balanced\"],\n    [306, \"Alignment:Madness\"],\n    [308, \"Alignment:Summer\"],\n    [1000, \"Servant\"],\n    [1002, \"Undead\"],\n    [1122, \"Shadow Servant\"],\n    [2004, \"Roman\"],\n    [2005, \"Beasts\"],\n    [2019, \"Demonic\"],\n    [2039, \"Near Water\"],\n    [2386, \"Kingprotea: Proliferation\"],\n    [2387, \"Kingprotea: Growth\"],\n    [2466, \"Argonaut\"],\n    [2654, \"Pseudo-Servant\"],\n    [2664, \"Kingprotea: Proliferation NP Defense\"],\n    [3004, \"Buff\"],\n    [3005, \"Debuff\"],\n    [3006, \"Buff:Offensive\"],\n    [3007, \"Buff:Defensive\"],\n    [3011, \"Poison\"],\n    [3012, \"Charm\"],\n    [3015, \"Burn\"],\n    [3021, \"Evade\"],\n    [3026, \"Curse\"],\n    [3047, \"Pigify\"],\n    [4001, \"Card:Arts\"],\n    [4002, \"Card:Buster\"],\n    [4003, \"Card:Quick\"],\n    [4004, \"Card:Extra\"],\n    [4008, \"Player Card\"],\n    [4100, \"Critical Hit\"],\n]);\n\ninterface IProps {\n    region: Region;\n    trait: Trait | number;\n}\n\ninterface IState {\n    id: number;\n    trait?: Trait;\n}\n\nclass TraitDescriptor extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            id: typeof props.trait === \"number\" ? props.trait : props.trait.id,\n            trait: typeof props.trait === \"number\" ? undefined : props.trait,\n        };\n    }\n\n    async componentDidMount() {\n        if (this.state.trait)\n            return;\n\n        const traitMap = await Connection.traitMap(this.props.region);\n        if (traitMap[this.state.id] !== undefined)\n            this.setState({\n                trait: {\n                    id: this.state.id,\n                    name: traitMap[this.state.id]\n                }\n            });\n    }\n\n    private getDescription() : string {\n        let description;\n\n        description = traitDescriptions.get(this.state.id);\n        if (description) {\n            return description;\n        }\n\n        if (this.state.trait && this.state.trait.name !== 'unknown')\n            return this.state.trait.name;\n\n        return `unknown(${this.state.id})`;\n    }\n\n    render() {\n        return (\n            <span>\n                [{this.getDescription()}]\n            </span>\n        );\n    }\n}\n\nexport default TraitDescriptor;\n","import Func from \"./Func\";\nimport Trait from \"./Trait\";\n\nexport enum BuffType {\n    NONE = \"none\",\n    UP_COMMANDATK = \"upCommandatk\",\n    UP_STARWEIGHT = \"upStarweight\",\n    UP_CRITICALPOINT = \"upCriticalpoint\",\n    DOWN_CRITICALPOINT = \"downCriticalpoint\",\n    REGAIN_NP = \"regainNp\",\n    REGAIN_STAR = \"regainStar\",\n    REGAIN_HP = \"regainHp\",\n    REDUCE_HP = \"reduceHp\",\n    UP_ATK = \"upAtk\",\n    DOWN_ATK = \"downAtk\",\n    UP_DAMAGE = \"upDamage\",\n    DOWN_DAMAGE = \"downDamage\",\n    ADD_DAMAGE = \"addDamage\",\n    SUB_DAMAGE = \"subDamage\",\n    UP_NPDAMAGE = \"upNpdamage\",\n    DOWN_NPDAMAGE = \"downNpdamage\",\n    UP_DROPNP = \"upDropnp\",\n    UP_CRITICALDAMAGE = \"upCriticaldamage\",\n    DOWN_CRITICALDAMAGE = \"downCriticaldamage\",\n    UP_SELFDAMAGE = \"upSelfdamage\",\n    DOWN_SELFDAMAGE = \"downSelfdamage\",\n    ADD_SELFDAMAGE = \"addSelfdamage\",\n    SUB_SELFDAMAGE = \"subSelfdamage\",\n    AVOIDANCE = \"avoidance\",\n    BREAK_AVOIDANCE = \"breakAvoidance\",\n    INVINCIBLE = \"invincible\",\n    UP_GRANTSTATE = \"upGrantstate\",\n    DOWN_GRANTSTATE = \"downGrantstate\",\n    UP_TOLERANCE = \"upTolerance\",\n    DOWN_TOLERANCE = \"downTolerance\",\n    AVOID_STATE = \"avoidState\",\n    DONOT_ACT = \"donotAct\",\n    DONOT_SKILL = \"donotSkill\",\n    DONOT_NOBLE = \"donotNoble\",\n    DONOT_RECOVERY = \"donotRecovery\",\n    DISABLE_GENDER = \"disableGender\",\n    GUTS = \"guts\",\n    UP_HATE = \"upHate\",\n    ADD_INDIVIDUALITY = \"addIndividuality\",\n    SUB_INDIVIDUALITY = \"subIndividuality\",\n    UP_DEFENCE = \"upDefence\",\n    DOWN_DEFENCE = \"downDefence\",\n    UP_COMMANDSTAR = \"upCommandstar\",\n    UP_COMMANDNP = \"upCommandnp\",\n    UP_COMMANDALL = \"upCommandall\",\n    DOWN_COMMANDALL = \"downCommandall\",\n    DOWN_STARWEIGHT = \"downStarweight\",\n    REDUCE_NP = \"reduceNp\",\n    DOWN_DROPNP = \"downDropnp\",\n    UP_GAIN_HP = \"upGainHp\",\n    DOWN_GAIN_HP = \"downGainHp\",\n    DOWN_COMMANDATK = \"downCommandatk\",\n    DOWN_COMMANSTAR = \"downCommanstar\",\n    DOWN_COMMANDNP = \"downCommandnp\",\n    UP_CRITICALRATE = \"upCriticalrate\",\n    DOWN_CRITICALRATE = \"downCriticalrate\",\n    PIERCE_INVINCIBLE = \"pierceInvincible\",\n    AVOID_INSTANTDEATH = \"avoidInstantdeath\",\n    UP_RESIST_INSTANTDEATH = \"upResistInstantdeath\",\n    UP_NONRESIST_INSTANTDEATH = \"upNonresistInstantdeath\",\n    DELAY_FUNCTION = \"delayFunction\",\n    REGAIN_NP_USED_NOBLE = \"regainNpUsedNoble\",\n    DEAD_FUNCTION = \"deadFunction\",\n    UP_MAXHP = \"upMaxhp\",\n    DOWN_MAXHP = \"downMaxhp\",\n    ADD_MAXHP = \"addMaxhp\",\n    SUB_MAXHP = \"subMaxhp\",\n    BATTLESTART_FUNCTION = \"battlestartFunction\",\n    WAVESTART_FUNCTION = \"wavestartFunction\",\n    SELFTURNEND_FUNCTION = \"selfturnendFunction\",\n    UP_GIVEGAIN_HP = \"upGivegainHp\",\n    DOWN_GIVEGAIN_HP = \"downGivegainHp\",\n    COMMANDATTACK_FUNCTION = \"commandattackFunction\",\n    DEADATTACK_FUNCTION = \"deadattackFunction\",\n    UP_SPECIALDEFENCE = \"upSpecialdefence\",\n    DOWN_SPECIALDEFENCE = \"downSpecialdefence\",\n    UP_DAMAGEDROPNP = \"upDamagedropnp\",\n    DOWN_DAMAGEDROPNP = \"downDamagedropnp\",\n    ENTRY_FUNCTION = \"entryFunction\",\n    UP_CHAGETD = \"upChagetd\",\n    REFLECTION_FUNCTION = \"reflectionFunction\",\n    UP_GRANT_SUBSTATE = \"upGrantSubstate\",\n    DOWN_GRANT_SUBSTATE = \"downGrantSubstate\",\n    UP_TOLERANCE_SUBSTATE = \"upToleranceSubstate\",\n    DOWN_TOLERANCE_SUBSTATE = \"downToleranceSubstate\",\n    UP_GRANT_INSTANTDEATH = \"upGrantInstantdeath\",\n    DOWN_GRANT_INSTANTDEATH = \"downGrantInstantdeath\",\n    GUTS_RATIO = \"gutsRatio\",\n    DAMAGE_FUNCTION = \"damageFunction\",\n    UP_DEFENCECOMMANDALL = \"upDefencecommandall\",\n    DOWN_DEFENCECOMMANDALL = \"downDefencecommandall\",\n    OVERWRITE_BATTLECLASS = \"overwriteBattleclass\",\n    OVERWRITE_CLASSRELATIO_ATK = \"overwriteClassrelatioAtk\",\n    OVERWRITE_CLASSRELATIO_DEF = \"overwriteClassrelatioDef\",\n    UP_DAMAGE_INDIVIDUALITY = \"upDamageIndividuality\",\n    DOWN_DAMAGE_INDIVIDUALITY = \"downDamageIndividuality\",\n    UP_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"upDamageIndividualityActiveonly\",\n    DOWN_DAMAGE_INDIVIDUALITY_ACTIVEONLY = \"downDamageIndividualityActiveonly\",\n    UP_NPTURNVAL = \"upNpturnval\",\n    DOWN_NPTURNVAL = \"downNpturnval\",\n    MULTIATTACK = \"multiattack\",\n    UP_GIVE_NP = \"upGiveNp\",\n    DOWN_GIVE_NP = \"downGiveNp\",\n    UP_RESISTANCE_DELAY_NPTURN = \"upResistanceDelayNpturn\",\n    DOWN_RESISTANCE_DELAY_NPTURN = \"downResistanceDelayNpturn\",\n    PIERCE_DEFENCE = \"pierceDefence\",\n    UP_GUTS_HP = \"upGutsHp\",\n    DOWN_GUTS_HP = \"downGutsHp\",\n    UP_FUNCGAIN_NP = \"upFuncgainNp\",\n    DOWN_FUNCGAIN_NP = \"downFuncgainNp\",\n    UP_FUNC_HP_REDUCE = \"upFuncHpReduce\",\n    DOWN_FUNC_HP_REDUCE = \"downFuncHpReduce\",\n    UP_DEFENCECOMMAN_DAMAGE = \"upDefencecommanDamage\",\n    DOWN_DEFENCECOMMAN_DAMAGE = \"downDefencecommanDamage\",\n    NPATTACK_PREV_BUFF = \"npattackPrevBuff\",\n    FIX_COMMANDCARD = \"fixCommandcard\",\n    DONOT_GAINNP = \"donotGainnp\",\n    FIELD_INDIVIDUALITY = \"fieldIndividuality\",\n    DONOT_ACT_COMMANDTYPE = \"donotActCommandtype\",\n    UP_DAMAGE_EVENT_POINT = \"upDamageEventPoint\",\n    UP_DAMAGE_SPECIAL = \"upDamageSpecial\",\n    ATTACK_FUNCTION = \"attackFunction\",\n    COMMANDCODEATTACK_FUNCTION = \"commandcodeattackFunction\",\n    DONOT_NOBLE_COND_MISMATCH = \"donotNobleCondMismatch\",\n    DONOT_SELECT_COMMANDCARD = \"donotSelectCommandcard\",\n    DONOT_REPLACE = \"donotReplace\",\n    SHORTEN_USER_EQUIP_SKILL = \"shortenUserEquipSkill\",\n    TD_TYPE_CHANGE = \"tdTypeChange\",\n    OVERWRITE_CLASS_RELATION = \"overwriteClassRelation\",\n    TD_TYPE_CHANGE_ARTS = \"tdTypeChangeArts\",\n    TD_TYPE_CHANGE_BUSTER = \"tdTypeChangeBuster\",\n    TD_TYPE_CHANGE_QUICK = \"tdTypeChangeQuick\",\n    COMMANDATTACK_BEFORE_FUNCTION = \"commandattackBeforeFunction\",\n    GUTS_FUNCTION = \"gutsFunction\",\n    UP_CRITICAL_RATE_DAMAGE_TAKEN = \"upCriticalRateDamageTaken\",\n    DOWN_CRITICAL_RATE_DAMAGE_TAKEN = \"downCriticalRateDamageTaken\",\n    UP_CRITICAL_STAR_DAMAGE_TAKEN = \"upCriticalStarDamageTaken\",\n    DOWN_CRITICAL_STAR_DAMAGE_TAKEN = \"downCriticalStarDamageTaken\",\n}\n\nexport default interface Buff {\n    id: number;\n    name: string;\n    detail: string;\n    icon: string;\n    type: BuffType;\n    vals: Trait[];\n    tvals: Trait[];\n    ckSelfIndv: Trait[];\n    ckOpIndv: Trait[];\n    maxRate: number;\n    reverseFunctions: Func[];\n}\n","import React from \"react\";\n\ninterface IProp {\n    location: string;\n    height?: number;\n}\n\nclass BuffIcon extends React.Component<IProp> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location} style={{\n                height: this.props.height ?? 25,\n                verticalAlign: \"bottom\",\n            }}/>\n        );\n    }\n\n}\n\nexport default BuffIcon;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Buff, {BuffType} from \"../Api/Data/Buff\";\nimport Region from \"../Api/Data/Region\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport {joinElements, mergeElements} from \"../Helper/OutputHelper\";\nimport TraitDescriptor from \"./TraitDescriptor\";\n\nexport const upDownBuffs: { up?: BuffType, down?: BuffType, description: string }[] = [\n    {up: BuffType.ADD_MAXHP, down: BuffType.SUB_MAXHP, description: \"Max HP\"},\n    {up: BuffType.UP_ATK, down: BuffType.DOWN_ATK, description: \"ATK\"},\n    {up: BuffType.UP_CHAGETD, down: undefined, description: \"Overcharge\"},\n    {up: BuffType.UP_COMMANDATK, down: BuffType.DOWN_COMMANDATK, description: \"ATK\"},\n    {up: BuffType.UP_CRITICALDAMAGE, down: BuffType.DOWN_CRITICALDAMAGE, description: \"Critical Damage\"},\n    {up: BuffType.UP_CRITICALPOINT, down: BuffType.DOWN_CRITICALPOINT, description: \"Star Drop Rate\"},\n    {up: BuffType.UP_CRITICALRATE, down: BuffType.DOWN_CRITICALRATE, description: \"Critical Rate\"},\n    {\n        up: BuffType.UP_CRITICAL_RATE_DAMAGE_TAKEN,\n        down: BuffType.DOWN_CRITICAL_RATE_DAMAGE_TAKEN,\n        description: \"Critical Rate Taken\"\n    },\n    {up: BuffType.UP_DAMAGE, down: BuffType.DOWN_DAMAGE, description: \"SP.DMG\"},\n    {up: BuffType.UP_DAMAGEDROPNP, down: BuffType.DOWN_DAMAGEDROPNP, description: \"NP Gain When Damaged\"},\n    {up: BuffType.UP_DEFENCE, down: BuffType.DOWN_DEFENCE, description: \"DEF\"},\n    {up: BuffType.UP_DEFENCECOMMANDALL, down: BuffType.DOWN_DEFENCECOMMANDALL, description: \"Resistance\"},\n    {up: BuffType.UP_DROPNP, down: BuffType.DOWN_DROPNP, description: \"NP Gain\"},\n    {up: BuffType.UP_FUNC_HP_REDUCE, down: BuffType.DOWN_FUNC_HP_REDUCE, description: \"DoT Effectiveness\"},\n    {up: BuffType.UP_GRANT_INSTANTDEATH, down: BuffType.DOWN_GRANT_INSTANTDEATH, description: \"Death Chance\"},\n    {up: BuffType.UP_GRANTSTATE, down: BuffType.DOWN_GRANTSTATE, description: \"Buff Chance\"},\n    {up: undefined, down: BuffType.UP_NONRESIST_INSTANTDEATH, description: \"Death Resist\"},\n    {up: BuffType.UP_NPDAMAGE, down: BuffType.DOWN_NPDAMAGE, description: \"NP Damage\"},\n    {up: BuffType.UP_SPECIALDEFENCE, down: BuffType.DOWN_SPECIALDEFENCE, description: \"SP.DEF\"},\n    {up: BuffType.UP_STARWEIGHT, down: BuffType.DOWN_STARWEIGHT, description: \"Star Weight\"},\n    {up: BuffType.UP_TOLERANCE, down: BuffType.DOWN_TOLERANCE, description: \"Debuff Resist\"},\n    {up: BuffType.UP_TOLERANCE_SUBSTATE, down: BuffType.DOWN_TOLERANCE_SUBSTATE, description: \"Buff Removal Resist\"},\n];\n\nexport const traitDescriptions = new Map<number, string>([\n    [3012, 'Charm'],\n    [3015, 'Burn'],\n    [3026, 'Curse'],\n    [3045, 'Stun'],\n]);\n\nexport const typeDescriptions = new Map<BuffType, string>([\n    [BuffType.AVOID_INSTANTDEATH, 'Immune to Death'],\n    [BuffType.AVOID_STATE, 'Immunity'],\n    [BuffType.ADD_DAMAGE, 'Damage Plus'],\n    [BuffType.ADD_INDIVIDUALITY, 'Add Trait'],\n    [BuffType.AVOIDANCE, 'Evade'],\n    [BuffType.COMMANDCODEATTACK_FUNCTION, 'Command Code Effect'],\n    [BuffType.BREAK_AVOIDANCE, 'Sure Hit'],\n    [BuffType.DELAY_FUNCTION, 'Trigger Skill after Duration'],\n    [BuffType.DONOT_NOBLE, 'NP Seal'],\n    [BuffType.DONOT_NOBLE_COND_MISMATCH, 'NP Block if Condition Failed'],\n    [BuffType.DONOT_RECOVERY, 'Recovery Disabled'],\n    [BuffType.DONOT_SELECT_COMMANDCARD, 'Do Not Shuffle In Cards'],\n    [BuffType.DONOT_SKILL, 'Skill Seal'],\n    [BuffType.FIELD_INDIVIDUALITY, 'Change Field Type'],\n    [BuffType.FIX_COMMANDCARD, 'Freeze Command Cards'],\n    [BuffType.GUTS, 'Guts'],\n    [BuffType.INVINCIBLE, 'Invincible'],\n    [BuffType.MULTIATTACK, 'Multiple Hits'],\n    [BuffType.PIERCE_INVINCIBLE, 'Ignore Invincible'],\n    [BuffType.REGAIN_HP, 'HP Per Turn'],\n    [BuffType.REGAIN_NP, 'NP Per Turn'],\n    [BuffType.REGAIN_STAR, 'Stars Per Turn'],\n    [BuffType.SELFTURNEND_FUNCTION, 'Trigger Skill every Turn'],\n    [BuffType.SUB_SELFDAMAGE, 'Damage Cut'],\n    [BuffType.TD_TYPE_CHANGE, 'Change Noble Phantasm'],\n    [BuffType.UP_HATE, 'Taunt'],\n]);\n\ninterface IProps {\n    region: Region;\n    buff: Buff;\n}\n\nclass BuffDescriptor extends React.Component<IProps> {\n    private getTraitFilterAppend(): JSX.Element | undefined {\n        if (!this.getTraitFilters())\n            return undefined;\n\n        return <React.Fragment> for {this.getTraitFilters()}</React.Fragment>;\n    }\n\n    private getTraitFilterAppendWithoutCards(): JSX.Element | undefined {\n        const traits = this.props.buff.ckSelfIndv.filter(\n            trait => [4001, 4002, 4003, 4004].indexOf(trait.id) === -1\n        );\n\n        if (!traits.length)\n            return undefined;\n\n        return (\n            <React.Fragment>\n                {' '}\n                for\n                {' '}\n                {joinElements(\n                    traits.map(\n                        trait => <TraitDescriptor region={this.props.region} trait={trait}/>\n                    ),\n                    ' & '\n                )}\n            </React.Fragment>\n        );\n    }\n\n    private getCommandCardTypes(): string {\n        const cards = [];\n\n        if (this.hasApplicableTrait(4001)) {\n            cards.push('Arts');\n        }\n\n        if (this.hasApplicableTrait(4002)) {\n            cards.push('Buster');\n        }\n\n        if (this.hasApplicableTrait(4003)) {\n            cards.push('Quick');\n        }\n\n        if (this.hasApplicableTrait(4004)) {\n            cards.push('Extra');\n        }\n\n        if (!cards.length) {\n            cards.push('Command Card');\n        }\n\n        return cards.join(' & ');\n    }\n\n    private getEffectiveTargetsDescriptions(): JSX.Element | undefined {\n        const buff = this.props.buff;\n\n        if (!buff.ckOpIndv.length)\n            return undefined;\n\n        return (\n            <React.Fragment>\n                {' vs. '}\n                {joinElements(\n                    buff.ckOpIndv.map(trait => {\n                        return <TraitDescriptor region={this.props.region} trait={trait}/>;\n                    }),\n                    ' & '\n                ).map((element, index) => {\n                    return <React.Fragment key={index}>{element}</React.Fragment>;\n                })}\n            </React.Fragment>\n        );\n    }\n\n    private getTraitDescription(): string {\n        const buff = this.props.buff,\n            traitIds = buff.vals.map(trait => trait.id);\n\n        for (let x in traitIds) {\n            const traitId = traitIds[x],\n                description = traitDescriptions.get(traitId);\n\n            if (description !== undefined)\n                return description;\n        }\n\n        return \"\";\n    }\n\n    private getTraitFilters(): JSX.Element | undefined {\n        if (!this.props.buff.ckSelfIndv.length)\n            return undefined;\n\n        return (\n            <React.Fragment>\n                {mergeElements(\n                    this.props.buff.ckSelfIndv.map(\n                        trait => <TraitDescriptor region={this.props.region} trait={trait}/>\n                    ),\n                    ' & '\n                )}\n            </React.Fragment>\n        );\n    }\n\n    private getTypeDescription(): string {\n        const type = this.props.buff.type;\n\n        return typeDescriptions.get(type) ?? \"\";\n    }\n\n    private getUpDownDescription(): string {\n        const type = this.props.buff.type;\n\n        for (let x in upDownBuffs) {\n            if (upDownBuffs[x].up === type)\n                return `${upDownBuffs[x].description} Up`;\n            if (upDownBuffs[x].down === type)\n                return `${upDownBuffs[x].description} Down`;\n        }\n\n        return \"\";\n    }\n\n    private hasApplicableTrait(id: number): boolean {\n        const buff = this.props.buff;\n\n        return buff.ckSelfIndv.filter(trait => trait.id === id).length > 0;\n    }\n\n    private hasTraitDescription(): boolean {\n        const buff = this.props.buff,\n            traitIds = buff.vals.map(trait => trait.id);\n\n        for (let x in traitIds) {\n            const traitId = traitIds[x],\n                description = traitDescriptions.get(traitId);\n\n            if (description !== undefined)\n                return true;\n        }\n\n        return false;\n    }\n\n    private hasTypeDescription(): boolean {\n        const buff = this.props.buff;\n\n        return typeDescriptions.has(buff.type);\n    }\n\n    private isUpDownBuff(): boolean {\n        const type = this.props.buff.type;\n\n        for (let x in upDownBuffs) {\n            if (upDownBuffs[x].up === type || upDownBuffs[x].down === type)\n                return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const buff = this.props.buff;\n\n        let description: JSX.Element | string = buff.name;\n\n        if (this.isUpDownBuff()) {\n            description = <React.Fragment>\n                {this.getUpDownDescription()}\n                {this.getTraitFilterAppend()}\n            </React.Fragment>\n        } else if (buff.type === BuffType.UP_COMMANDALL) {\n            description = <React.Fragment>\n                {this.getCommandCardTypes()} Up\n                {this.getTraitFilterAppendWithoutCards()}\n            </React.Fragment>\n        } else if (buff.type === BuffType.DOWN_COMMANDALL) {\n            description = <React.Fragment>\n                {this.getCommandCardTypes()} Down\n                {this.getTraitFilterAppendWithoutCards()}\n            </React.Fragment>\n        } else if (buff.type === BuffType.ATTACK_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill on {this.getTraitFilters()} attacks\n            </React.Fragment>;\n        } else if (buff.type === BuffType.COMMANDATTACK_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill on {this.getTraitFilters()} cards\n            </React.Fragment>;\n        } else if (buff.type === BuffType.COMMANDATTACK_BEFORE_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill before {this.getTraitFilters()} cards\n            </React.Fragment>;\n        } else if (buff.type === BuffType.DAMAGE_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill on receiving {this.getTraitFilters()} attacks\n            </React.Fragment>;\n        } else if (buff.type === BuffType.DEAD_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill on death\n                {this.getTraitFilterAppend()}\n            </React.Fragment>;\n        } else if (buff.type === BuffType.NPATTACK_PREV_BUFF) {\n            description = <React.Fragment>\n                Trigger Skill on {this.getTraitFilters()} NP\n            </React.Fragment>;\n        } else if (this.hasTypeDescription()) {\n            description = <React.Fragment>\n                {this.getTypeDescription()}\n                {this.getTraitFilterAppend()}\n            </React.Fragment>;\n        } else if (this.hasTraitDescription()) {\n            description = <React.Fragment>\n                {this.getTraitDescription()}\n                {this.getTraitFilterAppend()}\n            </React.Fragment>;\n        }\n\n        return (\n            <Link to={`/${this.props.region}/buff/${buff.id}`}>\n                [\n                <BuffIcon location={buff.icon}/>\n                {' '}\n                {description}\n                {this.getEffectiveTargetsDescriptions()}\n                ]\n            </Link>\n        );\n    }\n}\n\nexport default BuffDescriptor;\n"],"sourceRoot":""}