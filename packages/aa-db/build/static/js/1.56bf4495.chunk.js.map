{"version":3,"sources":["Helper/OutputHelper.tsx","Descriptor/TraitDescriptor.tsx","Component/BuffIcon.tsx","Descriptor/BuffDescriptor.tsx","Helper/FuncHelper.tsx","Descriptor/Func/FuncDescriptorSections.tsx","Descriptor/Func/handleAmountSection.tsx","Descriptor/FuncDescriptor.tsx","Descriptor/Func/handleTeamSection.tsx","Descriptor/Func/handleChanceSection.tsx","Descriptor/Func/handleAffectsSection.tsx","Descriptor/Func/handleDurationSection.tsx","Descriptor/Func/handleScalingSection.tsx","Descriptor/SkillDescriptor.tsx","Descriptor/FuncValueDescriptor.tsx","Descriptor/BuffValueDescriptor.tsx","Descriptor/Func/handleActionSection.tsx","Descriptor/SkillReferenceDescriptor.tsx","Descriptor/Func/handleTargetSection.tsx"],"names":["asPercent","value","pow","parseInt","decimal","Math","formatNumber","String","replace","handleNewLine","text","mergeElements","split","joinElements","elements","separator","parts","pushElement","element","undefined","length","previous","toString","push","forEach","index","seperator","Fragment","map","key","traitDescriptions","Map","TraitDescriptor","props","state","id","trait","this","Api","traitList","i","setState","get","name","getDescription","React","Component","BuffIcon","alt","src","location","style","height","verticalAlign","upDownBuffs","up","BuffType","ADD_MAXHP","down","SUB_MAXHP","description","UP_ATK","DOWN_ATK","UP_CHAGETD","UP_COMMANDATK","DOWN_COMMANDATK","UP_CRITICALDAMAGE","DOWN_CRITICALDAMAGE","UP_CRITICALPOINT","DOWN_CRITICALPOINT","UP_CRITICALRATE","DOWN_CRITICALRATE","UP_CRITICAL_RATE_DAMAGE_TAKEN","DOWN_CRITICAL_RATE_DAMAGE_TAKEN","UP_DAMAGE","DOWN_DAMAGE","UP_DAMAGEDROPNP","DOWN_DAMAGEDROPNP","UP_DEFENCE","DOWN_DEFENCE","UP_DEFENCECOMMANDALL","DOWN_DEFENCECOMMANDALL","UP_DROPNP","DOWN_DROPNP","UP_FUNC_HP_REDUCE","DOWN_FUNC_HP_REDUCE","UP_GRANT_INSTANTDEATH","DOWN_GRANT_INSTANTDEATH","UP_GRANTSTATE","DOWN_GRANTSTATE","UP_NONRESIST_INSTANTDEATH","UP_NPDAMAGE","DOWN_NPDAMAGE","UP_SPECIALDEFENCE","DOWN_SPECIALDEFENCE","UP_STARWEIGHT","DOWN_STARWEIGHT","UP_TOLERANCE","DOWN_TOLERANCE","UP_TOLERANCE_SUBSTATE","DOWN_TOLERANCE_SUBSTATE","typeDescriptions","AVOID_INSTANTDEATH","AVOID_STATE","ADD_DAMAGE","ADD_INDIVIDUALITY","AVOIDANCE","COMMANDCODEATTACK_FUNCTION","BREAK_AVOIDANCE","DELAY_FUNCTION","DONOT_NOBLE","DONOT_NOBLE_COND_MISMATCH","DONOT_RECOVERY","DONOT_SELECT_COMMANDCARD","DONOT_SKILL","FIELD_INDIVIDUALITY","FIX_COMMANDCARD","GUTS","INVINCIBLE","MULTIATTACK","PIERCE_INVINCIBLE","REGAIN_HP","REGAIN_NP","REGAIN_STAR","SELFTURNEND_FUNCTION","SUB_SELFDAMAGE","TD_TYPE_CHANGE","UP_HATE","BuffDescriptor","getTraitFilters","traits","buff","ckSelfIndv","filter","indexOf","region","cards","hasApplicableTrait","join","ckOpIndv","traitIds","vals","x","traitId","type","has","isUpDownBuff","getUpDownDescription","getTraitFilterAppend","UP_COMMANDALL","getCommandCardTypes","getTraitFilterAppendWithoutCards","DOWN_COMMANDALL","ATTACK_FUNCTION","COMMANDATTACK_FUNCTION","COMMANDATTACK_BEFORE_FUNCTION","DAMAGE_FUNCTION","DEAD_FUNCTION","NPATTACK_PREV_BUFF","hasTypeDescription","getTypeDescription","hasTraitDescription","getTraitDescription","to","icon","getEffectiveTargetsDescriptions","hasChangingDataVals","JSON","stringify","hasUniqueValues","values","Set","Array","isArray","size","describeMutators","func","dataVals","getDataValList","staticVals","getStaticFieldValues","getMutatingFieldValues","fields","Object","DataValField","field","val","getMutatingFieldNames","dependingVals","DependFuncVals","dependingMutatingValues","staticValues","mutatingVals","fieldName","DependFuncId","mutatingVal","staticDataVal","dataVal","funcUpdatesByLevel","getLevelDataValList","funcUpdatesByOvercharge","getOverchargeDataValList","isLevel","isOvercharge","getTargetVersionValues","getMixedDataValList","getFollowerDataValList","followerVals","svals","getRelatedSkillIds","funcType","FuncType","ADD_STATE","ADD_STATE_SHORT","buffs","Value","SkillID","getStaticFieldNames","hasDependingVals","dependingStaticValues","getTargetFollowerVersionValues","level","overcharge","svals2","svals3","svals4","svals5","hasFollowerDataVals","FuncDescriptorSection","preposition","showing","FuncDescriptorSections","team","chance","action","affects","amount","target","duration","scaling","sections","support","section","CARD_RESET","DAMAGE_NP_INDIVIDUAL_SUM","FuncValueDescriptor","hideRate","ABSORB_NPTURN","GAIN_HP_FROM_TARGETS","GAIN_NP_FROM_TARGETS","AddCount","EVENT_DROP_UP","EXP_UP","QP_UP","USER_EQUIP_EXP_UP","RateCount","QP_DROP_UP","SERVANT_FRIENDSHIP_UP","SkillReferenceDescriptor","BuffValueDescriptor","Correction","FuncDescriptor","getDataVal","followerDataVal","getFollowerDataVal","funcTargetTeam","FuncTargetTeam","PLAYER","ENEMY","handleTeamSection","Rate","ENEMY_ENCOUNT_COPY_RATE_UP","ENEMY_ENCOUNT_RATE_UP","NONE","handleChanceSection","handleActionSection","DAMAGE_NP_HPRATIO_LOW","Target","DAMAGE_NP_INDIVIDUAL","DAMAGE_NP_STATE_INDIVIDUAL_FIX","TargetList","ParamAddMaxCount","TargetRarityList","DAMAGE_NP_RARE","DAMAGE_NP_PIERCE","Individuality","Number","EventId","funcquestTvals","functvals","handleAffectsSection","handleAmountSection","handleTargetSection","Count","Turn","countDesc","turnDesc","handleDurationSection","handleScalingSection","concat","funcId","faShare","SkillDescriptor","skill","iconHeight","npAbsorbParts","Value2","DAMAGE_NP","GAIN_HP_PER","GAIN_NP","GAIN_NP_BUFF_INDIVIDUAL_SUM","LOSS_NP","SkillLV","funcDescriptions","DELAY_NPTURN","EXTEND_SKILL","FORCE_INSTANT_DEATH","GAIN_HP","GAIN_STAR","HASTEN_NPTURN","INSTANT_DEATH","LOSS_HP","LOSS_HP_SAFE","LOSS_STAR","REPLACE_MEMBER","SHORTEN_SKILL","SUB_STATE","traitVals","handleChargeNpPerTraitActionSection","handleCleanseActionSection","handleBuffActionSection","route","targetDescriptions","FuncTargetType","SELF","PT_ONE","PT_ALL","ENEMY_ALL","PT_FULL","ENEMY_FULL","PT_OTHER","PT_ONE_OTHER","PT_RANDOM","ENEMY_OTHER","ENEMY_RANDOM","PT_OTHER_FULL","ENEMY_OTHER_FULL","PTSELECT_ONE_SUB","PTSELECT_SUB","PT_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_RANDOM","ENEMY_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_FIRST","COMMAND_TYPE_SELF_TREASURE_DEVICE","targetType","funcTargetType"],"mappings":"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","file":"static/js/1.56bf4495.chunk.js","sourcesContent":["import React from \"react\";\n\nexport type Renderable = (\n    JSX.Element\n    | string\n    | number\n    | undefined\n    )\n\nexport function asPercent(value: number | string | undefined, pow: number): string {\n    if (typeof value === \"string\")\n        return asPercent(parseInt(value), pow);\n\n    const decimal = (value ?? 0) / Math.pow(10, pow);\n\n    return `${decimal}%`;\n}\n\nexport function formatNumber(value: number): string {\n    return String(value).replace(/(.)(?=(\\d{3})+$)/g, '$1,');\n}\n\nexport function handleNewLine(text?: string): Renderable {\n    if (!text)\n        return \"\";\n\n    return (\n        <span>\n            {mergeElements(text.split(\"\\n\"), <br/>)}\n        </span>\n    );\n}\n\nexport function joinElements(elements: Renderable[], separator: Renderable): Renderable[] {\n    const parts: Renderable[] = [],\n        pushElement = function (element: Renderable) {\n            if (element === undefined)\n                return;\n\n            if (typeof element === 'object') {\n                parts.push(element);\n                return;\n            }\n\n            if (parts.length === 0) {\n                parts.push(element.toString());\n                return;\n            }\n\n            const previous = parts[parts.length - 1];\n            if (typeof previous !== 'string') {\n                parts.push(element.toString());\n                return;\n            }\n\n            parts[parts.length - 1] = previous + element.toString();\n        };\n\n    elements.forEach((element, index) => {\n        if (index > 0)\n            pushElement(separator);\n\n        pushElement(element);\n    });\n\n    return parts;\n}\n\nexport function mergeElements(elements: Renderable[], seperator: Renderable): Renderable {\n    return <React.Fragment>\n        {joinElements(elements, seperator).map((element, index) => {\n            return <React.Fragment key={index}>{element}</React.Fragment>;\n        })}\n    </React.Fragment>\n}\n","import {Region, Trait} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport Api from \"../Api\";\n\nconst traitDescriptions = new Map<number, string>([\n    [1, \"Gender:Male\"],\n    [2, \"Gender:Female\"],\n    [3, \"Gender:Unknown\"],\n    [100, \"Class:Saber\"],\n    [101, \"Class:Lancer\"],\n    [102, \"Class:Archer\"],\n    [103, \"Class:Rider\"],\n    [104, \"Class:Caster\"],\n    [105, \"Class:Assassin\"],\n    [106, \"Class:Berserker\"],\n    [107, \"Class:Shielder\"],\n    [108, \"Class:Ruler\"],\n    [109, \"Class:Alter Ego\"],\n    [110, \"Class:Avenger\"],\n    [111, \"Demon Pillar\"],\n    [112, \"Class:Grand Caster\"],\n    [113, \"Beast I\"],\n    [114, \"Beast II\"],\n    [115, \"Class:Moon Cancer\"],\n    [116, \"Beast IIIR\"],\n    [117, \"Class:Foreigner\"],\n    [118, \"Beast IIIL\"],\n    [119, \"Beast Unknown\"],\n    [200, \"Attribute:Sky\"],\n    [201, \"Attribute:Eart\"],\n    [202, \"Attribute:Human\"],\n    [203, \"Attribute:Star\"],\n    [204, \"Attribute:Beast\"],\n    [300, \"Alignment:Lawful\"],\n    [301, \"Alignment:Chaotic\"],\n    [302, \"Alignment:Neutral\"],\n    [303, \"Alignment:Good\"],\n    [304, \"Alignment:Evil\"],\n    [305, \"Alignment:Balanced\"],\n    [306, \"Alignment:Madness\"],\n    [308, \"Alignment:Summer\"],\n    [1000, \"Servant\"],\n    [1002, \"Undead\"],\n    [1122, \"Shadow Servant\"],\n    [2004, \"Roman\"],\n    [2005, \"Beasts\"],\n    [2019, \"Demonic\"],\n    [2039, \"Near Water\"],\n    [2386, \"Kingprotea: Proliferation\"],\n    [2387, \"Kingprotea: Growth\"],\n    [2466, \"Argonaut\"],\n    [2654, \"Pseudo-Servant\"],\n    [2664, \"Kingprotea: Proliferation NP Defense\"],\n    [3004, \"Buff\"],\n    [3005, \"Debuff\"],\n    [3006, \"Buff:Offensive\"],\n    [3007, \"Buff:Defensive\"],\n    [3011, \"Poison\"],\n    [3012, \"Charm\"],\n    [3015, \"Burn\"],\n    [3021, \"Evade\"],\n    [3026, \"Curse\"],\n    [3047, \"Pigify\"],\n    [4001, \"Card:Arts\"],\n    [4002, \"Card:Buster\"],\n    [4003, \"Card:Quick\"],\n    [4004, \"Card:Extra\"],\n    [4008, \"Player Card\"],\n    [4100, \"Critical Hit\"],\n]);\n\ninterface IProps {\n    region: Region;\n    trait: Trait | number;\n}\n\ninterface IState {\n    id: number;\n    trait?: Trait;\n}\n\nclass TraitDescriptor extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            id: typeof props.trait === \"number\" ? props.trait : props.trait.id,\n            trait: typeof props.trait === \"number\" ? undefined : props.trait,\n        };\n    }\n\n    async componentDidMount() {\n        if (this.state.trait)\n            return;\n\n        const traitList = await Api.traitList();\n\n        for (let i = 0; i < traitList.length; i++) {\n            const trait = traitList[i];\n\n            if (trait.id === this.state.id) {\n                this.setState({ trait });\n\n                return;\n            }\n        }\n    }\n\n    private getDescription() : string {\n        let description;\n\n        description = traitDescriptions.get(this.state.id);\n        if (description) {\n            return description;\n        }\n\n        if (this.state.trait && this.state.trait.name !== 'unknown')\n            return this.state.trait.name;\n\n        return `unknown(${this.state.id})`;\n    }\n\n    render() {\n        return (\n            <span>\n                [{this.getDescription()}]\n            </span>\n        );\n    }\n}\n\nexport default TraitDescriptor;\n","import React from \"react\";\n\ninterface IProp {\n    location: string;\n    height?: number;\n}\n\nclass BuffIcon extends React.Component<IProp> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location} style={{\n                height: this.props.height ?? 25,\n                verticalAlign: \"bottom\",\n            }}/>\n        );\n    }\n\n}\n\nexport default BuffIcon;\n","import {Buff, BuffType, Region} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport {joinElements, mergeElements} from \"../Helper/OutputHelper\";\nimport TraitDescriptor from \"./TraitDescriptor\";\n\nexport const upDownBuffs: { up?: BuffType, down?: BuffType, description: string }[] = [\n    {up: BuffType.ADD_MAXHP, down: BuffType.SUB_MAXHP, description: \"Max HP\"},\n    {up: BuffType.UP_ATK, down: BuffType.DOWN_ATK, description: \"ATK\"},\n    {up: BuffType.UP_CHAGETD, down: undefined, description: \"Overcharge\"},\n    {up: BuffType.UP_COMMANDATK, down: BuffType.DOWN_COMMANDATK, description: \"ATK\"},\n    {up: BuffType.UP_CRITICALDAMAGE, down: BuffType.DOWN_CRITICALDAMAGE, description: \"Critical Damage\"},\n    {up: BuffType.UP_CRITICALPOINT, down: BuffType.DOWN_CRITICALPOINT, description: \"Star Drop Rate\"},\n    {up: BuffType.UP_CRITICALRATE, down: BuffType.DOWN_CRITICALRATE, description: \"Critical Rate\"},\n    {\n        up: BuffType.UP_CRITICAL_RATE_DAMAGE_TAKEN,\n        down: BuffType.DOWN_CRITICAL_RATE_DAMAGE_TAKEN,\n        description: \"Critical Rate Taken\"\n    },\n    {up: BuffType.UP_DAMAGE, down: BuffType.DOWN_DAMAGE, description: \"SP.DMG\"},\n    {up: BuffType.UP_DAMAGEDROPNP, down: BuffType.DOWN_DAMAGEDROPNP, description: \"NP Gain When Damaged\"},\n    {up: BuffType.UP_DEFENCE, down: BuffType.DOWN_DEFENCE, description: \"DEF\"},\n    {up: BuffType.UP_DEFENCECOMMANDALL, down: BuffType.DOWN_DEFENCECOMMANDALL, description: \"Resistance\"},\n    {up: BuffType.UP_DROPNP, down: BuffType.DOWN_DROPNP, description: \"NP Gain\"},\n    {up: BuffType.UP_FUNC_HP_REDUCE, down: BuffType.DOWN_FUNC_HP_REDUCE, description: \"DoT Effectiveness\"},\n    {up: BuffType.UP_GRANT_INSTANTDEATH, down: BuffType.DOWN_GRANT_INSTANTDEATH, description: \"Death Chance\"},\n    {up: BuffType.UP_GRANTSTATE, down: BuffType.DOWN_GRANTSTATE, description: \"Buff Chance\"},\n    {up: undefined, down: BuffType.UP_NONRESIST_INSTANTDEATH, description: \"Death Resist\"},\n    {up: BuffType.UP_NPDAMAGE, down: BuffType.DOWN_NPDAMAGE, description: \"NP Damage\"},\n    {up: BuffType.UP_SPECIALDEFENCE, down: BuffType.DOWN_SPECIALDEFENCE, description: \"SP.DEF\"},\n    {up: BuffType.UP_STARWEIGHT, down: BuffType.DOWN_STARWEIGHT, description: \"Star Weight\"},\n    {up: BuffType.UP_TOLERANCE, down: BuffType.DOWN_TOLERANCE, description: \"Debuff Resist\"},\n    {up: BuffType.UP_TOLERANCE_SUBSTATE, down: BuffType.DOWN_TOLERANCE_SUBSTATE, description: \"Buff Removal Resist\"},\n];\n\nexport const traitDescriptions = new Map<number, string>([\n    [3012, 'Charm'],\n    [3015, 'Burn'],\n    [3026, 'Curse'],\n    [3045, 'Stun'],\n]);\n\nexport const typeDescriptions = new Map<BuffType, string>([\n    [BuffType.AVOID_INSTANTDEATH, 'Immune to Death'],\n    [BuffType.AVOID_STATE, 'Immunity'],\n    [BuffType.ADD_DAMAGE, 'Damage Plus'],\n    [BuffType.ADD_INDIVIDUALITY, 'Add Trait'],\n    [BuffType.AVOIDANCE, 'Evade'],\n    [BuffType.COMMANDCODEATTACK_FUNCTION, 'Command Code Effect'],\n    [BuffType.BREAK_AVOIDANCE, 'Sure Hit'],\n    [BuffType.DELAY_FUNCTION, 'Trigger Skill after Duration'],\n    [BuffType.DONOT_NOBLE, 'NP Seal'],\n    [BuffType.DONOT_NOBLE_COND_MISMATCH, 'NP Block if Condition Failed'],\n    [BuffType.DONOT_RECOVERY, 'Recovery Disabled'],\n    [BuffType.DONOT_SELECT_COMMANDCARD, 'Do Not Shuffle In Cards'],\n    [BuffType.DONOT_SKILL, 'Skill Seal'],\n    [BuffType.FIELD_INDIVIDUALITY, 'Change Field Type'],\n    [BuffType.FIX_COMMANDCARD, 'Freeze Command Cards'],\n    [BuffType.GUTS, 'Guts'],\n    [BuffType.INVINCIBLE, 'Invincible'],\n    [BuffType.MULTIATTACK, 'Multiple Hits'],\n    [BuffType.PIERCE_INVINCIBLE, 'Ignore Invincible'],\n    [BuffType.REGAIN_HP, 'HP Per Turn'],\n    [BuffType.REGAIN_NP, 'NP Per Turn'],\n    [BuffType.REGAIN_STAR, 'Stars Per Turn'],\n    [BuffType.SELFTURNEND_FUNCTION, 'Trigger Skill every Turn'],\n    [BuffType.SUB_SELFDAMAGE, 'Damage Cut'],\n    [BuffType.TD_TYPE_CHANGE, 'Change Noble Phantasm'],\n    [BuffType.UP_HATE, 'Taunt'],\n]);\n\ninterface IProps {\n    region: Region;\n    buff: Buff;\n}\n\nclass BuffDescriptor extends React.Component<IProps> {\n    private getTraitFilterAppend(): JSX.Element | undefined {\n        if (!this.getTraitFilters())\n            return undefined;\n\n        return <React.Fragment> for {this.getTraitFilters()}</React.Fragment>;\n    }\n\n    private getTraitFilterAppendWithoutCards(): JSX.Element | undefined {\n        const traits = this.props.buff.ckSelfIndv.filter(\n            trait => [4001, 4002, 4003, 4004].indexOf(trait.id) === -1\n        );\n\n        if (!traits.length)\n            return undefined;\n\n        return (\n            <React.Fragment>\n                {' '}\n                for\n                {' '}\n                {joinElements(\n                    traits.map(\n                        trait => <TraitDescriptor region={this.props.region} trait={trait}/>\n                    ),\n                    ' & '\n                )}\n            </React.Fragment>\n        );\n    }\n\n    private getCommandCardTypes(): string {\n        const cards = [];\n\n        if (this.hasApplicableTrait(4001)) {\n            cards.push('Arts');\n        }\n\n        if (this.hasApplicableTrait(4002)) {\n            cards.push('Buster');\n        }\n\n        if (this.hasApplicableTrait(4003)) {\n            cards.push('Quick');\n        }\n\n        if (this.hasApplicableTrait(4004)) {\n            cards.push('Extra');\n        }\n\n        if (!cards.length) {\n            cards.push('Command Card');\n        }\n\n        return cards.join(' & ');\n    }\n\n    private getEffectiveTargetsDescriptions(): JSX.Element | undefined {\n        const buff = this.props.buff;\n\n        if (!buff.ckOpIndv.length)\n            return undefined;\n\n        return (\n            <React.Fragment>\n                {' vs. '}\n                {joinElements(\n                    buff.ckOpIndv.map(trait => {\n                        return <TraitDescriptor region={this.props.region} trait={trait}/>;\n                    }),\n                    ' & '\n                ).map((element, index) => {\n                    return <React.Fragment key={index}>{element}</React.Fragment>;\n                })}\n            </React.Fragment>\n        );\n    }\n\n    private getTraitDescription(): string {\n        const buff = this.props.buff,\n            traitIds = buff.vals.map(trait => trait.id);\n\n        for (let x in traitIds) {\n            const traitId = traitIds[x],\n                description = traitDescriptions.get(traitId);\n\n            if (description !== undefined)\n                return description;\n        }\n\n        return \"\";\n    }\n\n    private getTraitFilters(): JSX.Element | undefined {\n        if (!this.props.buff.ckSelfIndv.length)\n            return undefined;\n\n        return (\n            <React.Fragment>\n                {mergeElements(\n                    this.props.buff.ckSelfIndv.map(\n                        trait => <TraitDescriptor region={this.props.region} trait={trait}/>\n                    ),\n                    ' & '\n                )}\n            </React.Fragment>\n        );\n    }\n\n    private getTypeDescription(): string {\n        const type = this.props.buff.type;\n\n        return typeDescriptions.get(type) ?? \"\";\n    }\n\n    private getUpDownDescription(): string {\n        const type = this.props.buff.type;\n\n        for (let x in upDownBuffs) {\n            if (upDownBuffs[x].up === type)\n                return `${upDownBuffs[x].description} Up`;\n            if (upDownBuffs[x].down === type)\n                return `${upDownBuffs[x].description} Down`;\n        }\n\n        return \"\";\n    }\n\n    private hasApplicableTrait(id: number): boolean {\n        const buff = this.props.buff;\n\n        return buff.ckSelfIndv.filter(trait => trait.id === id).length > 0;\n    }\n\n    private hasTraitDescription(): boolean {\n        const buff = this.props.buff,\n            traitIds = buff.vals.map(trait => trait.id);\n\n        for (let x in traitIds) {\n            const traitId = traitIds[x],\n                description = traitDescriptions.get(traitId);\n\n            if (description !== undefined)\n                return true;\n        }\n\n        return false;\n    }\n\n    private hasTypeDescription(): boolean {\n        const buff = this.props.buff;\n\n        return typeDescriptions.has(buff.type);\n    }\n\n    private isUpDownBuff(): boolean {\n        const type = this.props.buff.type;\n\n        for (let x in upDownBuffs) {\n            if (upDownBuffs[x].up === type || upDownBuffs[x].down === type)\n                return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const buff = this.props.buff;\n\n        let description: JSX.Element | string = buff.name;\n\n        if (this.isUpDownBuff()) {\n            description = <React.Fragment>\n                {this.getUpDownDescription()}\n                {this.getTraitFilterAppend()}\n            </React.Fragment>\n        } else if (buff.type === BuffType.UP_COMMANDALL) {\n            description = <React.Fragment>\n                {this.getCommandCardTypes()} Up\n                {this.getTraitFilterAppendWithoutCards()}\n            </React.Fragment>\n        } else if (buff.type === BuffType.DOWN_COMMANDALL) {\n            description = <React.Fragment>\n                {this.getCommandCardTypes()} Down\n                {this.getTraitFilterAppendWithoutCards()}\n            </React.Fragment>\n        } else if (buff.type === BuffType.ATTACK_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill on {this.getTraitFilters()} attacks\n            </React.Fragment>;\n        } else if (buff.type === BuffType.COMMANDATTACK_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill on {this.getTraitFilters()} cards\n            </React.Fragment>;\n        } else if (buff.type === BuffType.COMMANDATTACK_BEFORE_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill before {this.getTraitFilters()} cards\n            </React.Fragment>;\n        } else if (buff.type === BuffType.DAMAGE_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill on receiving {this.getTraitFilters()} attacks\n            </React.Fragment>;\n        } else if (buff.type === BuffType.DEAD_FUNCTION) {\n            description = <React.Fragment>\n                Trigger Skill on death\n                {this.getTraitFilterAppend()}\n            </React.Fragment>;\n        } else if (buff.type === BuffType.NPATTACK_PREV_BUFF) {\n            description = <React.Fragment>\n                Trigger Skill on {this.getTraitFilters()} NP\n            </React.Fragment>;\n        } else if (this.hasTypeDescription()) {\n            description = <React.Fragment>\n                {this.getTypeDescription()}\n                {this.getTraitFilterAppend()}\n            </React.Fragment>;\n        } else if (this.hasTraitDescription()) {\n            description = <React.Fragment>\n                {this.getTraitDescription()}\n                {this.getTraitFilterAppend()}\n            </React.Fragment>;\n        }\n\n        return (\n            <Link to={`/${this.props.region}/buff/${buff.id}`}>\n                [\n                {buff.icon ? <BuffIcon location={buff.icon}/> : undefined}\n                {buff.icon ? ' ' : undefined}\n                {description}\n                {this.getEffectiveTargetsDescriptions()}\n                ]\n            </Link>\n        );\n    }\n}\n\nexport default BuffDescriptor;\n","import {BuffType, DataValField, Func, Region} from \"@atlasacademy/api-connector\";\nimport FuncType from \"@atlasacademy/api-connector/dist/Enum/FuncType\";\nimport DataVal from \"@atlasacademy/api-connector/dist/Schema/DataVal\";\nimport React from \"react\";\nimport FuncValueDescriptor from \"../Descriptor/FuncValueDescriptor\";\nimport {Renderable} from \"./OutputHelper\";\n\nconst hasChangingDataVals = function (vals: DataVal[]): boolean {\n    if (!vals.length)\n        return false;\n\n    let previous = vals[0];\n    for (let i = 1; i < vals.length; i++) {\n        if (JSON.stringify(previous) !== JSON.stringify(vals[i]))\n            return true;\n\n        previous = vals[i];\n    }\n\n    return false;\n};\n\nconst hasUniqueValues = function (values: (number | number[] | undefined)[]): boolean {\n    if (values.length === 0)\n        return false;\n\n    return new Set(\n        values.map(value => {\n            if (Array.isArray(value))\n                return value.join(',');\n\n            return value;\n        })\n    ).size > 1;\n};\n\nexport function describeMutators(region: Region, func: Func): Renderable[] {\n    const dataVals = getDataValList(func),\n        staticVals = getStaticFieldValues(dataVals),\n        mutatingVals = getMutatingFieldValues(dataVals);\n\n    return mutatingVals\n        .map(mutatingVal => <FuncValueDescriptor region={region} func={func} staticDataVal={staticVals}\n                                                 dataVal={mutatingVal}/>);\n}\n\nexport function funcUpdatesByLevel(func: Func): boolean {\n    return hasChangingDataVals(getLevelDataValList(func));\n}\n\nexport function funcUpdatesByOvercharge(func: Func): boolean {\n    return hasChangingDataVals(getOverchargeDataValList(func));\n}\n\nexport function getDataValList(func: Func): DataVal[] {\n    const isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func);\n\n    return isLevel && isOvercharge\n        ? getMixedDataValList(func)\n        : (isOvercharge ? getOverchargeDataValList(func) : getLevelDataValList(func));\n}\n\nexport function getFollowerDataValList(func: Func): DataVal[] {\n    return func.followerVals ?? [];\n}\n\nexport function getLevelDataValList(func: Func): DataVal[] {\n    return func.svals ?? [];\n}\n\nexport function getMixedDataValList(func: Func): DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, i, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getMutatingFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return hasUniqueValues(values);\n    });\n}\n\nexport function getMutatingFieldValues(vals: DataVal[]): DataVal[] {\n    if (!vals.length)\n        return [];\n\n    const fields = getMutatingFieldNames(vals),\n        hasDependingVals = vals.filter(val => val.DependFuncVals !== undefined).length > 0,\n        dependingVals: (DataVal[] | undefined) = (\n            hasDependingVals\n                ? vals.map(val => (val.DependFuncVals ?? {}) as DataVal)\n                : undefined\n        ),\n        dependingMutatingValues = dependingVals ? getMutatingFieldValues(dependingVals) : [],\n        staticValues = getStaticFieldValues(vals);\n\n    return vals.map((val, index) => {\n        const mutatingVals: DataVal = {};\n\n        for (let x in fields) {\n            const fieldName = fields[x];\n\n            // @ts-ignore\n            mutatingVals[fieldName] = val[fieldName];\n        }\n\n        if (staticValues.DependFuncId && dependingMutatingValues[index]) {\n            mutatingVals.DependFuncId = staticValues.DependFuncId;\n            mutatingVals.DependFuncVals = dependingMutatingValues[index];\n        }\n\n        return mutatingVals;\n    });\n}\n\nexport function getOverchargeDataValList(func: Func): DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, 1, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getRelatedSkillIds(func: Func): number[] {\n    if (func.funcType !== FuncType.ADD_STATE && func.funcType !== FuncType.ADD_STATE_SHORT)\n        return [];\n\n    const buff = func.buffs[0];\n    if (\n        buff.type === BuffType.ATTACK_FUNCTION\n        || buff.type === BuffType.COMMANDATTACK_FUNCTION\n        || buff.type === BuffType.COMMANDATTACK_BEFORE_FUNCTION\n        || buff.type === BuffType.COMMANDCODEATTACK_FUNCTION\n        || buff.type === BuffType.DAMAGE_FUNCTION\n        || buff.type === BuffType.DEAD_FUNCTION\n        || buff.type === BuffType.DELAY_FUNCTION\n        || buff.type === BuffType.SELFTURNEND_FUNCTION\n    ) {\n        const dataVals = getDataValList(func),\n            dataVal = dataVals[0];\n\n        return typeof dataVal.Value === \"number\" ? [dataVal.Value] : [];\n    }\n\n    if (buff.type === BuffType.NPATTACK_PREV_BUFF) {\n        const dataVals = getDataValList(func),\n            dataVal = dataVals[0];\n\n        return typeof dataVal.SkillID === \"number\" ? [dataVal.SkillID] : [];\n    }\n\n    return [];\n}\n\nexport function getStaticFieldNames(vals: DataVal[]): DataValField[] {\n    return Object.values(DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return !hasUniqueValues(values);\n    });\n}\n\nexport function getStaticFieldValues(vals: DataVal[]): DataVal {\n    if (!vals.length)\n        return {};\n\n    const fields = getStaticFieldNames(vals),\n        staticVals: DataVal = {},\n        hasDependingVals = vals.filter(val => val.DependFuncVals !== undefined).length > 0,\n        dependingVals: (DataVal[] | undefined) = (\n            hasDependingVals\n                ? vals.map(val => (val.DependFuncVals ?? {}) as DataVal)\n                : undefined\n        ),\n        dependingStaticValues = dependingVals ? getStaticFieldValues(dependingVals) : undefined;\n\n    for (let x in fields) {\n        // @ts-ignore\n        staticVals[fields[x]] = vals[0][fields[x]];\n    }\n\n    if (hasDependingVals)\n        staticVals.DependFuncVals = dependingStaticValues;\n\n    return staticVals;\n}\n\nexport function getTargetFollowerVersionValues(func: Func, level: number): DataVal | undefined {\n    if (func.followerVals === undefined)\n        return undefined;\n\n    return func.followerVals[level - 1];\n}\n\nexport function getTargetVersionValues(func: Func, level: number, overcharge: number = 1): DataVal | undefined {\n    if (func.svals === undefined)\n        return undefined;\n\n    let dataVals;\n\n    if (overcharge === 2 && func.svals2)\n        dataVals = func.svals2;\n    else if (overcharge === 3 && func.svals3)\n        dataVals = func.svals3;\n    else if (overcharge === 4 && func.svals4)\n        dataVals = func.svals4;\n    else if (overcharge === 5 && func.svals5)\n        dataVals = func.svals5;\n    else\n        dataVals = func.svals;\n\n    return dataVals[level - 1];\n}\n\nexport function hasFollowerDataVals(func: Func): boolean {\n    return func.followerVals !== undefined;\n}\n","import {Renderable} from \"../../Helper/OutputHelper\";\n\nexport class FuncDescriptorSection {\n    public showing: boolean = true;\n    public parts: Renderable[] = [];\n    public preposition?: string;\n\n    constructor(preposition?: string) {\n        this.preposition = preposition;\n    }\n}\n\nexport class FuncDescriptorSections {\n    public team = new FuncDescriptorSection();\n    public chance = new FuncDescriptorSection();\n    public action = new FuncDescriptorSection();\n    public affects = new FuncDescriptorSection();\n    public amount = new FuncDescriptorSection('of');\n    public target = new FuncDescriptorSection('to');\n    public duration = new FuncDescriptorSection();\n    public scaling = new FuncDescriptorSection();\n}\n","import {BuffType, Func, Region} from \"@atlasacademy/api-connector\";\nimport FuncType from \"@atlasacademy/api-connector/dist/Enum/FuncType\";\nimport DataVal from \"@atlasacademy/api-connector/dist/Schema/DataVal\";\nimport React from \"react\";\nimport BuffValueDescriptor from \"../BuffValueDescriptor\";\nimport FuncValueDescriptor from \"../FuncValueDescriptor\";\nimport SkillReferenceDescriptor from \"../SkillReferenceDescriptor\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal, support?: boolean): void {\n    const section = sections.amount,\n        parts = section.parts;\n\n    if (support) {\n        parts.push('( Support only:');\n    }\n\n    if (func.buffs[0]?.type === BuffType.ADD_INDIVIDUALITY && typeof dataVal.Value === \"number\") {\n        parts.push(\n            <TraitDescriptor region={region} trait={dataVal.Value}/>\n        );\n    } else if (\n        (\n            func.buffs[0]?.type === BuffType.ATTACK_FUNCTION\n            || func.buffs[0]?.type === BuffType.COMMANDATTACK_FUNCTION\n            || func.buffs[0]?.type === BuffType.COMMANDATTACK_BEFORE_FUNCTION\n            || func.buffs[0]?.type === BuffType.COMMANDCODEATTACK_FUNCTION\n            || func.buffs[0]?.type === BuffType.DAMAGE_FUNCTION\n            || func.buffs[0]?.type === BuffType.DEAD_FUNCTION\n            || func.buffs[0]?.type === BuffType.DELAY_FUNCTION\n            || func.buffs[0]?.type === BuffType.SELFTURNEND_FUNCTION\n        )\n        && typeof dataVal.Value === \"number\"\n    ) {\n        section.preposition = undefined;\n        parts.push('that triggers');\n        parts.push(\n            <SkillReferenceDescriptor region={region} id={dataVal.Value}/>\n        );\n    } else if (func.funcType === FuncType.CARD_RESET && dataVal.Value) {\n        section.preposition = undefined;\n        parts.push(`${dataVal.Value} time${dataVal.Value > 1 ? 's' : ''}`);\n    } else if (func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL_SUM) {\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}\n                                        hideRate={true}/>);\n    } else if (\n        (\n            func.funcType === FuncType.ABSORB_NPTURN\n            || func.funcType === FuncType.GAIN_HP_FROM_TARGETS\n            || func.funcType === FuncType.GAIN_NP_FROM_TARGETS\n        ) && dataVal.DependFuncId\n    ) {\n        if (dataVal.DependFuncVals?.Value) {\n            section.parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal}\n                                                    dataVal={dataVal} hideRate={true}/>);\n        } else {\n            section.showing = false;\n        }\n    } else if (dataVal.AddCount && (\n        func.funcType === FuncType.EVENT_DROP_UP\n        || func.funcType === FuncType.EXP_UP\n        || func.funcType === FuncType.QP_UP\n        || func.funcType === FuncType.USER_EQUIP_EXP_UP\n    )) {\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}/>);\n    } else if (dataVal.RateCount && (\n        func.funcType === FuncType.QP_DROP_UP\n        || func.funcType === FuncType.SERVANT_FRIENDSHIP_UP\n        || func.funcType === FuncType.USER_EQUIP_EXP_UP\n    )) {\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}/>);\n    } else if (func.buffs[0]?.type === BuffType.NPATTACK_PREV_BUFF) {\n        if (typeof dataVal.SkillID !== \"number\") {\n            section.showing = false;\n            return;\n        }\n\n        section.preposition = undefined;\n        parts.push('that triggers');\n        parts.push(\n            <SkillReferenceDescriptor region={region} id={dataVal.SkillID}/>\n        );\n    } else if (func.buffs[0] && dataVal.Value) {\n        parts.push(<BuffValueDescriptor region={region} buff={func.buffs[0]} dataVal={dataVal}/>);\n    } else if (dataVal.Value) {\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}\n                                        hideRate={true}/>);\n    } else if (!dataVal.Value && dataVal.Correction) {\n        section.preposition = 'with';\n        parts.push('bonus');\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}\n                                        hideRate={true}/>);\n    } else {\n        section.showing = false;\n    }\n\n    if (support) {\n        parts.push(')');\n    }\n}\n","import {Func, Region} from \"@atlasacademy/api-connector\";\nimport DataVal from \"@atlasacademy/api-connector/dist/Schema/DataVal\";\nimport {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {\n    getDataValList,\n    getFollowerDataValList,\n    getStaticFieldValues,\n    getTargetFollowerVersionValues,\n    getTargetVersionValues,\n    hasFollowerDataVals\n} from \"../Helper/FuncHelper\";\nimport {joinElements, Renderable} from \"../Helper/OutputHelper\";\nimport {FuncDescriptorSections} from \"./Func/FuncDescriptorSections\";\nimport handleActionSection from \"./Func/handleActionSection\";\nimport handleAffectsSection from \"./Func/handleAffectsSection\";\nimport handleAmountSection from \"./Func/handleAmountSection\";\nimport handleChanceSection from \"./Func/handleChanceSection\";\nimport handleDurationSection from \"./Func/handleDurationSection\";\nimport handleScalingSection from \"./Func/handleScalingSection\";\nimport handleTargetSection from \"./Func/handleTargetSection\";\nimport handleTeamSection from \"./Func/handleTeamSection\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n    level?: number;\n    overcharge?: number;\n}\n\nclass FuncDescriptor extends React.Component<IProps> {\n    getDataVal(): DataVal {\n        const func = this.props.func;\n\n        if (this.props.level) {\n            return getTargetVersionValues(func, this.props.level, this.props.overcharge ?? 1) ?? {};\n        } else {\n            const dataVals = getDataValList(func);\n\n            return getStaticFieldValues(dataVals);\n        }\n    }\n\n    getFollowerDataVal(): DataVal | undefined {\n        const func = this.props.func;\n\n        if (!hasFollowerDataVals(func))\n            return undefined;\n\n        if (this.props.level) {\n            return getTargetFollowerVersionValues(func, this.props.level) ?? {};\n        } else {\n            const dataVals = getFollowerDataValList(func);\n\n            return getStaticFieldValues(dataVals);\n        }\n    }\n\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            dataVal = this.getDataVal(),\n            followerDataVal = this.getFollowerDataVal();\n\n        const sections = new FuncDescriptorSections();\n\n        handleTeamSection(region, sections, func, dataVal);\n        handleChanceSection(region, sections, func, dataVal);\n        handleActionSection(region, sections, func, dataVal);\n        handleAffectsSection(region, sections, func, dataVal);\n        handleAmountSection(region, sections, func, dataVal);\n        if (followerDataVal) {\n            handleAmountSection(region, sections, func, followerDataVal, true);\n        }\n        handleTargetSection(region, sections, func, dataVal);\n        handleDurationSection(region, sections, func, dataVal);\n        handleScalingSection(region, sections, func, dataVal);\n\n        let parts: Renderable[] = [];\n\n        Object.values(sections).forEach(section => {\n            if (!section.showing)\n                return;\n\n            if (section.preposition)\n                parts.push(section.preposition);\n\n            parts = parts.concat(section.parts);\n        });\n\n        parts.push(\n            <Link to={`/${region}/func/${func.funcId}`}>\n                <FontAwesomeIcon icon={faShare}/>\n            </Link>\n        );\n\n        parts = joinElements(parts, ' ');\n\n        return (\n            <span>\n                {parts.map((element, index) => {\n                    return <React.Fragment key={index}>{element}</React.Fragment>;\n                })}\n            </span>\n        );\n    }\n}\n\nexport default FuncDescriptor;\n","import {Func, Region} from \"@atlasacademy/api-connector\";\nimport FuncTargetTeam from \"@atlasacademy/api-connector/dist/Enum/FuncTargetTeam\";\nimport DataVal from \"@atlasacademy/api-connector/dist/Schema/DataVal\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.team,\n        parts = section.parts;\n\n    if (func.funcTargetTeam === FuncTargetTeam.PLAYER)\n        parts.push('[Player]');\n    else if (func.funcTargetTeam === FuncTargetTeam.ENEMY)\n        parts.push('[Enemy]');\n    else\n        section.showing = false;\n}\n","import {Func, Region} from \"@atlasacademy/api-connector\";\nimport FuncType from \"@atlasacademy/api-connector/dist/Enum/FuncType\";\nimport DataVal from \"@atlasacademy/api-connector/dist/Schema/DataVal\";\nimport {asPercent} from \"../../Helper/OutputHelper\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.chance,\n        parts = section.parts;\n\n    if (dataVal.Rate && dataVal.Rate < 0) {\n        parts.push('Guaranteed to');\n    } else if (typeof dataVal.Rate === \"number\" && dataVal.Rate !== 1000) {\n        parts.push((dataVal.Rate / 10) + '% Chance to');\n    } else if (dataVal.RateCount && (\n        func.funcType === FuncType.ENEMY_ENCOUNT_COPY_RATE_UP\n        || func.funcType === FuncType.ENEMY_ENCOUNT_RATE_UP\n    )) {\n        parts.push(asPercent(dataVal.RateCount, 1) + ' Chance per Target to');\n    } else if (!dataVal.Rate && func.funcType !== FuncType.NONE) {\n        parts.push('Chance to');\n    } else {\n        section.showing = false;\n    }\n}\n","import {Func, Region} from \"@atlasacademy/api-connector\";\nimport FuncType from \"@atlasacademy/api-connector/dist/Enum/FuncType\";\nimport DataVal from \"@atlasacademy/api-connector/dist/Schema/DataVal\";\nimport React from \"react\";\nimport {mergeElements} from \"../../Helper/OutputHelper\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.affects,\n        parts = section.parts;\n\n    if (func.funcType === FuncType.DAMAGE_NP_HPRATIO_LOW) {\n        parts.push('(additional for low HP)');\n    } else if (typeof dataVal.Target === \"number\"\n        && (\n            func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL\n            || func.funcType === FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX\n        )\n    ) {\n        parts.push(\n            <span>(additional to targets with {\n                <TraitDescriptor region={region} trait={dataVal.Target}/>\n            })</span>\n        );\n    } else if (\n        dataVal.TargetList\n        && dataVal.TargetList.length > 0\n        && func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL_SUM\n    ) {\n        const traitIds = dataVal.TargetList,\n            traits = traitIds.map(id => <TraitDescriptor region={region} trait={id}/>);\n\n        parts.push(\n            <span>(bonus per trait of {mergeElements(traits, ' or ')}{\n                dataVal.ParamAddMaxCount ? `[Limit ${dataVal.ParamAddMaxCount}]` : null\n            })</span>\n        );\n    } else if (\n        dataVal.TargetRarityList\n        && dataVal.TargetRarityList.length > 0\n        && func.funcType === FuncType.DAMAGE_NP_RARE\n    ) {\n        parts.push(\n            <span>(bonus to {dataVal.TargetRarityList.join('/')} {\n                dataVal.TargetRarityList.length > 1 ? 'rarities' : 'rarity'\n            })</span>\n        )\n    } else if (func.funcType === FuncType.DAMAGE_NP_PIERCE) {\n        parts.push('(that pierces defense)');\n    }\n\n    if (\n        func.funcType === FuncType.ENEMY_ENCOUNT_COPY_RATE_UP\n        || func.funcType === FuncType.ENEMY_ENCOUNT_RATE_UP\n        || func.funcType === FuncType.EVENT_DROP_UP\n    ) {\n        if (dataVal.Individuality) {\n            parts.push(\n                <span>with <TraitDescriptor region={region} trait={Number(dataVal.Individuality)}/></span>\n            )\n        }\n\n        if (dataVal.EventId) {\n            parts.push(\n                <span>during event <TraitDescriptor region={region} trait={Number(dataVal.EventId)}/></span>\n            )\n        }\n    }\n\n    if (func.funcquestTvals.length) {\n        parts.push('if on field');\n        parts.push(\n            mergeElements(\n                func.funcquestTvals.map(trait => <TraitDescriptor region={region} trait={trait}/>),\n                ' & '\n            )\n        );\n    }\n\n    if (func.functvals.length) {\n        parts.push('for targets');\n\n        if (func.functvals.length > 1) {\n            parts.push('all');\n        }\n\n        func.functvals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<TraitDescriptor region={region} trait={trait}/>);\n        });\n    }\n\n    if (!parts.length) {\n        section.showing = false;\n    }\n\n}\n","import {Func, Region} from \"@atlasacademy/api-connector\";\nimport DataVal from \"@atlasacademy/api-connector/dist/Schema/DataVal\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.duration,\n        parts = section.parts;\n\n    if (dataVal.Count && dataVal.Count > 0 && dataVal.Turn && dataVal.Turn > 0) {\n        const countDesc = dataVal.Count === 1 ? '1 Time' : `${dataVal.Count} Times`,\n            turnDesc = dataVal.Turn === 1 ? '1 Turn' : `${dataVal.Turn} Turns`;\n\n        parts.push(`(${turnDesc}, ${countDesc})`);\n    } else if (dataVal.Turn && dataVal.Turn > 0) {\n        parts.push(dataVal.Turn === 1 ? '(1 Turn)' : `(${dataVal.Turn} Turns)`);\n    } else if (dataVal.Count && dataVal.Count > 0) {\n        parts.push(dataVal.Count === 1 ? '(1 Time)' : `(${dataVal.Count} Times)`);\n    } else {\n        section.showing = false;\n    }\n}\n","import {Func, Region} from \"@atlasacademy/api-connector\";\nimport DataVal from \"@atlasacademy/api-connector/dist/Schema/DataVal\";\nimport {funcUpdatesByLevel, funcUpdatesByOvercharge} from \"../../Helper/FuncHelper\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.scaling,\n        parts = section.parts,\n        isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func);\n\n    if (!isLevel && !isOvercharge) {\n        section.showing = false;\n        return;\n    }\n\n    if (isLevel) {\n        parts.push('<LEVEL>');\n    }\n\n    if (isOvercharge) {\n        parts.push('<OVERCHARGE>');\n    }\n}\n","import {Region, Skill} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport BuffIcon from \"../Component/BuffIcon\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill;\n    iconHeight?: number;\n}\n\nclass SkillDescriptor extends React.Component<IProps> {\n    render() {\n        return (\n            <Link to={`/${this.props.region}/skill/${this.props.skill.id}`}>\n                {this.props.skill.icon ? (\n                    <BuffIcon location={this.props.skill.icon} height={this.props.iconHeight}/>\n                ) : undefined}\n                {this.props.skill.icon ? ' ' : undefined}\n                [{this.props.skill.name ? this.props.skill.name : `Skill: ${this.props.skill.id}`}]\n            </Link>\n        );\n    }\n}\n\nexport default SkillDescriptor;\n","import {BuffType, Func, Region} from \"@atlasacademy/api-connector\";\nimport FuncType from \"@atlasacademy/api-connector/dist/Enum/FuncType\";\nimport DataVal from \"@atlasacademy/api-connector/dist/Schema/DataVal\";\nimport React from \"react\";\nimport {asPercent, mergeElements, Renderable} from \"../Helper/OutputHelper\";\nimport BuffValueDescriptor from \"./BuffValueDescriptor\";\n\ninterface IProps {\n    region: Region;\n    func: Func;\n    staticDataVal: DataVal;\n    dataVal: DataVal;\n    hideRate?: boolean;\n}\n\nclass FuncValueDescriptor extends React.Component<IProps> {\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            dataVal = this.props.dataVal,\n            parts: Renderable[] = [];\n\n        if (func.funcType === FuncType.ABSORB_NPTURN) {\n            switch (this.props.staticDataVal.DependFuncId) {\n                case 469:\n                    const npAbsorbParts = [];\n                    if (dataVal.DependFuncVals?.Value) {\n                        npAbsorbParts.push(`${asPercent(dataVal.DependFuncVals.Value, 2)}`);\n                    }\n\n                    if (typeof dataVal.DependFuncVals?.Value2 === \"number\") {\n                        npAbsorbParts.push(`${dataVal.DependFuncVals.Value2 / 100} Charge`);\n                    }\n\n                    if (npAbsorbParts.length) {\n                        parts.push(<React.Fragment>\n                            ({mergeElements(npAbsorbParts, ' => ')})\n                        </React.Fragment>);\n                    }\n                    break;\n                case 5061:\n                    if (dataVal.DependFuncVals?.Value)\n                        parts.push(dataVal.DependFuncVals.Value.toString());\n                    break;\n            }\n        }\n\n        if (func.funcType === FuncType.GAIN_HP_FROM_TARGETS) {\n            switch (this.props.staticDataVal.DependFuncId) {\n                case 711:\n                    if (dataVal.DependFuncVals?.Value)\n                        parts.push(dataVal.DependFuncVals?.Value.toString());\n                    break;\n            }\n        }\n\n        if (func.funcType === FuncType.GAIN_NP_FROM_TARGETS) {\n            switch (this.props.staticDataVal.DependFuncId) {\n                case 474:\n                    const npAbsorbParts = [];\n                    if (dataVal.DependFuncVals?.Value) {\n                        npAbsorbParts.push(`${dataVal.DependFuncVals.Value} Charge`);\n                    }\n\n                    if (dataVal.DependFuncVals?.Value2) {\n                        npAbsorbParts.push(`${asPercent(dataVal.DependFuncVals.Value2, 2)}`);\n                    }\n\n                    if (npAbsorbParts.length) {\n                        parts.push(<React.Fragment>\n                            ({mergeElements(npAbsorbParts, ' => ')})\n                        </React.Fragment>);\n                    }\n                    break;\n                case 3962:\n                    if (dataVal.DependFuncVals?.Value)\n                        parts.push(asPercent(dataVal.DependFuncVals?.Value, 2));\n                    break;\n            }\n        }\n\n        if (\n            (func.funcType === FuncType.ADD_STATE || func.funcType === FuncType.ADD_STATE_SHORT)\n            && func.buffs[0]\n            && (\n                dataVal.Value\n                || (func.buffs[0].type === BuffType.DAMAGE_FUNCTION && dataVal.Value2)\n                || (func.buffs[0].type === BuffType.DEAD_FUNCTION && dataVal.Value2)\n                || (func.buffs[0].type === BuffType.DELAY_FUNCTION && dataVal.Value2)\n                || (func.buffs[0].type === BuffType.NPATTACK_PREV_BUFF && dataVal.SkillID)\n                || (func.buffs[0].type === BuffType.SELFTURNEND_FUNCTION && dataVal.Value2)\n            )\n        ) {\n            return <BuffValueDescriptor region={region} buff={func.buffs[0]} dataVal={dataVal}/>;\n        }\n\n        if (!this.props.hideRate && dataVal.Rate !== undefined) {\n            parts.push(asPercent(dataVal.Rate, 1));\n        }\n\n        if (dataVal.Value !== undefined) {\n            switch (func.funcType) {\n                case FuncType.DAMAGE_NP:\n                case FuncType.DAMAGE_NP_HPRATIO_LOW:\n                case FuncType.DAMAGE_NP_INDIVIDUAL:\n                case FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                case FuncType.DAMAGE_NP_PIERCE:\n                case FuncType.DAMAGE_NP_RARE:\n                case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                case FuncType.GAIN_HP_PER:\n                case FuncType.QP_DROP_UP:\n                    parts.push(asPercent(dataVal.Value, 1));\n                    break;\n                case FuncType.GAIN_NP:\n                case FuncType.GAIN_NP_BUFF_INDIVIDUAL_SUM:\n                case FuncType.LOSS_NP:\n                    parts.push(asPercent(dataVal.Value, 2));\n                    break;\n                default:\n                    parts.push(dataVal.Value.toString());\n            }\n        }\n\n        if (dataVal.Value2 !== undefined) {\n            switch (func.funcType) {\n                case FuncType.GAIN_NP_FROM_TARGETS:\n                    parts.push(asPercent(dataVal.Value2, 2));\n                    break;\n                case FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                    parts.push(\"additional \" + asPercent(dataVal.Value2, 1));\n            }\n        }\n\n        if (dataVal.Correction) {\n            switch (func.funcType) {\n                case FuncType.DAMAGE_NP_INDIVIDUAL:\n                case FuncType.DAMAGE_NP_RARE:\n                case FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                    parts.push(asPercent(dataVal.Correction, 1));\n                    break;\n                case FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                    parts.push(\"(\" + asPercent(dataVal.Correction, 1) + \" x count)\");\n                    break;\n                default:\n                    parts.push(dataVal.Correction.toString());\n            }\n        }\n\n        if (dataVal.Target !== undefined) {\n            switch (func.funcType) {\n                case FuncType.DAMAGE_NP_HPRATIO_LOW:\n                    parts.push(asPercent(dataVal.Target, 1));\n                    break;\n                // default:\n                //     parts.push(dataVal.Target.toString());\n            }\n        }\n\n        if (dataVal.AddCount !== undefined) {\n            switch (func.funcType) {\n                default:\n                    parts.push(dataVal.AddCount);\n            }\n        }\n\n        if (dataVal.RateCount) {\n            switch (func.funcType) {\n                case FuncType.QP_DROP_UP:\n                case FuncType.SERVANT_FRIENDSHIP_UP:\n                case FuncType.USER_EQUIP_EXP_UP:\n                    parts.push(asPercent(dataVal.RateCount, 1));\n                    break;\n                default:\n                    parts.push(dataVal.RateCount);\n            }\n        }\n\n        if (!parts.length)\n            return <span>-</span>;\n\n        return <span>{mergeElements(parts, ' + ')}</span>;\n    }\n}\n\nexport default FuncValueDescriptor;\n","import {Buff, BuffType, Region} from \"@atlasacademy/api-connector\";\nimport DataVal from \"@atlasacademy/api-connector/dist/Schema/DataVal\";\nimport React from \"react\";\nimport {asPercent} from \"../Helper/OutputHelper\";\nimport TraitDescriptor from \"./TraitDescriptor\";\n\ninterface IProps {\n    region: Region;\n    buff: Buff;\n    dataVal: DataVal;\n}\n\nclass BuffValueDescriptor extends React.Component<IProps> {\n    render() {\n        let value: JSX.Element | string | null = null;\n\n        switch (this.props.buff.type) {\n            case BuffType.UP_ATK:\n            case BuffType.DOWN_ATK:\n            case BuffType.UP_COMMANDALL:\n            case BuffType.DOWN_COMMANDALL:\n            case BuffType.UP_CRITICALDAMAGE:\n            case BuffType.DOWN_CRITICALDAMAGE:\n            case BuffType.UP_CRITICALPOINT:\n            case BuffType.DOWN_CRITICALPOINT:\n            case BuffType.UP_CRITICALRATE:\n            case BuffType.DOWN_CRITICALRATE:\n            case BuffType.UP_CRITICAL_RATE_DAMAGE_TAKEN:\n            case BuffType.DOWN_CRITICAL_RATE_DAMAGE_TAKEN:\n            case BuffType.UP_DAMAGE:\n            case BuffType.DOWN_DAMAGE:\n            case BuffType.UP_DAMAGEDROPNP:\n            case BuffType.DOWN_DAMAGEDROPNP:\n            case BuffType.UP_DEFENCE:\n            case BuffType.DOWN_DEFENCE:\n            case BuffType.UP_DEFENCECOMMANDALL:\n            case BuffType.DOWN_DEFENCECOMMANDALL:\n            case BuffType.UP_DROPNP:\n            case BuffType.DOWN_DROPNP:\n            case BuffType.UP_FUNC_HP_REDUCE:\n            case BuffType.DOWN_FUNC_HP_REDUCE:\n            case BuffType.UP_HATE:\n            case BuffType.UP_NONRESIST_INSTANTDEATH:\n            case BuffType.UP_NPDAMAGE:\n            case BuffType.DOWN_NPDAMAGE:\n            case BuffType.UP_SPECIALDEFENCE:\n            case BuffType.DOWN_SPECIALDEFENCE:\n            case BuffType.UP_STARWEIGHT:\n            case BuffType.DOWN_STARWEIGHT:\n            case BuffType.UP_TOLERANCE:\n            case BuffType.DOWN_TOLERANCE:\n            case BuffType.UP_TOLERANCE_SUBSTATE:\n            case BuffType.DOWN_TOLERANCE_SUBSTATE:\n                value = asPercent(this.props.dataVal.Value, 1);\n                break;\n            case BuffType.REGAIN_NP:\n                value = asPercent(this.props.dataVal.Value, 2);\n                break;\n            case BuffType.ATTACK_FUNCTION:\n            case BuffType.COMMANDATTACK_FUNCTION:\n            case BuffType.COMMANDATTACK_BEFORE_FUNCTION:\n            case BuffType.DAMAGE_FUNCTION:\n            case BuffType.DEAD_FUNCTION:\n            case BuffType.DELAY_FUNCTION:\n            case BuffType.SELFTURNEND_FUNCTION:\n                if (this.props.dataVal.Value2)\n                    value = 'Lv. ' + this.props.dataVal.Value2;\n                break;\n            case BuffType.NPATTACK_PREV_BUFF:\n                if (this.props.dataVal.SkillLV)\n                    value = 'Lv. ' + this.props.dataVal.SkillLV;\n                break;\n            case BuffType.FIELD_INDIVIDUALITY:\n                if (typeof this.props.dataVal.Value === \"number\")\n                    value = <TraitDescriptor region={this.props.region} trait={this.props.dataVal.Value}/>;\n                break;\n            default:\n                value = this.props.dataVal.Value?.toString() ?? \"\";\n        }\n\n        return value;\n    }\n}\n\nexport default BuffValueDescriptor;\n","import {BuffType, Func, Region} from \"@atlasacademy/api-connector\";\nimport FuncType from \"@atlasacademy/api-connector/dist/Enum/FuncType\";\nimport DataVal from \"@atlasacademy/api-connector/dist/Schema/DataVal\";\nimport React from \"react\";\nimport BuffDescriptor from \"../BuffDescriptor\";\nimport TraitDescriptor from \"../TraitDescriptor\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport const funcDescriptions = new Map<FuncType, string>([\n    [FuncType.ABSORB_NPTURN, 'Absorb Charge'],\n    [FuncType.ADD_STATE, 'Apply Buff'],\n    [FuncType.ADD_STATE_SHORT, 'Apply Buff'],\n    [FuncType.CARD_RESET, 'Shuffle Cards'],\n    [FuncType.DAMAGE_NP, 'Deal Damage'],\n    [FuncType.DAMAGE_NP_HPRATIO_LOW, 'Deal Damage with Bonus for Low Health'],\n    [FuncType.DAMAGE_NP_INDIVIDUAL, 'Deal Damage with Bonus to Trait'],\n    [FuncType.DAMAGE_NP_INDIVIDUAL_SUM, 'Deal Damage with Bonus per Trait'],\n    [FuncType.DAMAGE_NP_PIERCE, 'Deal Damage that pierces defense'],\n    [FuncType.DAMAGE_NP_RARE, 'Deal Damage with Bonus to Rarity'],\n    [FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX, 'Deal Damage with Bonus to Trait'],\n    [FuncType.DELAY_NPTURN, 'Drain Charge'],\n    [FuncType.EVENT_DROP_UP, 'Increase Drop Amount'],\n    [FuncType.ENEMY_ENCOUNT_COPY_RATE_UP, 'Create Clone of Enemy'],\n    [FuncType.ENEMY_ENCOUNT_RATE_UP, 'Improve Appearance Rate of Enemy'],\n    [FuncType.EXP_UP, 'Increase Master Exp'],\n    [FuncType.EXTEND_SKILL, 'Increase Cooldowns'],\n    [FuncType.FIX_COMMANDCARD, 'Lock Command Cards'],\n    [FuncType.FORCE_INSTANT_DEATH, 'Force Instant Death'],\n    [FuncType.GAIN_HP, 'Restore HP'],\n    [FuncType.GAIN_HP_FROM_TARGETS, 'Absorb HP'],\n    [FuncType.GAIN_HP_PER, 'Restore HP to Percent'],\n    [FuncType.GAIN_NP, 'Charge NP'],\n    [FuncType.GAIN_NP_BUFF_INDIVIDUAL_SUM, 'Charge NP per Trait'],\n    [FuncType.GAIN_NP_FROM_TARGETS, 'Absorb NP'],\n    [FuncType.GAIN_STAR, 'Gain Critical Stars'],\n    [FuncType.HASTEN_NPTURN, 'Increase Charge'],\n    [FuncType.INSTANT_DEATH, 'Apply Death'],\n    [FuncType.LOSS_HP, 'Drain HP'],\n    [FuncType.LOSS_HP_SAFE, 'Drain HP without killing'],\n    [FuncType.LOSS_NP, 'Drain NP'],\n    [FuncType.LOSS_STAR, 'Remove Critical Stars'],\n    [FuncType.NONE, 'No Effect'],\n    [FuncType.QP_DROP_UP, 'Increase QP Reward'],\n    [FuncType.QP_UP, 'Increase QP Reward'],\n    [FuncType.REPLACE_MEMBER, 'Swap members'],\n    [FuncType.SERVANT_FRIENDSHIP_UP, 'Increase Bond Gain'],\n    [FuncType.SHORTEN_SKILL, 'Reduce Cooldowns'],\n    [FuncType.SUB_STATE, 'Remove Effects'],\n    [FuncType.USER_EQUIP_EXP_UP, 'Increase Mystic Code Exp'],\n]);\n\nfunction handleBuffActionSection(region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    parts.push('Apply');\n    func.buffs.forEach((buff, index) => {\n        if (index > 0)\n            parts.push('&');\n\n        parts.push(<BuffDescriptor region={region} buff={buff}/>);\n    });\n\n    if (func.buffs[0]?.type === BuffType.FIELD_INDIVIDUALITY) {\n        sections.amount.preposition = 'to';\n    }\n\n    sections.target.preposition = 'on';\n    if (\n        func.buffs[0]?.type === BuffType.COMMANDATTACK_FUNCTION\n        || func.buffs[0]?.type === BuffType.NPATTACK_PREV_BUFF\n    ) {\n        sections.target.preposition = 'for';\n    }\n}\n\nfunction handleCleanseActionSection(region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n\n    if (func.traitVals?.length) {\n        parts.push('with');\n\n        func.traitVals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('or');\n\n            parts.push(<TraitDescriptor region={region} trait={trait}/>);\n        });\n    }\n\n    sections.target.preposition = 'on';\n}\n\nfunction handleChargeNpPerTraitActionSection(region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    parts.push('Charge NP per');\n\n    if (func.traitVals?.length) {\n        func.traitVals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<TraitDescriptor region={region} trait={trait}/>);\n        });\n    }\n\n    parts.push('traits');\n\n    sections.amount.preposition = 'by';\n    sections.target.preposition = 'for';\n}\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    if (func.funcType === FuncType.ADD_STATE || func.funcType === FuncType.ADD_STATE_SHORT) {\n        handleBuffActionSection(region, sections, func, dataVal);\n\n        return;\n    } else if (func.funcType === FuncType.SUB_STATE) {\n        handleCleanseActionSection(region, sections, func, dataVal);\n\n        return;\n    } else if (func.funcType === FuncType.GAIN_NP_BUFF_INDIVIDUAL_SUM) {\n        handleChargeNpPerTraitActionSection(region, sections, func, dataVal);\n\n        return;\n    } else if (\n        func.funcType === FuncType.DAMAGE_NP\n        || func.funcType === FuncType.DAMAGE_NP_HPRATIO_LOW\n        || func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL\n        || func.funcType === FuncType.DAMAGE_NP_INDIVIDUAL_SUM\n        || func.funcType === FuncType.DAMAGE_NP_PIERCE\n        || func.funcType === FuncType.DAMAGE_NP_RARE\n        || func.funcType === FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX\n    ) {\n        parts.push('Deal damage');\n        sections.amount.preposition = 'of';\n\n        return;\n    }\n\n    switch (func.funcType) {\n        case FuncType.ABSORB_NPTURN:\n        case FuncType.GAIN_HP_FROM_TARGETS:\n        case FuncType.GAIN_NP_FROM_TARGETS:\n            sections.amount.preposition = 'of';\n            sections.target.preposition = 'from';\n            break;\n        case FuncType.CARD_RESET:\n        case FuncType.GAIN_STAR:\n        case FuncType.LOSS_STAR:\n        case FuncType.NONE:\n            sections.target.showing = false;\n            break;\n        case FuncType.DELAY_NPTURN:\n        case FuncType.LOSS_HP:\n        case FuncType.LOSS_HP_SAFE:\n        case FuncType.LOSS_NP:\n            sections.amount.preposition = 'by';\n            sections.target.preposition = 'from';\n            break;\n        case FuncType.ENEMY_ENCOUNT_COPY_RATE_UP:\n        case FuncType.ENEMY_ENCOUNT_RATE_UP:\n        case FuncType.FIX_COMMANDCARD:\n            sections.amount.showing = false;\n            sections.target.showing = false;\n            break;\n        case FuncType.EVENT_DROP_UP:\n        case FuncType.EXP_UP:\n        case FuncType.QP_DROP_UP:\n        case FuncType.QP_UP:\n        case FuncType.SERVANT_FRIENDSHIP_UP:\n        case FuncType.USER_EQUIP_EXP_UP:\n            sections.chance.showing = false;\n            sections.amount.preposition = 'by';\n            sections.target.showing = false;\n            break;\n        case FuncType.EXTEND_SKILL:\n        case FuncType.GAIN_HP:\n        case FuncType.GAIN_NP:\n        case FuncType.HASTEN_NPTURN:\n        case FuncType.SHORTEN_SKILL:\n            sections.amount.preposition = 'by';\n            sections.target.preposition = 'for';\n            break;\n        case FuncType.FORCE_INSTANT_DEATH:\n        case FuncType.INSTANT_DEATH:\n            sections.amount.showing = false;\n            sections.target.preposition = 'on';\n            break;\n        case FuncType.GAIN_HP_PER:\n            sections.amount.preposition = 'of';\n            sections.target.preposition = 'for';\n            break;\n        case FuncType.REPLACE_MEMBER:\n            sections.amount.showing = false;\n            sections.target.preposition = 'with';\n            break;\n    }\n\n    parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n}\n","import {Region, Skill} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Api from \"../Api\";\nimport SkillDescriptor from \"./SkillDescriptor\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    skill?: Skill;\n}\n\nclass SkillReferenceDescriptor extends React.Component<IProps, IState> {\n    constructor(props:IProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    async componentDidMount() {\n        try {\n            this.setState({\n                skill: await Api.skill(this.props.id)\n            });\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    render() {\n        const route = `/${this.props.region}/skill/${this.props.id}`;\n\n        if (this.state.skill === undefined) {\n            return <Link to={route}>[Skill: {this.props.id}]</Link>;\n        }\n\n        return (\n            <SkillDescriptor region={this.props.region} skill={this.state.skill}/>\n        );\n    }\n}\n\nexport default SkillReferenceDescriptor;\n","import {Func, Region} from \"@atlasacademy/api-connector\";\nimport FuncTargetType from \"@atlasacademy/api-connector/dist/Enum/FuncTargetType\";\nimport FuncType from \"@atlasacademy/api-connector/dist/Enum/FuncType\";\nimport DataVal from \"@atlasacademy/api-connector/dist/Schema/DataVal\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport const targetDescriptions = new Map<FuncTargetType, string>([\n    [FuncTargetType.SELF, 'self'],\n    [FuncTargetType.PT_ONE, 'party member'],\n    // PT_ANOTHER\n    [FuncTargetType.PT_ALL, 'party'],\n    [FuncTargetType.ENEMY, 'enemy'],\n    // ENEMY_ANOTHER\n    [FuncTargetType.ENEMY_ALL, 'enemies'],\n    [FuncTargetType.PT_FULL, 'party (including reserve)'],\n    [FuncTargetType.ENEMY_FULL, 'enemies (including reserve)'],\n    [FuncTargetType.PT_OTHER, 'party except self'],\n    [FuncTargetType.PT_ONE_OTHER, 'other party members besides target'],\n    [FuncTargetType.PT_RANDOM, 'random party member'],\n    [FuncTargetType.ENEMY_OTHER, 'other enemies besides target'],\n    [FuncTargetType.ENEMY_RANDOM, 'random enemy'],\n    [FuncTargetType.PT_OTHER_FULL, 'party except self (including reserve)'],\n    [FuncTargetType.ENEMY_OTHER_FULL, 'other enemies (including reserve)'],\n    [FuncTargetType.PTSELECT_ONE_SUB, 'active party member and reserve party member'],\n    [FuncTargetType.PTSELECT_SUB, 'reserve party member'],\n    // PT_ONE_ANOTHER_RANDOM\n    [FuncTargetType.PT_ONE_ANOTHER_RANDOM, 'other random party member'],\n    [FuncTargetType.PT_SELF_ANOTHER_RANDOM, 'other random party member (except self)'],\n    [FuncTargetType.ENEMY_ONE_ANOTHER_RANDOM, 'other random enemy'],\n    [FuncTargetType.PT_SELF_ANOTHER_FIRST, 'first other party member (except self)'],\n    // PT_SELF_BEFORE\n    // PT_SELF_AFTER\n    // PT_SELF_ANOTHER_LAST\n    [FuncTargetType.COMMAND_TYPE_SELF_TREASURE_DEVICE, 'target noble phantasm version'],\n]);\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func, dataVal: DataVal): void {\n    const section = sections.target,\n        parts = section.parts;\n\n    let targetType: FuncTargetType | undefined = func.funcTargetType;\n\n    if (func.funcType === FuncType.ABSORB_NPTURN) {\n        switch (dataVal.DependFuncId) {\n            case 469:\n                targetType = FuncTargetType.ENEMY_ALL;\n                break;\n            case 5061:\n                targetType = FuncTargetType.PT_OTHER;\n                break;\n        }\n    } else if (func.funcType === FuncType.GAIN_HP_FROM_TARGETS) {\n        switch (dataVal.DependFuncId) {\n            case 711:\n                targetType = FuncTargetType.ENEMY_ALL;\n                break;\n            default:\n                targetType = undefined;\n                section.showing = false;\n                break;\n        }\n    } else if (func.funcType === FuncType.GAIN_NP_FROM_TARGETS) {\n        switch (dataVal.DependFuncId) {\n            case 474:\n                targetType = FuncTargetType.ENEMY_ALL;\n                break;\n            case 3962:\n                targetType = FuncTargetType.PT_OTHER;\n                break;\n        }\n    }\n\n    if (targetType) {\n        parts.push(targetDescriptions.get(targetType) ?? targetType);\n    }\n}\n"],"sourceRoot":""}