{"version":3,"sources":["Helper/OutputHelper.tsx","Component/BuffIcon.tsx","Descriptor/TraitDescription.tsx","Descriptor/SkillDescriptor.tsx","Descriptor/SkillReferenceDescriptor.tsx","Descriptor/CardDescription.tsx","Descriptor/Description.tsx","Helper/FuncHelper.tsx","Descriptor/Func/FuncDescriptorSections.tsx","Descriptor/BuffValueDescription.tsx","Descriptor/Func/handleAmountSection.tsx","Descriptor/FuncDescriptor.tsx","Descriptor/Func/handleTeamSection.tsx","Descriptor/Func/handleChanceSection.tsx","Descriptor/Func/handleAffectsSection.tsx","Descriptor/Func/handleDurationSection.tsx","Descriptor/Func/handleScalingSection.tsx","Descriptor/BuffDescription.tsx","Descriptor/FuncValueDescriptor.tsx","Descriptor/Func/handleActionSection.tsx","Descriptor/Func/handleTargetSection.tsx"],"names":["asPercent","value","pow","parseInt","decimal","Math","formatNumber","String","replace","handleNewLine","text","mergeElements","split","joinElements","elements","separator","parts","pushElement","element","undefined","length","previous","toString","push","forEach","index","seperator","Fragment","map","key","BuffIcon","alt","src","this","props","location","style","height","verticalAlign","React","Component","TraitDescription","state","id","trait","Api","traitList","i","setState","descriptor","TraitDescriptor","describe","overrideTraits","region","disableLink","getDescription","to","getLocation","Description","renderAsString","SkillDescriptor","skill","icon","iconHeight","name","SkillReferenceDescriptor","route","CardDescription","CardDescriptor","card","partial","referenceType","ReferenceType","CARD","SKILL","TRAIT","partials","fragments","type","PartialType","PARTICLE","renderParticle","REFERENCE","renderReference","TEXT","renderText","VALUE","renderValue","valueType","ValueType","PERCENT","renderReferenceAsString","join","hasChangingDataVals","vals","JSON","stringify","hasUniqueValues","values","Set","Array","isArray","size","describeMutators","func","dataVals","getDataValList","staticVals","getStaticFieldValues","getMutatingFieldValues","fields","Object","DataVal","DataValField","filter","field","val","getMutatingFieldNames","dependingVals","DependFuncVals","dependingMutatingValues","staticValues","mutatingVals","x","fieldName","DependFuncId","mutatingVal","staticDataVal","dataVal","funcUpdatesByLevel","getLevelDataValList","funcUpdatesByOvercharge","getOverchargeDataValList","isLevel","isOvercharge","getTargetVersionValues","getMixedDataValList","getFollowerDataValList","followerVals","svals","getRelatedSkillIds","funcType","Func","FuncType","ADD_STATE","ADD_STATE_SHORT","buff","buffs","Buff","BuffType","ATTACK_FUNCTION","COMMANDATTACK_FUNCTION","COMMANDATTACK_BEFORE_FUNCTION","COMMANDCODEATTACK_FUNCTION","DAMAGE_FUNCTION","DEAD_FUNCTION","DELAY_FUNCTION","GUTS_FUNCTION","SELFTURNEND_FUNCTION","Value","NPATTACK_PREV_BUFF","SkillID","getStaticFieldNames","hasDependingVals","dependingStaticValues","getTargetFollowerVersionValues","level","overcharge","svals2","svals3","svals4","svals5","hasFollowerDataVals","FuncDescriptorSection","preposition","showing","FuncDescriptorSections","team","chance","action","affects","amount","target","duration","scaling","BuffValueDescription","BuffDescriptor","describeValue","sections","support","section","ADD_INDIVIDUALITY","CARD_RESET","DAMAGE_NP_INDIVIDUAL_SUM","FuncValueDescriptor","hideRate","ABSORB_NPTURN","GAIN_HP_FROM_TARGETS","GAIN_NP_FROM_TARGETS","AddCount","EVENT_DROP_UP","EXP_UP","QP_UP","USER_EQUIP_EXP_UP","RateCount","QP_DROP_UP","SERVANT_FRIENDSHIP_UP","Correction","FuncDescriptor","getDataVal","followerDataVal","getFollowerDataVal","funcTargetTeam","FuncTargetTeam","PLAYER","ENEMY","handleTeamSection","ActSet","ActSetWeight","Rate","ENEMY_ENCOUNT_COPY_RATE_UP","ENEMY_ENCOUNT_RATE_UP","NONE","handleChanceSection","handleActionSection","DAMAGE_NP_HPRATIO_LOW","Target","DAMAGE_NP_INDIVIDUAL","DAMAGE_NP_STATE_INDIVIDUAL_FIX","TargetList","traits","ParamAddMaxCount","TargetRarityList","DAMAGE_NP_RARE","DAMAGE_NP_PIERCE","Individuality","Number","EventId","funcquestTvals","functvals","handleAffectsSection","handleAmountSection","handleTargetSection","Count","Turn","countDesc","turnDesc","handleDurationSection","handleScalingSection","concat","funcId","faShare","BuffDescription","funcDescriptions","Map","DAMAGE_NP","DELAY_NPTURN","EXTEND_SKILL","FIX_COMMANDCARD","FORCE_INSTANT_DEATH","GAIN_HP","GAIN_HP_PER","GAIN_NP","GAIN_NP_BUFF_INDIVIDUAL_SUM","GAIN_STAR","HASTEN_NPTURN","INSTANT_DEATH","LOSS_HP","LOSS_HP_SAFE","LOSS_NP","LOSS_STAR","REPLACE_MEMBER","SHORTEN_SKILL","SUB_STATE","get","traitVals","handleChargeNpPerTraitActionSection","handleCleanseActionSection","FIELD_INDIVIDUALITY","CHANGE_COMMAND_CARD_TYPE","handleBuffActionSection","targetDescriptions","FuncTargetType","SELF","PT_ONE","PT_ALL","ENEMY_ALL","PT_FULL","ENEMY_FULL","PT_OTHER","PT_ONE_OTHER","PT_RANDOM","ENEMY_OTHER","ENEMY_RANDOM","PT_OTHER_FULL","ENEMY_OTHER_FULL","PTSELECT_ONE_SUB","PTSELECT_SUB","PT_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_RANDOM","ENEMY_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_FIRST","COMMAND_TYPE_SELF_TREASURE_DEVICE","targetType","funcTargetType"],"mappings":"sGAAA,8LASO,SAASA,EAAUC,EAAoCC,GAC1D,GAAqB,kBAAVD,EACP,OAAOD,EAAUG,SAASF,GAAQC,GAEtC,IAAME,GAAU,OAACH,QAAD,IAACA,IAAS,GAAKI,KAAKH,IAAI,GAAIA,GAE5C,MAAM,GAAN,OAAUE,EAAV,KAGG,SAASE,EAAaL,GACzB,OAAOM,OAAON,GAAOO,QAAQ,oBAAqB,OAG/C,SAASC,EAAcC,GAC1B,OAAKA,EAID,8BACKC,EAAcD,EAAKE,MAAM,MAAO,+BAJ9B,GASR,SAASC,EAAaC,EAAwBC,GACjD,IAAMC,EAAsB,GACxBC,EAAc,SAAUC,GACpB,QAAgBC,IAAZD,EAGJ,GAAuB,kBAAZA,EAKX,GAAqB,IAAjBF,EAAMI,OAAV,CAKA,IAAMC,EAAWL,EAAMA,EAAMI,OAAS,GACd,kBAAbC,EAKXL,EAAMA,EAAMI,OAAS,GAAKC,EAAWH,EAAQI,WAJzCN,EAAMO,KAAKL,EAAQI,iBANnBN,EAAMO,KAAKL,EAAQI,iBALnBN,EAAMO,KAAKL,IAyBvB,OAPAJ,EAASU,SAAQ,SAACN,EAASO,GACnBA,EAAQ,GACRR,EAAYF,GAEhBE,EAAYC,MAGTF,EAGJ,SAASL,EAAcG,EAAwBY,GAClD,OAAO,kBAAC,IAAMC,SAAP,KACFd,EAAaC,EAAUY,GAAWE,KAAI,SAACV,EAASO,GAC7C,OAAO,kBAAC,IAAME,SAAP,CAAgBE,IAAKJ,GAAQP,S,qFChE1CY,E,uKAEQ,IAAD,EACL,OACI,yBAAKC,IAAK,GAAIC,IAAKC,KAAKC,MAAMC,SAAUC,MAAO,CAC3CC,OAAM,UAAEJ,KAAKC,MAAMG,cAAb,QAAuB,GAC7BC,cAAe,gB,GANRC,IAAMC,WAadV,O,gJCDTW,E,kDACF,WAAYP,GAAgB,IAAD,8BACvB,cAAMA,IAEDQ,MAAQ,CACTC,GAA2B,kBAAhBT,EAAMU,MAAqBV,EAAMU,MAAQV,EAAMU,MAAMD,GAChEC,MAA8B,kBAAhBV,EAAMU,WAAqBzB,EAAYe,EAAMU,OALxC,E,wLAgBnBX,KAAKS,MAAME,M,iEAGSC,IAAIC,Y,OAAtBA,E,OAEGC,EAAI,E,YAAGA,EAAID,EAAU1B,Q,qBACpBwB,EAAQE,EAAUC,IAEdJ,KAAOV,KAAKS,MAAMC,G,wBACxBV,KAAKe,SAAS,CAACJ,U,2BAJeG,I,2JAWnBH,GACnB,IAAMK,EAAaC,IAAgBC,SAASP,EAAOX,KAAKC,MAAMkB,gBAE9D,OAAO,kBAAC,IAAD,CAAaC,OAAQpB,KAAKC,MAAMmB,OAAQJ,WAAYA,M,oCAI3D,MAAM,IAAN,OAAWhB,KAAKC,MAAMmB,OAAtB,2BAA+CpB,KAAKS,MAAMC,M,+BAGpD,IAAD,EACCC,EAAK,UAAGX,KAAKS,MAAME,aAAd,QAAuBX,KAAKS,MAAMC,GAE7C,OACIV,KAAKC,MAAMoB,YACL,kCAAQrB,KAAKsB,eAAeX,GAA5B,KACA,kBAAC,IAAD,CAAMY,GAAIvB,KAAKwB,eAAf,IAAgCxB,KAAKsB,eAAeX,GAApD,Q,sCAvCQA,GAClB,IAAMK,EAAaC,IAAgBC,SAASP,GAE5C,OAAOc,IAAYC,eAAeV,O,GAbXV,IAAMC,WAsDtBC,O,sGC9DTmB,E,uKAQE,OACI,kBAAC,IAAD,CAAMJ,GAAE,WAAMvB,KAAKC,MAAMmB,OAAjB,kBAAiCpB,KAAKC,MAAM2B,MAAMlB,KACrDV,KAAKC,MAAM2B,MAAMC,KACd,kBAAC,IAAD,CAAU3B,SAAUF,KAAKC,MAAM2B,MAAMC,KAAMzB,OAAQJ,KAAKC,MAAM6B,kBAC9D5C,EACHc,KAAKC,MAAM2B,MAAMC,KAAO,SAAM3C,EAJnC,IAKMc,KAAKC,MAAM2B,MAAMG,KAAO/B,KAAKC,MAAM2B,MAAMG,KAAzC,iBAA0D/B,KAAKC,MAAM2B,MAAMlB,IALjF,Q,sCARckB,GAClB,IAAMG,EAAOH,EAAMG,KAAOH,EAAMG,KAAnB,iBAAoCH,EAAMlB,IAEvD,MAAM,IAAN,OAAWqB,EAAX,S,GAJsBzB,IAAMC,WAoBrBoB,O,uIChBTK,E,kDACF,WAAY/B,GAAgB,IAAD,8BACvB,cAAMA,IAEDQ,MAAQ,GAHU,E,+LAQnBT,K,SACiBY,IAAIgB,MAAM5B,KAAKC,MAAMS,I,yBAAlCkB,M,WADCb,S,8MAaT,IAAMkB,EAAK,WAAOjC,KAAKC,MAAMmB,OAAlB,kBAAkCpB,KAAKC,MAAMS,IAExD,YAAyBxB,IAArBc,KAAKS,MAAMmB,MACJ,kBAAC,IAAD,CAAML,GAAIU,GAAV,WAA0BjC,KAAKC,MAAMS,GAArC,KAIP,kBAAC,IAAD,CAAiBU,OAAQpB,KAAKC,MAAMmB,OAAQQ,MAAO5B,KAAKS,MAAMmB,W,sCAZhDlB,GAClB,MAAM,WAAN,OAAkBA,EAAlB,S,GAlB+BJ,IAAMC,WAkC9ByB,O,8FCrBAE,E,uKAVP,IAAMlB,EAAamB,IAAejB,SAASlB,KAAKC,MAAMmC,MAEtD,OAAO,kCAEH,kBAAC,EAAD,CAAahB,OAAQpB,KAAKC,MAAMmB,OAAQJ,WAAYA,IAFjD,Q,sCATWoB,GAClB,IAAMpB,EAAamB,IAAejB,SAASkB,GAE3C,MAAO,IAAMX,EAAYC,eAAeV,GAAc,Q,GAJhCV,IAAMC,W,2BCY9BkB,E,8KAwDsBY,EAA2BzC,GAC/C,OAAIyC,EAAQC,gBAAkBC,IAAcC,KACjC,kBAAC,EAAD,CAAiB5C,IAAKA,EAAKwB,OAAQpB,KAAKC,MAAMmB,OAAQgB,KAAMC,EAAQrE,QACpEqE,EAAQC,gBAAkBC,IAAcE,MAClB,kBAAlBJ,EAAQrE,MACR,kBAACgE,EAAA,EAAD,CAA0BpC,IAAKA,EAAKwB,OAAQpB,KAAKC,MAAMmB,OAAQV,GAAI2B,EAAQrE,QAE3E,kBAAC2D,EAAA,EAAD,CAAiB/B,IAAKA,EAAKwB,OAAQpB,KAAKC,MAAMmB,OAAQQ,MAAOS,EAAQrE,QAEzEqE,EAAQC,gBAAkBC,IAAcG,MACxC,kBAAClC,EAAA,EAAD,CAAkBZ,IAAKA,EAAKwB,OAAQpB,KAAKC,MAAMmB,OAAQT,MAAO0B,EAAQrE,QAG1EqE,EAAQrE,MAAMqB,a,+BAOrB,IAHA,IAAMsD,EAAW3C,KAAKC,MAAMe,WAAW2B,WACnCC,EAAY,GAEP9B,EAAI,EAAGA,EAAI6B,EAASxD,OAAQ2B,IAAK,CACtC,IAAMuB,EAAUM,EAAS7B,GAErBuB,EAAQQ,OAASC,IAAYC,SAC7BH,EAAUtD,KAAKmC,EAAYuB,eAAeX,IACnCA,EAAQQ,OAASC,IAAYG,UACpCL,EAAUtD,KAAKU,KAAKkD,gBAAgBb,EAA6BvB,IAC1DuB,EAAQQ,OAASC,IAAYK,KACpCP,EAAUtD,KAAKmC,EAAY2B,WAAWf,IAC/BA,EAAQQ,OAASC,IAAYO,MACpCT,EAAUtD,KAAKmC,EAAY6B,YAAYjB,IAEvCO,EAAUtD,KAAK+C,EAAQrE,MAAMqB,YAIrC,OAAO,kBAAC,IAAMK,SAAP,KAAiBkD,M,sCA3FEP,GAC1B,OAAOA,EAAQrE,Q,8CAGoBqE,GACnC,OAAIA,EAAQC,gBAAkBC,IAAcC,KACjCN,EAAgBR,eAAeW,EAAQrE,OACvCqE,EAAQC,gBAAkBC,IAAcE,MAClB,kBAAlBJ,EAAQrE,MACRgE,IAAyBN,eAAeW,EAAQrE,OAEhD2D,IAAgBD,eAAeW,EAAQrE,OAE3CqE,EAAQC,gBAAkBC,IAAcG,MACxClC,IAAiBkB,eAAeW,EAAQrE,OAG5CqE,EAAQrE,MAAMqB,a,iCAGCgD,GACtB,OAAOA,EAAQrE,Q,kCAGQqE,GACvB,OAAIA,EAAQkB,YAAcC,IAAUC,QACzBpB,EAAQrE,MAAMqB,WAAa,IAG/BgD,EAAQrE,MAAMqB,a,qCAGH2B,GAIlB,IAHA,IAAM2B,EAAW3B,EAAW2B,WACxBC,EAAsB,GAEjB9B,EAAI,EAAGA,EAAI6B,EAASxD,OAAQ2B,IAAK,CACtC,IAAMuB,EAAUM,EAAS7B,GAErBuB,EAAQQ,OAASC,IAAYC,SAC7BH,EAAUtD,KAAKmC,EAAYuB,eAAeX,IACnCA,EAAQQ,OAASC,IAAYG,UACpCL,EAAUtD,KAAKmC,EAAYiC,wBAAwBrB,IAC5CA,EAAQQ,OAASC,IAAYK,KACpCP,EAAUtD,KAAKmC,EAAY2B,WAAWf,IAC/BA,EAAQQ,OAASC,IAAYO,MACpCT,EAAUtD,KAAKmC,EAAY6B,YAAYjB,IAEvCO,EAAUtD,KAAK+C,EAAQrE,MAAMqB,YAIrC,OAAOuD,EAAUe,KAAK,Q,GArDJrD,IAAMC,WAiGjBkB,S,iCCvHf,yXAKMmC,EAAsB,SAAUC,GAClC,IAAKA,EAAK1E,OACN,OAAO,EAGX,IADA,IAAIC,EAAWyE,EAAK,GACX/C,EAAI,EAAGA,EAAI+C,EAAK1E,OAAQ2B,IAAK,CAClC,GAAIgD,KAAKC,UAAU3E,KAAc0E,KAAKC,UAAUF,EAAK/C,IACjD,OAAO,EAEX1B,EAAWyE,EAAK/C,GAGpB,OAAO,GAGLkD,EAAkB,SAAUC,GAC9B,OAAsB,IAAlBA,EAAO9E,QAGJ,IAAI+E,IACPD,EAAOtE,KAAI,SAAA3B,GACP,OAAImG,MAAMC,QAAQpG,GACPA,EAAM2F,KAAK,KAEf3F,MAEbqG,KAAO,GAGN,SAASC,EAAiBlD,EAAgBmD,GAC7C,IAAMC,EAAWC,EAAeF,GAC5BG,EAAaC,EAAqBH,GAGtC,OAkDG,SAASI,EAAuBf,GACnC,IAAKA,EAAK1E,OACN,MAAO,GAEX,IAAM0F,EAZH,SAA+BhB,GAClC,OAAOiB,OAAOb,OAAOc,IAAQC,cAAcC,QAAO,SAAAC,GAC9C,IAAMjB,EAASJ,EAAKlE,KAAI,SAAAwF,GAAG,OAAIA,EAAID,MAEnC,OAAOlB,EAAgBC,MAQZmB,CAAsBvB,GAEjCwB,EADmBxB,EAAKoB,QAAO,SAAAE,GAAG,YAA2BjG,IAAvBiG,EAAIG,kBAA8BnG,OAAS,EAGvE0E,EAAKlE,KAAI,SAAAwF,GAAG,uBAAKA,EAAIG,sBAAT,QAA2B,WACvCpG,EAEVqG,EAA0BF,EAAgBT,EAAuBS,GAAiB,GAClFG,EAAeb,EAAqBd,GAExC,OAAOA,EAAKlE,KAAI,SAACwF,EAAK3F,GAClB,IAAMiG,EAAgC,GAEtC,IAAK,IAAIC,KAAKb,EAAQ,CAClB,IAAMc,EAAYd,EAAOa,GAGzBD,EAAaE,GAAaR,EAAIQ,GAQlC,OALIH,EAAaI,cAAgBL,EAAwB/F,KACrDiG,EAAaG,aAAeJ,EAAaI,aACzCH,EAAaH,eAAiBC,EAAwB/F,IAGnDiG,KAjFQb,CAAuBJ,GAGrC7E,KAAI,SAAAkG,GAAW,OAAI,kBAAC,IAAD,CAAqBzE,OAAQA,EAAQmD,KAAMA,EAAMuB,cAAepB,EAC3CqB,QAASF,OAGnD,SAASG,EAAmBzB,GAC/B,OAAOX,EAAoBqC,EAAoB1B,IAG5C,SAAS2B,EAAwB3B,GACpC,OAAOX,EAAoBuC,EAAyB5B,IAGjD,SAASE,EAAeF,GAC3B,IAAM6B,EAAUJ,EAAmBzB,GAC/B8B,EAAeH,EAAwB3B,GAE3C,OAAO6B,GAAWC,EAaf,SAA6B9B,GAGhC,IAFA,IAAMC,EAAW,GAER1D,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,IAAIiF,EAAUO,EAAuB/B,EAAMzD,EAAGA,QAC9B5B,IAAZ6G,GACAvB,EAASlF,KAAKyG,GAGtB,OAAOvB,EArBD+B,CAAoBhC,GACnB8B,EAAeF,EAAyB5B,GAAQ0B,EAAoB1B,GAGxE,SAASiC,EAAuBjC,GAAqC,IAAD,EACvE,iBAAOA,EAAKkC,oBAAZ,QAA4B,GAGzB,SAASR,EAAoB1B,GAAqC,IAAD,EACpE,iBAAOA,EAAKmC,aAAZ,QAAqB,GAwDlB,SAASP,EAAyB5B,GAGrC,IAFA,IAAMC,EAAW,GAER1D,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,IAAIiF,EAAUO,EAAuB/B,EAAM,EAAGzD,QAC9B5B,IAAZ6G,GACAvB,EAASlF,KAAKyG,GAGtB,OAAOvB,EAGJ,SAASmC,EAAmBpC,GAC/B,GAAIA,EAAKqC,WAAaC,IAAKC,SAASC,WAAaxC,EAAKqC,WAAaC,IAAKC,SAASE,gBAC7E,MAAO,GAEX,IAAMC,EAAO1C,EAAK2C,MAAM,GACxB,GACID,EAAKpE,OAASsE,IAAKC,SAASC,iBACzBJ,EAAKpE,OAASsE,IAAKC,SAASE,wBAC5BL,EAAKpE,OAASsE,IAAKC,SAASG,+BAC5BN,EAAKpE,OAASsE,IAAKC,SAASI,4BAC5BP,EAAKpE,OAASsE,IAAKC,SAASK,iBAC5BR,EAAKpE,OAASsE,IAAKC,SAASM,eAC5BT,EAAKpE,OAASsE,IAAKC,SAASO,gBAC5BV,EAAKpE,OAASsE,IAAKC,SAASQ,eAC5BX,EAAKpE,OAASsE,IAAKC,SAASS,qBACjC,CACE,IACI9B,EADatB,EAAeF,GACT,GAEvB,MAAgC,kBAAlBwB,EAAQ+B,MAAqB,CAAC/B,EAAQ+B,OAAS,GAGjE,GAAIb,EAAKpE,OAASsE,IAAKC,SAASW,mBAAoB,CAChD,IACIhC,EADatB,EAAeF,GACT,GAEvB,MAAkC,kBAApBwB,EAAQiC,QAAuB,CAACjC,EAAQiC,SAAW,GAGrE,MAAO,GAWJ,SAASrD,EAAqBd,GACjC,IAAKA,EAAK1E,OACN,MAAO,GAEX,IAAM0F,EAZH,SAA6BhB,GAChC,OAAOiB,OAAOb,OAAOc,IAAQC,cAAcC,QAAO,SAAAC,GAC9C,IAAMjB,EAASJ,EAAKlE,KAAI,SAAAwF,GAAG,OAAIA,EAAID,MAEnC,OAAQlB,EAAgBC,MAQbgE,CAAoBpE,GAC/Ba,EAA8B,GAC9BwD,EAAmBrE,EAAKoB,QAAO,SAAAE,GAAG,YAA2BjG,IAAvBiG,EAAIG,kBAA8BnG,OAAS,EACjFkG,EACI6C,EACMrE,EAAKlE,KAAI,SAAAwF,GAAG,uBAAKA,EAAIG,sBAAT,QAA2B,WACvCpG,EAEViJ,EAAwB9C,EAAgBV,EAAqBU,QAAiBnG,EAElF,IAAK,IAAIwG,KAAKb,EAEVH,EAAWG,EAAOa,IAAM7B,EAAK,GAAGgB,EAAOa,IAM3C,OAHIwC,IACAxD,EAAWY,eAAiB6C,GAEzBzD,EAGJ,SAAS0D,EAA+B7D,EAAiB8D,GAC5D,QAA0BnJ,IAAtBqF,EAAKkC,aAGT,OAAOlC,EAAKkC,aAAa4B,EAAQ,GAG9B,SAAS/B,EAAuB/B,EAAiB8D,GAAqE,IAAtDC,EAAqD,uDAAhC,EACxF,QAAmBpJ,IAAfqF,EAAKmC,MAgBT,OAXmB,IAAf4B,GAAoB/D,EAAKgE,OACdhE,EAAKgE,OACI,IAAfD,GAAoB/D,EAAKiE,OACnBjE,EAAKiE,OACI,IAAfF,GAAoB/D,EAAKkE,OACnBlE,EAAKkE,OACI,IAAfH,GAAoB/D,EAAKmE,OACnBnE,EAAKmE,OAELnE,EAAKmC,OAEJ2B,EAAQ,GAGrB,SAASM,EAAoBpE,GAChC,YAA6BrF,IAAtBqF,EAAKkC,e,+HCjOHmC,EAKT,WAAYC,GAAuB,yBAJ5BC,SAAmB,EAIQ,KAH3B/J,MAAsB,GAGK,KAF3B8J,iBAE2B,EAC9B7I,KAAK6I,YAAcA,GAIdE,EAAb,sCACWC,KAAO,IAAIJ,EADtB,KAEWK,OAAS,IAAIL,EAFxB,KAGWM,OAAS,IAAIN,EAHxB,KAIWO,QAAU,IAAIP,EAJzB,KAKWQ,OAAS,IAAIR,EAAsB,MAL9C,KAMWS,OAAS,IAAIT,EAAsB,MAN9C,KAOWU,SAAW,IAAIV,EAP1B,KAQWW,QAAU,IAAIX,G,4CCOVY,E,uKARP,IAAMxI,EAAayI,IAAeC,cAAc1J,KAAKC,MAAMgH,KAAMjH,KAAKC,MAAM8F,SAE5E,OAAO/E,EACD,kBAACS,EAAA,EAAD,CAAaL,OAAQpB,KAAKC,MAAMmB,OAAQJ,WAAYA,IACpD,O,sCAXYiG,EAAiBlB,GACnC,IAAM/E,EAAayI,IAAeC,cAAczC,EAAMlB,GAEtD,OAAO/E,EAAaS,IAAYC,eAAeV,GAAc,Q,GAJlCV,IAAMC,W,kBCH1B,WAAUa,EAAgBuI,EAAkCpF,EAAiBwB,EAA0B6D,GAA0B,IAAD,sBACrIC,EAAUF,EAASP,OACrBrK,EAAQ8K,EAAQ9K,MAMpB,GAJI6K,GACA7K,EAAMO,KAAK,oBAGX,UAAAiF,EAAK2C,MAAM,UAAX,eAAerE,QAASsE,IAAKC,SAAS0C,mBAA8C,kBAAlB/D,EAAQ+B,MAC1E/I,EAAMO,KACF,kBAACkB,EAAA,EAAD,CAAkBY,OAAQA,EAAQT,MAAOoF,EAAQ+B,cAElD,IAEC,UAAAvD,EAAK2C,MAAM,UAAX,eAAerE,QAASsE,IAAKC,SAASC,kBACnC,UAAA9C,EAAK2C,MAAM,UAAX,eAAerE,QAASsE,IAAKC,SAASE,yBACtC,UAAA/C,EAAK2C,MAAM,UAAX,eAAerE,QAASsE,IAAKC,SAASG,gCACtC,UAAAhD,EAAK2C,MAAM,UAAX,eAAerE,QAASsE,IAAKC,SAASI,6BACtC,UAAAjD,EAAK2C,MAAM,UAAX,eAAerE,QAASsE,IAAKC,SAASK,kBACtC,UAAAlD,EAAK2C,MAAM,UAAX,eAAerE,QAASsE,IAAKC,SAASM,gBACtC,UAAAnD,EAAK2C,MAAM,UAAX,eAAerE,QAASsE,IAAKC,SAASO,iBACtC,UAAApD,EAAK2C,MAAM,UAAX,eAAerE,QAASsE,IAAKC,SAASQ,gBACtC,UAAArD,EAAK2C,MAAM,UAAX,eAAerE,QAASsE,IAAKC,SAASS,sBAEjB,kBAAlB9B,EAAQ+B,MAOf,GAAIvD,EAAKqC,WAAaC,IAAKC,SAASiD,YAAchE,EAAQ+B,MAC7D+B,EAAQhB,iBAAc3J,EACtBH,EAAMO,KAAN,UAAcyG,EAAQ+B,MAAtB,gBAAmC/B,EAAQ+B,MAAQ,EAAI,IAAM,UAC1D,GAAIvD,EAAKqC,WAAaC,IAAKC,SAASkD,yBACvCjL,EAAMO,KAAK,kBAAC2K,EAAA,EAAD,CAAqB7I,OAAQA,EAAQmD,KAAMA,EAAMuB,cAAeC,EAASA,QAASA,EAC7DmE,UAAU,UACvC,GAEC3F,EAAKqC,WAAaC,IAAKC,SAASqD,eAC7B5F,EAAKqC,WAAaC,IAAKC,SAASsD,sBAChC7F,EAAKqC,WAAaC,IAAKC,SAASuD,uBAClCtE,EAAQH,aAQV,IAAIG,EAAQuE,UACf/F,EAAKqC,WAAaC,IAAKC,SAASyD,eAC7BhG,EAAKqC,WAAaC,IAAKC,SAAS0D,QAChCjG,EAAKqC,WAAaC,IAAKC,SAAS2D,OAChClG,EAAKqC,WAAaC,IAAKC,SAAS4D,kBAGhC,IAAI3E,EAAQ4E,WACfpG,EAAKqC,WAAaC,IAAKC,SAAS8D,YAC7BrG,EAAKqC,WAAaC,IAAKC,SAAS+D,uBAChCtG,EAAKqC,WAAaC,IAAKC,SAAS4D,kBAGhC,IAAI,UAAAnG,EAAK2C,MAAM,UAAX,eAAerE,QAASsE,IAAKC,SAASW,mBAAoB,CACjE,GAA+B,kBAApBhC,EAAQiC,QAEf,YADA6B,EAAQf,SAAU,GAItBe,EAAQhB,iBAAc3J,EACtBH,EAAMO,KAAK,iBACXP,EAAMO,KACF,kBAAC0C,EAAA,EAAD,CAA0BZ,OAAQA,EAAQV,GAAIqF,EAAQiC,gBAEnDzD,EAAK2C,MAAM,IAAMnB,EAAQ+B,MAChC/I,EAAMO,KAAK,kBAAC,EAAD,CAAsB8B,OAAQA,EAAQ6F,KAAM1C,EAAK2C,MAAM,GAAInB,QAASA,KACxEA,EAAQ+B,MACf/I,EAAMO,KAAK,kBAAC2K,EAAA,EAAD,CAAqB7I,OAAQA,EAAQmD,KAAMA,EAAMuB,cAAeC,EAASA,QAASA,EAC7DmE,UAAU,MAClCnE,EAAQ+B,OAAS/B,EAAQ+E,YACjCjB,EAAQhB,YAAc,OACtB9J,EAAMO,KAAK,SACXP,EAAMO,KAAK,kBAAC2K,EAAA,EAAD,CAAqB7I,OAAQA,EAAQmD,KAAMA,EAAMuB,cAAeC,EAASA,QAASA,EAC7DmE,UAAU,MAE1CL,EAAQf,SAAU,OAvBlB/J,EAAMO,KAAK,kBAAC2K,EAAA,EAAD,CAAqB7I,OAAQA,EAAQmD,KAAMA,EAAMuB,cAAeC,EAASA,QAASA,UAN7FhH,EAAMO,KAAK,kBAAC2K,EAAA,EAAD,CAAqB7I,OAAQA,EAAQmD,KAAMA,EAAMuB,cAAeC,EAASA,QAASA,SAb/F,CAAC,IAAD,GACE,UAAIA,EAAQT,sBAAZ,aAAI,EAAwBwC,OACxB+B,EAAQ9K,MAAMO,KAAK,kBAAC2K,EAAA,EAAD,CAAqB7I,OAAQA,EAAQmD,KAAMA,EAAMuB,cAAeC,EAC3CA,QAASA,EAASmE,UAAU,KAEpEL,EAAQf,SAAU,OAtBtBe,EAAQhB,iBAAc3J,EACtBH,EAAMO,KAAK,iBACXP,EAAMO,KACF,kBAAC0C,EAAA,EAAD,CAA0BZ,OAAQA,EAAQV,GAAIqF,EAAQ+B,SA2D1D8B,GACA7K,EAAMO,KAAK,M,SClEbyL,E,2KAEE,IAEsB,IAFhBxG,EAAOvE,KAAKC,MAAMsE,KAExB,GAAIvE,KAAKC,MAAMoI,MACX,iBAAO/B,YAAuB/B,EAAMvE,KAAKC,MAAMoI,MAAlB,UAAyBrI,KAAKC,MAAMqI,kBAApC,QAAkD,UAA/E,QAAqF,GAErF,IAAM9D,EAAWC,YAAeF,GAEhC,OAAOI,YAAqBH,K,2CAKhC,IAAMD,EAAOvE,KAAKC,MAAMsE,KAExB,GAAKoE,YAAoBpE,GAAzB,CAGuB,IAAD,EAAtB,GAAIvE,KAAKC,MAAMoI,MACX,iBAAOD,YAA+B7D,EAAMvE,KAAKC,MAAMoI,cAAvD,QAAiE,GAEjE,IAAM7D,EAAWgC,YAAuBjC,GAExC,OAAOI,YAAqBH,M,+BAKhC,IAAMpD,EAASpB,KAAKC,MAAMmB,OACtBmD,EAAOvE,KAAKC,MAAMsE,KAClBwB,EAAU/F,KAAKgL,aACfC,EAAkBjL,KAAKkL,qBAErBvB,EAAW,IAAIZ,GC9Dd,SAAU3H,EAAgBuI,EAAkCpF,EAAiBwB,GACxF,IAAM8D,EAAUF,EAASX,KACrBjK,EAAQ8K,EAAQ9K,MAEhBwF,EAAK4G,iBAAmBtE,IAAKuE,eAAeC,OAC5CtM,EAAMO,KAAK,YACNiF,EAAK4G,iBAAmBtE,IAAKuE,eAAeE,MACjDvM,EAAMO,KAAK,WAEXuK,EAAQf,SAAU,EDuDlByC,CAAkBnK,EAAQuI,EAAUpF,GE/D7B,SAAUnD,EAAgBuI,EAAkCpF,EAAiBwB,GACxF,IAAM8D,EAAUF,EAASV,OACrBlK,EAAQ8K,EAAQ9K,MAEhBgH,EAAQyF,QAAUzF,EAAQ0F,cAC1B1M,EAAMO,KAAN,mBAAuByG,EAAQ0F,aAA/B,MAGA1F,EAAQ2F,MAAQ3F,EAAQ2F,KAAO,EAC/B3M,EAAMO,KAAK,iBACoB,kBAAjByG,EAAQ2F,MAAsC,MAAjB3F,EAAQ2F,KACnD3M,EAAMO,KAAMyG,EAAQ2F,KAAO,GAAM,gBAC1B3F,EAAQ4E,WACfpG,EAAKqC,WAAaC,IAAKC,SAAS6E,4BAC7BpH,EAAKqC,WAAaC,IAAKC,SAAS8E,sBAG3B7F,EAAQ2F,MAAQnH,EAAKqC,WAAaC,IAAKC,SAAS+E,MACxD9M,EAAMO,KAAK,aAFXP,EAAMO,KAAKvB,YAAUgI,EAAQ4E,UAAW,GAAK,yBAK5B,IAAjB5L,EAAMI,SACN0K,EAAQf,SAAU,GF0ClBgD,CAAoB1K,EAAQuI,EAAUpF,EAAMwB,GAC5CgG,YAAoB3K,EAAQuI,EAAUpF,EAAMwB,GG/DrC,SAAU3E,EAAgBuI,EAAkCpF,EAAiBwB,GACxF,IAAM8D,EAAUF,EAASR,QACrBpK,EAAQ8K,EAAQ9K,MAEpB,GAAIwF,EAAKqC,WAAaC,IAAKC,SAASkF,sBAChCjN,EAAMO,KAAK,gCACR,GAA8B,kBAAnByG,EAAQkG,QAElB1H,EAAKqC,WAAaC,IAAKC,SAASoF,sBAC7B3H,EAAKqC,WAAaC,IAAKC,SAASqF,+BAQpC,GACHpG,EAAQqG,YACLrG,EAAQqG,WAAWjN,OAAS,GAC5BoF,EAAKqC,WAAaC,IAAKC,SAASkD,yBACrC,CACE,IACIqC,EADatG,EAAQqG,WACHzM,KAAI,SAAAe,GAAE,OAAI,kBAACF,EAAA,EAAD,CAAkBY,OAAQA,EAAQT,MAAOD,OAEzE3B,EAAMO,KACF,qDAA2BZ,YAAc2N,EAAQ,QAC7CtG,EAAQuG,iBAAR,iBAAqCvG,EAAQuG,iBAA7C,KAAmE,KADvE,WAKJvG,EAAQwG,kBACLxG,EAAQwG,iBAAiBpN,OAAS,GAClCoF,EAAKqC,WAAaC,IAAKC,SAAS0F,eAEnCzN,EAAMO,KACF,2CAAiByG,EAAQwG,iBAAiB5I,KAAK,KAA/C,IACIoC,EAAQwG,iBAAiBpN,OAAS,EAAI,WAAa,SADvD,MAIGoF,EAAKqC,WAAaC,IAAKC,SAAS2F,kBACvC1N,EAAMO,KAAK,+BA7BXP,EAAMO,KACF,6DACI,kBAACkB,EAAA,EAAD,CAAkBY,OAAQA,EAAQT,MAAOoF,EAAQkG,SADrD,MAgCJ1H,EAAKqC,WAAaC,IAAKC,SAAS6E,4BAC7BpH,EAAKqC,WAAaC,IAAKC,SAAS8E,uBAChCrH,EAAKqC,WAAaC,IAAKC,SAASyD,gBAE/BxE,EAAQ2G,eACR3N,EAAMO,KACF,sCAAW,kBAACkB,EAAA,EAAD,CAAkBY,OAAQA,EAAQT,MAAOgM,OAAO5G,EAAQ2G,mBAIvE3G,EAAQ6G,SACR7N,EAAMO,KACF,8CAAmB,kBAACkB,EAAA,EAAD,CAAkBY,OAAQA,EAAQT,MAAOgM,OAAO5G,EAAQ6G,cAKnFrI,EAAKsI,eAAe1N,SACpBJ,EAAMO,KAAK,eACXP,EAAMO,KACFZ,YACI6F,EAAKsI,eAAelN,KAAI,SAAAgB,GAAK,OAAI,kBAACH,EAAA,EAAD,CAAkBY,OAAQA,EAAQT,MAAOA,OAC1E,SAKR4D,EAAKuI,UAAU3N,SACfJ,EAAMO,KAAK,eAEPiF,EAAKuI,UAAU3N,OAAS,GACxBJ,EAAMO,KAAK,OAGfiF,EAAKuI,UAAUvN,SAAQ,SAACoB,EAAOnB,GACvBA,EAAQ,GACRT,EAAMO,KAAK,KAEfP,EAAMO,KAAK,kBAACkB,EAAA,EAAD,CAAkBY,OAAQA,EAAQT,MAAOA,SAIvD5B,EAAMI,SACP0K,EAAQf,SAAU,GHxBlBiE,CAAqB3L,EAAQuI,EAAUpF,EAAMwB,GAC7CiH,EAAoB5L,EAAQuI,EAAUpF,EAAMwB,GACxCkF,GACA+B,EAAoB5L,EAAQuI,EAAUpF,EAAM0G,GAAiB,GAEjEgC,YAAoB7L,EAAQuI,EAAUpF,EAAMwB,GIxErC,SAAU3E,EAAgBuI,EAAkCpF,EAAiBwB,GACxF,IAAM8D,EAAUF,EAASL,SACrBvK,EAAQ8K,EAAQ9K,MAEpB,GAAIgH,EAAQmH,OAASnH,EAAQmH,MAAQ,GAAKnH,EAAQoH,MAAQpH,EAAQoH,KAAO,EAAG,CACxE,IAAMC,EAA8B,IAAlBrH,EAAQmH,MAAc,SAAtB,UAAoCnH,EAAQmH,MAA5C,UACdG,EAA4B,IAAjBtH,EAAQoH,KAAa,SAArB,UAAmCpH,EAAQoH,KAA3C,UAEfpO,EAAMO,KAAN,WAAe+N,EAAf,aAA4BD,EAA5B,WACOrH,EAAQoH,MAAQpH,EAAQoH,KAAO,EACtCpO,EAAMO,KAAsB,IAAjByG,EAAQoH,KAAa,WAArB,WAAsCpH,EAAQoH,KAA9C,YACJpH,EAAQmH,OAASnH,EAAQmH,MAAQ,EACxCnO,EAAMO,KAAuB,IAAlByG,EAAQmH,MAAc,WAAtB,WAAuCnH,EAAQmH,MAA/C,YAEXrD,EAAQf,SAAU,EJ2DlBwE,CAAsBlM,EAAQuI,EAAUpF,EAAMwB,GKxEvC,SAAU3E,EAAgBuI,EAAkCpF,EAAiBwB,GACxF,IAAM8D,EAAUF,EAASJ,QACrBxK,EAAQ8K,EAAQ9K,MAChBqH,EAAUJ,YAAmBzB,GAC7B8B,EAAeH,YAAwB3B,GAEtC6B,GAAYC,GAKbD,GACArH,EAAMO,KAAK,WAGX+G,GACAtH,EAAMO,KAAK,iBATXuK,EAAQf,SAAU,ELkElByE,CAAqBnM,EAAQuI,EAAUpF,GAEvC,IAAIxF,EAAsB,GAoB1B,OAlBA+F,OAAOb,OAAO0F,GAAUpK,SAAQ,SAAAsK,GACvBA,EAAQf,UAGTe,EAAQhB,aACR9J,EAAMO,KAAKuK,EAAQhB,aAEvB9J,EAAQA,EAAMyO,OAAO3D,EAAQ9K,WAGjCA,EAAMO,KACF,kBAAC,IAAD,CAAMiC,GAAE,WAAMH,EAAN,iBAAqBmD,EAAKkJ,SAC9B,kBAAC,IAAD,CAAiB5L,KAAM6L,QAI/B3O,EAAQH,YAAaG,EAAO,KAGxB,8BACKA,EAAMY,KAAI,SAACV,EAASO,GACjB,OAAO,kBAAC,IAAME,SAAP,CAAgBE,IAAKJ,GAAQP,W,GAvE3BqB,IAAMC,WA8EpBwK,O,wHMjGT4C,E,uKAQE,IAAM1G,EAAOjH,KAAKC,MAAMgH,KACpBjG,EAAayI,IAAevI,SAASlB,KAAKC,MAAMgH,MAEpD,OACI,kBAAC,IAAD,CAAM1F,GAAE,WAAMvB,KAAKC,MAAMmB,OAAjB,iBAAgC6F,EAAKvG,KAA7C,IAEKuG,EAAKpF,KAAO,kBAAC,IAAD,CAAU3B,SAAU+G,EAAKpF,YAAU3C,EAC/C+H,EAAKpF,KAAO,SAAM3C,EAClBuC,IAAYC,eAAeV,GAJhC,Q,sCAXciG,GAClB,IAAMjG,EAAayI,IAAevI,SAAS+F,GAE3C,MAAO,IAAMxF,IAAYC,eAAeV,GAAc,Q,GAJhCV,IAAMC,WAuBrBoN,O,uGCtBT1D,E,uKAEE,IAAMjJ,EAAa+J,IAAerB,cAC9B1J,KAAKC,MAAMsE,KACXvE,KAAKC,MAAM6F,cACX9F,KAAKC,MAAM8F,QACX/F,KAAKC,MAAMiK,UAGf,OAAOlJ,EACD,kBAAC,IAAD,CAAaI,OAAQpB,KAAKC,MAAMmB,OAAQJ,WAAYA,IACpD,Q,GAXoBV,IAAMC,WAezB0J,O,iCC5Bf,gFAMa2D,EAAmB,IAAIC,IAA2B,CAC3D,CAAChH,IAAKC,SAASqD,cAAe,iBAC9B,CAACtD,IAAKC,SAASC,UAAW,cAC1B,CAACF,IAAKC,SAASE,gBAAiB,cAChC,CAACH,IAAKC,SAASiD,WAAY,iBAC3B,CAAClD,IAAKC,SAASgH,UAAW,eAC1B,CAACjH,IAAKC,SAASkF,sBAAuB,yCACtC,CAACnF,IAAKC,SAASoF,qBAAsB,mCACrC,CAACrF,IAAKC,SAASkD,yBAA0B,oCACzC,CAACnD,IAAKC,SAAS2F,iBAAkB,oCACjC,CAAC5F,IAAKC,SAAS0F,eAAgB,oCAC/B,CAAC3F,IAAKC,SAASqF,+BAAgC,mCAC/C,CAACtF,IAAKC,SAASiH,aAAc,gBAC7B,CAAClH,IAAKC,SAASyD,cAAe,wBAC9B,CAAC1D,IAAKC,SAAS6E,2BAA4B,yBAC3C,CAAC9E,IAAKC,SAAS8E,sBAAuB,oCACtC,CAAC/E,IAAKC,SAAS0D,OAAQ,uBACvB,CAAC3D,IAAKC,SAASkH,aAAc,sBAC7B,CAACnH,IAAKC,SAASmH,gBAAiB,sBAChC,CAACpH,IAAKC,SAASoH,oBAAqB,uBACpC,CAACrH,IAAKC,SAASqH,QAAS,cACxB,CAACtH,IAAKC,SAASsD,qBAAsB,aACrC,CAACvD,IAAKC,SAASsH,YAAa,yBAC5B,CAACvH,IAAKC,SAASuH,QAAS,aACxB,CAACxH,IAAKC,SAASwH,4BAA6B,uBAC5C,CAACzH,IAAKC,SAASuD,qBAAsB,aACrC,CAACxD,IAAKC,SAASyH,UAAW,uBAC1B,CAAC1H,IAAKC,SAAS0H,cAAe,mBAC9B,CAAC3H,IAAKC,SAAS2H,cAAe,eAC9B,CAAC5H,IAAKC,SAAS4H,QAAS,YACxB,CAAC7H,IAAKC,SAAS6H,aAAc,4BAC7B,CAAC9H,IAAKC,SAAS8H,QAAS,YACxB,CAAC/H,IAAKC,SAAS+H,UAAW,yBAC1B,CAAChI,IAAKC,SAAS+E,KAAM,aACrB,CAAChF,IAAKC,SAAS8D,WAAY,sBAC3B,CAAC/D,IAAKC,SAAS2D,MAAO,sBACtB,CAAC5D,IAAKC,SAASgI,eAAgB,gBAC/B,CAACjI,IAAKC,SAAS+D,sBAAuB,sBACtC,CAAChE,IAAKC,SAASiI,cAAe,oBAC9B,CAAClI,IAAKC,SAASkI,UAAW,kBAC1B,CAACnI,IAAKC,SAAS4D,kBAAmB,8BAwEvB,aAAUtJ,EAAgBuI,EAAkCpF,EAAiBwB,GAAiC,IAAD,EAEpHhH,EADY4K,EAAST,OACLnK,MAEpB,GAAIwF,EAAKqC,WAAaC,IAAKC,SAASC,WAAaxC,EAAKqC,WAAaC,IAAKC,SAASE,gBAI1E,GAAIzC,EAAKqC,WAAaC,IAAKC,SAASkI,UAIpC,GAAIzK,EAAKqC,WAAaC,IAAKC,SAASwH,4BAApC,CAIA,GACH/J,EAAKqC,WAAaC,IAAKC,SAASgH,WAC7BvJ,EAAKqC,WAAaC,IAAKC,SAASkF,uBAChCzH,EAAKqC,WAAaC,IAAKC,SAASoF,sBAChC3H,EAAKqC,WAAaC,IAAKC,SAASkD,0BAChCzF,EAAKqC,WAAaC,IAAKC,SAAS2F,kBAChClI,EAAKqC,WAAaC,IAAKC,SAAS0F,gBAChCjI,EAAKqC,WAAaC,IAAKC,SAASqF,+BAKnC,OAHApN,EAAMO,KAAK,oBACXqK,EAASP,OAAOP,YAAc,MAKlC,OAAQtE,EAAKqC,UACT,KAAKC,IAAKC,SAASqD,cACnB,KAAKtD,IAAKC,SAASsD,qBACnB,KAAKvD,IAAKC,SAASuD,qBACfV,EAASP,OAAOP,YAAc,KAC9Bc,EAASN,OAAOR,YAAc,OAC9B,MACJ,KAAKhC,IAAKC,SAASiD,WACnB,KAAKlD,IAAKC,SAASyH,UACnB,KAAK1H,IAAKC,SAAS+H,UACnB,KAAKhI,IAAKC,SAAS+E,KACflC,EAASN,OAAOP,SAAU,EAC1B,MACJ,KAAKjC,IAAKC,SAASiH,aACnB,KAAKlH,IAAKC,SAAS4H,QACnB,KAAK7H,IAAKC,SAAS6H,aACnB,KAAK9H,IAAKC,SAAS8H,QACfjF,EAASP,OAAOP,YAAc,KAC9Bc,EAASN,OAAOR,YAAc,OAC9B,MACJ,KAAKhC,IAAKC,SAAS6E,2BACnB,KAAK9E,IAAKC,SAAS8E,sBACnB,KAAK/E,IAAKC,SAASmH,gBACftE,EAASP,OAAON,SAAU,EAC1Ba,EAASN,OAAOP,SAAU,EAC1B,MACJ,KAAKjC,IAAKC,SAASyD,cACnB,KAAK1D,IAAKC,SAAS0D,OACnB,KAAK3D,IAAKC,SAAS8D,WACnB,KAAK/D,IAAKC,SAAS2D,MACnB,KAAK5D,IAAKC,SAAS+D,sBACnB,KAAKhE,IAAKC,SAAS4D,kBACff,EAASV,OAAOH,SAAU,EAC1Ba,EAASP,OAAOP,YAAc,KAC9Bc,EAASN,OAAOP,SAAU,EAC1B,MACJ,KAAKjC,IAAKC,SAASkH,aACnB,KAAKnH,IAAKC,SAASqH,QACnB,KAAKtH,IAAKC,SAASuH,QACnB,KAAKxH,IAAKC,SAAS0H,cACnB,KAAK3H,IAAKC,SAASiI,cACfpF,EAASP,OAAOP,YAAc,KAC9Bc,EAASN,OAAOR,YAAc,MAC9B,MACJ,KAAKhC,IAAKC,SAASoH,oBACnB,KAAKrH,IAAKC,SAAS2H,cACf9E,EAASP,OAAON,SAAU,EAC1Ba,EAASN,OAAOR,YAAc,KAC9B,MACJ,KAAKhC,IAAKC,SAASsH,YACfzE,EAASP,OAAOP,YAAc,KAC9Bc,EAASN,OAAOR,YAAc,MAC9B,MACJ,KAAKhC,IAAKC,SAASgI,eACfnF,EAASP,OAAON,SAAU,EAC1Ba,EAASN,OAAOR,YAAc,OAItC9J,EAAMO,KAAN,UAAWsO,EAAiBqB,IAAI1K,EAAKqC,iBAArC,QAAkDrC,EAAKqC,eA/G3D,SAA6CxF,EAAgBuI,EAAkCpF,EAAiBwB,GAAiC,IAAD,EAExIhH,EADY4K,EAAST,OACLnK,MAEpBA,EAAMO,KAAK,kBAEX,UAAIiF,EAAK2K,iBAAT,aAAI,EAAgB/P,SAChBoF,EAAK2K,UAAU3P,SAAQ,SAACoB,EAAOnB,GACvBA,EAAQ,GACRT,EAAMO,KAAK,KAEfP,EAAMO,KAAK,kBAAC,IAAD,CAAkB8B,OAAQA,EAAQT,MAAOA,QAI5D5B,EAAMO,KAAK,UAEXqK,EAASP,OAAOP,YAAc,KAC9Bc,EAASN,OAAOR,YAAc,MAgB1BsG,CAAoC/N,EAAQuI,EAAUpF,QAtD9D,SAAoCnD,EAAgBuI,EAAkCpF,EAAiBwB,GAAiC,IAAD,IAE/HhH,EADY4K,EAAST,OACLnK,MAEpBA,EAAMO,KAAN,UAAWsO,EAAiBqB,IAAI1K,EAAKqC,iBAArC,QAAkDrC,EAAKqC,WAEvD,UAAIrC,EAAK2K,iBAAT,aAAI,EAAgB/P,UAChBJ,EAAMO,KAAK,QAEXiF,EAAK2K,UAAU3P,SAAQ,SAACoB,EAAOnB,GACvBA,EAAQ,GACRT,EAAMO,KAAK,MAEfP,EAAMO,KAAK,kBAAC,IAAD,CAAkB8B,OAAQA,EAAQT,MAAOA,SAI5DgJ,EAASN,OAAOR,YAAc,KAiC1BuG,CAA2BhO,EAAQuI,EAAUpF,QA9ErD,SAAiCnD,EAAgBuI,EAAkCpF,EAAiBwB,GAAiC,IAAD,QAE5HhH,EADY4K,EAAST,OACLnK,MAEpBA,EAAMO,KAAK,SACXiF,EAAK2C,MAAM3H,SAAQ,SAAC0H,EAAMzH,GAClBA,EAAQ,GACRT,EAAMO,KAAK,KAEfP,EAAMO,KAAK,kBAAC,IAAD,CAAiB8B,OAAQA,EAAQ6F,KAAMA,SAIlD,UAAA1C,EAAK2C,MAAM,UAAX,eAAerE,QAASsE,IAAKC,SAASiI,sBACnC,UAAA9K,EAAK2C,MAAM,UAAX,eAAerE,QAASsE,IAAKC,SAASkI,2BAEzC3F,EAASP,OAAOP,YAAc,MAGlCc,EAASN,OAAOR,YAAc,MAE1B,UAAAtE,EAAK2C,MAAM,UAAX,eAAerE,QAASsE,IAAKC,SAASE,yBACnC,UAAA/C,EAAK2C,MAAM,UAAX,eAAerE,QAASsE,IAAKC,SAASW,qBAEzC4B,EAASN,OAAOR,YAAc,OAkD9B0G,CAAwBnO,EAAQuI,EAAUpF,K,iCC3HlD,8CAGaiL,EAAqB,IAAI3B,IAAiC,CACnE,CAAChH,IAAK4I,eAAeC,KAAM,QAC3B,CAAC7I,IAAK4I,eAAeE,OAAQ,gBAE7B,CAAC9I,IAAK4I,eAAeG,OAAQ,SAC7B,CAAC/I,IAAK4I,eAAenE,MAAO,aAE5B,CAACzE,IAAK4I,eAAeI,UAAW,WAChC,CAAChJ,IAAK4I,eAAeK,QAAS,6BAC9B,CAACjJ,IAAK4I,eAAeM,WAAY,+BACjC,CAAClJ,IAAK4I,eAAeO,SAAU,qBAC/B,CAACnJ,IAAK4I,eAAeQ,aAAc,sCACnC,CAACpJ,IAAK4I,eAAeS,UAAW,uBAChC,CAACrJ,IAAK4I,eAAeU,YAAa,gCAClC,CAACtJ,IAAK4I,eAAeW,aAAc,gBACnC,CAACvJ,IAAK4I,eAAeY,cAAe,yCACpC,CAACxJ,IAAK4I,eAAea,iBAAkB,qCACvC,CAACzJ,IAAK4I,eAAec,iBAAkB,gDACvC,CAAC1J,IAAK4I,eAAee,aAAc,wBAEnC,CAAC3J,IAAK4I,eAAegB,sBAAuB,6BAC5C,CAAC5J,IAAK4I,eAAeiB,uBAAwB,2CAC7C,CAAC7J,IAAK4I,eAAekB,yBAA0B,sBAC/C,CAAC9J,IAAK4I,eAAemB,sBAAuB,0CAI5C,CAAC/J,IAAK4I,eAAeoB,kCAAmC,mCAG7C,aAAUzP,EAAgBuI,EAAkCpF,EAAiBwB,GACxF,IAmCgB,EAnCV8D,EAAUF,EAASN,OACrBtK,EAAQ8K,EAAQ9K,MAEhB+R,EAA8CvM,EAAKwM,eAEvD,GAAIxM,EAAKqC,WAAaC,IAAKC,SAASqD,cAChC,OAAQpE,EAAQH,cACZ,KAAK,IACDkL,EAAajK,IAAK4I,eAAeI,UACjC,MACJ,KAAK,KACDiB,EAAajK,IAAK4I,eAAeO,cAGtC,GAAIzL,EAAKqC,WAAaC,IAAKC,SAASsD,qBACvC,OAAQrE,EAAQH,cACZ,KAAK,IACDkL,EAAajK,IAAK4I,eAAeI,UACjC,MACJ,QACIiB,OAAa5R,EACb2K,EAAQf,SAAU,OAGvB,GAAIvE,EAAKqC,WAAaC,IAAKC,SAASuD,qBACvC,OAAQtE,EAAQH,cACZ,KAAK,IACDkL,EAAajK,IAAK4I,eAAeI,UACjC,MACJ,KAAK,KACDiB,EAAajK,IAAK4I,eAAeO,SAKzCc,GACA/R,EAAMO,KAAN,UAAWkQ,EAAmBP,IAAI6B,UAAlC,QAAiDA","file":"static/js/2.1f588951.chunk.js","sourcesContent":["import React from \"react\";\n\nexport type Renderable = (\n    JSX.Element\n    | string\n    | number\n    | undefined\n    )\n\nexport function asPercent(value: number | string | undefined, pow: number): string {\n    if (typeof value === \"string\")\n        return asPercent(parseInt(value), pow);\n\n    const decimal = (value ?? 0) / Math.pow(10, pow);\n\n    return `${decimal}%`;\n}\n\nexport function formatNumber(value: number): string {\n    return String(value).replace(/(.)(?=(\\d{3})+$)/g, '$1,');\n}\n\nexport function handleNewLine(text?: string): Renderable {\n    if (!text)\n        return \"\";\n\n    return (\n        <span>\n            {mergeElements(text.split(\"\\n\"), <br/>)}\n        </span>\n    );\n}\n\nexport function joinElements(elements: Renderable[], separator: Renderable): Renderable[] {\n    const parts: Renderable[] = [],\n        pushElement = function (element: Renderable) {\n            if (element === undefined)\n                return;\n\n            if (typeof element === 'object') {\n                parts.push(element);\n                return;\n            }\n\n            if (parts.length === 0) {\n                parts.push(element.toString());\n                return;\n            }\n\n            const previous = parts[parts.length - 1];\n            if (typeof previous !== 'string') {\n                parts.push(element.toString());\n                return;\n            }\n\n            parts[parts.length - 1] = previous + element.toString();\n        };\n\n    elements.forEach((element, index) => {\n        if (index > 0)\n            pushElement(separator);\n\n        pushElement(element);\n    });\n\n    return parts;\n}\n\nexport function mergeElements(elements: Renderable[], seperator: Renderable): Renderable {\n    return <React.Fragment>\n        {joinElements(elements, seperator).map((element, index) => {\n            return <React.Fragment key={index}>{element}</React.Fragment>;\n        })}\n    </React.Fragment>\n}\n","import React from \"react\";\n\ninterface IProp {\n    location: string;\n    height?: number;\n}\n\nclass BuffIcon extends React.Component<IProp> {\n\n    render() {\n        return (\n            <img alt={''} src={this.props.location} style={{\n                height: this.props.height ?? 25,\n                verticalAlign: \"bottom\",\n            }}/>\n        );\n    }\n\n}\n\nexport default BuffIcon;\n","import {Region, Trait} from \"@atlasacademy/api-connector\";\nimport {TraitDescriptor} from \"@atlasacademy/api-descriptor\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Api from \"../Api\";\nimport Description from \"./Description\";\n\ninterface IProps {\n    region: Region;\n    trait: Trait.Trait | number;\n    disableLink?: boolean;\n    overrideTraits?: Trait.Trait[];\n}\n\ninterface IState {\n    id: number;\n    trait?: Trait.Trait;\n}\n\nclass TraitDescription extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            id: typeof props.trait === \"number\" ? props.trait : props.trait.id,\n            trait: typeof props.trait === \"number\" ? undefined : props.trait,\n        };\n    }\n\n    static renderAsString(trait: Trait.Trait | number): string {\n        const descriptor = TraitDescriptor.describe(trait);\n\n        return Description.renderAsString(descriptor);\n    }\n\n    async componentDidMount() {\n        if (this.state.trait)\n            return;\n\n        const traitList = await Api.traitList();\n\n        for (let i = 0; i < traitList.length; i++) {\n            const trait = traitList[i];\n\n            if (trait.id === this.state.id) {\n                this.setState({trait});\n\n                return;\n            }\n        }\n    }\n\n    private getDescription(trait: Trait.Trait | number) {\n        const descriptor = TraitDescriptor.describe(trait, this.props.overrideTraits);\n\n        return <Description region={this.props.region} descriptor={descriptor}/>;\n    }\n\n    private getLocation(): string {\n        return `/${this.props.region}/entities/trait/${this.state.id}`;\n    }\n\n    render() {\n        const trait = this.state.trait ?? this.state.id;\n\n        return (\n            this.props.disableLink\n                ? <span>[{this.getDescription(trait)}]</span>\n                : <Link to={this.getLocation()}>[{this.getDescription(trait)}]</Link>\n        );\n    }\n}\n\nexport default TraitDescription;\n","import {Region, Skill} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport BuffIcon from \"../Component/BuffIcon\";\n\ninterface IProps {\n    region: Region;\n    skill: Skill.Skill;\n    iconHeight?: number;\n}\n\nclass SkillDescriptor extends React.Component<IProps> {\n    static renderAsString(skill: Skill.Skill): string {\n        const name = skill.name ? skill.name : `Skill: ${skill.id}`;\n\n        return `[${name}]`;\n    }\n\n    render() {\n        return (\n            <Link to={`/${this.props.region}/skill/${this.props.skill.id}`}>\n                {this.props.skill.icon ? (\n                    <BuffIcon location={this.props.skill.icon} height={this.props.iconHeight}/>\n                ) : undefined}\n                {this.props.skill.icon ? ' ' : undefined}\n                [{this.props.skill.name ? this.props.skill.name : `Skill: ${this.props.skill.id}`}]\n            </Link>\n        );\n    }\n}\n\nexport default SkillDescriptor;\n","import {Region, Skill} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Api from \"../Api\";\nimport SkillDescriptor from \"./SkillDescriptor\";\n\ninterface IProps {\n    region: Region;\n    id: number;\n}\n\ninterface IState {\n    skill?: Skill.Skill;\n}\n\nclass SkillReferenceDescriptor extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    async componentDidMount() {\n        try {\n            this.setState({\n                skill: await Api.skill(this.props.id)\n            });\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    static renderAsString(id: number): string {\n        return `[Skill: ${id}]`;\n    }\n\n    render() {\n        const route = `/${this.props.region}/skill/${this.props.id}`;\n\n        if (this.state.skill === undefined) {\n            return <Link to={route}>[Skill: {this.props.id}]</Link>;\n        }\n\n        return (\n            <SkillDescriptor region={this.props.region} skill={this.state.skill}/>\n        );\n    }\n}\n\nexport default SkillReferenceDescriptor;\n","import {Card, Region} from \"@atlasacademy/api-connector\";\nimport {CardDescriptor} from \"@atlasacademy/api-descriptor\";\nimport React from \"react\";\nimport Description from \"./Description\";\n\ninterface IProps {\n    region: Region;\n    card: Card | number;\n}\n\nclass CardDescription extends React.Component<IProps> {\n    static renderAsString(card: Card | number): string {\n        const descriptor = CardDescriptor.describe(card);\n\n        return \"[\" + Description.renderAsString(descriptor) + \"]\";\n    }\n\n    render() {\n        const descriptor = CardDescriptor.describe(this.props.card);\n\n        return <span>\n            [\n            <Description region={this.props.region} descriptor={descriptor}/>\n            ]\n        </span>;\n    }\n}\n\nexport default CardDescription;\n","import Region from \"@atlasacademy/api-connector/dist/Enum/Region\";\nimport {\n    Descriptor,\n    PartialType,\n    ParticlePartial,\n    ReferencePartial,\n    ReferenceType,\n    TextPartial,\n    ValuePartial,\n    ValueType\n} from \"@atlasacademy/api-descriptor\";\nimport React from \"react\";\nimport CardDescription from \"./CardDescription\";\nimport SkillDescriptor from \"./SkillDescriptor\";\nimport SkillReferenceDescriptor from \"./SkillReferenceDescriptor\";\nimport TraitDescription from \"./TraitDescription\";\n\ninterface IProps {\n    region: Region,\n    descriptor: Descriptor,\n}\n\nclass Description extends React.Component<IProps> {\n    private static renderParticle(partial: ParticlePartial): string {\n        return partial.value;\n    }\n\n    private static renderReferenceAsString(partial: ReferencePartial): string {\n        if (partial.referenceType === ReferenceType.CARD) {\n            return CardDescription.renderAsString(partial.value);\n        } else if (partial.referenceType === ReferenceType.SKILL) {\n            if (typeof partial.value === \"number\") {\n                return SkillReferenceDescriptor.renderAsString(partial.value);\n            } else {\n                return SkillDescriptor.renderAsString(partial.value);\n            }\n        } else if (partial.referenceType === ReferenceType.TRAIT) {\n            return TraitDescription.renderAsString(partial.value);\n        }\n\n        return partial.value.toString();\n    }\n\n    private static renderText(partial: TextPartial): string {\n        return partial.value;\n    }\n\n    private static renderValue(partial: ValuePartial): string {\n        if (partial.valueType === ValueType.PERCENT) {\n            return partial.value.toString() + '%';\n        }\n\n        return partial.value.toString();\n    }\n\n    static renderAsString(descriptor: Descriptor): string {\n        const partials = descriptor.partials(),\n            fragments: string[] = [];\n\n        for (let i = 0; i < partials.length; i++) {\n            const partial = partials[i];\n\n            if (partial.type === PartialType.PARTICLE) {\n                fragments.push(Description.renderParticle(partial));\n            } else if (partial.type === PartialType.REFERENCE) {\n                fragments.push(Description.renderReferenceAsString(partial as ReferencePartial));\n            } else if (partial.type === PartialType.TEXT) {\n                fragments.push(Description.renderText(partial));\n            } else if (partial.type === PartialType.VALUE) {\n                fragments.push(Description.renderValue(partial as ValuePartial));\n            } else {\n                fragments.push(partial.value.toString());\n            }\n        }\n\n        return fragments.join('');\n    }\n\n    private renderReference(partial: ReferencePartial, key: number) {\n        if (partial.referenceType === ReferenceType.CARD) {\n            return <CardDescription key={key} region={this.props.region} card={partial.value}/>;\n        } else if (partial.referenceType === ReferenceType.SKILL) {\n            if (typeof partial.value === \"number\") {\n                return <SkillReferenceDescriptor key={key} region={this.props.region} id={partial.value}/>;\n            } else {\n                return <SkillDescriptor key={key} region={this.props.region} skill={partial.value}/>;\n            }\n        } else if (partial.referenceType === ReferenceType.TRAIT) {\n            return <TraitDescription key={key} region={this.props.region} trait={partial.value}/>\n        }\n\n        return partial.value.toString();\n    }\n\n    render() {\n        const partials = this.props.descriptor.partials(),\n            fragments = [];\n\n        for (let i = 0; i < partials.length; i++) {\n            const partial = partials[i];\n\n            if (partial.type === PartialType.PARTICLE) {\n                fragments.push(Description.renderParticle(partial));\n            } else if (partial.type === PartialType.REFERENCE) {\n                fragments.push(this.renderReference(partial as ReferencePartial, i));\n            } else if (partial.type === PartialType.TEXT) {\n                fragments.push(Description.renderText(partial));\n            } else if (partial.type === PartialType.VALUE) {\n                fragments.push(Description.renderValue(partial as ValuePartial));\n            } else {\n                fragments.push(partial.value.toString());\n            }\n        }\n\n        return <React.Fragment>{fragments}</React.Fragment>;\n    }\n\n}\n\nexport default Description;\n","import {Buff, DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport FuncValueDescriptor from \"../Descriptor/FuncValueDescriptor\";\nimport {Renderable} from \"./OutputHelper\";\n\nconst hasChangingDataVals = function (vals: DataVal.DataVal[]): boolean {\n    if (!vals.length)\n        return false;\n\n    let previous = vals[0];\n    for (let i = 1; i < vals.length; i++) {\n        if (JSON.stringify(previous) !== JSON.stringify(vals[i]))\n            return true;\n\n        previous = vals[i];\n    }\n\n    return false;\n};\n\nconst hasUniqueValues = function (values: (number | number[] | undefined)[]): boolean {\n    if (values.length === 0)\n        return false;\n\n    return new Set(\n        values.map(value => {\n            if (Array.isArray(value))\n                return value.join(',');\n\n            return value;\n        })\n    ).size > 1;\n};\n\nexport function describeMutators(region: Region, func: Func.Func): Renderable[] {\n    const dataVals = getDataValList(func),\n        staticVals = getStaticFieldValues(dataVals),\n        mutatingVals = getMutatingFieldValues(dataVals);\n\n    return mutatingVals\n        .map(mutatingVal => <FuncValueDescriptor region={region} func={func} staticDataVal={staticVals}\n                                                 dataVal={mutatingVal}/>);\n}\n\nexport function funcUpdatesByLevel(func: Func.Func): boolean {\n    return hasChangingDataVals(getLevelDataValList(func));\n}\n\nexport function funcUpdatesByOvercharge(func: Func.Func): boolean {\n    return hasChangingDataVals(getOverchargeDataValList(func));\n}\n\nexport function getDataValList(func: Func.Func): DataVal.DataVal[] {\n    const isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func);\n\n    return isLevel && isOvercharge\n        ? getMixedDataValList(func)\n        : (isOvercharge ? getOverchargeDataValList(func) : getLevelDataValList(func));\n}\n\nexport function getFollowerDataValList(func: Func.Func): DataVal.DataVal[] {\n    return func.followerVals ?? [];\n}\n\nexport function getLevelDataValList(func: Func.Func): DataVal.DataVal[] {\n    return func.svals ?? [];\n}\n\nexport function getMixedDataValList(func: Func.Func): DataVal.DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, i, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getMutatingFieldNames(vals: DataVal.DataVal[]): DataVal.DataValField[] {\n    return Object.values(DataVal.DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return hasUniqueValues(values);\n    });\n}\n\nexport function getMutatingFieldValues(vals: DataVal.DataVal[]): DataVal.DataVal[] {\n    if (!vals.length)\n        return [];\n\n    const fields = getMutatingFieldNames(vals),\n        hasDependingVals = vals.filter(val => val.DependFuncVals !== undefined).length > 0,\n        dependingVals: (DataVal.DataVal[] | undefined) = (\n            hasDependingVals\n                ? vals.map(val => (val.DependFuncVals ?? {}) as DataVal.DataVal)\n                : undefined\n        ),\n        dependingMutatingValues = dependingVals ? getMutatingFieldValues(dependingVals) : [],\n        staticValues = getStaticFieldValues(vals);\n\n    return vals.map((val, index) => {\n        const mutatingVals: DataVal.DataVal = {};\n\n        for (let x in fields) {\n            const fieldName = fields[x];\n\n            // @ts-ignore\n            mutatingVals[fieldName] = val[fieldName];\n        }\n\n        if (staticValues.DependFuncId && dependingMutatingValues[index]) {\n            mutatingVals.DependFuncId = staticValues.DependFuncId;\n            mutatingVals.DependFuncVals = dependingMutatingValues[index];\n        }\n\n        return mutatingVals;\n    });\n}\n\nexport function getOverchargeDataValList(func: Func.Func): DataVal.DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, 1, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getRelatedSkillIds(func: Func.Func): number[] {\n    if (func.funcType !== Func.FuncType.ADD_STATE && func.funcType !== Func.FuncType.ADD_STATE_SHORT)\n        return [];\n\n    const buff = func.buffs[0];\n    if (\n        buff.type === Buff.BuffType.ATTACK_FUNCTION\n        || buff.type === Buff.BuffType.COMMANDATTACK_FUNCTION\n        || buff.type === Buff.BuffType.COMMANDATTACK_BEFORE_FUNCTION\n        || buff.type === Buff.BuffType.COMMANDCODEATTACK_FUNCTION\n        || buff.type === Buff.BuffType.DAMAGE_FUNCTION\n        || buff.type === Buff.BuffType.DEAD_FUNCTION\n        || buff.type === Buff.BuffType.DELAY_FUNCTION\n        || buff.type === Buff.BuffType.GUTS_FUNCTION\n        || buff.type === Buff.BuffType.SELFTURNEND_FUNCTION\n    ) {\n        const dataVals = getDataValList(func),\n            dataVal = dataVals[0];\n\n        return typeof dataVal.Value === \"number\" ? [dataVal.Value] : [];\n    }\n\n    if (buff.type === Buff.BuffType.NPATTACK_PREV_BUFF) {\n        const dataVals = getDataValList(func),\n            dataVal = dataVals[0];\n\n        return typeof dataVal.SkillID === \"number\" ? [dataVal.SkillID] : [];\n    }\n\n    return [];\n}\n\nexport function getStaticFieldNames(vals: DataVal.DataVal[]): DataVal.DataValField[] {\n    return Object.values(DataVal.DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return !hasUniqueValues(values);\n    });\n}\n\nexport function getStaticFieldValues(vals: DataVal.DataVal[]): DataVal.DataVal {\n    if (!vals.length)\n        return {};\n\n    const fields = getStaticFieldNames(vals),\n        staticVals: DataVal.DataVal = {},\n        hasDependingVals = vals.filter(val => val.DependFuncVals !== undefined).length > 0,\n        dependingVals: (DataVal.DataVal[] | undefined) = (\n            hasDependingVals\n                ? vals.map(val => (val.DependFuncVals ?? {}) as DataVal.DataVal)\n                : undefined\n        ),\n        dependingStaticValues = dependingVals ? getStaticFieldValues(dependingVals) : undefined;\n\n    for (let x in fields) {\n        // @ts-ignore\n        staticVals[fields[x]] = vals[0][fields[x]];\n    }\n\n    if (hasDependingVals)\n        staticVals.DependFuncVals = dependingStaticValues;\n\n    return staticVals;\n}\n\nexport function getTargetFollowerVersionValues(func: Func.Func, level: number): DataVal.DataVal | undefined {\n    if (func.followerVals === undefined)\n        return undefined;\n\n    return func.followerVals[level - 1];\n}\n\nexport function getTargetVersionValues(func: Func.Func, level: number, overcharge: number = 1): DataVal.DataVal | undefined {\n    if (func.svals === undefined)\n        return undefined;\n\n    let dataVals;\n\n    if (overcharge === 2 && func.svals2)\n        dataVals = func.svals2;\n    else if (overcharge === 3 && func.svals3)\n        dataVals = func.svals3;\n    else if (overcharge === 4 && func.svals4)\n        dataVals = func.svals4;\n    else if (overcharge === 5 && func.svals5)\n        dataVals = func.svals5;\n    else\n        dataVals = func.svals;\n\n    return dataVals[level - 1];\n}\n\nexport function hasFollowerDataVals(func: Func.Func): boolean {\n    return func.followerVals !== undefined;\n}\n","import {Renderable} from \"../../Helper/OutputHelper\";\n\nexport class FuncDescriptorSection {\n    public showing: boolean = true;\n    public parts: Renderable[] = [];\n    public preposition?: string;\n\n    constructor(preposition?: string) {\n        this.preposition = preposition;\n    }\n}\n\nexport class FuncDescriptorSections {\n    public team = new FuncDescriptorSection();\n    public chance = new FuncDescriptorSection();\n    public action = new FuncDescriptorSection();\n    public affects = new FuncDescriptorSection();\n    public amount = new FuncDescriptorSection('of');\n    public target = new FuncDescriptorSection('to');\n    public duration = new FuncDescriptorSection();\n    public scaling = new FuncDescriptorSection();\n}\n","import {Buff, DataVal, Region} from \"@atlasacademy/api-connector\";\nimport {BuffDescriptor} from \"@atlasacademy/api-descriptor\";\nimport React from \"react\";\nimport Description from \"./Description\";\n\ninterface IProps {\n    region: Region;\n    buff: Buff.Buff;\n    dataVal: DataVal.DataVal;\n}\n\nclass BuffValueDescription extends React.Component<IProps> {\n    static renderAsString(buff: Buff.Buff, dataVal: DataVal.DataVal): string {\n        const descriptor = BuffDescriptor.describeValue(buff, dataVal);\n\n        return descriptor ? Description.renderAsString(descriptor) : '-';\n    }\n\n    render() {\n        const descriptor = BuffDescriptor.describeValue(this.props.buff, this.props.dataVal);\n\n        return descriptor\n            ? <Description region={this.props.region} descriptor={descriptor}/>\n            : '-';\n    }\n}\n\nexport default BuffValueDescription;\n","import {Buff, DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport BuffValueDescription from \"../BuffValueDescription\";\nimport FuncValueDescriptor from \"../FuncValueDescriptor\";\nimport SkillReferenceDescriptor from \"../SkillReferenceDescriptor\";\nimport TraitDescription from \"../TraitDescription\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal, support?: boolean): void {\n    const section = sections.amount,\n        parts = section.parts;\n\n    if (support) {\n        parts.push('( Support only:');\n    }\n\n    if (func.buffs[0]?.type === Buff.BuffType.ADD_INDIVIDUALITY && typeof dataVal.Value === \"number\") {\n        parts.push(\n            <TraitDescription region={region} trait={dataVal.Value}/>\n        );\n    } else if (\n        (\n            func.buffs[0]?.type === Buff.BuffType.ATTACK_FUNCTION\n            || func.buffs[0]?.type === Buff.BuffType.COMMANDATTACK_FUNCTION\n            || func.buffs[0]?.type === Buff.BuffType.COMMANDATTACK_BEFORE_FUNCTION\n            || func.buffs[0]?.type === Buff.BuffType.COMMANDCODEATTACK_FUNCTION\n            || func.buffs[0]?.type === Buff.BuffType.DAMAGE_FUNCTION\n            || func.buffs[0]?.type === Buff.BuffType.DEAD_FUNCTION\n            || func.buffs[0]?.type === Buff.BuffType.DELAY_FUNCTION\n            || func.buffs[0]?.type === Buff.BuffType.GUTS_FUNCTION\n            || func.buffs[0]?.type === Buff.BuffType.SELFTURNEND_FUNCTION\n        )\n        && typeof dataVal.Value === \"number\"\n    ) {\n        section.preposition = undefined;\n        parts.push('that triggers');\n        parts.push(\n            <SkillReferenceDescriptor region={region} id={dataVal.Value}/>\n        );\n    } else if (func.funcType === Func.FuncType.CARD_RESET && dataVal.Value) {\n        section.preposition = undefined;\n        parts.push(`${dataVal.Value} time${dataVal.Value > 1 ? 's' : ''}`);\n    } else if (func.funcType === Func.FuncType.DAMAGE_NP_INDIVIDUAL_SUM) {\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}\n                                        hideRate={true}/>);\n    } else if (\n        (\n            func.funcType === Func.FuncType.ABSORB_NPTURN\n            || func.funcType === Func.FuncType.GAIN_HP_FROM_TARGETS\n            || func.funcType === Func.FuncType.GAIN_NP_FROM_TARGETS\n        ) && dataVal.DependFuncId\n    ) {\n        if (dataVal.DependFuncVals?.Value) {\n            section.parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal}\n                                                    dataVal={dataVal} hideRate={true}/>);\n        } else {\n            section.showing = false;\n        }\n    } else if (dataVal.AddCount && (\n        func.funcType === Func.FuncType.EVENT_DROP_UP\n        || func.funcType === Func.FuncType.EXP_UP\n        || func.funcType === Func.FuncType.QP_UP\n        || func.funcType === Func.FuncType.USER_EQUIP_EXP_UP\n    )) {\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}/>);\n    } else if (dataVal.RateCount && (\n        func.funcType === Func.FuncType.QP_DROP_UP\n        || func.funcType === Func.FuncType.SERVANT_FRIENDSHIP_UP\n        || func.funcType === Func.FuncType.USER_EQUIP_EXP_UP\n    )) {\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}/>);\n    } else if (func.buffs[0]?.type === Buff.BuffType.NPATTACK_PREV_BUFF) {\n        if (typeof dataVal.SkillID !== \"number\") {\n            section.showing = false;\n            return;\n        }\n\n        section.preposition = undefined;\n        parts.push('that triggers');\n        parts.push(\n            <SkillReferenceDescriptor region={region} id={dataVal.SkillID}/>\n        );\n    } else if (func.buffs[0] && dataVal.Value) {\n        parts.push(<BuffValueDescription region={region} buff={func.buffs[0]} dataVal={dataVal}/>);\n    } else if (dataVal.Value) {\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}\n                                        hideRate={true}/>);\n    } else if (!dataVal.Value && dataVal.Correction) {\n        section.preposition = 'with';\n        parts.push('bonus');\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}\n                                        hideRate={true}/>);\n    } else {\n        section.showing = false;\n    }\n\n    if (support) {\n        parts.push(')');\n    }\n}\n","import {DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {\n    getDataValList,\n    getFollowerDataValList,\n    getStaticFieldValues,\n    getTargetFollowerVersionValues,\n    getTargetVersionValues,\n    hasFollowerDataVals\n} from \"../Helper/FuncHelper\";\nimport {joinElements, Renderable} from \"../Helper/OutputHelper\";\nimport {FuncDescriptorSections} from \"./Func/FuncDescriptorSections\";\nimport handleActionSection from \"./Func/handleActionSection\";\nimport handleAffectsSection from \"./Func/handleAffectsSection\";\nimport handleAmountSection from \"./Func/handleAmountSection\";\nimport handleChanceSection from \"./Func/handleChanceSection\";\nimport handleDurationSection from \"./Func/handleDurationSection\";\nimport handleScalingSection from \"./Func/handleScalingSection\";\nimport handleTargetSection from \"./Func/handleTargetSection\";\nimport handleTeamSection from \"./Func/handleTeamSection\";\n\ninterface IProps {\n    region: Region;\n    func: Func.Func;\n    level?: number;\n    overcharge?: number;\n}\n\nclass FuncDescriptor extends React.Component<IProps> {\n    getDataVal(): DataVal.DataVal {\n        const func = this.props.func;\n\n        if (this.props.level) {\n            return getTargetVersionValues(func, this.props.level, this.props.overcharge ?? 1) ?? {};\n        } else {\n            const dataVals = getDataValList(func);\n\n            return getStaticFieldValues(dataVals);\n        }\n    }\n\n    getFollowerDataVal(): DataVal.DataVal | undefined {\n        const func = this.props.func;\n\n        if (!hasFollowerDataVals(func))\n            return undefined;\n\n        if (this.props.level) {\n            return getTargetFollowerVersionValues(func, this.props.level) ?? {};\n        } else {\n            const dataVals = getFollowerDataValList(func);\n\n            return getStaticFieldValues(dataVals);\n        }\n    }\n\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            dataVal = this.getDataVal(),\n            followerDataVal = this.getFollowerDataVal();\n\n        const sections = new FuncDescriptorSections();\n\n        handleTeamSection(region, sections, func, dataVal);\n        handleChanceSection(region, sections, func, dataVal);\n        handleActionSection(region, sections, func, dataVal);\n        handleAffectsSection(region, sections, func, dataVal);\n        handleAmountSection(region, sections, func, dataVal);\n        if (followerDataVal) {\n            handleAmountSection(region, sections, func, followerDataVal, true);\n        }\n        handleTargetSection(region, sections, func, dataVal);\n        handleDurationSection(region, sections, func, dataVal);\n        handleScalingSection(region, sections, func, dataVal);\n\n        let parts: Renderable[] = [];\n\n        Object.values(sections).forEach(section => {\n            if (!section.showing)\n                return;\n\n            if (section.preposition)\n                parts.push(section.preposition);\n\n            parts = parts.concat(section.parts);\n        });\n\n        parts.push(\n            <Link to={`/${region}/func/${func.funcId}`}>\n                <FontAwesomeIcon icon={faShare}/>\n            </Link>\n        );\n\n        parts = joinElements(parts, ' ');\n\n        return (\n            <span>\n                {parts.map((element, index) => {\n                    return <React.Fragment key={index}>{element}</React.Fragment>;\n                })}\n            </span>\n        );\n    }\n}\n\nexport default FuncDescriptor;\n","import {DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.team,\n        parts = section.parts;\n\n    if (func.funcTargetTeam === Func.FuncTargetTeam.PLAYER)\n        parts.push('[Player]');\n    else if (func.funcTargetTeam === Func.FuncTargetTeam.ENEMY)\n        parts.push('[Enemy]');\n    else\n        section.showing = false;\n}\n","import {DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport {asPercent} from \"../../Helper/OutputHelper\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.chance,\n        parts = section.parts;\n\n    if (dataVal.ActSet && dataVal.ActSetWeight) {\n        parts.push(`[Weight: ${dataVal.ActSetWeight}]`);\n    }\n\n    if (dataVal.Rate && dataVal.Rate < 0) {\n        parts.push('Guaranteed to');\n    } else if (typeof dataVal.Rate === \"number\" && dataVal.Rate !== 1000) {\n        parts.push((dataVal.Rate / 10) + '% Chance to');\n    } else if (dataVal.RateCount && (\n        func.funcType === Func.FuncType.ENEMY_ENCOUNT_COPY_RATE_UP\n        || func.funcType === Func.FuncType.ENEMY_ENCOUNT_RATE_UP\n    )) {\n        parts.push(asPercent(dataVal.RateCount, 1) + ' Chance per Target to');\n    } else if (!dataVal.Rate && func.funcType !== Func.FuncType.NONE) {\n        parts.push('Chance to');\n    }\n\n    if (parts.length === 0) {\n        section.showing = false;\n    }\n}\n","import {DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport {mergeElements} from \"../../Helper/OutputHelper\";\nimport TraitDescription from \"../TraitDescription\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.affects,\n        parts = section.parts;\n\n    if (func.funcType === Func.FuncType.DAMAGE_NP_HPRATIO_LOW) {\n        parts.push('(additional for low HP)');\n    } else if (typeof dataVal.Target === \"number\"\n        && (\n            func.funcType === Func.FuncType.DAMAGE_NP_INDIVIDUAL\n            || func.funcType === Func.FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX\n        )\n    ) {\n        parts.push(\n            <span>(additional to targets with {\n                <TraitDescription region={region} trait={dataVal.Target}/>\n            })</span>\n        );\n    } else if (\n        dataVal.TargetList\n        && dataVal.TargetList.length > 0\n        && func.funcType === Func.FuncType.DAMAGE_NP_INDIVIDUAL_SUM\n    ) {\n        const traitIds = dataVal.TargetList,\n            traits = traitIds.map(id => <TraitDescription region={region} trait={id}/>);\n\n        parts.push(\n            <span>(bonus per trait of {mergeElements(traits, ' or ')}{\n                dataVal.ParamAddMaxCount ? `[Limit ${dataVal.ParamAddMaxCount}]` : null\n            })</span>\n        );\n    } else if (\n        dataVal.TargetRarityList\n        && dataVal.TargetRarityList.length > 0\n        && func.funcType === Func.FuncType.DAMAGE_NP_RARE\n    ) {\n        parts.push(\n            <span>(bonus to {dataVal.TargetRarityList.join('/')} {\n                dataVal.TargetRarityList.length > 1 ? 'rarities' : 'rarity'\n            })</span>\n        )\n    } else if (func.funcType === Func.FuncType.DAMAGE_NP_PIERCE) {\n        parts.push('(that pierces defense)');\n    }\n\n    if (\n        func.funcType === Func.FuncType.ENEMY_ENCOUNT_COPY_RATE_UP\n        || func.funcType === Func.FuncType.ENEMY_ENCOUNT_RATE_UP\n        || func.funcType === Func.FuncType.EVENT_DROP_UP\n    ) {\n        if (dataVal.Individuality) {\n            parts.push(\n                <span>with <TraitDescription region={region} trait={Number(dataVal.Individuality)}/></span>\n            )\n        }\n\n        if (dataVal.EventId) {\n            parts.push(\n                <span>during event <TraitDescription region={region} trait={Number(dataVal.EventId)}/></span>\n            )\n        }\n    }\n\n    if (func.funcquestTvals.length) {\n        parts.push('if on field');\n        parts.push(\n            mergeElements(\n                func.funcquestTvals.map(trait => <TraitDescription region={region} trait={trait}/>),\n                ' & '\n            )\n        );\n    }\n\n    if (func.functvals.length) {\n        parts.push('for targets');\n\n        if (func.functvals.length > 1) {\n            parts.push('all');\n        }\n\n        func.functvals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<TraitDescription region={region} trait={trait}/>);\n        });\n    }\n\n    if (!parts.length) {\n        section.showing = false;\n    }\n\n}\n","import {DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.duration,\n        parts = section.parts;\n\n    if (dataVal.Count && dataVal.Count > 0 && dataVal.Turn && dataVal.Turn > 0) {\n        const countDesc = dataVal.Count === 1 ? '1 Time' : `${dataVal.Count} Times`,\n            turnDesc = dataVal.Turn === 1 ? '1 Turn' : `${dataVal.Turn} Turns`;\n\n        parts.push(`(${turnDesc}, ${countDesc})`);\n    } else if (dataVal.Turn && dataVal.Turn > 0) {\n        parts.push(dataVal.Turn === 1 ? '(1 Turn)' : `(${dataVal.Turn} Turns)`);\n    } else if (dataVal.Count && dataVal.Count > 0) {\n        parts.push(dataVal.Count === 1 ? '(1 Time)' : `(${dataVal.Count} Times)`);\n    } else {\n        section.showing = false;\n    }\n}\n","import {DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport {funcUpdatesByLevel, funcUpdatesByOvercharge} from \"../../Helper/FuncHelper\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.scaling,\n        parts = section.parts,\n        isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func);\n\n    if (!isLevel && !isOvercharge) {\n        section.showing = false;\n        return;\n    }\n\n    if (isLevel) {\n        parts.push('<LEVEL>');\n    }\n\n    if (isOvercharge) {\n        parts.push('<OVERCHARGE>');\n    }\n}\n","import {Buff, Region} from \"@atlasacademy/api-connector\";\nimport {BuffDescriptor} from \"@atlasacademy/api-descriptor\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport Description from \"./Description\";\n\ninterface IProps {\n    region: Region;\n    buff: Buff.Buff;\n}\n\nclass BuffDescription extends React.Component<IProps> {\n    static renderAsString(buff: Buff.Buff): string {\n        const descriptor = BuffDescriptor.describe(buff);\n\n        return \"[\" + Description.renderAsString(descriptor) + \"]\";\n    }\n\n    render() {\n        const buff = this.props.buff,\n            descriptor = BuffDescriptor.describe(this.props.buff);\n\n        return (\n            <Link to={`/${this.props.region}/buff/${buff.id}`}>\n                [\n                {buff.icon ? <BuffIcon location={buff.icon}/> : undefined}\n                {buff.icon ? ' ' : undefined}\n                {Description.renderAsString(descriptor)}\n                ]\n            </Link>\n        );\n    }\n}\n\nexport default BuffDescription;\n","import {DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport {FuncDescriptor} from \"@atlasacademy/api-descriptor\";\nimport React from \"react\";\nimport Description from \"./Description\";\n\ninterface IProps {\n    region: Region;\n    func: Func.Func;\n    staticDataVal: DataVal.DataVal;\n    dataVal: DataVal.DataVal;\n    hideRate?: boolean;\n}\n\nclass FuncValueDescriptor extends React.Component<IProps> {\n    render() {\n        const descriptor = FuncDescriptor.describeValue(\n            this.props.func,\n            this.props.staticDataVal,\n            this.props.dataVal,\n            this.props.hideRate\n        );\n\n        return descriptor\n            ? <Description region={this.props.region} descriptor={descriptor}/>\n            : '-';\n    }\n}\n\nexport default FuncValueDescriptor;\n","import {Buff, DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport BuffDescription from \"../BuffDescription\";\nimport TraitDescription from \"../TraitDescription\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport const funcDescriptions = new Map<Func.FuncType, string>([\n    [Func.FuncType.ABSORB_NPTURN, 'Absorb Charge'],\n    [Func.FuncType.ADD_STATE, 'Apply Buff'],\n    [Func.FuncType.ADD_STATE_SHORT, 'Apply Buff'],\n    [Func.FuncType.CARD_RESET, 'Shuffle Cards'],\n    [Func.FuncType.DAMAGE_NP, 'Deal Damage'],\n    [Func.FuncType.DAMAGE_NP_HPRATIO_LOW, 'Deal Damage with Bonus for Low Health'],\n    [Func.FuncType.DAMAGE_NP_INDIVIDUAL, 'Deal Damage with Bonus to Trait'],\n    [Func.FuncType.DAMAGE_NP_INDIVIDUAL_SUM, 'Deal Damage with Bonus per Trait'],\n    [Func.FuncType.DAMAGE_NP_PIERCE, 'Deal Damage that pierces defense'],\n    [Func.FuncType.DAMAGE_NP_RARE, 'Deal Damage with Bonus to Rarity'],\n    [Func.FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX, 'Deal Damage with Bonus to Trait'],\n    [Func.FuncType.DELAY_NPTURN, 'Drain Charge'],\n    [Func.FuncType.EVENT_DROP_UP, 'Increase Drop Amount'],\n    [Func.FuncType.ENEMY_ENCOUNT_COPY_RATE_UP, 'Create Clone of Enemy'],\n    [Func.FuncType.ENEMY_ENCOUNT_RATE_UP, 'Improve Appearance Rate of Enemy'],\n    [Func.FuncType.EXP_UP, 'Increase Master Exp'],\n    [Func.FuncType.EXTEND_SKILL, 'Increase Cooldowns'],\n    [Func.FuncType.FIX_COMMANDCARD, 'Lock Command Cards'],\n    [Func.FuncType.FORCE_INSTANT_DEATH, 'Force Instant Death'],\n    [Func.FuncType.GAIN_HP, 'Restore HP'],\n    [Func.FuncType.GAIN_HP_FROM_TARGETS, 'Absorb HP'],\n    [Func.FuncType.GAIN_HP_PER, 'Restore HP to Percent'],\n    [Func.FuncType.GAIN_NP, 'Charge NP'],\n    [Func.FuncType.GAIN_NP_BUFF_INDIVIDUAL_SUM, 'Charge NP per Trait'],\n    [Func.FuncType.GAIN_NP_FROM_TARGETS, 'Absorb NP'],\n    [Func.FuncType.GAIN_STAR, 'Gain Critical Stars'],\n    [Func.FuncType.HASTEN_NPTURN, 'Increase Charge'],\n    [Func.FuncType.INSTANT_DEATH, 'Apply Death'],\n    [Func.FuncType.LOSS_HP, 'Drain HP'],\n    [Func.FuncType.LOSS_HP_SAFE, 'Drain HP without killing'],\n    [Func.FuncType.LOSS_NP, 'Drain NP'],\n    [Func.FuncType.LOSS_STAR, 'Remove Critical Stars'],\n    [Func.FuncType.NONE, 'No Effect'],\n    [Func.FuncType.QP_DROP_UP, 'Increase QP Reward'],\n    [Func.FuncType.QP_UP, 'Increase QP Reward'],\n    [Func.FuncType.REPLACE_MEMBER, 'Swap members'],\n    [Func.FuncType.SERVANT_FRIENDSHIP_UP, 'Increase Bond Gain'],\n    [Func.FuncType.SHORTEN_SKILL, 'Reduce Cooldowns'],\n    [Func.FuncType.SUB_STATE, 'Remove Effects'],\n    [Func.FuncType.USER_EQUIP_EXP_UP, 'Increase Mystic Code Exp'],\n]);\n\nfunction handleBuffActionSection(region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    parts.push('Apply');\n    func.buffs.forEach((buff, index) => {\n        if (index > 0)\n            parts.push('&');\n\n        parts.push(<BuffDescription region={region} buff={buff}/>);\n    });\n\n    if (\n        func.buffs[0]?.type === Buff.BuffType.FIELD_INDIVIDUALITY\n        || func.buffs[0]?.type === Buff.BuffType.CHANGE_COMMAND_CARD_TYPE\n    ) {\n        sections.amount.preposition = 'to';\n    }\n\n    sections.target.preposition = 'on';\n    if (\n        func.buffs[0]?.type === Buff.BuffType.COMMANDATTACK_FUNCTION\n        || func.buffs[0]?.type === Buff.BuffType.NPATTACK_PREV_BUFF\n    ) {\n        sections.target.preposition = 'for';\n    }\n}\n\nfunction handleCleanseActionSection(region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n\n    if (func.traitVals?.length) {\n        parts.push('with');\n\n        func.traitVals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('or');\n\n            parts.push(<TraitDescription region={region} trait={trait}/>);\n        });\n    }\n\n    sections.target.preposition = 'on';\n}\n\nfunction handleChargeNpPerTraitActionSection(region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    parts.push('Charge NP per');\n\n    if (func.traitVals?.length) {\n        func.traitVals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<TraitDescription region={region} trait={trait}/>);\n        });\n    }\n\n    parts.push('traits');\n\n    sections.amount.preposition = 'by';\n    sections.target.preposition = 'for';\n}\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    if (func.funcType === Func.FuncType.ADD_STATE || func.funcType === Func.FuncType.ADD_STATE_SHORT) {\n        handleBuffActionSection(region, sections, func, dataVal);\n\n        return;\n    } else if (func.funcType === Func.FuncType.SUB_STATE) {\n        handleCleanseActionSection(region, sections, func, dataVal);\n\n        return;\n    } else if (func.funcType === Func.FuncType.GAIN_NP_BUFF_INDIVIDUAL_SUM) {\n        handleChargeNpPerTraitActionSection(region, sections, func, dataVal);\n\n        return;\n    } else if (\n        func.funcType === Func.FuncType.DAMAGE_NP\n        || func.funcType === Func.FuncType.DAMAGE_NP_HPRATIO_LOW\n        || func.funcType === Func.FuncType.DAMAGE_NP_INDIVIDUAL\n        || func.funcType === Func.FuncType.DAMAGE_NP_INDIVIDUAL_SUM\n        || func.funcType === Func.FuncType.DAMAGE_NP_PIERCE\n        || func.funcType === Func.FuncType.DAMAGE_NP_RARE\n        || func.funcType === Func.FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX\n    ) {\n        parts.push('Deal damage');\n        sections.amount.preposition = 'of';\n\n        return;\n    }\n\n    switch (func.funcType) {\n        case Func.FuncType.ABSORB_NPTURN:\n        case Func.FuncType.GAIN_HP_FROM_TARGETS:\n        case Func.FuncType.GAIN_NP_FROM_TARGETS:\n            sections.amount.preposition = 'of';\n            sections.target.preposition = 'from';\n            break;\n        case Func.FuncType.CARD_RESET:\n        case Func.FuncType.GAIN_STAR:\n        case Func.FuncType.LOSS_STAR:\n        case Func.FuncType.NONE:\n            sections.target.showing = false;\n            break;\n        case Func.FuncType.DELAY_NPTURN:\n        case Func.FuncType.LOSS_HP:\n        case Func.FuncType.LOSS_HP_SAFE:\n        case Func.FuncType.LOSS_NP:\n            sections.amount.preposition = 'by';\n            sections.target.preposition = 'from';\n            break;\n        case Func.FuncType.ENEMY_ENCOUNT_COPY_RATE_UP:\n        case Func.FuncType.ENEMY_ENCOUNT_RATE_UP:\n        case Func.FuncType.FIX_COMMANDCARD:\n            sections.amount.showing = false;\n            sections.target.showing = false;\n            break;\n        case Func.FuncType.EVENT_DROP_UP:\n        case Func.FuncType.EXP_UP:\n        case Func.FuncType.QP_DROP_UP:\n        case Func.FuncType.QP_UP:\n        case Func.FuncType.SERVANT_FRIENDSHIP_UP:\n        case Func.FuncType.USER_EQUIP_EXP_UP:\n            sections.chance.showing = false;\n            sections.amount.preposition = 'by';\n            sections.target.showing = false;\n            break;\n        case Func.FuncType.EXTEND_SKILL:\n        case Func.FuncType.GAIN_HP:\n        case Func.FuncType.GAIN_NP:\n        case Func.FuncType.HASTEN_NPTURN:\n        case Func.FuncType.SHORTEN_SKILL:\n            sections.amount.preposition = 'by';\n            sections.target.preposition = 'for';\n            break;\n        case Func.FuncType.FORCE_INSTANT_DEATH:\n        case Func.FuncType.INSTANT_DEATH:\n            sections.amount.showing = false;\n            sections.target.preposition = 'on';\n            break;\n        case Func.FuncType.GAIN_HP_PER:\n            sections.amount.preposition = 'of';\n            sections.target.preposition = 'for';\n            break;\n        case Func.FuncType.REPLACE_MEMBER:\n            sections.amount.showing = false;\n            sections.target.preposition = 'with';\n            break;\n    }\n\n    parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n}\n","import {DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport const targetDescriptions = new Map<Func.FuncTargetType, string>([\n    [Func.FuncTargetType.SELF, 'self'],\n    [Func.FuncTargetType.PT_ONE, 'party member'],\n    // PT_ANOTHER\n    [Func.FuncTargetType.PT_ALL, 'party'],\n    [Func.FuncTargetType.ENEMY, 'one enemy'],\n    // ENEMY_ANOTHER\n    [Func.FuncTargetType.ENEMY_ALL, 'enemies'],\n    [Func.FuncTargetType.PT_FULL, 'party (including reserve)'],\n    [Func.FuncTargetType.ENEMY_FULL, 'enemies (including reserve)'],\n    [Func.FuncTargetType.PT_OTHER, 'party except self'],\n    [Func.FuncTargetType.PT_ONE_OTHER, 'other party members besides target'],\n    [Func.FuncTargetType.PT_RANDOM, 'random party member'],\n    [Func.FuncTargetType.ENEMY_OTHER, 'other enemies besides target'],\n    [Func.FuncTargetType.ENEMY_RANDOM, 'random enemy'],\n    [Func.FuncTargetType.PT_OTHER_FULL, 'party except self (including reserve)'],\n    [Func.FuncTargetType.ENEMY_OTHER_FULL, 'other enemies (including reserve)'],\n    [Func.FuncTargetType.PTSELECT_ONE_SUB, 'active party member and reserve party member'],\n    [Func.FuncTargetType.PTSELECT_SUB, 'reserve party member'],\n    // PT_ONE_ANOTHER_RANDOM\n    [Func.FuncTargetType.PT_ONE_ANOTHER_RANDOM, 'other random party member'],\n    [Func.FuncTargetType.PT_SELF_ANOTHER_RANDOM, 'other random party member (except self)'],\n    [Func.FuncTargetType.ENEMY_ONE_ANOTHER_RANDOM, 'other random enemy'],\n    [Func.FuncTargetType.PT_SELF_ANOTHER_FIRST, 'first other party member (except self)'],\n    // PT_SELF_BEFORE\n    // PT_SELF_AFTER\n    // PT_SELF_ANOTHER_LAST\n    [Func.FuncTargetType.COMMAND_TYPE_SELF_TREASURE_DEVICE, 'target noble phantasm version'],\n]);\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.target,\n        parts = section.parts;\n\n    let targetType: Func.FuncTargetType | undefined = func.funcTargetType;\n\n    if (func.funcType === Func.FuncType.ABSORB_NPTURN) {\n        switch (dataVal.DependFuncId) {\n            case 469:\n                targetType = Func.FuncTargetType.ENEMY_ALL;\n                break;\n            case 5061:\n                targetType = Func.FuncTargetType.PT_OTHER;\n                break;\n        }\n    } else if (func.funcType === Func.FuncType.GAIN_HP_FROM_TARGETS) {\n        switch (dataVal.DependFuncId) {\n            case 711:\n                targetType = Func.FuncTargetType.ENEMY_ALL;\n                break;\n            default:\n                targetType = undefined;\n                section.showing = false;\n                break;\n        }\n    } else if (func.funcType === Func.FuncType.GAIN_NP_FROM_TARGETS) {\n        switch (dataVal.DependFuncId) {\n            case 474:\n                targetType = Func.FuncTargetType.ENEMY_ALL;\n                break;\n            case 3962:\n                targetType = Func.FuncTargetType.PT_OTHER;\n                break;\n        }\n    }\n\n    if (targetType) {\n        parts.push(targetDescriptions.get(targetType) ?? targetType);\n    }\n}\n"],"sourceRoot":""}