{"version":3,"sources":["Helper/OutputHelper.tsx","Helper/FuncHelper.tsx","Descriptor/Func/FuncDescriptorSections.tsx","Descriptor/Func/handleAmountSection.tsx","Descriptor/FuncDescriptor.tsx","Descriptor/Func/handleTeamSection.tsx","Descriptor/Func/handleChanceSection.tsx","Descriptor/Func/handleAffectsSection.tsx","Descriptor/Func/handleDurationSection.tsx","Descriptor/Func/handleScalingSection.tsx","Descriptor/BuffDescription.tsx","Descriptor/FuncValueDescriptor.tsx","Descriptor/BuffValueDescription.tsx","Descriptor/Func/handleActionSection.tsx","Descriptor/Func/handleTargetSection.tsx"],"names":["asPercent","value","pow","parseInt","decimal","Math","formatNumber","String","replace","handleNewLine","text","mergeElements","split","joinElements","elements","separator","parts","pushElement","element","undefined","length","previous","toString","push","forEach","index","seperator","Fragment","map","key","hasChangingDataVals","vals","i","JSON","stringify","hasUniqueValues","values","Set","Array","isArray","join","size","describeMutators","region","func","dataVals","getDataValList","staticVals","getStaticFieldValues","getMutatingFieldValues","fields","Object","DataVal","DataValField","filter","field","val","getMutatingFieldNames","dependingVals","DependFuncVals","dependingMutatingValues","staticValues","mutatingVals","x","fieldName","DependFuncId","mutatingVal","staticDataVal","dataVal","funcUpdatesByLevel","getLevelDataValList","funcUpdatesByOvercharge","getOverchargeDataValList","isLevel","isOvercharge","getTargetVersionValues","getMixedDataValList","getFollowerDataValList","followerVals","svals","getRelatedSkillIds","funcType","Func","FuncType","ADD_STATE","ADD_STATE_SHORT","buff","buffs","type","Buff","BuffType","ATTACK_FUNCTION","COMMANDATTACK_FUNCTION","COMMANDATTACK_BEFORE_FUNCTION","COMMANDCODEATTACK_FUNCTION","DAMAGE_FUNCTION","DEAD_FUNCTION","DELAY_FUNCTION","GUTS_FUNCTION","SELFTURNEND_FUNCTION","Value","NPATTACK_PREV_BUFF","SkillID","getStaticFieldNames","hasDependingVals","dependingStaticValues","getTargetFollowerVersionValues","level","overcharge","svals2","svals3","svals4","svals5","hasFollowerDataVals","FuncDescriptorSection","preposition","showing","this","FuncDescriptorSections","team","chance","action","affects","amount","target","duration","scaling","sections","support","section","ADD_INDIVIDUALITY","TraitDescription","trait","CARD_RESET","DAMAGE_NP_INDIVIDUAL_SUM","FuncValueDescriptor","hideRate","ABSORB_NPTURN","GAIN_HP_FROM_TARGETS","GAIN_NP_FROM_TARGETS","AddCount","EVENT_DROP_UP","EXP_UP","QP_UP","USER_EQUIP_EXP_UP","RateCount","QP_DROP_UP","SERVANT_FRIENDSHIP_UP","SkillReferenceDescriptor","id","BuffValueDescription","Correction","FuncDescriptor","props","getDataVal","followerDataVal","getFollowerDataVal","funcTargetTeam","FuncTargetTeam","PLAYER","ENEMY","handleTeamSection","ActSet","ActSetWeight","Rate","ENEMY_ENCOUNT_COPY_RATE_UP","ENEMY_ENCOUNT_RATE_UP","NONE","handleChanceSection","handleActionSection","DAMAGE_NP_HPRATIO_LOW","Target","DAMAGE_NP_INDIVIDUAL","DAMAGE_NP_STATE_INDIVIDUAL_FIX","TargetList","traits","ParamAddMaxCount","TargetRarityList","DAMAGE_NP_RARE","DAMAGE_NP_PIERCE","Individuality","Number","EventId","funcquestTvals","functvals","handleAffectsSection","handleAmountSection","handleTargetSection","Count","Turn","countDesc","turnDesc","handleDurationSection","handleScalingSection","concat","to","funcId","icon","faShare","React","Component","BuffDescription","descriptor","BuffDescriptor","describe","location","Description","renderAsString","npAbsorbParts","Value2","DAMAGE_NP","GAIN_HP_PER","GAIN_NP","GAIN_NP_BUFF_INDIVIDUAL_SUM","LOSS_NP","describeValue","funcDescriptions","Map","DELAY_NPTURN","EXTEND_SKILL","FIX_COMMANDCARD","FORCE_INSTANT_DEATH","GAIN_HP","GAIN_STAR","HASTEN_NPTURN","INSTANT_DEATH","LOSS_HP","LOSS_HP_SAFE","LOSS_STAR","REPLACE_MEMBER","SHORTEN_SKILL","SUB_STATE","get","traitVals","handleChargeNpPerTraitActionSection","handleCleanseActionSection","FIELD_INDIVIDUALITY","CHANGE_COMMAND_CARD_TYPE","handleBuffActionSection","targetDescriptions","FuncTargetType","SELF","PT_ONE","PT_ALL","ENEMY_ALL","PT_FULL","ENEMY_FULL","PT_OTHER","PT_ONE_OTHER","PT_RANDOM","ENEMY_OTHER","ENEMY_RANDOM","PT_OTHER_FULL","ENEMY_OTHER_FULL","PTSELECT_ONE_SUB","PTSELECT_SUB","PT_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_RANDOM","ENEMY_ONE_ANOTHER_RANDOM","PT_SELF_ANOTHER_FIRST","COMMAND_TYPE_SELF_TREASURE_DEVICE","targetType","funcTargetType"],"mappings":"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","file":"static/js/2.7ed9c337.chunk.js","sourcesContent":["import React from \"react\";\n\nexport type Renderable = (\n    JSX.Element\n    | string\n    | number\n    | undefined\n    )\n\nexport function asPercent(value: number | string | undefined, pow: number): string {\n    if (typeof value === \"string\")\n        return asPercent(parseInt(value), pow);\n\n    const decimal = (value ?? 0) / Math.pow(10, pow);\n\n    return `${decimal}%`;\n}\n\nexport function formatNumber(value: number): string {\n    return String(value).replace(/(.)(?=(\\d{3})+$)/g, '$1,');\n}\n\nexport function handleNewLine(text?: string): Renderable {\n    if (!text)\n        return \"\";\n\n    return (\n        <span>\n            {mergeElements(text.split(\"\\n\"), <br/>)}\n        </span>\n    );\n}\n\nexport function joinElements(elements: Renderable[], separator: Renderable): Renderable[] {\n    const parts: Renderable[] = [],\n        pushElement = function (element: Renderable) {\n            if (element === undefined)\n                return;\n\n            if (typeof element === 'object') {\n                parts.push(element);\n                return;\n            }\n\n            if (parts.length === 0) {\n                parts.push(element.toString());\n                return;\n            }\n\n            const previous = parts[parts.length - 1];\n            if (typeof previous !== 'string') {\n                parts.push(element.toString());\n                return;\n            }\n\n            parts[parts.length - 1] = previous + element.toString();\n        };\n\n    elements.forEach((element, index) => {\n        if (index > 0)\n            pushElement(separator);\n\n        pushElement(element);\n    });\n\n    return parts;\n}\n\nexport function mergeElements(elements: Renderable[], seperator: Renderable): Renderable {\n    return <React.Fragment>\n        {joinElements(elements, seperator).map((element, index) => {\n            return <React.Fragment key={index}>{element}</React.Fragment>;\n        })}\n    </React.Fragment>\n}\n","import {Buff, DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport FuncValueDescriptor from \"../Descriptor/FuncValueDescriptor\";\nimport {Renderable} from \"./OutputHelper\";\n\nconst hasChangingDataVals = function (vals: DataVal.DataVal[]): boolean {\n    if (!vals.length)\n        return false;\n\n    let previous = vals[0];\n    for (let i = 1; i < vals.length; i++) {\n        if (JSON.stringify(previous) !== JSON.stringify(vals[i]))\n            return true;\n\n        previous = vals[i];\n    }\n\n    return false;\n};\n\nconst hasUniqueValues = function (values: (number | number[] | undefined)[]): boolean {\n    if (values.length === 0)\n        return false;\n\n    return new Set(\n        values.map(value => {\n            if (Array.isArray(value))\n                return value.join(',');\n\n            return value;\n        })\n    ).size > 1;\n};\n\nexport function describeMutators(region: Region, func: Func.Func): Renderable[] {\n    const dataVals = getDataValList(func),\n        staticVals = getStaticFieldValues(dataVals),\n        mutatingVals = getMutatingFieldValues(dataVals);\n\n    return mutatingVals\n        .map(mutatingVal => <FuncValueDescriptor region={region} func={func} staticDataVal={staticVals}\n                                                 dataVal={mutatingVal}/>);\n}\n\nexport function funcUpdatesByLevel(func: Func.Func): boolean {\n    return hasChangingDataVals(getLevelDataValList(func));\n}\n\nexport function funcUpdatesByOvercharge(func: Func.Func): boolean {\n    return hasChangingDataVals(getOverchargeDataValList(func));\n}\n\nexport function getDataValList(func: Func.Func): DataVal.DataVal[] {\n    const isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func);\n\n    return isLevel && isOvercharge\n        ? getMixedDataValList(func)\n        : (isOvercharge ? getOverchargeDataValList(func) : getLevelDataValList(func));\n}\n\nexport function getFollowerDataValList(func: Func.Func): DataVal.DataVal[] {\n    return func.followerVals ?? [];\n}\n\nexport function getLevelDataValList(func: Func.Func): DataVal.DataVal[] {\n    return func.svals ?? [];\n}\n\nexport function getMixedDataValList(func: Func.Func): DataVal.DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, i, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getMutatingFieldNames(vals: DataVal.DataVal[]): DataVal.DataValField[] {\n    return Object.values(DataVal.DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return hasUniqueValues(values);\n    });\n}\n\nexport function getMutatingFieldValues(vals: DataVal.DataVal[]): DataVal.DataVal[] {\n    if (!vals.length)\n        return [];\n\n    const fields = getMutatingFieldNames(vals),\n        hasDependingVals = vals.filter(val => val.DependFuncVals !== undefined).length > 0,\n        dependingVals: (DataVal.DataVal[] | undefined) = (\n            hasDependingVals\n                ? vals.map(val => (val.DependFuncVals ?? {}) as DataVal.DataVal)\n                : undefined\n        ),\n        dependingMutatingValues = dependingVals ? getMutatingFieldValues(dependingVals) : [],\n        staticValues = getStaticFieldValues(vals);\n\n    return vals.map((val, index) => {\n        const mutatingVals: DataVal.DataVal = {};\n\n        for (let x in fields) {\n            const fieldName = fields[x];\n\n            // @ts-ignore\n            mutatingVals[fieldName] = val[fieldName];\n        }\n\n        if (staticValues.DependFuncId && dependingMutatingValues[index]) {\n            mutatingVals.DependFuncId = staticValues.DependFuncId;\n            mutatingVals.DependFuncVals = dependingMutatingValues[index];\n        }\n\n        return mutatingVals;\n    });\n}\n\nexport function getOverchargeDataValList(func: Func.Func): DataVal.DataVal[] {\n    const dataVals = [];\n\n    for (let i = 1; i <= 5; i++) {\n        let dataVal = getTargetVersionValues(func, 1, i);\n        if (dataVal !== undefined)\n            dataVals.push(dataVal);\n    }\n\n    return dataVals;\n}\n\nexport function getRelatedSkillIds(func: Func.Func): number[] {\n    if (func.funcType !== Func.FuncType.ADD_STATE && func.funcType !== Func.FuncType.ADD_STATE_SHORT)\n        return [];\n\n    const buff = func.buffs[0];\n    if (\n        buff.type === Buff.BuffType.ATTACK_FUNCTION\n        || buff.type === Buff.BuffType.COMMANDATTACK_FUNCTION\n        || buff.type === Buff.BuffType.COMMANDATTACK_BEFORE_FUNCTION\n        || buff.type === Buff.BuffType.COMMANDCODEATTACK_FUNCTION\n        || buff.type === Buff.BuffType.DAMAGE_FUNCTION\n        || buff.type === Buff.BuffType.DEAD_FUNCTION\n        || buff.type === Buff.BuffType.DELAY_FUNCTION\n        || buff.type === Buff.BuffType.GUTS_FUNCTION\n        || buff.type === Buff.BuffType.SELFTURNEND_FUNCTION\n    ) {\n        const dataVals = getDataValList(func),\n            dataVal = dataVals[0];\n\n        return typeof dataVal.Value === \"number\" ? [dataVal.Value] : [];\n    }\n\n    if (buff.type === Buff.BuffType.NPATTACK_PREV_BUFF) {\n        const dataVals = getDataValList(func),\n            dataVal = dataVals[0];\n\n        return typeof dataVal.SkillID === \"number\" ? [dataVal.SkillID] : [];\n    }\n\n    return [];\n}\n\nexport function getStaticFieldNames(vals: DataVal.DataVal[]): DataVal.DataValField[] {\n    return Object.values(DataVal.DataValField).filter(field => {\n        const values = vals.map(val => val[field]);\n\n        return !hasUniqueValues(values);\n    });\n}\n\nexport function getStaticFieldValues(vals: DataVal.DataVal[]): DataVal.DataVal {\n    if (!vals.length)\n        return {};\n\n    const fields = getStaticFieldNames(vals),\n        staticVals: DataVal.DataVal = {},\n        hasDependingVals = vals.filter(val => val.DependFuncVals !== undefined).length > 0,\n        dependingVals: (DataVal.DataVal[] | undefined) = (\n            hasDependingVals\n                ? vals.map(val => (val.DependFuncVals ?? {}) as DataVal.DataVal)\n                : undefined\n        ),\n        dependingStaticValues = dependingVals ? getStaticFieldValues(dependingVals) : undefined;\n\n    for (let x in fields) {\n        // @ts-ignore\n        staticVals[fields[x]] = vals[0][fields[x]];\n    }\n\n    if (hasDependingVals)\n        staticVals.DependFuncVals = dependingStaticValues;\n\n    return staticVals;\n}\n\nexport function getTargetFollowerVersionValues(func: Func.Func, level: number): DataVal.DataVal | undefined {\n    if (func.followerVals === undefined)\n        return undefined;\n\n    return func.followerVals[level - 1];\n}\n\nexport function getTargetVersionValues(func: Func.Func, level: number, overcharge: number = 1): DataVal.DataVal | undefined {\n    if (func.svals === undefined)\n        return undefined;\n\n    let dataVals;\n\n    if (overcharge === 2 && func.svals2)\n        dataVals = func.svals2;\n    else if (overcharge === 3 && func.svals3)\n        dataVals = func.svals3;\n    else if (overcharge === 4 && func.svals4)\n        dataVals = func.svals4;\n    else if (overcharge === 5 && func.svals5)\n        dataVals = func.svals5;\n    else\n        dataVals = func.svals;\n\n    return dataVals[level - 1];\n}\n\nexport function hasFollowerDataVals(func: Func.Func): boolean {\n    return func.followerVals !== undefined;\n}\n","import {Renderable} from \"../../Helper/OutputHelper\";\n\nexport class FuncDescriptorSection {\n    public showing: boolean = true;\n    public parts: Renderable[] = [];\n    public preposition?: string;\n\n    constructor(preposition?: string) {\n        this.preposition = preposition;\n    }\n}\n\nexport class FuncDescriptorSections {\n    public team = new FuncDescriptorSection();\n    public chance = new FuncDescriptorSection();\n    public action = new FuncDescriptorSection();\n    public affects = new FuncDescriptorSection();\n    public amount = new FuncDescriptorSection('of');\n    public target = new FuncDescriptorSection('to');\n    public duration = new FuncDescriptorSection();\n    public scaling = new FuncDescriptorSection();\n}\n","import {Buff, DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport BuffValueDescription from \"../BuffValueDescription\";\nimport FuncValueDescriptor from \"../FuncValueDescriptor\";\nimport SkillReferenceDescriptor from \"../SkillReferenceDescriptor\";\nimport TraitDescription from \"../TraitDescription\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal, support?: boolean): void {\n    const section = sections.amount,\n        parts = section.parts;\n\n    if (support) {\n        parts.push('( Support only:');\n    }\n\n    if (func.buffs[0]?.type === Buff.BuffType.ADD_INDIVIDUALITY && typeof dataVal.Value === \"number\") {\n        parts.push(\n            <TraitDescription region={region} trait={dataVal.Value}/>\n        );\n    } else if (\n        (\n            func.buffs[0]?.type === Buff.BuffType.ATTACK_FUNCTION\n            || func.buffs[0]?.type === Buff.BuffType.COMMANDATTACK_FUNCTION\n            || func.buffs[0]?.type === Buff.BuffType.COMMANDATTACK_BEFORE_FUNCTION\n            || func.buffs[0]?.type === Buff.BuffType.COMMANDCODEATTACK_FUNCTION\n            || func.buffs[0]?.type === Buff.BuffType.DAMAGE_FUNCTION\n            || func.buffs[0]?.type === Buff.BuffType.DEAD_FUNCTION\n            || func.buffs[0]?.type === Buff.BuffType.DELAY_FUNCTION\n            || func.buffs[0]?.type === Buff.BuffType.GUTS_FUNCTION\n            || func.buffs[0]?.type === Buff.BuffType.SELFTURNEND_FUNCTION\n        )\n        && typeof dataVal.Value === \"number\"\n    ) {\n        section.preposition = undefined;\n        parts.push('that triggers');\n        parts.push(\n            <SkillReferenceDescriptor region={region} id={dataVal.Value}/>\n        );\n    } else if (func.funcType === Func.FuncType.CARD_RESET && dataVal.Value) {\n        section.preposition = undefined;\n        parts.push(`${dataVal.Value} time${dataVal.Value > 1 ? 's' : ''}`);\n    } else if (func.funcType === Func.FuncType.DAMAGE_NP_INDIVIDUAL_SUM) {\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}\n                                        hideRate={true}/>);\n    } else if (\n        (\n            func.funcType === Func.FuncType.ABSORB_NPTURN\n            || func.funcType === Func.FuncType.GAIN_HP_FROM_TARGETS\n            || func.funcType === Func.FuncType.GAIN_NP_FROM_TARGETS\n        ) && dataVal.DependFuncId\n    ) {\n        if (dataVal.DependFuncVals?.Value) {\n            section.parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal}\n                                                    dataVal={dataVal} hideRate={true}/>);\n        } else {\n            section.showing = false;\n        }\n    } else if (dataVal.AddCount && (\n        func.funcType === Func.FuncType.EVENT_DROP_UP\n        || func.funcType === Func.FuncType.EXP_UP\n        || func.funcType === Func.FuncType.QP_UP\n        || func.funcType === Func.FuncType.USER_EQUIP_EXP_UP\n    )) {\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}/>);\n    } else if (dataVal.RateCount && (\n        func.funcType === Func.FuncType.QP_DROP_UP\n        || func.funcType === Func.FuncType.SERVANT_FRIENDSHIP_UP\n        || func.funcType === Func.FuncType.USER_EQUIP_EXP_UP\n    )) {\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}/>);\n    } else if (func.buffs[0]?.type === Buff.BuffType.NPATTACK_PREV_BUFF) {\n        if (typeof dataVal.SkillID !== \"number\") {\n            section.showing = false;\n            return;\n        }\n\n        section.preposition = undefined;\n        parts.push('that triggers');\n        parts.push(\n            <SkillReferenceDescriptor region={region} id={dataVal.SkillID}/>\n        );\n    } else if (func.buffs[0] && dataVal.Value) {\n        parts.push(<BuffValueDescription region={region} buff={func.buffs[0]} dataVal={dataVal}/>);\n    } else if (dataVal.Value) {\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}\n                                        hideRate={true}/>);\n    } else if (!dataVal.Value && dataVal.Correction) {\n        section.preposition = 'with';\n        parts.push('bonus');\n        parts.push(<FuncValueDescriptor region={region} func={func} staticDataVal={dataVal} dataVal={dataVal}\n                                        hideRate={true}/>);\n    } else {\n        section.showing = false;\n    }\n\n    if (support) {\n        parts.push(')');\n    }\n}\n","import {DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport {faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {\n    getDataValList,\n    getFollowerDataValList,\n    getStaticFieldValues,\n    getTargetFollowerVersionValues,\n    getTargetVersionValues,\n    hasFollowerDataVals\n} from \"../Helper/FuncHelper\";\nimport {joinElements, Renderable} from \"../Helper/OutputHelper\";\nimport {FuncDescriptorSections} from \"./Func/FuncDescriptorSections\";\nimport handleActionSection from \"./Func/handleActionSection\";\nimport handleAffectsSection from \"./Func/handleAffectsSection\";\nimport handleAmountSection from \"./Func/handleAmountSection\";\nimport handleChanceSection from \"./Func/handleChanceSection\";\nimport handleDurationSection from \"./Func/handleDurationSection\";\nimport handleScalingSection from \"./Func/handleScalingSection\";\nimport handleTargetSection from \"./Func/handleTargetSection\";\nimport handleTeamSection from \"./Func/handleTeamSection\";\n\ninterface IProps {\n    region: Region;\n    func: Func.Func;\n    level?: number;\n    overcharge?: number;\n}\n\nclass FuncDescriptor extends React.Component<IProps> {\n    getDataVal(): DataVal.DataVal {\n        const func = this.props.func;\n\n        if (this.props.level) {\n            return getTargetVersionValues(func, this.props.level, this.props.overcharge ?? 1) ?? {};\n        } else {\n            const dataVals = getDataValList(func);\n\n            return getStaticFieldValues(dataVals);\n        }\n    }\n\n    getFollowerDataVal(): DataVal.DataVal | undefined {\n        const func = this.props.func;\n\n        if (!hasFollowerDataVals(func))\n            return undefined;\n\n        if (this.props.level) {\n            return getTargetFollowerVersionValues(func, this.props.level) ?? {};\n        } else {\n            const dataVals = getFollowerDataValList(func);\n\n            return getStaticFieldValues(dataVals);\n        }\n    }\n\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            dataVal = this.getDataVal(),\n            followerDataVal = this.getFollowerDataVal();\n\n        const sections = new FuncDescriptorSections();\n\n        handleTeamSection(region, sections, func, dataVal);\n        handleChanceSection(region, sections, func, dataVal);\n        handleActionSection(region, sections, func, dataVal);\n        handleAffectsSection(region, sections, func, dataVal);\n        handleAmountSection(region, sections, func, dataVal);\n        if (followerDataVal) {\n            handleAmountSection(region, sections, func, followerDataVal, true);\n        }\n        handleTargetSection(region, sections, func, dataVal);\n        handleDurationSection(region, sections, func, dataVal);\n        handleScalingSection(region, sections, func, dataVal);\n\n        let parts: Renderable[] = [];\n\n        Object.values(sections).forEach(section => {\n            if (!section.showing)\n                return;\n\n            if (section.preposition)\n                parts.push(section.preposition);\n\n            parts = parts.concat(section.parts);\n        });\n\n        parts.push(\n            <Link to={`/${region}/func/${func.funcId}`}>\n                <FontAwesomeIcon icon={faShare}/>\n            </Link>\n        );\n\n        parts = joinElements(parts, ' ');\n\n        return (\n            <span>\n                {parts.map((element, index) => {\n                    return <React.Fragment key={index}>{element}</React.Fragment>;\n                })}\n            </span>\n        );\n    }\n}\n\nexport default FuncDescriptor;\n","import {DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.team,\n        parts = section.parts;\n\n    if (func.funcTargetTeam === Func.FuncTargetTeam.PLAYER)\n        parts.push('[Player]');\n    else if (func.funcTargetTeam === Func.FuncTargetTeam.ENEMY)\n        parts.push('[Enemy]');\n    else\n        section.showing = false;\n}\n","import {DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport {asPercent} from \"../../Helper/OutputHelper\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.chance,\n        parts = section.parts;\n\n    if (dataVal.ActSet && dataVal.ActSetWeight) {\n        parts.push(`[Weight: ${dataVal.ActSetWeight}]`);\n    }\n\n    if (dataVal.Rate && dataVal.Rate < 0) {\n        parts.push('Guaranteed to');\n    } else if (typeof dataVal.Rate === \"number\" && dataVal.Rate !== 1000) {\n        parts.push((dataVal.Rate / 10) + '% Chance to');\n    } else if (dataVal.RateCount && (\n        func.funcType === Func.FuncType.ENEMY_ENCOUNT_COPY_RATE_UP\n        || func.funcType === Func.FuncType.ENEMY_ENCOUNT_RATE_UP\n    )) {\n        parts.push(asPercent(dataVal.RateCount, 1) + ' Chance per Target to');\n    } else if (!dataVal.Rate && func.funcType !== Func.FuncType.NONE) {\n        parts.push('Chance to');\n    }\n\n    if (parts.length === 0) {\n        section.showing = false;\n    }\n}\n","import {DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport {mergeElements} from \"../../Helper/OutputHelper\";\nimport TraitDescription from \"../TraitDescription\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.affects,\n        parts = section.parts;\n\n    if (func.funcType === Func.FuncType.DAMAGE_NP_HPRATIO_LOW) {\n        parts.push('(additional for low HP)');\n    } else if (typeof dataVal.Target === \"number\"\n        && (\n            func.funcType === Func.FuncType.DAMAGE_NP_INDIVIDUAL\n            || func.funcType === Func.FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX\n        )\n    ) {\n        parts.push(\n            <span>(additional to targets with {\n                <TraitDescription region={region} trait={dataVal.Target}/>\n            })</span>\n        );\n    } else if (\n        dataVal.TargetList\n        && dataVal.TargetList.length > 0\n        && func.funcType === Func.FuncType.DAMAGE_NP_INDIVIDUAL_SUM\n    ) {\n        const traitIds = dataVal.TargetList,\n            traits = traitIds.map(id => <TraitDescription region={region} trait={id}/>);\n\n        parts.push(\n            <span>(bonus per trait of {mergeElements(traits, ' or ')}{\n                dataVal.ParamAddMaxCount ? `[Limit ${dataVal.ParamAddMaxCount}]` : null\n            })</span>\n        );\n    } else if (\n        dataVal.TargetRarityList\n        && dataVal.TargetRarityList.length > 0\n        && func.funcType === Func.FuncType.DAMAGE_NP_RARE\n    ) {\n        parts.push(\n            <span>(bonus to {dataVal.TargetRarityList.join('/')} {\n                dataVal.TargetRarityList.length > 1 ? 'rarities' : 'rarity'\n            })</span>\n        )\n    } else if (func.funcType === Func.FuncType.DAMAGE_NP_PIERCE) {\n        parts.push('(that pierces defense)');\n    }\n\n    if (\n        func.funcType === Func.FuncType.ENEMY_ENCOUNT_COPY_RATE_UP\n        || func.funcType === Func.FuncType.ENEMY_ENCOUNT_RATE_UP\n        || func.funcType === Func.FuncType.EVENT_DROP_UP\n    ) {\n        if (dataVal.Individuality) {\n            parts.push(\n                <span>with <TraitDescription region={region} trait={Number(dataVal.Individuality)}/></span>\n            )\n        }\n\n        if (dataVal.EventId) {\n            parts.push(\n                <span>during event <TraitDescription region={region} trait={Number(dataVal.EventId)}/></span>\n            )\n        }\n    }\n\n    if (func.funcquestTvals.length) {\n        parts.push('if on field');\n        parts.push(\n            mergeElements(\n                func.funcquestTvals.map(trait => <TraitDescription region={region} trait={trait}/>),\n                ' & '\n            )\n        );\n    }\n\n    if (func.functvals.length) {\n        parts.push('for targets');\n\n        if (func.functvals.length > 1) {\n            parts.push('all');\n        }\n\n        func.functvals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<TraitDescription region={region} trait={trait}/>);\n        });\n    }\n\n    if (!parts.length) {\n        section.showing = false;\n    }\n\n}\n","import {DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.duration,\n        parts = section.parts;\n\n    if (dataVal.Count && dataVal.Count > 0 && dataVal.Turn && dataVal.Turn > 0) {\n        const countDesc = dataVal.Count === 1 ? '1 Time' : `${dataVal.Count} Times`,\n            turnDesc = dataVal.Turn === 1 ? '1 Turn' : `${dataVal.Turn} Turns`;\n\n        parts.push(`(${turnDesc}, ${countDesc})`);\n    } else if (dataVal.Turn && dataVal.Turn > 0) {\n        parts.push(dataVal.Turn === 1 ? '(1 Turn)' : `(${dataVal.Turn} Turns)`);\n    } else if (dataVal.Count && dataVal.Count > 0) {\n        parts.push(dataVal.Count === 1 ? '(1 Time)' : `(${dataVal.Count} Times)`);\n    } else {\n        section.showing = false;\n    }\n}\n","import {DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport {funcUpdatesByLevel, funcUpdatesByOvercharge} from \"../../Helper/FuncHelper\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.scaling,\n        parts = section.parts,\n        isLevel = funcUpdatesByLevel(func),\n        isOvercharge = funcUpdatesByOvercharge(func);\n\n    if (!isLevel && !isOvercharge) {\n        section.showing = false;\n        return;\n    }\n\n    if (isLevel) {\n        parts.push('<LEVEL>');\n    }\n\n    if (isOvercharge) {\n        parts.push('<OVERCHARGE>');\n    }\n}\n","import {Buff, Region} from \"@atlasacademy/api-connector\";\nimport {BuffDescriptor} from \"@atlasacademy/api-descriptor\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport BuffIcon from \"../Component/BuffIcon\";\nimport Description from \"./Description\";\n\ninterface IProps {\n    region: Region;\n    buff: Buff.Buff;\n}\n\nclass BuffDescription extends React.Component<IProps> {\n    static renderAsString(buff: Buff.Buff): string {\n        const descriptor = BuffDescriptor.describe(buff);\n\n        return \"[\" + Description.renderAsString(descriptor) + \"]\";\n    }\n\n    render() {\n        const buff = this.props.buff,\n            descriptor = BuffDescriptor.describe(this.props.buff);\n\n        return (\n            <Link to={`/${this.props.region}/buff/${buff.id}`}>\n                [\n                {buff.icon ? <BuffIcon location={buff.icon}/> : undefined}\n                {buff.icon ? ' ' : undefined}\n                {Description.renderAsString(descriptor)}\n                ]\n            </Link>\n        );\n    }\n}\n\nexport default BuffDescription;\n","import {Buff, DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport {asPercent, mergeElements, Renderable} from \"../Helper/OutputHelper\";\nimport BuffValueDescription from \"./BuffValueDescription\";\n\ninterface IProps {\n    region: Region;\n    func: Func.Func;\n    staticDataVal: DataVal.DataVal;\n    dataVal: DataVal.DataVal;\n    hideRate?: boolean;\n}\n\nclass FuncValueDescriptor extends React.Component<IProps> {\n    render() {\n        const region = this.props.region,\n            func = this.props.func,\n            dataVal = this.props.dataVal,\n            parts: Renderable[] = [];\n\n        if (func.funcType === Func.FuncType.ABSORB_NPTURN) {\n            switch (this.props.staticDataVal.DependFuncId) {\n                case 469:\n                    const npAbsorbParts = [];\n                    if (dataVal.DependFuncVals?.Value) {\n                        npAbsorbParts.push(`${asPercent(dataVal.DependFuncVals.Value, 2)}`);\n                    }\n\n                    if (typeof dataVal.DependFuncVals?.Value2 === \"number\") {\n                        npAbsorbParts.push(`${dataVal.DependFuncVals.Value2 / 100} Charge`);\n                    }\n\n                    if (npAbsorbParts.length) {\n                        parts.push(<React.Fragment>\n                            ({mergeElements(npAbsorbParts, ' => ')})\n                        </React.Fragment>);\n                    }\n                    break;\n                case 5061:\n                    if (dataVal.DependFuncVals?.Value)\n                        parts.push(dataVal.DependFuncVals.Value.toString());\n                    break;\n            }\n        }\n\n        if (func.funcType === Func.FuncType.GAIN_HP_FROM_TARGETS) {\n            switch (this.props.staticDataVal.DependFuncId) {\n                case 711:\n                    if (dataVal.DependFuncVals?.Value)\n                        parts.push(dataVal.DependFuncVals?.Value.toString());\n                    break;\n            }\n        }\n\n        if (func.funcType === Func.FuncType.GAIN_NP_FROM_TARGETS) {\n            switch (this.props.staticDataVal.DependFuncId) {\n                case 474:\n                    const npAbsorbParts = [];\n                    if (dataVal.DependFuncVals?.Value) {\n                        npAbsorbParts.push(`${dataVal.DependFuncVals.Value} Charge`);\n                    }\n\n                    if (dataVal.DependFuncVals?.Value2) {\n                        npAbsorbParts.push(`${asPercent(dataVal.DependFuncVals.Value2, 2)}`);\n                    }\n\n                    if (npAbsorbParts.length) {\n                        parts.push(<React.Fragment>\n                            ({mergeElements(npAbsorbParts, ' => ')})\n                        </React.Fragment>);\n                    }\n                    break;\n                case 3962:\n                    if (dataVal.DependFuncVals?.Value)\n                        parts.push(asPercent(dataVal.DependFuncVals?.Value, 2));\n                    break;\n            }\n        }\n\n        if (\n            (func.funcType === Func.FuncType.ADD_STATE || func.funcType === Func.FuncType.ADD_STATE_SHORT)\n            && func.buffs[0]\n            && (\n                this.props.dataVal.Value\n                || (func.buffs[0].type === Buff.BuffType.COMMANDATTACK_FUNCTION && this.props.staticDataVal.Value)\n                || (func.buffs[0].type === Buff.BuffType.DAMAGE_FUNCTION && this.props.staticDataVal.Value2)\n                || (func.buffs[0].type === Buff.BuffType.DEAD_FUNCTION && this.props.staticDataVal.Value2)\n                || (func.buffs[0].type === Buff.BuffType.DELAY_FUNCTION && this.props.staticDataVal.Value2)\n                || (func.buffs[0].type === Buff.BuffType.NPATTACK_PREV_BUFF && this.props.staticDataVal.SkillID)\n                || (func.buffs[0].type === Buff.BuffType.SELFTURNEND_FUNCTION && this.props.staticDataVal.Value2)\n            )\n        ) {\n            return <BuffValueDescription region={region} buff={func.buffs[0]} dataVal={dataVal}/>;\n        }\n\n        if (!this.props.hideRate && dataVal.Rate !== undefined) {\n            parts.push(asPercent(dataVal.Rate, 1));\n        }\n\n        if (dataVal.Value !== undefined) {\n            switch (func.funcType) {\n                case Func.FuncType.DAMAGE_NP:\n                case Func.FuncType.DAMAGE_NP_HPRATIO_LOW:\n                case Func.FuncType.DAMAGE_NP_INDIVIDUAL:\n                case Func.FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                case Func.FuncType.DAMAGE_NP_PIERCE:\n                case Func.FuncType.DAMAGE_NP_RARE:\n                case Func.FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                case Func.FuncType.GAIN_HP_PER:\n                case Func.FuncType.QP_DROP_UP:\n                    parts.push(asPercent(dataVal.Value, 1));\n                    break;\n                case Func.FuncType.GAIN_NP:\n                case Func.FuncType.GAIN_NP_BUFF_INDIVIDUAL_SUM:\n                case Func.FuncType.LOSS_NP:\n                    parts.push(asPercent(dataVal.Value, 2));\n                    break;\n                default:\n                    parts.push(dataVal.Value.toString());\n            }\n        }\n\n        if (dataVal.Value2 !== undefined) {\n            switch (func.funcType) {\n                case Func.FuncType.GAIN_NP_FROM_TARGETS:\n                    parts.push(asPercent(dataVal.Value2, 2));\n                    break;\n                case Func.FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                    parts.push(\"additional \" + asPercent(dataVal.Value2, 1));\n            }\n        }\n\n        if (dataVal.Correction) {\n            switch (func.funcType) {\n                case Func.FuncType.DAMAGE_NP_INDIVIDUAL:\n                case Func.FuncType.DAMAGE_NP_RARE:\n                case Func.FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX:\n                    parts.push(asPercent(dataVal.Correction, 1));\n                    break;\n                case Func.FuncType.DAMAGE_NP_INDIVIDUAL_SUM:\n                    parts.push(\"(\" + asPercent(dataVal.Correction, 1) + \" x count)\");\n                    break;\n                default:\n                    parts.push(dataVal.Correction.toString());\n            }\n        }\n\n        if (dataVal.Target !== undefined) {\n            switch (func.funcType) {\n                case Func.FuncType.DAMAGE_NP_HPRATIO_LOW:\n                    parts.push(asPercent(dataVal.Target, 1));\n                    break;\n                // default:\n                //     parts.push(dataVal.Target.toString());\n            }\n        }\n\n        if (dataVal.AddCount !== undefined) {\n            switch (func.funcType) {\n                default:\n                    parts.push(dataVal.AddCount);\n            }\n        }\n\n        if (dataVal.RateCount) {\n            switch (func.funcType) {\n                case Func.FuncType.QP_DROP_UP:\n                case Func.FuncType.SERVANT_FRIENDSHIP_UP:\n                case Func.FuncType.USER_EQUIP_EXP_UP:\n                    parts.push(asPercent(dataVal.RateCount, 1));\n                    break;\n                default:\n                    parts.push(dataVal.RateCount);\n            }\n        }\n\n        if (dataVal.Count) {\n            parts.push(`${dataVal.Count} Time${dataVal.Count > 1 ? 's' : ''}`)\n        }\n\n        if (!parts.length)\n            return <span>-</span>;\n\n        return <span>{mergeElements(parts, ' + ')}</span>;\n    }\n}\n\nexport default FuncValueDescriptor;\n","import {Buff, DataVal, Region} from \"@atlasacademy/api-connector\";\nimport {BuffDescriptor} from \"@atlasacademy/api-descriptor\";\nimport React from \"react\";\nimport Description from \"./Description\";\n\ninterface IProps {\n    region: Region;\n    buff: Buff.Buff;\n    dataVal: DataVal.DataVal;\n}\n\nclass BuffValueDescription extends React.Component<IProps> {\n    static renderAsString(buff: Buff.Buff, dataVal: DataVal.DataVal): string {\n        const descriptor = BuffDescriptor.describeValue(buff, dataVal);\n\n        return descriptor ? Description.renderAsString(descriptor) : '-';\n    }\n\n    render() {\n        const descriptor = BuffDescriptor.describeValue(this.props.buff, this.props.dataVal);\n\n        return descriptor\n            ? <Description region={this.props.region} descriptor={descriptor}/>\n            : '-';\n    }\n}\n\nexport default BuffValueDescription;\n","import {Buff, DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport React from \"react\";\nimport BuffDescription from \"../BuffDescription\";\nimport TraitDescription from \"../TraitDescription\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport const funcDescriptions = new Map<Func.FuncType, string>([\n    [Func.FuncType.ABSORB_NPTURN, 'Absorb Charge'],\n    [Func.FuncType.ADD_STATE, 'Apply Buff'],\n    [Func.FuncType.ADD_STATE_SHORT, 'Apply Buff'],\n    [Func.FuncType.CARD_RESET, 'Shuffle Cards'],\n    [Func.FuncType.DAMAGE_NP, 'Deal Damage'],\n    [Func.FuncType.DAMAGE_NP_HPRATIO_LOW, 'Deal Damage with Bonus for Low Health'],\n    [Func.FuncType.DAMAGE_NP_INDIVIDUAL, 'Deal Damage with Bonus to Trait'],\n    [Func.FuncType.DAMAGE_NP_INDIVIDUAL_SUM, 'Deal Damage with Bonus per Trait'],\n    [Func.FuncType.DAMAGE_NP_PIERCE, 'Deal Damage that pierces defense'],\n    [Func.FuncType.DAMAGE_NP_RARE, 'Deal Damage with Bonus to Rarity'],\n    [Func.FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX, 'Deal Damage with Bonus to Trait'],\n    [Func.FuncType.DELAY_NPTURN, 'Drain Charge'],\n    [Func.FuncType.EVENT_DROP_UP, 'Increase Drop Amount'],\n    [Func.FuncType.ENEMY_ENCOUNT_COPY_RATE_UP, 'Create Clone of Enemy'],\n    [Func.FuncType.ENEMY_ENCOUNT_RATE_UP, 'Improve Appearance Rate of Enemy'],\n    [Func.FuncType.EXP_UP, 'Increase Master Exp'],\n    [Func.FuncType.EXTEND_SKILL, 'Increase Cooldowns'],\n    [Func.FuncType.FIX_COMMANDCARD, 'Lock Command Cards'],\n    [Func.FuncType.FORCE_INSTANT_DEATH, 'Force Instant Death'],\n    [Func.FuncType.GAIN_HP, 'Restore HP'],\n    [Func.FuncType.GAIN_HP_FROM_TARGETS, 'Absorb HP'],\n    [Func.FuncType.GAIN_HP_PER, 'Restore HP to Percent'],\n    [Func.FuncType.GAIN_NP, 'Charge NP'],\n    [Func.FuncType.GAIN_NP_BUFF_INDIVIDUAL_SUM, 'Charge NP per Trait'],\n    [Func.FuncType.GAIN_NP_FROM_TARGETS, 'Absorb NP'],\n    [Func.FuncType.GAIN_STAR, 'Gain Critical Stars'],\n    [Func.FuncType.HASTEN_NPTURN, 'Increase Charge'],\n    [Func.FuncType.INSTANT_DEATH, 'Apply Death'],\n    [Func.FuncType.LOSS_HP, 'Drain HP'],\n    [Func.FuncType.LOSS_HP_SAFE, 'Drain HP without killing'],\n    [Func.FuncType.LOSS_NP, 'Drain NP'],\n    [Func.FuncType.LOSS_STAR, 'Remove Critical Stars'],\n    [Func.FuncType.NONE, 'No Effect'],\n    [Func.FuncType.QP_DROP_UP, 'Increase QP Reward'],\n    [Func.FuncType.QP_UP, 'Increase QP Reward'],\n    [Func.FuncType.REPLACE_MEMBER, 'Swap members'],\n    [Func.FuncType.SERVANT_FRIENDSHIP_UP, 'Increase Bond Gain'],\n    [Func.FuncType.SHORTEN_SKILL, 'Reduce Cooldowns'],\n    [Func.FuncType.SUB_STATE, 'Remove Effects'],\n    [Func.FuncType.USER_EQUIP_EXP_UP, 'Increase Mystic Code Exp'],\n]);\n\nfunction handleBuffActionSection(region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    parts.push('Apply');\n    func.buffs.forEach((buff, index) => {\n        if (index > 0)\n            parts.push('&');\n\n        parts.push(<BuffDescription region={region} buff={buff}/>);\n    });\n\n    if (\n        func.buffs[0]?.type === Buff.BuffType.FIELD_INDIVIDUALITY\n        || func.buffs[0]?.type === Buff.BuffType.CHANGE_COMMAND_CARD_TYPE\n    ) {\n        sections.amount.preposition = 'to';\n    }\n\n    sections.target.preposition = 'on';\n    if (\n        func.buffs[0]?.type === Buff.BuffType.COMMANDATTACK_FUNCTION\n        || func.buffs[0]?.type === Buff.BuffType.NPATTACK_PREV_BUFF\n    ) {\n        sections.target.preposition = 'for';\n    }\n}\n\nfunction handleCleanseActionSection(region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n\n    if (func.traitVals?.length) {\n        parts.push('with');\n\n        func.traitVals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('or');\n\n            parts.push(<TraitDescription region={region} trait={trait}/>);\n        });\n    }\n\n    sections.target.preposition = 'on';\n}\n\nfunction handleChargeNpPerTraitActionSection(region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    parts.push('Charge NP per');\n\n    if (func.traitVals?.length) {\n        func.traitVals.forEach((trait, index) => {\n            if (index > 0)\n                parts.push('&');\n\n            parts.push(<TraitDescription region={region} trait={trait}/>);\n        });\n    }\n\n    parts.push('traits');\n\n    sections.amount.preposition = 'by';\n    sections.target.preposition = 'for';\n}\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.action,\n        parts = section.parts;\n\n    if (func.funcType === Func.FuncType.ADD_STATE || func.funcType === Func.FuncType.ADD_STATE_SHORT) {\n        handleBuffActionSection(region, sections, func, dataVal);\n\n        return;\n    } else if (func.funcType === Func.FuncType.SUB_STATE) {\n        handleCleanseActionSection(region, sections, func, dataVal);\n\n        return;\n    } else if (func.funcType === Func.FuncType.GAIN_NP_BUFF_INDIVIDUAL_SUM) {\n        handleChargeNpPerTraitActionSection(region, sections, func, dataVal);\n\n        return;\n    } else if (\n        func.funcType === Func.FuncType.DAMAGE_NP\n        || func.funcType === Func.FuncType.DAMAGE_NP_HPRATIO_LOW\n        || func.funcType === Func.FuncType.DAMAGE_NP_INDIVIDUAL\n        || func.funcType === Func.FuncType.DAMAGE_NP_INDIVIDUAL_SUM\n        || func.funcType === Func.FuncType.DAMAGE_NP_PIERCE\n        || func.funcType === Func.FuncType.DAMAGE_NP_RARE\n        || func.funcType === Func.FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX\n    ) {\n        parts.push('Deal damage');\n        sections.amount.preposition = 'of';\n\n        return;\n    }\n\n    switch (func.funcType) {\n        case Func.FuncType.ABSORB_NPTURN:\n        case Func.FuncType.GAIN_HP_FROM_TARGETS:\n        case Func.FuncType.GAIN_NP_FROM_TARGETS:\n            sections.amount.preposition = 'of';\n            sections.target.preposition = 'from';\n            break;\n        case Func.FuncType.CARD_RESET:\n        case Func.FuncType.GAIN_STAR:\n        case Func.FuncType.LOSS_STAR:\n        case Func.FuncType.NONE:\n            sections.target.showing = false;\n            break;\n        case Func.FuncType.DELAY_NPTURN:\n        case Func.FuncType.LOSS_HP:\n        case Func.FuncType.LOSS_HP_SAFE:\n        case Func.FuncType.LOSS_NP:\n            sections.amount.preposition = 'by';\n            sections.target.preposition = 'from';\n            break;\n        case Func.FuncType.ENEMY_ENCOUNT_COPY_RATE_UP:\n        case Func.FuncType.ENEMY_ENCOUNT_RATE_UP:\n        case Func.FuncType.FIX_COMMANDCARD:\n            sections.amount.showing = false;\n            sections.target.showing = false;\n            break;\n        case Func.FuncType.EVENT_DROP_UP:\n        case Func.FuncType.EXP_UP:\n        case Func.FuncType.QP_DROP_UP:\n        case Func.FuncType.QP_UP:\n        case Func.FuncType.SERVANT_FRIENDSHIP_UP:\n        case Func.FuncType.USER_EQUIP_EXP_UP:\n            sections.chance.showing = false;\n            sections.amount.preposition = 'by';\n            sections.target.showing = false;\n            break;\n        case Func.FuncType.EXTEND_SKILL:\n        case Func.FuncType.GAIN_HP:\n        case Func.FuncType.GAIN_NP:\n        case Func.FuncType.HASTEN_NPTURN:\n        case Func.FuncType.SHORTEN_SKILL:\n            sections.amount.preposition = 'by';\n            sections.target.preposition = 'for';\n            break;\n        case Func.FuncType.FORCE_INSTANT_DEATH:\n        case Func.FuncType.INSTANT_DEATH:\n            sections.amount.showing = false;\n            sections.target.preposition = 'on';\n            break;\n        case Func.FuncType.GAIN_HP_PER:\n            sections.amount.preposition = 'of';\n            sections.target.preposition = 'for';\n            break;\n        case Func.FuncType.REPLACE_MEMBER:\n            sections.amount.showing = false;\n            sections.target.preposition = 'with';\n            break;\n    }\n\n    parts.push(funcDescriptions.get(func.funcType) ?? func.funcType);\n}\n","import {DataVal, Func, Region} from \"@atlasacademy/api-connector\";\nimport {FuncDescriptorSections} from \"./FuncDescriptorSections\";\n\nexport const targetDescriptions = new Map<Func.FuncTargetType, string>([\n    [Func.FuncTargetType.SELF, 'self'],\n    [Func.FuncTargetType.PT_ONE, 'party member'],\n    // PT_ANOTHER\n    [Func.FuncTargetType.PT_ALL, 'party'],\n    [Func.FuncTargetType.ENEMY, 'enemy'],\n    // ENEMY_ANOTHER\n    [Func.FuncTargetType.ENEMY_ALL, 'enemies'],\n    [Func.FuncTargetType.PT_FULL, 'party (including reserve)'],\n    [Func.FuncTargetType.ENEMY_FULL, 'enemies (including reserve)'],\n    [Func.FuncTargetType.PT_OTHER, 'party except self'],\n    [Func.FuncTargetType.PT_ONE_OTHER, 'other party members besides target'],\n    [Func.FuncTargetType.PT_RANDOM, 'random party member'],\n    [Func.FuncTargetType.ENEMY_OTHER, 'other enemies besides target'],\n    [Func.FuncTargetType.ENEMY_RANDOM, 'random enemy'],\n    [Func.FuncTargetType.PT_OTHER_FULL, 'party except self (including reserve)'],\n    [Func.FuncTargetType.ENEMY_OTHER_FULL, 'other enemies (including reserve)'],\n    [Func.FuncTargetType.PTSELECT_ONE_SUB, 'active party member and reserve party member'],\n    [Func.FuncTargetType.PTSELECT_SUB, 'reserve party member'],\n    // PT_ONE_ANOTHER_RANDOM\n    [Func.FuncTargetType.PT_ONE_ANOTHER_RANDOM, 'other random party member'],\n    [Func.FuncTargetType.PT_SELF_ANOTHER_RANDOM, 'other random party member (except self)'],\n    [Func.FuncTargetType.ENEMY_ONE_ANOTHER_RANDOM, 'other random enemy'],\n    [Func.FuncTargetType.PT_SELF_ANOTHER_FIRST, 'first other party member (except self)'],\n    // PT_SELF_BEFORE\n    // PT_SELF_AFTER\n    // PT_SELF_ANOTHER_LAST\n    [Func.FuncTargetType.COMMAND_TYPE_SELF_TREASURE_DEVICE, 'target noble phantasm version'],\n]);\n\nexport default function (region: Region, sections: FuncDescriptorSections, func: Func.Func, dataVal: DataVal.DataVal): void {\n    const section = sections.target,\n        parts = section.parts;\n\n    let targetType: Func.FuncTargetType | undefined = func.funcTargetType;\n\n    if (func.funcType === Func.FuncType.ABSORB_NPTURN) {\n        switch (dataVal.DependFuncId) {\n            case 469:\n                targetType = Func.FuncTargetType.ENEMY_ALL;\n                break;\n            case 5061:\n                targetType = Func.FuncTargetType.PT_OTHER;\n                break;\n        }\n    } else if (func.funcType === Func.FuncType.GAIN_HP_FROM_TARGETS) {\n        switch (dataVal.DependFuncId) {\n            case 711:\n                targetType = Func.FuncTargetType.ENEMY_ALL;\n                break;\n            default:\n                targetType = undefined;\n                section.showing = false;\n                break;\n        }\n    } else if (func.funcType === Func.FuncType.GAIN_NP_FROM_TARGETS) {\n        switch (dataVal.DependFuncId) {\n            case 474:\n                targetType = Func.FuncTargetType.ENEMY_ALL;\n                break;\n            case 3962:\n                targetType = Func.FuncTargetType.PT_OTHER;\n                break;\n        }\n    }\n\n    if (targetType) {\n        parts.push(targetDescriptions.get(targetType) ?? targetType);\n    }\n}\n"],"sourceRoot":""}